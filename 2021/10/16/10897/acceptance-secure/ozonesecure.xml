<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1.2 (Python 3.6.9 on linux)" generated="20211016 01:55:25.166" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:05:13.462" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:05:13.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:05:13.467" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211016 01:05:13.457" endtime="20211016 01:05:13.467"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:05:13.468" level="INFO">scm</msg>
<status status="PASS" starttime="20211016 01:05:13.467" endtime="20211016 01:05:13.468"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:05:13.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:05:13.468" endtime="20211016 01:05:13.469"/>
</kw>
<status status="PASS" starttime="20211016 01:05:13.457" endtime="20211016 01:05:13.469"/>
</kw>
<msg timestamp="20211016 01:05:13.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:05:13.456" endtime="20211016 01:05:13.470"/>
</kw>
<msg timestamp="20211016 01:05:13.470" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20211016 01:05:13.456" endtime="20211016 01:05:13.470"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:05:13.475" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:05:13.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:05:13.483" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:05:13.473" endtime="20211016 01:05:13.483"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:05:13.484" level="INFO"/>
<status status="PASS" starttime="20211016 01:05:13.484" endtime="20211016 01:05:13.484"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:05:13.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:05:13.485" endtime="20211016 01:05:13.485"/>
</kw>
<status status="PASS" starttime="20211016 01:05:13.472" endtime="20211016 01:05:13.486"/>
</kw>
<msg timestamp="20211016 01:05:13.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:05:13.471" endtime="20211016 01:05:13.486"/>
</kw>
<status status="PASS" starttime="20211016 01:05:13.471" endtime="20211016 01:05:13.486"/>
</kw>
<status status="PASS" starttime="20211016 01:05:13.470" endtime="20211016 01:05:13.486"/>
</kw>
<status status="PASS" starttime="20211016 01:05:13.455" endtime="20211016 01:05:13.486"/>
</kw>
<status status="PASS" starttime="20211016 01:05:13.454" endtime="20211016 01:05:13.487"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:05:13.490" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:05:13.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:05:13.634" level="INFO">${output} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20211016 01:05:13.488" endtime="20211016 01:05:13.634"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:05:13.636" level="INFO">HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 484

HTTP/1.1 200 OK
Date: Sat, 16 Oct 2021 01:05:13 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCtdpY/ETdL2L0I2mT/E+Ok/nQv+N2GL7ag9xDUR20Mv1BPECKhtTzJatBn59dl1v92LDBv0chncl4xJqZvWCDX3cr
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1634382313615&amp;s=2ZJB3aE0FOBGdnVUp5hZDd4W/OrATkQ182Pd7iGs8G8="; Path=/; HttpOnly
Last-Modified: Sat, 16 Oct 2021 00:50:02 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20211016 01:05:13.635" endtime="20211016 01:05:13.636"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:05:13.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:05:13.636" endtime="20211016 01:05:13.638"/>
</kw>
<status status="PASS" starttime="20211016 01:05:13.488" endtime="20211016 01:05:13.638"/>
</kw>
<msg timestamp="20211016 01:05:13.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:05:13.487" endtime="20211016 01:05:13.639"/>
</kw>
<msg timestamp="20211016 01:05:13.639" level="INFO">${result} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20211016 01:05:13.487" endtime="20211016 01:05:13.639"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 01:05:13.639" endtime="20211016 01:05:13.640"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211016 01:05:13.454" endtime="20211016 01:05:13.640"/>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:05:13.648" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:05:13.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:05:13.654" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211016 01:05:13.646" endtime="20211016 01:05:13.654"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:05:13.656" level="INFO">scm</msg>
<status status="PASS" starttime="20211016 01:05:13.654" endtime="20211016 01:05:13.656"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:05:13.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:05:13.656" endtime="20211016 01:05:13.657"/>
</kw>
<status status="PASS" starttime="20211016 01:05:13.644" endtime="20211016 01:05:13.657"/>
</kw>
<msg timestamp="20211016 01:05:13.658" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:05:13.643" endtime="20211016 01:05:13.658"/>
</kw>
<msg timestamp="20211016 01:05:13.658" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211016 01:05:13.643" endtime="20211016 01:05:13.658"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211016 01:05:13.660" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211016 01:05:13.658" endtime="20211016 01:05:13.660"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:05:13.669" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:05:13.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:05:13.678" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:05:13.663" endtime="20211016 01:05:13.678"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:05:13.679" level="INFO"/>
<status status="PASS" starttime="20211016 01:05:13.679" endtime="20211016 01:05:13.680"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:05:13.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:05:13.680" endtime="20211016 01:05:13.680"/>
</kw>
<status status="PASS" starttime="20211016 01:05:13.662" endtime="20211016 01:05:13.681"/>
</kw>
<msg timestamp="20211016 01:05:13.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:05:13.662" endtime="20211016 01:05:13.681"/>
</kw>
<status status="PASS" starttime="20211016 01:05:13.661" endtime="20211016 01:05:13.681"/>
</kw>
<status status="PASS" starttime="20211016 01:05:13.660" endtime="20211016 01:05:13.681"/>
</kw>
<status status="PASS" starttime="20211016 01:05:13.642" endtime="20211016 01:05:13.681"/>
</kw>
<status status="PASS" starttime="20211016 01:05:13.642" endtime="20211016 01:05:13.682"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:05:13.686" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:10:13.642" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211016 01:05:13.684" endtime="20211016 01:10:13.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211016 01:10:13.643" endtime="20211016 01:10:13.643"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211016 01:10:13.643" endtime="20211016 01:10:13.643"/>
</kw>
<status status="FAIL" starttime="20211016 01:05:13.683" endtime="20211016 01:10:13.644"/>
</kw>
<msg timestamp="20211016 01:10:13.644" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211016 01:05:13.682" endtime="20211016 01:10:13.644"/>
</kw>
<status status="FAIL" starttime="20211016 01:05:13.682" endtime="20211016 01:10:13.644"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20211016 01:10:13.644" endtime="20211016 01:10:13.645"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Status: Success</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211016 01:10:13.645" endtime="20211016 01:10:13.645"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211016 01:05:13.641" endtime="20211016 01:10:13.646">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" starttime="20211016 01:05:13.420" endtime="20211016 01:10:13.647"/>
</suite>
<suite id="s1-s1-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s1-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:10:13.663" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:10:16.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:10:16.628" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211016 01:10:13.660" endtime="20211016 01:10:16.628"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:10:16.629" level="INFO">om</msg>
<status status="PASS" starttime="20211016 01:10:16.629" endtime="20211016 01:10:16.630"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:10:16.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:10:16.630" endtime="20211016 01:10:16.631"/>
</kw>
<status status="PASS" starttime="20211016 01:10:13.659" endtime="20211016 01:10:16.631"/>
</kw>
<msg timestamp="20211016 01:10:16.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:10:13.658" endtime="20211016 01:10:16.632"/>
</kw>
<msg timestamp="20211016 01:10:16.632" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211016 01:10:13.657" endtime="20211016 01:10:16.632"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 01:10:16.632" endtime="20211016 01:10:16.633"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:10:16.637" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:10:19.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:10:19.290" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211016 01:10:16.634" endtime="20211016 01:10:19.290"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:10:19.292" level="INFO">om</msg>
<status status="PASS" starttime="20211016 01:10:19.291" endtime="20211016 01:10:19.292"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:10:19.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:10:19.292" endtime="20211016 01:10:19.293"/>
</kw>
<status status="PASS" starttime="20211016 01:10:16.634" endtime="20211016 01:10:19.293"/>
</kw>
<msg timestamp="20211016 01:10:19.293" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:10:16.634" endtime="20211016 01:10:19.294"/>
</kw>
<msg timestamp="20211016 01:10:19.294" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211016 01:10:16.633" endtime="20211016 01:10:19.294"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 01:10:19.294" endtime="20211016 01:10:19.295"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211016 01:10:13.656" endtime="20211016 01:10:19.295"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:10:19.304" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:10:21.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:10:21.088" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211016 01:10:19.301" endtime="20211016 01:10:21.089"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:10:21.090" level="INFO">scm</msg>
<status status="PASS" starttime="20211016 01:10:21.089" endtime="20211016 01:10:21.090"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:10:21.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:10:21.090" endtime="20211016 01:10:21.091"/>
</kw>
<status status="PASS" starttime="20211016 01:10:19.298" endtime="20211016 01:10:21.091"/>
</kw>
<msg timestamp="20211016 01:10:21.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:10:19.297" endtime="20211016 01:10:21.091"/>
</kw>
<msg timestamp="20211016 01:10:21.092" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20211016 01:10:19.297" endtime="20211016 01:10:21.092"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 01:10:21.092" endtime="20211016 01:10:21.093"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:10:21.099" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:10:24.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:10:24.267" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211016 01:10:21.095" endtime="20211016 01:10:24.267"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:10:24.269" level="INFO">scm</msg>
<status status="PASS" starttime="20211016 01:10:24.268" endtime="20211016 01:10:24.269"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:10:24.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:10:24.270" endtime="20211016 01:10:24.271"/>
</kw>
<status status="PASS" starttime="20211016 01:10:21.094" endtime="20211016 01:10:24.272"/>
</kw>
<msg timestamp="20211016 01:10:24.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:10:21.094" endtime="20211016 01:10:24.272"/>
</kw>
<msg timestamp="20211016 01:10:24.273" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20211016 01:10:21.093" endtime="20211016 01:10:24.273"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 01:10:24.273" endtime="20211016 01:10:24.274"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211016 01:10:19.296" endtime="20211016 01:10:24.275"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:10:24.283" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:10:26.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:10:26.317" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211016 01:10:24.280" endtime="20211016 01:10:26.318"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:10:26.319" level="INFO">om</msg>
<status status="PASS" starttime="20211016 01:10:26.318" endtime="20211016 01:10:26.319"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:10:26.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:10:26.319" endtime="20211016 01:10:26.320"/>
</kw>
<status status="PASS" starttime="20211016 01:10:24.280" endtime="20211016 01:10:26.321"/>
</kw>
<msg timestamp="20211016 01:10:26.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:10:24.279" endtime="20211016 01:10:26.321"/>
</kw>
<msg timestamp="20211016 01:10:26.321" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211016 01:10:24.278" endtime="20211016 01:10:26.321"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 01:10:26.321" endtime="20211016 01:10:26.322"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 01:10:26.322" endtime="20211016 01:10:26.322"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:10:26.326" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:10:27.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:10:27.874" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211016 01:10:26.324" endtime="20211016 01:10:27.874"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:10:27.875" level="INFO">om</msg>
<status status="PASS" starttime="20211016 01:10:27.874" endtime="20211016 01:10:27.875"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:10:27.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:10:27.875" endtime="20211016 01:10:27.876"/>
</kw>
<status status="PASS" starttime="20211016 01:10:26.323" endtime="20211016 01:10:27.877"/>
</kw>
<msg timestamp="20211016 01:10:27.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:10:26.323" endtime="20211016 01:10:27.877"/>
</kw>
<msg timestamp="20211016 01:10:27.878" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211016 01:10:26.323" endtime="20211016 01:10:27.878"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 01:10:27.878" endtime="20211016 01:10:27.879"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 01:10:27.879" endtime="20211016 01:10:27.879"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211016 01:10:24.277" endtime="20211016 01:10:27.880"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:10:27.900" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:10:30.848" level="INFO">${rc} = 255</msg>
<msg timestamp="20211016 01:10:30.848" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211016 01:10:27.884" endtime="20211016 01:10:30.848"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:10:30.849" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211016 01:10:30.848" endtime="20211016 01:10:30.849"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:10:30.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:10:30.849" endtime="20211016 01:10:30.850"/>
</kw>
<msg timestamp="20211016 01:10:30.850" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211016 01:10:27.883" endtime="20211016 01:10:30.850"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 01:10:30.851" endtime="20211016 01:10:30.851"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:10:30.854" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:10:33.741" level="INFO">${rc} = 255</msg>
<msg timestamp="20211016 01:10:33.741" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211016 01:10:30.852" endtime="20211016 01:10:33.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:10:33.743" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211016 01:10:33.742" endtime="20211016 01:10:33.743"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:10:33.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:10:33.743" endtime="20211016 01:10:33.744"/>
</kw>
<msg timestamp="20211016 01:10:33.744" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211016 01:10:30.851" endtime="20211016 01:10:33.744"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 01:10:33.745" endtime="20211016 01:10:33.745"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211016 01:10:27.881" endtime="20211016 01:10:33.745"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20211016 01:10:13.651" endtime="20211016 01:10:33.748"/>
</suite>
<suite id="s1-s1-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211016 01:10:33.773" level="INFO">${random} = 58433</msg>
<status status="PASS" starttime="20211016 01:10:33.772" endtime="20211016 01:10:33.773"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211016 01:10:33.776" level="INFO">${source} = 58433-source</msg>
<status status="PASS" starttime="20211016 01:10:33.774" endtime="20211016 01:10:33.776"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211016 01:10:33.778" level="INFO">${target} = 58433-target</msg>
<status status="PASS" starttime="20211016 01:10:33.776" endtime="20211016 01:10:33.778"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:10:33.783" level="INFO">Running command 'ozone sh volume create 58433-source 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:10:41.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:10:41.969" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:10:33.780" endtime="20211016 01:10:41.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:10:41.970" level="INFO"/>
<status status="PASS" starttime="20211016 01:10:41.969" endtime="20211016 01:10:41.970"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:10:41.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:10:41.970" endtime="20211016 01:10:41.971"/>
</kw>
<status status="PASS" starttime="20211016 01:10:33.779" endtime="20211016 01:10:41.972"/>
</kw>
<msg timestamp="20211016 01:10:41.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:10:33.779" endtime="20211016 01:10:41.972"/>
</kw>
<status status="PASS" starttime="20211016 01:10:33.778" endtime="20211016 01:10:41.972"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:10:41.976" level="INFO">Running command 'ozone sh volume create 58433-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:10:49.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:10:49.850" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:10:41.974" endtime="20211016 01:10:49.850"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:10:49.851" level="INFO"/>
<status status="PASS" starttime="20211016 01:10:49.851" endtime="20211016 01:10:49.852"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:10:49.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:10:49.852" endtime="20211016 01:10:49.852"/>
</kw>
<status status="PASS" starttime="20211016 01:10:41.974" endtime="20211016 01:10:49.853"/>
</kw>
<msg timestamp="20211016 01:10:49.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:10:41.973" endtime="20211016 01:10:49.853"/>
</kw>
<status status="PASS" starttime="20211016 01:10:41.973" endtime="20211016 01:10:49.853"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:10:49.863" level="INFO">Running command 'ozone sh bucket create 58433-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:10:58.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:10:58.660" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:10:49.860" endtime="20211016 01:10:58.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:10:58.662" level="INFO"/>
<status status="PASS" starttime="20211016 01:10:58.660" endtime="20211016 01:10:58.662"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:10:58.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:10:58.662" endtime="20211016 01:10:58.663"/>
</kw>
<status status="PASS" starttime="20211016 01:10:49.858" endtime="20211016 01:10:58.664"/>
</kw>
<msg timestamp="20211016 01:10:58.664" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:10:49.856" endtime="20211016 01:10:58.664"/>
</kw>
<status status="PASS" starttime="20211016 01:10:49.855" endtime="20211016 01:10:58.665"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:10:58.671" level="INFO">Running command 'ozone sh key put 58433-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:14:11.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:14:11.528" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:10:58.668" endtime="20211016 01:14:11.528"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:14:11.529" level="INFO"/>
<status status="PASS" starttime="20211016 01:14:11.528" endtime="20211016 01:14:11.529"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:14:11.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:14:11.530" endtime="20211016 01:14:11.531"/>
</kw>
<status status="PASS" starttime="20211016 01:10:58.667" endtime="20211016 01:14:11.532"/>
</kw>
<msg timestamp="20211016 01:14:11.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:10:58.666" endtime="20211016 01:14:11.532"/>
</kw>
<status status="PASS" starttime="20211016 01:10:58.665" endtime="20211016 01:14:11.533"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:14:11.539" level="INFO">Running command 'ozone sh bucket create 58433-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:14:18.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:14:18.279" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:14:11.536" endtime="20211016 01:14:18.280"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:14:18.282" level="INFO"/>
<status status="PASS" starttime="20211016 01:14:18.280" endtime="20211016 01:14:18.282"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:14:18.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:14:18.282" endtime="20211016 01:14:18.284"/>
</kw>
<status status="PASS" starttime="20211016 01:14:11.535" endtime="20211016 01:14:18.284"/>
</kw>
<msg timestamp="20211016 01:14:18.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:14:11.534" endtime="20211016 01:14:18.285"/>
</kw>
<status status="PASS" starttime="20211016 01:14:11.533" endtime="20211016 01:14:18.286"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:14:18.292" level="INFO">Running command 'ozone sh bucket link 58433-source/readable-bucket 58433-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:14:26.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:14:26.521" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:14:18.289" endtime="20211016 01:14:26.521"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:14:26.524" level="INFO"/>
<status status="PASS" starttime="20211016 01:14:26.522" endtime="20211016 01:14:26.524"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:14:26.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:14:26.524" endtime="20211016 01:14:26.525"/>
</kw>
<status status="PASS" starttime="20211016 01:14:18.288" endtime="20211016 01:14:26.525"/>
</kw>
<msg timestamp="20211016 01:14:26.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:14:18.287" endtime="20211016 01:14:26.526"/>
</kw>
<status status="PASS" starttime="20211016 01:14:18.286" endtime="20211016 01:14:26.526"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:14:26.531" level="INFO">Running command 'ozone sh bucket link 58433-source/readable-bucket 58433-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:14:34.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:14:34.658" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:14:26.528" endtime="20211016 01:14:34.659"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:14:34.661" level="INFO"/>
<status status="PASS" starttime="20211016 01:14:34.660" endtime="20211016 01:14:34.661"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:14:34.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:14:34.662" endtime="20211016 01:14:34.662"/>
</kw>
<status status="PASS" starttime="20211016 01:14:26.527" endtime="20211016 01:14:34.663"/>
</kw>
<msg timestamp="20211016 01:14:34.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:14:26.527" endtime="20211016 01:14:34.663"/>
</kw>
<status status="PASS" starttime="20211016 01:14:26.526" endtime="20211016 01:14:34.664"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:14:34.680" level="INFO">Running command 'ozone sh bucket link 58433-source/unreadable-bucket 58433-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:14:43.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:14:43.376" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:14:34.667" endtime="20211016 01:14:43.376"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:14:43.377" level="INFO"/>
<status status="PASS" starttime="20211016 01:14:43.377" endtime="20211016 01:14:43.377"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:14:43.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:14:43.377" endtime="20211016 01:14:43.378"/>
</kw>
<status status="PASS" starttime="20211016 01:14:34.666" endtime="20211016 01:14:43.379"/>
</kw>
<msg timestamp="20211016 01:14:43.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:14:34.665" endtime="20211016 01:14:43.380"/>
</kw>
<status status="PASS" starttime="20211016 01:14:34.664" endtime="20211016 01:14:43.381"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:14:43.387" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 58433-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:14:49.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:14:49.487" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211016 01:14:43.384" endtime="20211016 01:14:49.487"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:14:49.488" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211016 01:14:49.488" endtime="20211016 01:14:49.488"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:14:49.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:14:49.489" endtime="20211016 01:14:49.489"/>
</kw>
<status status="PASS" starttime="20211016 01:14:43.383" endtime="20211016 01:14:49.490"/>
</kw>
<msg timestamp="20211016 01:14:49.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:14:43.382" endtime="20211016 01:14:49.490"/>
</kw>
<status status="PASS" starttime="20211016 01:14:43.381" endtime="20211016 01:14:49.490"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:14:49.500" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 58433-source 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:14:58.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:14:58.374" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211016 01:14:49.493" endtime="20211016 01:14:58.374"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:14:58.375" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211016 01:14:58.375" endtime="20211016 01:14:58.376"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:14:58.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:14:58.376" endtime="20211016 01:14:58.376"/>
</kw>
<status status="PASS" starttime="20211016 01:14:49.492" endtime="20211016 01:14:58.377"/>
</kw>
<msg timestamp="20211016 01:14:58.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:14:49.492" endtime="20211016 01:14:58.377"/>
</kw>
<status status="PASS" starttime="20211016 01:14:49.490" endtime="20211016 01:14:58.378"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:14:58.382" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 58433-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:15:06.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:15:06.269" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211016 01:14:58.380" endtime="20211016 01:15:06.269"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:15:06.270" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211016 01:15:06.270" endtime="20211016 01:15:06.271"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:15:06.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:15:06.271" endtime="20211016 01:15:06.272"/>
</kw>
<status status="PASS" starttime="20211016 01:14:58.379" endtime="20211016 01:15:06.273"/>
</kw>
<msg timestamp="20211016 01:15:06.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:14:58.379" endtime="20211016 01:15:06.274"/>
</kw>
<status status="PASS" starttime="20211016 01:14:58.378" endtime="20211016 01:15:06.274"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:15:06.281" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 58433-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:15:14.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:15:14.525" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211016 01:15:06.276" endtime="20211016 01:15:14.525"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:15:14.527" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211016 01:15:14.526" endtime="20211016 01:15:14.527"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:15:14.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:15:14.527" endtime="20211016 01:15:14.528"/>
</kw>
<status status="PASS" starttime="20211016 01:15:06.276" endtime="20211016 01:15:14.529"/>
</kw>
<msg timestamp="20211016 01:15:14.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:15:06.275" endtime="20211016 01:15:14.529"/>
</kw>
<status status="PASS" starttime="20211016 01:15:06.274" endtime="20211016 01:15:14.529"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:15:14.534" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 58433-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:15:21.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:15:21.968" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211016 01:15:14.531" endtime="20211016 01:15:21.968"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:15:21.969" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211016 01:15:21.968" endtime="20211016 01:15:21.969"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:15:21.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:15:21.969" endtime="20211016 01:15:21.970"/>
</kw>
<status status="PASS" starttime="20211016 01:15:14.531" endtime="20211016 01:15:21.970"/>
</kw>
<msg timestamp="20211016 01:15:21.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:15:14.530" endtime="20211016 01:15:21.970"/>
</kw>
<status status="PASS" starttime="20211016 01:15:14.529" endtime="20211016 01:15:21.970"/>
</kw>
<status status="PASS" starttime="20211016 01:10:49.854" endtime="20211016 01:15:21.971"/>
</kw>
<status status="PASS" starttime="20211016 01:10:49.853" endtime="20211016 01:15:21.971"/>
</kw>
<status status="PASS" starttime="20211016 01:10:33.771" endtime="20211016 01:15:21.971"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:15:21.980" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:15:21.987" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:15:21.987" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211016 01:15:21.977" endtime="20211016 01:15:21.987"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:15:21.989" level="INFO">scm</msg>
<status status="PASS" starttime="20211016 01:15:21.988" endtime="20211016 01:15:21.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:15:21.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:15:21.990" endtime="20211016 01:15:21.991"/>
</kw>
<status status="PASS" starttime="20211016 01:15:21.976" endtime="20211016 01:15:21.992"/>
</kw>
<msg timestamp="20211016 01:15:21.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:15:21.976" endtime="20211016 01:15:21.992"/>
</kw>
<msg timestamp="20211016 01:15:21.992" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211016 01:15:21.975" endtime="20211016 01:15:21.993"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211016 01:15:21.996" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211016 01:15:21.993" endtime="20211016 01:15:21.996"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:15:22.001" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:15:22.217" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:15:22.217" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:15:21.999" endtime="20211016 01:15:22.218"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:15:22.219" level="INFO"/>
<status status="PASS" starttime="20211016 01:15:22.218" endtime="20211016 01:15:22.219"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:15:22.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:15:22.219" endtime="20211016 01:15:22.220"/>
</kw>
<status status="PASS" starttime="20211016 01:15:21.998" endtime="20211016 01:15:22.220"/>
</kw>
<msg timestamp="20211016 01:15:22.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:15:21.998" endtime="20211016 01:15:22.220"/>
</kw>
<status status="PASS" starttime="20211016 01:15:21.997" endtime="20211016 01:15:22.221"/>
</kw>
<status status="PASS" starttime="20211016 01:15:21.996" endtime="20211016 01:15:22.221"/>
</kw>
<status status="PASS" starttime="20211016 01:15:21.974" endtime="20211016 01:15:22.221"/>
</kw>
<status status="PASS" starttime="20211016 01:15:21.973" endtime="20211016 01:15:22.229"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:15:22.235" level="INFO">Running command 'ozone sh bucket link 58433-source/no-such-bucket 58433-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:15:29.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:15:29.371" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:15:22.233" endtime="20211016 01:15:29.371"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:15:29.372" level="INFO"/>
<status status="PASS" starttime="20211016 01:15:29.372" endtime="20211016 01:15:29.373"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:15:29.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:15:29.373" endtime="20211016 01:15:29.374"/>
</kw>
<status status="PASS" starttime="20211016 01:15:22.232" endtime="20211016 01:15:29.374"/>
</kw>
<msg timestamp="20211016 01:15:29.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:15:22.232" endtime="20211016 01:15:29.374"/>
</kw>
<status status="PASS" starttime="20211016 01:15:22.229" endtime="20211016 01:15:29.375"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:15:29.377" level="INFO">Running command 'ozone sh key list 58433-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:15:37.000" level="INFO">${rc} = 255</msg>
<msg timestamp="20211016 01:15:37.000" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20211016 01:15:29.375" endtime="20211016 01:15:37.000"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:15:37.002" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20211016 01:15:37.000" endtime="20211016 01:15:37.002"/>
</kw>
<msg timestamp="20211016 01:15:37.003" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20211016 01:15:29.375" endtime="20211016 01:15:37.003"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 01:15:37.003" endtime="20211016 01:15:37.004"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211016 01:15:21.972" endtime="20211016 01:15:37.004"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:15:37.018" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:15:37.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:15:37.023" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211016 01:15:37.014" endtime="20211016 01:15:37.023"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:15:37.026" level="INFO">scm</msg>
<status status="PASS" starttime="20211016 01:15:37.024" endtime="20211016 01:15:37.026"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:15:37.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:15:37.026" endtime="20211016 01:15:37.027"/>
</kw>
<status status="PASS" starttime="20211016 01:15:37.013" endtime="20211016 01:15:37.028"/>
</kw>
<msg timestamp="20211016 01:15:37.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:15:37.012" endtime="20211016 01:15:37.028"/>
</kw>
<msg timestamp="20211016 01:15:37.028" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211016 01:15:37.011" endtime="20211016 01:15:37.029"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211016 01:15:37.030" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211016 01:15:37.029" endtime="20211016 01:15:37.030"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:15:37.035" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:15:37.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:15:37.045" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:15:37.033" endtime="20211016 01:15:37.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:15:37.047" level="INFO"/>
<status status="PASS" starttime="20211016 01:15:37.046" endtime="20211016 01:15:37.047"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:15:37.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:15:37.048" endtime="20211016 01:15:37.049"/>
</kw>
<status status="PASS" starttime="20211016 01:15:37.032" endtime="20211016 01:15:37.050"/>
</kw>
<msg timestamp="20211016 01:15:37.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:15:37.032" endtime="20211016 01:15:37.050"/>
</kw>
<status status="PASS" starttime="20211016 01:15:37.031" endtime="20211016 01:15:37.050"/>
</kw>
<status status="PASS" starttime="20211016 01:15:37.030" endtime="20211016 01:15:37.050"/>
</kw>
<status status="PASS" starttime="20211016 01:15:37.011" endtime="20211016 01:15:37.051"/>
</kw>
<status status="PASS" starttime="20211016 01:15:37.009" endtime="20211016 01:15:37.051"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:15:37.056" level="INFO">Running command 'ozone sh bucket link 58433-source/bucket1 58433-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:15:45.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:15:45.466" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:15:37.054" endtime="20211016 01:15:45.466"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:15:45.468" level="INFO"/>
<status status="PASS" starttime="20211016 01:15:45.467" endtime="20211016 01:15:45.468"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:15:45.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:15:45.468" endtime="20211016 01:15:45.471"/>
</kw>
<status status="PASS" starttime="20211016 01:15:37.053" endtime="20211016 01:15:45.471"/>
</kw>
<msg timestamp="20211016 01:15:45.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:15:37.052" endtime="20211016 01:15:45.471"/>
</kw>
<status status="PASS" starttime="20211016 01:15:37.051" endtime="20211016 01:15:45.472"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:15:45.476" level="INFO">Running command 'ozone sh bucket create 58433-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:15:51.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:15:51.005" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:15:45.474" endtime="20211016 01:15:51.005"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:15:51.010" level="INFO"/>
<status status="PASS" starttime="20211016 01:15:51.006" endtime="20211016 01:15:51.010"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:15:51.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:15:51.010" endtime="20211016 01:15:51.011"/>
</kw>
<status status="PASS" starttime="20211016 01:15:45.473" endtime="20211016 01:15:51.011"/>
</kw>
<msg timestamp="20211016 01:15:51.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:15:45.473" endtime="20211016 01:15:51.011"/>
</kw>
<status status="PASS" starttime="20211016 01:15:45.472" endtime="20211016 01:15:51.012"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:15:51.016" level="INFO">Running command 'ozone sh key put 58433-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:17:37.009" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20211016 01:15:51.014" endtime="20211016 01:17:37.009"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211016 01:17:37.010" endtime="20211016 01:17:37.011"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211016 01:17:37.011" endtime="20211016 01:17:37.011"/>
</kw>
<status status="FAIL" starttime="20211016 01:15:51.013" endtime="20211016 01:17:37.011"/>
</kw>
<msg timestamp="20211016 01:17:37.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211016 01:15:51.013" endtime="20211016 01:17:37.011"/>
</kw>
<status status="FAIL" starttime="20211016 01:15:51.012" endtime="20211016 01:17:37.012"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<status status="NOT RUN" starttime="20211016 01:17:37.012" endtime="20211016 01:17:37.012"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211016 01:15:37.008" endtime="20211016 01:17:37.012">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:17:37.019" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:17:37.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:17:37.024" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211016 01:17:37.016" endtime="20211016 01:17:37.024"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:17:37.026" level="INFO">scm</msg>
<status status="PASS" starttime="20211016 01:17:37.025" endtime="20211016 01:17:37.026"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:17:37.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:17:37.026" endtime="20211016 01:17:37.028"/>
</kw>
<status status="PASS" starttime="20211016 01:17:37.016" endtime="20211016 01:17:37.029"/>
</kw>
<msg timestamp="20211016 01:17:37.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:17:37.015" endtime="20211016 01:17:37.029"/>
</kw>
<msg timestamp="20211016 01:17:37.029" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211016 01:17:37.015" endtime="20211016 01:17:37.029"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211016 01:17:37.030" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211016 01:17:37.030" endtime="20211016 01:17:37.031"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:17:37.036" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:17:37.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:17:37.047" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:17:37.033" endtime="20211016 01:17:37.047"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:17:37.049" level="INFO"/>
<status status="PASS" starttime="20211016 01:17:37.048" endtime="20211016 01:17:37.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:17:37.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:17:37.049" endtime="20211016 01:17:37.050"/>
</kw>
<status status="PASS" starttime="20211016 01:17:37.033" endtime="20211016 01:17:37.051"/>
</kw>
<msg timestamp="20211016 01:17:37.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:17:37.032" endtime="20211016 01:17:37.051"/>
</kw>
<status status="PASS" starttime="20211016 01:17:37.031" endtime="20211016 01:17:37.053"/>
</kw>
<status status="PASS" starttime="20211016 01:17:37.031" endtime="20211016 01:17:37.053"/>
</kw>
<status status="PASS" starttime="20211016 01:17:37.014" endtime="20211016 01:17:37.053"/>
</kw>
<status status="PASS" starttime="20211016 01:17:37.014" endtime="20211016 01:17:37.053"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:17:37.057" level="INFO">Running command 'ozone sh key put 58433-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:19:37.014" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20211016 01:17:37.055" endtime="20211016 01:19:37.015"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211016 01:19:37.016" endtime="20211016 01:19:37.016"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211016 01:19:37.016" endtime="20211016 01:19:37.016"/>
</kw>
<status status="FAIL" starttime="20211016 01:17:37.055" endtime="20211016 01:19:37.016"/>
</kw>
<msg timestamp="20211016 01:19:37.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211016 01:17:37.054" endtime="20211016 01:19:37.017"/>
</kw>
<status status="FAIL" starttime="20211016 01:17:37.054" endtime="20211016 01:19:37.017"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211016 01:19:37.017" endtime="20211016 01:19:37.017"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211016 01:17:37.013" endtime="20211016 01:19:37.018">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:19:37.026" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:19:37.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:19:37.033" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211016 01:19:37.022" endtime="20211016 01:19:37.033"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:19:37.035" level="INFO">scm</msg>
<status status="PASS" starttime="20211016 01:19:37.034" endtime="20211016 01:19:37.036"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:19:37.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:19:37.036" endtime="20211016 01:19:37.037"/>
</kw>
<status status="PASS" starttime="20211016 01:19:37.021" endtime="20211016 01:19:37.038"/>
</kw>
<msg timestamp="20211016 01:19:37.038" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:19:37.021" endtime="20211016 01:19:37.038"/>
</kw>
<msg timestamp="20211016 01:19:37.039" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211016 01:19:37.020" endtime="20211016 01:19:37.039"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211016 01:19:37.040" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211016 01:19:37.039" endtime="20211016 01:19:37.040"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:19:37.047" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:19:37.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:19:37.058" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:19:37.045" endtime="20211016 01:19:37.058"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:19:37.060" level="INFO"/>
<status status="PASS" starttime="20211016 01:19:37.059" endtime="20211016 01:19:37.060"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:19:37.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:19:37.060" endtime="20211016 01:19:37.062"/>
</kw>
<status status="PASS" starttime="20211016 01:19:37.043" endtime="20211016 01:19:37.063"/>
</kw>
<msg timestamp="20211016 01:19:37.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:19:37.043" endtime="20211016 01:19:37.064"/>
</kw>
<status status="PASS" starttime="20211016 01:19:37.042" endtime="20211016 01:19:37.064"/>
</kw>
<status status="PASS" starttime="20211016 01:19:37.041" endtime="20211016 01:19:37.064"/>
</kw>
<status status="PASS" starttime="20211016 01:19:37.020" endtime="20211016 01:19:37.065"/>
</kw>
<status status="PASS" starttime="20211016 01:19:37.019" endtime="20211016 01:19:37.065"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:19:37.070" level="INFO">Running command 'ozone sh key list 58433-target/link1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:19:46.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:19:46.194" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20211016 01:19:37.068" endtime="20211016 01:19:46.194"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:19:46.196" level="INFO">key1</msg>
<status status="PASS" starttime="20211016 01:19:46.195" endtime="20211016 01:19:46.196"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:19:46.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:19:46.196" endtime="20211016 01:19:46.198"/>
</kw>
<status status="PASS" starttime="20211016 01:19:37.067" endtime="20211016 01:19:46.199"/>
</kw>
<msg timestamp="20211016 01:19:46.199" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:19:37.066" endtime="20211016 01:19:46.199"/>
</kw>
<msg timestamp="20211016 01:19:46.199" level="INFO">${target_list} = key1</msg>
<status status="PASS" starttime="20211016 01:19:37.065" endtime="20211016 01:19:46.200"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:19:46.206" level="INFO">Running command 'ozone sh key list 58433-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:19:55.199" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:19:55.199" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20211016 01:19:46.203" endtime="20211016 01:19:55.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:19:55.203" level="INFO">key1</msg>
<status status="PASS" starttime="20211016 01:19:55.201" endtime="20211016 01:19:55.203"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:19:55.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:19:55.203" endtime="20211016 01:19:55.204"/>
</kw>
<status status="PASS" starttime="20211016 01:19:46.202" endtime="20211016 01:19:55.205"/>
</kw>
<msg timestamp="20211016 01:19:55.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:19:46.201" endtime="20211016 01:19:55.205"/>
</kw>
<msg timestamp="20211016 01:19:55.205" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20211016 01:19:46.200" endtime="20211016 01:19:55.205"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211016 01:19:55.206" endtime="20211016 01:19:55.206"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 01:19:55.206" endtime="20211016 01:19:55.207"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20211016 01:19:55.208" level="FAIL">'key1' does not contain 'key2'</msg>
<status status="FAIL" starttime="20211016 01:19:55.207" endtime="20211016 01:19:55.208"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211016 01:19:37.018" endtime="20211016 01:19:55.208">'key1' does not contain 'key2'</status>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:19:55.216" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:19:55.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:19:55.222" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211016 01:19:55.213" endtime="20211016 01:19:55.222"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:19:55.223" level="INFO">scm</msg>
<status status="PASS" starttime="20211016 01:19:55.222" endtime="20211016 01:19:55.223"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:19:55.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:19:55.223" endtime="20211016 01:19:55.224"/>
</kw>
<status status="PASS" starttime="20211016 01:19:55.212" endtime="20211016 01:19:55.224"/>
</kw>
<msg timestamp="20211016 01:19:55.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:19:55.211" endtime="20211016 01:19:55.224"/>
</kw>
<msg timestamp="20211016 01:19:55.225" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211016 01:19:55.211" endtime="20211016 01:19:55.225"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211016 01:19:55.227" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211016 01:19:55.226" endtime="20211016 01:19:55.227"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:19:55.238" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:19:55.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:19:55.250" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:19:55.234" endtime="20211016 01:19:55.250"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:19:55.252" level="INFO"/>
<status status="PASS" starttime="20211016 01:19:55.251" endtime="20211016 01:19:55.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:19:55.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:19:55.253" endtime="20211016 01:19:55.255"/>
</kw>
<status status="PASS" starttime="20211016 01:19:55.232" endtime="20211016 01:19:55.255"/>
</kw>
<msg timestamp="20211016 01:19:55.255" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:19:55.232" endtime="20211016 01:19:55.255"/>
</kw>
<status status="PASS" starttime="20211016 01:19:55.229" endtime="20211016 01:19:55.256"/>
</kw>
<status status="PASS" starttime="20211016 01:19:55.228" endtime="20211016 01:19:55.256"/>
</kw>
<status status="PASS" starttime="20211016 01:19:55.210" endtime="20211016 01:19:55.257"/>
</kw>
<status status="PASS" starttime="20211016 01:19:55.210" endtime="20211016 01:19:55.257"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:19:55.264" level="INFO">Running command 'ozone sh key delete 58433-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:20:03.812" level="INFO">${rc} = 255</msg>
<msg timestamp="20211016 01:20:03.812" level="INFO">${output} = KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20211016 01:19:55.260" endtime="20211016 01:20:03.813"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:20:03.814" level="INFO">KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20211016 01:20:03.813" endtime="20211016 01:20:03.814"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:20:03.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20211016 01:20:03.818" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20211016 01:20:03.814" endtime="20211016 01:20:03.818"/>
</kw>
<status status="FAIL" starttime="20211016 01:19:55.260" endtime="20211016 01:20:03.818"/>
</kw>
<msg timestamp="20211016 01:20:03.818" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211016 01:19:55.259" endtime="20211016 01:20:03.818"/>
</kw>
<status status="FAIL" starttime="20211016 01:19:55.258" endtime="20211016 01:20:03.818"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211016 01:20:03.819" endtime="20211016 01:20:03.819"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211016 01:20:03.819" endtime="20211016 01:20:03.819"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211016 01:19:55.209" endtime="20211016 01:20:03.819">255 != 0</status>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:20:03.837" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:20:03.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:20:03.846" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211016 01:20:03.828" endtime="20211016 01:20:03.846"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:20:03.847" level="INFO">scm</msg>
<status status="PASS" starttime="20211016 01:20:03.846" endtime="20211016 01:20:03.847"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:20:03.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:20:03.848" endtime="20211016 01:20:03.848"/>
</kw>
<status status="PASS" starttime="20211016 01:20:03.827" endtime="20211016 01:20:03.849"/>
</kw>
<msg timestamp="20211016 01:20:03.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:20:03.827" endtime="20211016 01:20:03.849"/>
</kw>
<msg timestamp="20211016 01:20:03.849" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211016 01:20:03.826" endtime="20211016 01:20:03.849"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211016 01:20:03.850" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211016 01:20:03.850" endtime="20211016 01:20:03.850"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:20:03.862" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:20:03.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:20:03.876" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:20:03.856" endtime="20211016 01:20:03.876"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:20:03.877" level="INFO"/>
<status status="PASS" starttime="20211016 01:20:03.876" endtime="20211016 01:20:03.877"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:20:03.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:20:03.878" endtime="20211016 01:20:03.878"/>
</kw>
<status status="PASS" starttime="20211016 01:20:03.855" endtime="20211016 01:20:03.879"/>
</kw>
<msg timestamp="20211016 01:20:03.879" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:20:03.852" endtime="20211016 01:20:03.879"/>
</kw>
<status status="PASS" starttime="20211016 01:20:03.851" endtime="20211016 01:20:03.879"/>
</kw>
<status status="PASS" starttime="20211016 01:20:03.850" endtime="20211016 01:20:03.879"/>
</kw>
<status status="PASS" starttime="20211016 01:20:03.826" endtime="20211016 01:20:03.880"/>
</kw>
<status status="PASS" starttime="20211016 01:20:03.825" endtime="20211016 01:20:03.880"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:20:03.890" level="INFO">Running command 'ozone sh bucket list 58433-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:20:13.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:20:13.020" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "58433-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "202...</msg>
<status status="PASS" starttime="20211016 01:20:03.887" endtime="20211016 01:20:13.020"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:20:13.023" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "58433-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-16T01:15:29.285Z",
  "modificationTime" : "2021-10-16T01:15:29.285Z",
  "sourceVolume" : "58433-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "58433-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-16T01:14:43.008Z",
  "modificationTime" : "2021-10-16T01:15:21.874Z",
  "sourceVolume" : "58433-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "58433-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-16T01:15:45.084Z",
  "modificationTime" : "2021-10-16T01:15:45.084Z",
  "sourceVolume" : "58433-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "58433-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-16T01:14:26.020Z",
  "modificationTime" : "2021-10-16T01:15:14.142Z",
  "sourceVolume" : "58433-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "58433-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-16T01:14:34.462Z",
  "modificationTime" : "2021-10-16T01:14:34.462Z",
  "sourceVolume" : "58433-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
} ]</msg>
<status status="PASS" starttime="20211016 01:20:13.021" endtime="20211016 01:20:13.023"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:20:13.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:20:13.024" endtime="20211016 01:20:13.025"/>
</kw>
<status status="PASS" starttime="20211016 01:20:03.886" endtime="20211016 01:20:13.026"/>
</kw>
<msg timestamp="20211016 01:20:13.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:20:03.886" endtime="20211016 01:20:13.027"/>
</kw>
<msg timestamp="20211016 01:20:13.028" level="INFO">${result} = [ {
  "metadata" : { },
  "volumeName" : "58433-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "202...</msg>
<status status="PASS" starttime="20211016 01:20:03.885" endtime="20211016 01:20:13.028"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 01:20:13.029" endtime="20211016 01:20:13.030"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 01:20:13.030" endtime="20211016 01:20:13.030"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211016 01:20:03.822" endtime="20211016 01:20:13.031"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:20:13.037" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:20:13.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:20:13.045" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211016 01:20:13.035" endtime="20211016 01:20:13.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:20:13.047" level="INFO">scm</msg>
<status status="PASS" starttime="20211016 01:20:13.046" endtime="20211016 01:20:13.047"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:20:13.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:20:13.047" endtime="20211016 01:20:13.048"/>
</kw>
<status status="PASS" starttime="20211016 01:20:13.034" endtime="20211016 01:20:13.048"/>
</kw>
<msg timestamp="20211016 01:20:13.049" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:20:13.034" endtime="20211016 01:20:13.049"/>
</kw>
<msg timestamp="20211016 01:20:13.049" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211016 01:20:13.033" endtime="20211016 01:20:13.049"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211016 01:20:13.050" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211016 01:20:13.050" endtime="20211016 01:20:13.051"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:20:13.058" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:20:13.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:20:13.069" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:20:13.055" endtime="20211016 01:20:13.069"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:20:13.071" level="INFO"/>
<status status="PASS" starttime="20211016 01:20:13.070" endtime="20211016 01:20:13.072"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:20:13.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:20:13.072" endtime="20211016 01:20:13.074"/>
</kw>
<status status="PASS" starttime="20211016 01:20:13.054" endtime="20211016 01:20:13.074"/>
</kw>
<msg timestamp="20211016 01:20:13.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:20:13.053" endtime="20211016 01:20:13.075"/>
</kw>
<status status="PASS" starttime="20211016 01:20:13.052" endtime="20211016 01:20:13.075"/>
</kw>
<status status="PASS" starttime="20211016 01:20:13.051" endtime="20211016 01:20:13.075"/>
</kw>
<status status="PASS" starttime="20211016 01:20:13.033" endtime="20211016 01:20:13.076"/>
</kw>
<status status="PASS" starttime="20211016 01:20:13.032" endtime="20211016 01:20:13.076"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:20:13.082" level="INFO">Running command 'ozone sh bucket info 58433-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:20:19.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:20:19.641" level="INFO">${output} = {
  "volumeName" : "58433-target",
  "bucketName" : "link1",
  "sourceVolume" : "58433-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-10-16T01:15:45.084Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20211016 01:20:13.079" endtime="20211016 01:20:19.641"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:20:19.643" level="INFO">{
  "volumeName" : "58433-target",
  "bucketName" : "link1",
  "sourceVolume" : "58433-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-10-16T01:15:45.084Z",
  "modificationTime" : "2021-10-16T01:15:45.084Z"
}</msg>
<status status="PASS" starttime="20211016 01:20:19.642" endtime="20211016 01:20:19.643"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:20:19.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:20:19.643" endtime="20211016 01:20:19.644"/>
</kw>
<status status="PASS" starttime="20211016 01:20:13.078" endtime="20211016 01:20:19.644"/>
</kw>
<msg timestamp="20211016 01:20:19.644" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:20:13.078" endtime="20211016 01:20:19.644"/>
</kw>
<msg timestamp="20211016 01:20:19.645" level="INFO">${result} = {
  "volumeName" : "58433-target",
  "bucketName" : "link1",
  "sourceVolume" : "58433-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-10-16T01:15:45.084Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20211016 01:20:13.077" endtime="20211016 01:20:19.645"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${source}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 01:20:19.645" endtime="20211016 01:20:19.645"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bucket1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 01:20:19.646" endtime="20211016 01:20:19.646"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${target}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 01:20:19.646" endtime="20211016 01:20:19.648"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 01:20:19.648" endtime="20211016 01:20:19.649"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>modificationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 01:20:19.649" endtime="20211016 01:20:19.649"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 01:20:19.649" endtime="20211016 01:20:19.650"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>metadata</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 01:20:19.650" endtime="20211016 01:20:19.650"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211016 01:20:13.031" endtime="20211016 01:20:19.651"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:20:19.660" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:20:19.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:20:19.669" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211016 01:20:19.656" endtime="20211016 01:20:19.670"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:20:19.671" level="INFO">scm</msg>
<status status="PASS" starttime="20211016 01:20:19.670" endtime="20211016 01:20:19.671"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:20:19.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:20:19.671" endtime="20211016 01:20:19.672"/>
</kw>
<status status="PASS" starttime="20211016 01:20:19.656" endtime="20211016 01:20:19.673"/>
</kw>
<msg timestamp="20211016 01:20:19.673" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:20:19.655" endtime="20211016 01:20:19.673"/>
</kw>
<msg timestamp="20211016 01:20:19.674" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211016 01:20:19.655" endtime="20211016 01:20:19.674"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211016 01:20:19.676" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211016 01:20:19.674" endtime="20211016 01:20:19.676"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:20:19.683" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:20:19.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:20:19.694" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:20:19.680" endtime="20211016 01:20:19.694"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:20:19.696" level="INFO"/>
<status status="PASS" starttime="20211016 01:20:19.695" endtime="20211016 01:20:19.697"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:20:19.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:20:19.697" endtime="20211016 01:20:19.698"/>
</kw>
<status status="PASS" starttime="20211016 01:20:19.680" endtime="20211016 01:20:19.699"/>
</kw>
<msg timestamp="20211016 01:20:19.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:20:19.679" endtime="20211016 01:20:19.699"/>
</kw>
<status status="PASS" starttime="20211016 01:20:19.677" endtime="20211016 01:20:19.699"/>
</kw>
<status status="PASS" starttime="20211016 01:20:19.676" endtime="20211016 01:20:19.700"/>
</kw>
<status status="PASS" starttime="20211016 01:20:19.653" endtime="20211016 01:20:19.700"/>
</kw>
<status status="PASS" starttime="20211016 01:20:19.653" endtime="20211016 01:20:19.700"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:20:19.706" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 58433-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:20:25.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:20:25.600" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211016 01:20:19.703" endtime="20211016 01:20:25.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:20:25.601" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211016 01:20:25.600" endtime="20211016 01:20:25.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:20:25.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:20:25.601" endtime="20211016 01:20:25.602"/>
</kw>
<status status="PASS" starttime="20211016 01:20:19.702" endtime="20211016 01:20:25.602"/>
</kw>
<msg timestamp="20211016 01:20:25.603" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:20:19.701" endtime="20211016 01:20:25.603"/>
</kw>
<status status="PASS" starttime="20211016 01:20:19.700" endtime="20211016 01:20:25.603"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:20:25.610" level="INFO">Running command 'ozone sh bucket getacl 58433-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:20:33.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:20:33.156" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20211016 01:20:25.607" endtime="20211016 01:20:33.156"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:20:33.157" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20211016 01:20:33.157" endtime="20211016 01:20:33.158"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:20:33.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:20:33.158" endtime="20211016 01:20:33.158"/>
</kw>
<status status="PASS" starttime="20211016 01:20:25.606" endtime="20211016 01:20:33.159"/>
</kw>
<msg timestamp="20211016 01:20:33.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:20:25.605" endtime="20211016 01:20:33.159"/>
</kw>
<msg timestamp="20211016 01:20:33.159" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20211016 01:20:25.604" endtime="20211016 01:20:33.159"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211016 01:20:33.160" endtime="20211016 01:20:33.160"/>
</kw>
<status status="PASS" starttime="20211016 01:20:25.603" endtime="20211016 01:20:33.160"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:20:33.167" level="INFO">Running command 'ozone sh bucket getacl 58433-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:20:40.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:20:40.412" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:20:33.165" endtime="20211016 01:20:40.412"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:20:40.415" level="INFO"/>
<status status="PASS" starttime="20211016 01:20:40.413" endtime="20211016 01:20:40.416"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:20:40.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:20:40.416" endtime="20211016 01:20:40.417"/>
</kw>
<status status="PASS" starttime="20211016 01:20:33.164" endtime="20211016 01:20:40.418"/>
</kw>
<msg timestamp="20211016 01:20:40.419" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:20:33.164" endtime="20211016 01:20:40.419"/>
</kw>
<msg timestamp="20211016 01:20:40.419" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20211016 01:20:33.163" endtime="20211016 01:20:40.419"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211016 01:20:40.420" endtime="20211016 01:20:40.420"/>
</kw>
<status status="PASS" starttime="20211016 01:20:33.161" endtime="20211016 01:20:40.420"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:20:40.428" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 58433-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:20:48.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:20:48.697" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211016 01:20:40.424" endtime="20211016 01:20:48.697"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:20:48.699" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211016 01:20:48.698" endtime="20211016 01:20:48.699"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:20:48.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:20:48.699" endtime="20211016 01:20:48.700"/>
</kw>
<status status="PASS" starttime="20211016 01:20:40.423" endtime="20211016 01:20:48.701"/>
</kw>
<msg timestamp="20211016 01:20:48.701" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:20:40.421" endtime="20211016 01:20:48.701"/>
</kw>
<status status="PASS" starttime="20211016 01:20:40.421" endtime="20211016 01:20:48.701"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:20:48.710" level="INFO">Running command 'ozone sh bucket getacl 58433-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:20:54.994" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:20:54.995" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:20:48.705" endtime="20211016 01:20:54.995"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:20:54.998" level="INFO"/>
<status status="PASS" starttime="20211016 01:20:54.996" endtime="20211016 01:20:54.998"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:20:54.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:20:54.998" endtime="20211016 01:20:55.000"/>
</kw>
<status status="PASS" starttime="20211016 01:20:48.705" endtime="20211016 01:20:55.000"/>
</kw>
<msg timestamp="20211016 01:20:55.000" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:20:48.704" endtime="20211016 01:20:55.001"/>
</kw>
<msg timestamp="20211016 01:20:55.001" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20211016 01:20:48.703" endtime="20211016 01:20:55.001"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211016 01:20:55.001" endtime="20211016 01:20:55.002"/>
</kw>
<status status="PASS" starttime="20211016 01:20:48.701" endtime="20211016 01:20:55.003"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:20:55.012" level="INFO">Running command 'ozone sh bucket getacl 58433-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:21:03.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:21:03.230" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20211016 01:20:55.009" endtime="20211016 01:21:03.230"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:21:03.233" level="INFO">READ</msg>
<status status="PASS" starttime="20211016 01:21:03.231" endtime="20211016 01:21:03.233"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:21:03.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:21:03.234" endtime="20211016 01:21:03.235"/>
</kw>
<status status="PASS" starttime="20211016 01:20:55.008" endtime="20211016 01:21:03.236"/>
</kw>
<msg timestamp="20211016 01:21:03.236" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:20:55.007" endtime="20211016 01:21:03.237"/>
</kw>
<msg timestamp="20211016 01:21:03.237" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20211016 01:20:55.005" endtime="20211016 01:21:03.238"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211016 01:21:03.238" endtime="20211016 01:21:03.240"/>
</kw>
<status status="PASS" starttime="20211016 01:20:55.003" endtime="20211016 01:21:03.240"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211016 01:20:19.652" endtime="20211016 01:21:03.242"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:21:03.253" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:21:03.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:21:03.259" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211016 01:21:03.251" endtime="20211016 01:21:03.259"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:21:03.261" level="INFO">scm</msg>
<status status="PASS" starttime="20211016 01:21:03.259" endtime="20211016 01:21:03.261"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:21:03.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:21:03.261" endtime="20211016 01:21:03.263"/>
</kw>
<status status="PASS" starttime="20211016 01:21:03.250" endtime="20211016 01:21:03.264"/>
</kw>
<msg timestamp="20211016 01:21:03.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:21:03.250" endtime="20211016 01:21:03.264"/>
</kw>
<msg timestamp="20211016 01:21:03.264" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211016 01:21:03.249" endtime="20211016 01:21:03.264"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211016 01:21:03.266" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211016 01:21:03.265" endtime="20211016 01:21:03.266"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:21:03.272" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:21:03.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:21:03.488" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:21:03.270" endtime="20211016 01:21:03.488"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:21:03.490" level="INFO"/>
<status status="PASS" starttime="20211016 01:21:03.489" endtime="20211016 01:21:03.490"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:21:03.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:21:03.490" endtime="20211016 01:21:03.490"/>
</kw>
<status status="PASS" starttime="20211016 01:21:03.270" endtime="20211016 01:21:03.491"/>
</kw>
<msg timestamp="20211016 01:21:03.491" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:21:03.269" endtime="20211016 01:21:03.491"/>
</kw>
<status status="PASS" starttime="20211016 01:21:03.268" endtime="20211016 01:21:03.491"/>
</kw>
<status status="PASS" starttime="20211016 01:21:03.267" endtime="20211016 01:21:03.491"/>
</kw>
<status status="PASS" starttime="20211016 01:21:03.248" endtime="20211016 01:21:03.492"/>
</kw>
<status status="PASS" starttime="20211016 01:21:03.246" endtime="20211016 01:21:03.492"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:21:03.496" level="INFO">Running command 'ozone sh bucket link 58433-source/bucket2 58433-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:21:10.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:21:10.782" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:21:03.494" endtime="20211016 01:21:10.782"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:21:10.784" level="INFO"/>
<status status="PASS" starttime="20211016 01:21:10.782" endtime="20211016 01:21:10.784"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:21:10.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:21:10.784" endtime="20211016 01:21:10.786"/>
</kw>
<status status="PASS" starttime="20211016 01:21:03.493" endtime="20211016 01:21:10.787"/>
</kw>
<msg timestamp="20211016 01:21:10.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:21:03.493" endtime="20211016 01:21:10.787"/>
</kw>
<status status="PASS" starttime="20211016 01:21:03.492" endtime="20211016 01:21:10.788"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:21:10.792" level="INFO">Running command 'ozone sh bucket create 58433-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:21:16.679" level="INFO">${rc} = 255</msg>
<msg timestamp="20211016 01:21:16.679" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211016 01:21:10.789" endtime="20211016 01:21:16.679"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:21:16.680" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211016 01:21:16.679" endtime="20211016 01:21:16.680"/>
</kw>
<msg timestamp="20211016 01:21:16.681" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211016 01:21:10.788" endtime="20211016 01:21:16.681"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 01:21:16.681" endtime="20211016 01:21:16.682"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:21:16.689" level="INFO">Running command 'ozone sh bucket create 58433-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:21:24.122" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:21:24.122" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:21:16.686" endtime="20211016 01:21:24.122"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:21:24.124" level="INFO"/>
<status status="PASS" starttime="20211016 01:21:24.123" endtime="20211016 01:21:24.124"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:21:24.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:21:24.124" endtime="20211016 01:21:24.125"/>
</kw>
<status status="PASS" starttime="20211016 01:21:16.685" endtime="20211016 01:21:24.125"/>
</kw>
<msg timestamp="20211016 01:21:24.125" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:21:16.684" endtime="20211016 01:21:24.126"/>
</kw>
<status status="PASS" starttime="20211016 01:21:16.683" endtime="20211016 01:21:24.126"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:21:24.130" level="INFO">Running command 'ozone sh bucket link 58433-source/bucket1 58433-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:21:32.344" level="INFO">${rc} = 255</msg>
<msg timestamp="20211016 01:21:32.344" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211016 01:21:24.127" endtime="20211016 01:21:32.344"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:21:32.346" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211016 01:21:32.345" endtime="20211016 01:21:32.346"/>
</kw>
<msg timestamp="20211016 01:21:32.346" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211016 01:21:24.126" endtime="20211016 01:21:32.346"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 01:21:32.346" endtime="20211016 01:21:32.347"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211016 01:21:03.244" endtime="20211016 01:21:32.347"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:21:32.358" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:21:32.361" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:21:32.361" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211016 01:21:32.354" endtime="20211016 01:21:32.361"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:21:32.365" level="INFO">scm</msg>
<status status="PASS" starttime="20211016 01:21:32.362" endtime="20211016 01:21:32.366"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:21:32.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:21:32.366" endtime="20211016 01:21:32.367"/>
</kw>
<status status="PASS" starttime="20211016 01:21:32.353" endtime="20211016 01:21:32.368"/>
</kw>
<msg timestamp="20211016 01:21:32.368" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:21:32.352" endtime="20211016 01:21:32.368"/>
</kw>
<msg timestamp="20211016 01:21:32.369" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211016 01:21:32.351" endtime="20211016 01:21:32.369"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211016 01:21:32.370" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211016 01:21:32.369" endtime="20211016 01:21:32.370"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:21:32.379" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:21:32.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:21:32.388" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:21:32.375" endtime="20211016 01:21:32.388"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:21:32.390" level="INFO"/>
<status status="PASS" starttime="20211016 01:21:32.389" endtime="20211016 01:21:32.390"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:21:32.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:21:32.390" endtime="20211016 01:21:32.391"/>
</kw>
<status status="PASS" starttime="20211016 01:21:32.374" endtime="20211016 01:21:32.392"/>
</kw>
<msg timestamp="20211016 01:21:32.392" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:21:32.373" endtime="20211016 01:21:32.392"/>
</kw>
<status status="PASS" starttime="20211016 01:21:32.371" endtime="20211016 01:21:32.394"/>
</kw>
<status status="PASS" starttime="20211016 01:21:32.371" endtime="20211016 01:21:32.394"/>
</kw>
<status status="PASS" starttime="20211016 01:21:32.351" endtime="20211016 01:21:32.394"/>
</kw>
<status status="PASS" starttime="20211016 01:21:32.349" endtime="20211016 01:21:32.394"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:21:32.402" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:21:32.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:21:32.410" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:21:32.399" endtime="20211016 01:21:32.410"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:21:32.411" level="INFO"/>
<status status="PASS" starttime="20211016 01:21:32.411" endtime="20211016 01:21:32.411"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:21:32.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:21:32.411" endtime="20211016 01:21:32.412"/>
</kw>
<status status="PASS" starttime="20211016 01:21:32.398" endtime="20211016 01:21:32.413"/>
</kw>
<msg timestamp="20211016 01:21:32.413" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:21:32.398" endtime="20211016 01:21:32.414"/>
</kw>
<status status="PASS" starttime="20211016 01:21:32.397" endtime="20211016 01:21:32.414"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:21:32.421" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:21:32.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:21:32.425" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211016 01:21:32.418" endtime="20211016 01:21:32.425"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:21:32.428" level="INFO">scm</msg>
<status status="PASS" starttime="20211016 01:21:32.426" endtime="20211016 01:21:32.428"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:21:32.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:21:32.428" endtime="20211016 01:21:32.429"/>
</kw>
<status status="PASS" starttime="20211016 01:21:32.417" endtime="20211016 01:21:32.430"/>
</kw>
<msg timestamp="20211016 01:21:32.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:21:32.416" endtime="20211016 01:21:32.430"/>
</kw>
<msg timestamp="20211016 01:21:32.431" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211016 01:21:32.415" endtime="20211016 01:21:32.431"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211016 01:21:32.432" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211016 01:21:32.431" endtime="20211016 01:21:32.432"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:21:32.439" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:21:32.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:21:32.449" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:21:32.436" endtime="20211016 01:21:32.450"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:21:32.451" level="INFO"/>
<status status="PASS" starttime="20211016 01:21:32.450" endtime="20211016 01:21:32.452"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:21:32.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:21:32.452" endtime="20211016 01:21:32.452"/>
</kw>
<status status="PASS" starttime="20211016 01:21:32.434" endtime="20211016 01:21:32.453"/>
</kw>
<msg timestamp="20211016 01:21:32.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:21:32.434" endtime="20211016 01:21:32.453"/>
</kw>
<status status="PASS" starttime="20211016 01:21:32.433" endtime="20211016 01:21:32.454"/>
</kw>
<status status="PASS" starttime="20211016 01:21:32.432" endtime="20211016 01:21:32.454"/>
</kw>
<status status="PASS" starttime="20211016 01:21:32.415" endtime="20211016 01:21:32.454"/>
</kw>
<status status="PASS" starttime="20211016 01:21:32.414" endtime="20211016 01:21:32.454"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:21:32.458" level="INFO">Running command 'ozone sh key list 58433-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:21:41.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:21:41.071" level="INFO">${output} = [ {
  "volumeName" : "58433-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-10-16T01:11:06.821Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20211016 01:21:32.455" endtime="20211016 01:21:41.071"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:21:41.072" level="INFO">[ {
  "volumeName" : "58433-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-10-16T01:11:06.821Z",
  "modificationTime" : "2021-10-16T01:14:10.746Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "replicationType" : "RATIS",
  "replicationFactor" : 3
} ]</msg>
<status status="PASS" starttime="20211016 01:21:41.071" endtime="20211016 01:21:41.072"/>
</kw>
<msg timestamp="20211016 01:21:41.072" level="INFO">${result} = [ {
  "volumeName" : "58433-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-10-16T01:11:06.821Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20211016 01:21:32.455" endtime="20211016 01:21:41.072"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 01:21:41.073" endtime="20211016 01:21:41.074"/>
</kw>
<status status="PASS" starttime="20211016 01:21:32.396" endtime="20211016 01:21:41.074"/>
</kw>
<status status="PASS" starttime="20211016 01:21:32.395" endtime="20211016 01:21:41.074"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211016 01:21:32.348" endtime="20211016 01:21:41.074"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:21:41.083" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:21:41.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:21:41.090" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211016 01:21:41.081" endtime="20211016 01:21:41.091"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:21:41.092" level="INFO">scm</msg>
<status status="PASS" starttime="20211016 01:21:41.091" endtime="20211016 01:21:41.092"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:21:41.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:21:41.092" endtime="20211016 01:21:41.093"/>
</kw>
<status status="PASS" starttime="20211016 01:21:41.080" endtime="20211016 01:21:41.094"/>
</kw>
<msg timestamp="20211016 01:21:41.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:21:41.079" endtime="20211016 01:21:41.095"/>
</kw>
<msg timestamp="20211016 01:21:41.095" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211016 01:21:41.078" endtime="20211016 01:21:41.095"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211016 01:21:41.097" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211016 01:21:41.096" endtime="20211016 01:21:41.097"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:21:41.104" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:21:41.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:21:41.114" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:21:41.102" endtime="20211016 01:21:41.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:21:41.117" level="INFO"/>
<status status="PASS" starttime="20211016 01:21:41.115" endtime="20211016 01:21:41.117"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:21:41.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:21:41.117" endtime="20211016 01:21:41.118"/>
</kw>
<status status="PASS" starttime="20211016 01:21:41.101" endtime="20211016 01:21:41.119"/>
</kw>
<msg timestamp="20211016 01:21:41.119" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:21:41.100" endtime="20211016 01:21:41.120"/>
</kw>
<status status="PASS" starttime="20211016 01:21:41.099" endtime="20211016 01:21:41.120"/>
</kw>
<status status="PASS" starttime="20211016 01:21:41.097" endtime="20211016 01:21:41.121"/>
</kw>
<status status="PASS" starttime="20211016 01:21:41.077" endtime="20211016 01:21:41.121"/>
</kw>
<status status="PASS" starttime="20211016 01:21:41.076" endtime="20211016 01:21:41.121"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:21:41.131" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:21:41.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:21:41.138" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:21:41.127" endtime="20211016 01:21:41.139"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:21:41.140" level="INFO"/>
<status status="PASS" starttime="20211016 01:21:41.139" endtime="20211016 01:21:41.141"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:21:41.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:21:41.141" endtime="20211016 01:21:41.142"/>
</kw>
<status status="PASS" starttime="20211016 01:21:41.126" endtime="20211016 01:21:41.145"/>
</kw>
<msg timestamp="20211016 01:21:41.145" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:21:41.125" endtime="20211016 01:21:41.145"/>
</kw>
<status status="PASS" starttime="20211016 01:21:41.124" endtime="20211016 01:21:41.146"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:21:41.151" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:21:41.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:21:41.156" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211016 01:21:41.149" endtime="20211016 01:21:41.156"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:21:41.158" level="INFO">scm</msg>
<status status="PASS" starttime="20211016 01:21:41.156" endtime="20211016 01:21:41.158"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:21:41.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:21:41.158" endtime="20211016 01:21:41.160"/>
</kw>
<status status="PASS" starttime="20211016 01:21:41.148" endtime="20211016 01:21:41.161"/>
</kw>
<msg timestamp="20211016 01:21:41.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:21:41.148" endtime="20211016 01:21:41.161"/>
</kw>
<msg timestamp="20211016 01:21:41.161" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211016 01:21:41.147" endtime="20211016 01:21:41.161"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211016 01:21:41.162" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211016 01:21:41.162" endtime="20211016 01:21:41.163"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:21:41.168" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:21:41.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:21:41.179" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:21:41.166" endtime="20211016 01:21:41.179"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:21:41.181" level="INFO"/>
<status status="PASS" starttime="20211016 01:21:41.180" endtime="20211016 01:21:41.181"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:21:41.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:21:41.182" endtime="20211016 01:21:41.183"/>
</kw>
<status status="PASS" starttime="20211016 01:21:41.165" endtime="20211016 01:21:41.183"/>
</kw>
<msg timestamp="20211016 01:21:41.184" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:21:41.165" endtime="20211016 01:21:41.184"/>
</kw>
<status status="PASS" starttime="20211016 01:21:41.163" endtime="20211016 01:21:41.184"/>
</kw>
<status status="PASS" starttime="20211016 01:21:41.163" endtime="20211016 01:21:41.184"/>
</kw>
<status status="PASS" starttime="20211016 01:21:41.146" endtime="20211016 01:21:41.185"/>
</kw>
<status status="PASS" starttime="20211016 01:21:41.146" endtime="20211016 01:21:41.185"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:21:41.189" level="INFO">Running command 'ozone sh key list 58433-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:21:49.116" level="INFO">${rc} = 255</msg>
<msg timestamp="20211016 01:21:49.116" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 58433-target unreadable-link null</msg>
<status status="PASS" starttime="20211016 01:21:41.186" endtime="20211016 01:21:49.116"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:21:49.118" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 58433-target unreadable-link null</msg>
<status status="PASS" starttime="20211016 01:21:49.117" endtime="20211016 01:21:49.118"/>
</kw>
<msg timestamp="20211016 01:21:49.118" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 58433-target unreadable-link null</msg>
<status status="PASS" starttime="20211016 01:21:41.185" endtime="20211016 01:21:49.118"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 01:21:49.119" endtime="20211016 01:21:49.119"/>
</kw>
<status status="PASS" starttime="20211016 01:21:41.123" endtime="20211016 01:21:49.119"/>
</kw>
<status status="PASS" starttime="20211016 01:21:41.122" endtime="20211016 01:21:49.119"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211016 01:21:41.075" endtime="20211016 01:21:49.120"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:21:49.128" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:21:49.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:21:49.136" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211016 01:21:49.125" endtime="20211016 01:21:49.136"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:21:49.138" level="INFO">scm</msg>
<status status="PASS" starttime="20211016 01:21:49.137" endtime="20211016 01:21:49.138"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:21:49.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:21:49.139" endtime="20211016 01:21:49.140"/>
</kw>
<status status="PASS" starttime="20211016 01:21:49.124" endtime="20211016 01:21:49.140"/>
</kw>
<msg timestamp="20211016 01:21:49.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:21:49.124" endtime="20211016 01:21:49.141"/>
</kw>
<msg timestamp="20211016 01:21:49.141" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211016 01:21:49.123" endtime="20211016 01:21:49.141"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211016 01:21:49.142" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211016 01:21:49.141" endtime="20211016 01:21:49.142"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:21:49.148" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:21:49.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:21:49.168" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:21:49.145" endtime="20211016 01:21:49.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:21:49.169" level="INFO"/>
<status status="PASS" starttime="20211016 01:21:49.168" endtime="20211016 01:21:49.169"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:21:49.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:21:49.170" endtime="20211016 01:21:49.170"/>
</kw>
<status status="PASS" starttime="20211016 01:21:49.144" endtime="20211016 01:21:49.171"/>
</kw>
<msg timestamp="20211016 01:21:49.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:21:49.144" endtime="20211016 01:21:49.171"/>
</kw>
<status status="PASS" starttime="20211016 01:21:49.143" endtime="20211016 01:21:49.172"/>
</kw>
<status status="PASS" starttime="20211016 01:21:49.142" endtime="20211016 01:21:49.172"/>
</kw>
<status status="PASS" starttime="20211016 01:21:49.122" endtime="20211016 01:21:49.172"/>
</kw>
<status status="PASS" starttime="20211016 01:21:49.122" endtime="20211016 01:21:49.172"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:21:49.178" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:21:49.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:21:49.185" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:21:49.176" endtime="20211016 01:21:49.185"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:21:49.186" level="INFO"/>
<status status="PASS" starttime="20211016 01:21:49.185" endtime="20211016 01:21:49.186"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:21:49.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:21:49.186" endtime="20211016 01:21:49.187"/>
</kw>
<status status="PASS" starttime="20211016 01:21:49.175" endtime="20211016 01:21:49.188"/>
</kw>
<msg timestamp="20211016 01:21:49.188" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:21:49.175" endtime="20211016 01:21:49.188"/>
</kw>
<status status="PASS" starttime="20211016 01:21:49.174" endtime="20211016 01:21:49.188"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:21:49.194" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:21:49.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:21:49.198" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211016 01:21:49.191" endtime="20211016 01:21:49.198"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:21:49.199" level="INFO">scm</msg>
<status status="PASS" starttime="20211016 01:21:49.198" endtime="20211016 01:21:49.200"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:21:49.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:21:49.200" endtime="20211016 01:21:49.201"/>
</kw>
<status status="PASS" starttime="20211016 01:21:49.191" endtime="20211016 01:21:49.201"/>
</kw>
<msg timestamp="20211016 01:21:49.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:21:49.190" endtime="20211016 01:21:49.201"/>
</kw>
<msg timestamp="20211016 01:21:49.202" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211016 01:21:49.189" endtime="20211016 01:21:49.202"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211016 01:21:49.203" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211016 01:21:49.202" endtime="20211016 01:21:49.203"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:21:49.208" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:21:49.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:21:49.216" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:21:49.206" endtime="20211016 01:21:49.216"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:21:49.218" level="INFO"/>
<status status="PASS" starttime="20211016 01:21:49.217" endtime="20211016 01:21:49.218"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:21:49.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:21:49.218" endtime="20211016 01:21:49.219"/>
</kw>
<status status="PASS" starttime="20211016 01:21:49.205" endtime="20211016 01:21:49.219"/>
</kw>
<msg timestamp="20211016 01:21:49.219" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:21:49.205" endtime="20211016 01:21:49.220"/>
</kw>
<status status="PASS" starttime="20211016 01:21:49.204" endtime="20211016 01:21:49.220"/>
</kw>
<status status="PASS" starttime="20211016 01:21:49.203" endtime="20211016 01:21:49.220"/>
</kw>
<status status="PASS" starttime="20211016 01:21:49.189" endtime="20211016 01:21:49.220"/>
</kw>
<status status="PASS" starttime="20211016 01:21:49.188" endtime="20211016 01:21:49.220"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:21:49.226" level="INFO">Running command 'ozone sh bucket info 58433-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:21:58.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:21:58.166" level="INFO">${output} = {
  "volumeName" : "58433-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "58433-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-10-16T01:14:43.008Z...</msg>
<status status="PASS" starttime="20211016 01:21:49.223" endtime="20211016 01:21:58.167"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:21:58.168" level="INFO">{
  "volumeName" : "58433-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "58433-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-10-16T01:14:43.008Z",
  "modificationTime" : "2021-10-16T01:15:21.874Z"
}</msg>
<status status="PASS" starttime="20211016 01:21:58.167" endtime="20211016 01:21:58.168"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:21:58.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:21:58.168" endtime="20211016 01:21:58.170"/>
</kw>
<status status="PASS" starttime="20211016 01:21:49.222" endtime="20211016 01:21:58.170"/>
</kw>
<msg timestamp="20211016 01:21:58.170" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:21:49.222" endtime="20211016 01:21:58.171"/>
</kw>
<msg timestamp="20211016 01:21:58.172" level="INFO">${result} = {
  "volumeName" : "58433-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "58433-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-10-16T01:14:43.008Z...</msg>
<status status="PASS" starttime="20211016 01:21:49.220" endtime="20211016 01:21:58.172"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 01:21:58.172" endtime="20211016 01:21:58.173"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 01:21:58.173" endtime="20211016 01:21:58.174"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:21:58.179" level="INFO">Running command 'ozone sh key list 58433-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:22:04.337" level="INFO">${rc} = 255</msg>
<msg timestamp="20211016 01:22:04.337" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 58433-source unreadable-bucket </msg>
<status status="PASS" starttime="20211016 01:21:58.176" endtime="20211016 01:22:04.337"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:22:04.339" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 58433-source unreadable-bucket </msg>
<status status="PASS" starttime="20211016 01:22:04.338" endtime="20211016 01:22:04.339"/>
</kw>
<msg timestamp="20211016 01:22:04.339" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 58433-source unreadable-bucket </msg>
<status status="PASS" starttime="20211016 01:21:58.174" endtime="20211016 01:22:04.339"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 01:22:04.339" endtime="20211016 01:22:04.340"/>
</kw>
<status status="PASS" starttime="20211016 01:21:49.173" endtime="20211016 01:22:04.341"/>
</kw>
<status status="PASS" starttime="20211016 01:21:49.173" endtime="20211016 01:22:04.341"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211016 01:21:49.120" endtime="20211016 01:22:04.341"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:22:04.352" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:22:04.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:22:04.356" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211016 01:22:04.348" endtime="20211016 01:22:04.357"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:22:04.358" level="INFO">scm</msg>
<status status="PASS" starttime="20211016 01:22:04.357" endtime="20211016 01:22:04.358"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:22:04.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:22:04.359" endtime="20211016 01:22:04.359"/>
</kw>
<status status="PASS" starttime="20211016 01:22:04.348" endtime="20211016 01:22:04.360"/>
</kw>
<msg timestamp="20211016 01:22:04.360" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:22:04.347" endtime="20211016 01:22:04.360"/>
</kw>
<msg timestamp="20211016 01:22:04.361" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211016 01:22:04.346" endtime="20211016 01:22:04.361"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211016 01:22:04.362" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211016 01:22:04.362" endtime="20211016 01:22:04.363"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:22:04.369" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:22:04.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:22:04.380" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:22:04.366" endtime="20211016 01:22:04.380"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:22:04.383" level="INFO"/>
<status status="PASS" starttime="20211016 01:22:04.381" endtime="20211016 01:22:04.383"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:22:04.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:22:04.384" endtime="20211016 01:22:04.385"/>
</kw>
<status status="PASS" starttime="20211016 01:22:04.365" endtime="20211016 01:22:04.386"/>
</kw>
<msg timestamp="20211016 01:22:04.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:22:04.364" endtime="20211016 01:22:04.386"/>
</kw>
<status status="PASS" starttime="20211016 01:22:04.363" endtime="20211016 01:22:04.386"/>
</kw>
<status status="PASS" starttime="20211016 01:22:04.363" endtime="20211016 01:22:04.387"/>
</kw>
<status status="PASS" starttime="20211016 01:22:04.345" endtime="20211016 01:22:04.387"/>
</kw>
<status status="PASS" starttime="20211016 01:22:04.344" endtime="20211016 01:22:04.387"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:22:04.394" level="INFO">Running command 'ozone sh bucket link 58433-target/loop1 58433-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:22:12.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:22:12.559" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:22:04.390" endtime="20211016 01:22:12.559"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:22:12.560" level="INFO"/>
<status status="PASS" starttime="20211016 01:22:12.559" endtime="20211016 01:22:12.560"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:22:12.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:22:12.560" endtime="20211016 01:22:12.561"/>
</kw>
<status status="PASS" starttime="20211016 01:22:04.389" endtime="20211016 01:22:12.561"/>
</kw>
<msg timestamp="20211016 01:22:12.561" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:22:04.389" endtime="20211016 01:22:12.562"/>
</kw>
<status status="PASS" starttime="20211016 01:22:04.388" endtime="20211016 01:22:12.562"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:22:12.566" level="INFO">Running command 'ozone sh bucket link 58433-target/loop2 58433-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:22:20.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:22:20.609" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:22:12.564" endtime="20211016 01:22:20.610"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:22:20.612" level="INFO"/>
<status status="PASS" starttime="20211016 01:22:20.610" endtime="20211016 01:22:20.612"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:22:20.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:22:20.612" endtime="20211016 01:22:20.614"/>
</kw>
<status status="PASS" starttime="20211016 01:22:12.563" endtime="20211016 01:22:20.615"/>
</kw>
<msg timestamp="20211016 01:22:20.615" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:22:12.563" endtime="20211016 01:22:20.615"/>
</kw>
<status status="PASS" starttime="20211016 01:22:12.562" endtime="20211016 01:22:20.616"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:22:20.623" level="INFO">Running command 'ozone sh bucket link 58433-target/loop3 58433-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:22:28.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:22:28.109" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:22:20.619" endtime="20211016 01:22:28.109"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:22:28.110" level="INFO"/>
<status status="PASS" starttime="20211016 01:22:28.109" endtime="20211016 01:22:28.110"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:22:28.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:22:28.111" endtime="20211016 01:22:28.111"/>
</kw>
<status status="PASS" starttime="20211016 01:22:20.618" endtime="20211016 01:22:28.112"/>
</kw>
<msg timestamp="20211016 01:22:28.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:22:20.617" endtime="20211016 01:22:28.112"/>
</kw>
<status status="PASS" starttime="20211016 01:22:20.616" endtime="20211016 01:22:28.113"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:22:28.116" level="INFO">Running command 'ozone sh key list 58433-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:22:35.348" level="INFO">${rc} = 255</msg>
<msg timestamp="20211016 01:22:35.348" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20211016 01:22:28.114" endtime="20211016 01:22:35.348"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:22:35.349" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20211016 01:22:35.349" endtime="20211016 01:22:35.350"/>
</kw>
<msg timestamp="20211016 01:22:35.350" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20211016 01:22:28.113" endtime="20211016 01:22:35.350"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 01:22:35.350" endtime="20211016 01:22:35.351"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211016 01:22:04.343" endtime="20211016 01:22:35.351"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:22:35.363" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:22:35.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:22:35.368" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211016 01:22:35.360" endtime="20211016 01:22:35.368"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:22:35.370" level="INFO">scm</msg>
<status status="PASS" starttime="20211016 01:22:35.369" endtime="20211016 01:22:35.370"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:22:35.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:22:35.370" endtime="20211016 01:22:35.372"/>
</kw>
<status status="PASS" starttime="20211016 01:22:35.358" endtime="20211016 01:22:35.372"/>
</kw>
<msg timestamp="20211016 01:22:35.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:22:35.357" endtime="20211016 01:22:35.372"/>
</kw>
<msg timestamp="20211016 01:22:35.376" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211016 01:22:35.357" endtime="20211016 01:22:35.376"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211016 01:22:35.377" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211016 01:22:35.377" endtime="20211016 01:22:35.377"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:22:35.384" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:22:35.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:22:35.397" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:22:35.381" endtime="20211016 01:22:35.397"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:22:35.400" level="INFO"/>
<status status="PASS" starttime="20211016 01:22:35.399" endtime="20211016 01:22:35.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:22:35.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:22:35.401" endtime="20211016 01:22:35.402"/>
</kw>
<status status="PASS" starttime="20211016 01:22:35.380" endtime="20211016 01:22:35.402"/>
</kw>
<msg timestamp="20211016 01:22:35.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:22:35.380" endtime="20211016 01:22:35.402"/>
</kw>
<status status="PASS" starttime="20211016 01:22:35.378" endtime="20211016 01:22:35.402"/>
</kw>
<status status="PASS" starttime="20211016 01:22:35.378" endtime="20211016 01:22:35.402"/>
</kw>
<status status="PASS" starttime="20211016 01:22:35.356" endtime="20211016 01:22:35.403"/>
</kw>
<status status="PASS" starttime="20211016 01:22:35.355" endtime="20211016 01:22:35.403"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:22:35.412" level="INFO">Running command 'ozone sh bucket link 58433-source/bucket1 58433-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:22:43.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:22:43.146" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:22:35.407" endtime="20211016 01:22:43.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:22:43.149" level="INFO"/>
<status status="PASS" starttime="20211016 01:22:43.147" endtime="20211016 01:22:43.149"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:22:43.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:22:43.150" endtime="20211016 01:22:43.151"/>
</kw>
<status status="PASS" starttime="20211016 01:22:35.405" endtime="20211016 01:22:43.152"/>
</kw>
<msg timestamp="20211016 01:22:43.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:22:35.404" endtime="20211016 01:22:43.152"/>
</kw>
<status status="PASS" starttime="20211016 01:22:35.403" endtime="20211016 01:22:43.153"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:22:43.159" level="INFO">Running command 'ozone sh key put 58433-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:24:35.355" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20211016 01:22:43.156" endtime="20211016 01:24:35.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211016 01:24:35.355" endtime="20211016 01:24:35.356"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211016 01:24:35.356" endtime="20211016 01:24:35.356"/>
</kw>
<status status="FAIL" starttime="20211016 01:22:43.155" endtime="20211016 01:24:35.356"/>
</kw>
<msg timestamp="20211016 01:24:35.356" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211016 01:22:43.154" endtime="20211016 01:24:35.356"/>
</kw>
<status status="FAIL" starttime="20211016 01:22:43.153" endtime="20211016 01:24:35.357"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<status status="NOT RUN" starttime="20211016 01:24:35.357" endtime="20211016 01:24:35.357"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211016 01:22:35.353" endtime="20211016 01:24:35.358">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:24:35.366" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:24:35.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:24:35.370" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211016 01:24:35.364" endtime="20211016 01:24:35.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:24:35.375" level="INFO">scm</msg>
<status status="PASS" starttime="20211016 01:24:35.371" endtime="20211016 01:24:35.375"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:24:35.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:24:35.376" endtime="20211016 01:24:35.377"/>
</kw>
<status status="PASS" starttime="20211016 01:24:35.362" endtime="20211016 01:24:35.377"/>
</kw>
<msg timestamp="20211016 01:24:35.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:24:35.362" endtime="20211016 01:24:35.378"/>
</kw>
<msg timestamp="20211016 01:24:35.378" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211016 01:24:35.361" endtime="20211016 01:24:35.378"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211016 01:24:35.379" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211016 01:24:35.379" endtime="20211016 01:24:35.379"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:24:35.385" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:24:35.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:24:35.397" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:24:35.383" endtime="20211016 01:24:35.397"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:24:35.399" level="INFO"/>
<status status="PASS" starttime="20211016 01:24:35.397" endtime="20211016 01:24:35.399"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:24:35.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:24:35.399" endtime="20211016 01:24:35.400"/>
</kw>
<status status="PASS" starttime="20211016 01:24:35.382" endtime="20211016 01:24:35.401"/>
</kw>
<msg timestamp="20211016 01:24:35.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:24:35.382" endtime="20211016 01:24:35.401"/>
</kw>
<status status="PASS" starttime="20211016 01:24:35.381" endtime="20211016 01:24:35.402"/>
</kw>
<status status="PASS" starttime="20211016 01:24:35.380" endtime="20211016 01:24:35.402"/>
</kw>
<status status="PASS" starttime="20211016 01:24:35.360" endtime="20211016 01:24:35.402"/>
</kw>
<status status="PASS" starttime="20211016 01:24:35.360" endtime="20211016 01:24:35.402"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:24:35.408" level="INFO">Running command 'ozone sh bucket delete 58433-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:24:43.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:24:43.036" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:24:35.405" endtime="20211016 01:24:43.036"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:24:43.037" level="INFO"/>
<status status="PASS" starttime="20211016 01:24:43.036" endtime="20211016 01:24:43.037"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:24:43.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:24:43.037" endtime="20211016 01:24:43.038"/>
</kw>
<status status="PASS" starttime="20211016 01:24:35.404" endtime="20211016 01:24:43.038"/>
</kw>
<msg timestamp="20211016 01:24:43.038" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:24:35.404" endtime="20211016 01:24:43.039"/>
</kw>
<status status="PASS" starttime="20211016 01:24:35.402" endtime="20211016 01:24:43.039"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:24:43.044" level="INFO">Running command 'ozone sh bucket list 58433-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:24:50.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:24:50.151" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "58433-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-1...</msg>
<status status="PASS" starttime="20211016 01:24:43.041" endtime="20211016 01:24:50.151"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:24:50.155" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "58433-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-16T01:21:24.025Z",
  "modificationTime" : "2021-10-16T01:21:24.025Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "58433-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-16T01:15:29.285Z",
  "modificationTime" : "2021-10-16T01:15:29.285Z",
  "sourceVolume" : "58433-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "58433-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-16T01:14:43.008Z",
  "modificationTime" : "2021-10-16T01:15:21.874Z",
  "sourceVolume" : "58433-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "58433-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-16T01:21:10.654Z",
  "modificationTime" : "2021-10-16T01:21:10.654Z",
  "sourceVolume" : "58433-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "58433-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-16T01:22:42.866Z",
  "modificationTime" : "2021-10-16T01:22:42.866Z",
  "sourceVolume" : "58433-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "58433-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-16T01:22:28.033Z",
  "modificationTime" : "2021-10-16T01:22:28.033Z",
  "sourceVolume" : "58433-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "58433-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-16T01:22:12.432Z",
  "modificationTime" : "2021-10-16T01:22:12.432Z",
  "sourceVolume" : "58433-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "58433-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-16T01:22:20.513Z",
  "modificationTime" : "2021-10-16T01:22:20.513Z",
  "sourceVolume" : "58433-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "58433-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-16T01:14:26.020Z",
  "modificationTime" : "2021-10-16T01:15:14.142Z",
  "sourceVolume" : "58433-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "58433-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-16T01:14:34.462Z",
  "modificationTime" : "2021-10-16T01:14:34.462Z",
  "sourceVolume" : "58433-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
} ]</msg>
<status status="PASS" starttime="20211016 01:24:50.152" endtime="20211016 01:24:50.155"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:24:50.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:24:50.155" endtime="20211016 01:24:50.157"/>
</kw>
<status status="PASS" starttime="20211016 01:24:43.040" endtime="20211016 01:24:50.157"/>
</kw>
<msg timestamp="20211016 01:24:50.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:24:43.040" endtime="20211016 01:24:50.158"/>
</kw>
<msg timestamp="20211016 01:24:50.159" level="INFO">${bucket_list} = [ {
  "metadata" : { },
  "volumeName" : "58433-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-1...</msg>
<status status="PASS" starttime="20211016 01:24:43.039" endtime="20211016 01:24:50.159"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 01:24:50.159" endtime="20211016 01:24:50.160"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:24:50.168" level="INFO">Running command 'ozone sh key list 58433-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:24:59.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:24:59.114" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20211016 01:24:50.164" endtime="20211016 01:24:59.114"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:24:59.116" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20211016 01:24:59.115" endtime="20211016 01:24:59.116"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:24:59.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:24:59.116" endtime="20211016 01:24:59.117"/>
</kw>
<status status="PASS" starttime="20211016 01:24:50.163" endtime="20211016 01:24:59.117"/>
</kw>
<msg timestamp="20211016 01:24:59.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:24:50.162" endtime="20211016 01:24:59.117"/>
</kw>
<msg timestamp="20211016 01:24:59.118" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20211016 01:24:50.161" endtime="20211016 01:24:59.118"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 01:24:59.118" endtime="20211016 01:24:59.119"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211016 01:24:35.359" endtime="20211016 01:24:59.119"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="FAIL" starttime="20211016 01:10:33.752" endtime="20211016 01:24:59.122"/>
</suite>
<suite id="s1-s1-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211016 01:24:59.157" level="INFO">${random} = 90580</msg>
<status status="PASS" starttime="20211016 01:24:59.157" endtime="20211016 01:24:59.157"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211016 01:24:59.158" level="INFO">${prefix} = 90580</msg>
<status status="PASS" starttime="20211016 01:24:59.157" endtime="20211016 01:24:59.158"/>
</kw>
<status status="PASS" starttime="20211016 01:24:59.156" endtime="20211016 01:24:59.158"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:24:59.167" level="INFO">Running command 'ozone sh volume info /90580-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:25:07.170" level="INFO">${rc} = 255</msg>
<msg timestamp="20211016 01:25:07.170" level="INFO">${output} = VOLUME_NOT_FOUND Volume 90580-rpcbasic is not found</msg>
<status status="PASS" starttime="20211016 01:24:59.164" endtime="20211016 01:25:07.170"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:25:07.172" level="INFO">VOLUME_NOT_FOUND Volume 90580-rpcbasic is not found</msg>
<status status="PASS" starttime="20211016 01:25:07.171" endtime="20211016 01:25:07.172"/>
</kw>
<msg timestamp="20211016 01:25:07.173" level="INFO">${result} = VOLUME_NOT_FOUND Volume 90580-rpcbasic is not found</msg>
<status status="PASS" starttime="20211016 01:24:59.163" endtime="20211016 01:25:07.174"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 01:25:07.174" endtime="20211016 01:25:07.175"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:25:07.181" level="INFO">Running command 'ozone sh volume create /90580-rpcbasic --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:25:13.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:25:13.630" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:25:07.178" endtime="20211016 01:25:13.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:25:13.632" level="INFO"/>
<status status="PASS" starttime="20211016 01:25:13.631" endtime="20211016 01:25:13.632"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:25:13.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:25:13.632" endtime="20211016 01:25:13.633"/>
</kw>
<status status="PASS" starttime="20211016 01:25:07.177" endtime="20211016 01:25:13.634"/>
</kw>
<msg timestamp="20211016 01:25:13.634" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:25:07.176" endtime="20211016 01:25:13.634"/>
</kw>
<msg timestamp="20211016 01:25:13.634" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211016 01:25:07.175" endtime="20211016 01:25:13.634"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 01:25:13.635" endtime="20211016 01:25:13.635"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:25:13.641" level="INFO">Running command 'ozone sh volume list / | jq -r '.[] | select(.name=="90580-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:25:21.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:25:21.740" level="INFO">${output} = {
  "metadata": {},
  "name": "90580-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211016 01:25:13.638" endtime="20211016 01:25:21.740"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:25:21.741" level="INFO">{
  "metadata": {},
  "name": "90580-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-16T01:25:13.555Z",
  "modificationTime": "2021-10-16T01:25:13.555Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211016 01:25:21.740" endtime="20211016 01:25:21.741"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:25:21.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:25:21.742" endtime="20211016 01:25:21.742"/>
</kw>
<status status="PASS" starttime="20211016 01:25:13.637" endtime="20211016 01:25:21.743"/>
</kw>
<msg timestamp="20211016 01:25:21.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:25:13.637" endtime="20211016 01:25:21.743"/>
</kw>
<msg timestamp="20211016 01:25:21.743" level="INFO">${result} = {
  "metadata": {},
  "name": "90580-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211016 01:25:13.635" endtime="20211016 01:25:21.743"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 01:25:21.743" endtime="20211016 01:25:21.744"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:25:21.748" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="90580-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:25:30.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:25:30.182" level="INFO">${output} = {
  "metadata": {},
  "name": "90580-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211016 01:25:21.746" endtime="20211016 01:25:30.182"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:25:30.183" level="INFO">{
  "metadata": {},
  "name": "90580-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-16T01:25:13.555Z",
  "modificationTime": "2021-10-16T01:25:13.555Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211016 01:25:30.182" endtime="20211016 01:25:30.183"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:25:30.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:25:30.183" endtime="20211016 01:25:30.184"/>
</kw>
<status status="PASS" starttime="20211016 01:25:21.745" endtime="20211016 01:25:30.185"/>
</kw>
<msg timestamp="20211016 01:25:30.185" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:25:21.745" endtime="20211016 01:25:30.185"/>
</kw>
<msg timestamp="20211016 01:25:30.185" level="INFO">${result} = {
  "metadata": {},
  "name": "90580-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211016 01:25:21.744" endtime="20211016 01:25:30.186"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 01:25:30.186" endtime="20211016 01:25:30.186"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:25:30.193" level="INFO">Running command 'ozone sh volume setquota /90580-rpcbasic --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:25:38.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:25:38.510" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:25:30.188" endtime="20211016 01:25:38.510"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:25:38.512" level="INFO"/>
<status status="PASS" starttime="20211016 01:25:38.511" endtime="20211016 01:25:38.513"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:25:38.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:25:38.513" endtime="20211016 01:25:38.514"/>
</kw>
<status status="PASS" starttime="20211016 01:25:30.188" endtime="20211016 01:25:38.514"/>
</kw>
<msg timestamp="20211016 01:25:38.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:25:30.187" endtime="20211016 01:25:38.515"/>
</kw>
<status status="PASS" starttime="20211016 01:25:30.186" endtime="20211016 01:25:38.515"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:25:38.523" level="INFO">Running command 'ozone sh volume info /90580-rpcbasic | jq -r '. | select(.name=="90580-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:25:47.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:25:47.055" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211016 01:25:38.520" endtime="20211016 01:25:47.056"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:25:47.057" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211016 01:25:47.056" endtime="20211016 01:25:47.057"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:25:47.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:25:47.057" endtime="20211016 01:25:47.058"/>
</kw>
<status status="PASS" starttime="20211016 01:25:38.519" endtime="20211016 01:25:47.058"/>
</kw>
<msg timestamp="20211016 01:25:47.058" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:25:38.518" endtime="20211016 01:25:47.059"/>
</kw>
<msg timestamp="20211016 01:25:47.059" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211016 01:25:38.516" endtime="20211016 01:25:47.059"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211016 01:25:47.059" endtime="20211016 01:25:47.060"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:25:47.066" level="INFO">Running command 'ozone sh bucket create /90580-rpcbasic/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:25:55.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:25:55.196" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:25:47.062" endtime="20211016 01:25:55.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:25:55.198" level="INFO"/>
<status status="PASS" starttime="20211016 01:25:55.197" endtime="20211016 01:25:55.198"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:25:55.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:25:55.199" endtime="20211016 01:25:55.200"/>
</kw>
<status status="PASS" starttime="20211016 01:25:47.061" endtime="20211016 01:25:55.201"/>
</kw>
<msg timestamp="20211016 01:25:55.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:25:47.060" endtime="20211016 01:25:55.201"/>
</kw>
<status status="PASS" starttime="20211016 01:25:47.060" endtime="20211016 01:25:55.201"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:25:55.222" level="INFO">Running command 'ozone sh bucket info /90580-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:26:03.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:26:03.697" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211016 01:25:55.212" endtime="20211016 01:26:03.697"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:26:03.700" level="INFO">DISK</msg>
<status status="PASS" starttime="20211016 01:26:03.698" endtime="20211016 01:26:03.700"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:26:03.701" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:26:03.700" endtime="20211016 01:26:03.701"/>
</kw>
<status status="PASS" starttime="20211016 01:25:55.210" endtime="20211016 01:26:03.702"/>
</kw>
<msg timestamp="20211016 01:26:03.702" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:25:55.209" endtime="20211016 01:26:03.703"/>
</kw>
<msg timestamp="20211016 01:26:03.704" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211016 01:25:55.201" endtime="20211016 01:26:03.704"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211016 01:26:03.704" endtime="20211016 01:26:03.705"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:26:03.712" level="INFO">Running command 'ozone sh bucket info /90580-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:26:12.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:26:12.352" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211016 01:26:03.710" endtime="20211016 01:26:12.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:26:12.354" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211016 01:26:12.353" endtime="20211016 01:26:12.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:26:12.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:26:12.354" endtime="20211016 01:26:12.356"/>
</kw>
<status status="PASS" starttime="20211016 01:26:03.708" endtime="20211016 01:26:12.357"/>
</kw>
<msg timestamp="20211016 01:26:12.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:26:03.707" endtime="20211016 01:26:12.357"/>
</kw>
<msg timestamp="20211016 01:26:12.357" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211016 01:26:03.706" endtime="20211016 01:26:12.357"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211016 01:26:12.358" endtime="20211016 01:26:12.358"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:26:12.364" level="INFO">Running command 'ozone sh bucket info /90580-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:26:21.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:26:21.398" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211016 01:26:12.361" endtime="20211016 01:26:21.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:26:21.401" level="INFO">100</msg>
<status status="PASS" starttime="20211016 01:26:21.399" endtime="20211016 01:26:21.404"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:26:21.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:26:21.404" endtime="20211016 01:26:21.405"/>
</kw>
<status status="PASS" starttime="20211016 01:26:12.360" endtime="20211016 01:26:21.405"/>
</kw>
<msg timestamp="20211016 01:26:21.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:26:12.360" endtime="20211016 01:26:21.406"/>
</kw>
<msg timestamp="20211016 01:26:21.406" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211016 01:26:12.359" endtime="20211016 01:26:21.406"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211016 01:26:21.407" endtime="20211016 01:26:21.407"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:26:21.413" level="INFO">Running command 'ozone sh bucket setquota /90580-rpcbasic/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:26:27.935" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:26:27.935" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:26:21.410" endtime="20211016 01:26:27.935"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:26:27.937" level="INFO"/>
<status status="PASS" starttime="20211016 01:26:27.936" endtime="20211016 01:26:27.937"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:26:27.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:26:27.938" endtime="20211016 01:26:27.938"/>
</kw>
<status status="PASS" starttime="20211016 01:26:21.408" endtime="20211016 01:26:27.939"/>
</kw>
<msg timestamp="20211016 01:26:27.939" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:26:21.408" endtime="20211016 01:26:27.939"/>
</kw>
<status status="PASS" starttime="20211016 01:26:21.407" endtime="20211016 01:26:27.939"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:26:27.943" level="INFO">Running command 'ozone sh bucket info /90580-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:26:35.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:26:35.965" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211016 01:26:27.941" endtime="20211016 01:26:35.965"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:26:35.967" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211016 01:26:35.966" endtime="20211016 01:26:35.967"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:26:35.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:26:35.968" endtime="20211016 01:26:35.969"/>
</kw>
<status status="PASS" starttime="20211016 01:26:27.941" endtime="20211016 01:26:35.970"/>
</kw>
<msg timestamp="20211016 01:26:35.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:26:27.940" endtime="20211016 01:26:35.970"/>
</kw>
<msg timestamp="20211016 01:26:35.971" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211016 01:26:27.939" endtime="20211016 01:26:35.971"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211016 01:26:35.971" endtime="20211016 01:26:35.972"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:26:35.980" level="INFO">Running command 'ozone sh bucket info /90580-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:26:44.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:26:44.726" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211016 01:26:35.976" endtime="20211016 01:26:44.726"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:26:44.729" level="INFO">1000</msg>
<status status="PASS" starttime="20211016 01:26:44.727" endtime="20211016 01:26:44.729"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:26:44.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:26:44.730" endtime="20211016 01:26:44.731"/>
</kw>
<status status="PASS" starttime="20211016 01:26:35.975" endtime="20211016 01:26:44.732"/>
</kw>
<msg timestamp="20211016 01:26:44.732" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:26:35.974" endtime="20211016 01:26:44.732"/>
</kw>
<msg timestamp="20211016 01:26:44.733" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211016 01:26:35.972" endtime="20211016 01:26:44.733"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211016 01:26:44.733" endtime="20211016 01:26:44.735"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:26:44.743" level="INFO">Running command 'ozone sh bucket list /90580-rpcbasic/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:26:52.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:26:52.482" level="INFO">${output} = 90580-rpcbasic</msg>
<status status="PASS" starttime="20211016 01:26:44.739" endtime="20211016 01:26:52.482"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:26:52.483" level="INFO">90580-rpcbasic</msg>
<status status="PASS" starttime="20211016 01:26:52.482" endtime="20211016 01:26:52.483"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:26:52.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:26:52.484" endtime="20211016 01:26:52.484"/>
</kw>
<status status="PASS" starttime="20211016 01:26:44.738" endtime="20211016 01:26:52.485"/>
</kw>
<msg timestamp="20211016 01:26:52.485" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:26:44.737" endtime="20211016 01:26:52.485"/>
</kw>
<msg timestamp="20211016 01:26:52.485" level="INFO">${result} = 90580-rpcbasic</msg>
<status status="PASS" starttime="20211016 01:26:44.735" endtime="20211016 01:26:52.485"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211016 01:26:52.485" endtime="20211016 01:26:52.486"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:26:52.492" level="INFO">Running command 'ozone sh key put /90580-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:29:59.160" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211016 01:26:52.489" endtime="20211016 01:29:59.160"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211016 01:29:59.160" endtime="20211016 01:29:59.160"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211016 01:29:59.161" endtime="20211016 01:29:59.161"/>
</kw>
<status status="FAIL" starttime="20211016 01:26:52.488" endtime="20211016 01:29:59.161"/>
</kw>
<msg timestamp="20211016 01:29:59.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211016 01:26:52.488" endtime="20211016 01:29:59.161"/>
</kw>
<status status="FAIL" starttime="20211016 01:26:52.487" endtime="20211016 01:29:59.162"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211016 01:29:59.162" endtime="20211016 01:29:59.162"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211016 01:29:59.162" endtime="20211016 01:29:59.162"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211016 01:29:59.162" endtime="20211016 01:29:59.162"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211016 01:29:59.163" endtime="20211016 01:29:59.163"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211016 01:29:59.163" endtime="20211016 01:29:59.163"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211016 01:29:59.163" endtime="20211016 01:29:59.163"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211016 01:29:59.163" endtime="20211016 01:29:59.163"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211016 01:29:59.163" endtime="20211016 01:29:59.164"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211016 01:29:59.164" endtime="20211016 01:29:59.164"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211016 01:29:59.164" endtime="20211016 01:29:59.164"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211016 01:29:59.173" endtime="20211016 01:29:59.173"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211016 01:29:59.173" endtime="20211016 01:29:59.174"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211016 01:29:59.174" endtime="20211016 01:29:59.174"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211016 01:29:59.174" endtime="20211016 01:29:59.174"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211016 01:29:59.175" endtime="20211016 01:29:59.175"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211016 01:29:59.175" endtime="20211016 01:29:59.175"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211016 01:29:59.176" endtime="20211016 01:29:59.176"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211016 01:29:59.176" endtime="20211016 01:29:59.176"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211016 01:29:59.176" endtime="20211016 01:29:59.177"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211016 01:29:59.177" endtime="20211016 01:29:59.177"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211016 01:29:59.177" endtime="20211016 01:29:59.177"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211016 01:29:59.177" endtime="20211016 01:29:59.178"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211016 01:29:59.178" endtime="20211016 01:29:59.178"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211016 01:29:59.178" endtime="20211016 01:29:59.178"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211016 01:29:59.178" endtime="20211016 01:29:59.178"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211016 01:29:59.178" endtime="20211016 01:29:59.178"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211016 01:29:59.179" endtime="20211016 01:29:59.179"/>
</kw>
<status status="FAIL" starttime="20211016 01:26:52.487" endtime="20211016 01:29:59.179"/>
</kw>
<status status="FAIL" starttime="20211016 01:26:52.486" endtime="20211016 01:29:59.179"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211016 01:29:59.179" endtime="20211016 01:29:59.179"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211016 01:29:59.180" endtime="20211016 01:29:59.180"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211016 01:29:59.180" endtime="20211016 01:29:59.180"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211016 01:29:59.180" endtime="20211016 01:29:59.180"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211016 01:29:59.180" endtime="20211016 01:29:59.180"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211016 01:29:59.181" endtime="20211016 01:29:59.181"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211016 01:29:59.181" endtime="20211016 01:29:59.181"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211016 01:29:59.181" endtime="20211016 01:29:59.181"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211016 01:29:59.181" endtime="20211016 01:29:59.182"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211016 01:29:59.182" endtime="20211016 01:29:59.182"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211016 01:29:59.182" endtime="20211016 01:29:59.182"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211016 01:29:59.182" endtime="20211016 01:29:59.182"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211016 01:29:59.183" endtime="20211016 01:29:59.183"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211016 01:29:59.183" endtime="20211016 01:29:59.183"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211016 01:29:59.183" endtime="20211016 01:29:59.183"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211016 01:29:59.183" endtime="20211016 01:29:59.184"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211016 01:29:59.184" endtime="20211016 01:29:59.184"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211016 01:29:59.184" endtime="20211016 01:29:59.184"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211016 01:29:59.185" endtime="20211016 01:29:59.185"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211016 01:29:59.185" endtime="20211016 01:29:59.185"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211016 01:29:59.185" endtime="20211016 01:29:59.185"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211016 01:29:59.185" endtime="20211016 01:29:59.186"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211016 01:29:59.186" endtime="20211016 01:29:59.186"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211016 01:29:59.186" endtime="20211016 01:29:59.186"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211016 01:29:59.186" endtime="20211016 01:29:59.186"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211016 01:29:59.187" endtime="20211016 01:29:59.187"/>
</kw>
<status status="FAIL" starttime="20211016 01:24:59.160" endtime="20211016 01:29:59.187"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211016 01:24:59.159" endtime="20211016 01:29:59.187">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20211016 01:24:59.127" endtime="20211016 01:29:59.190"/>
</suite>
<suite id="s1-s1-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211016 01:29:59.206" level="INFO">${random} = 75405</msg>
<status status="PASS" starttime="20211016 01:29:59.205" endtime="20211016 01:29:59.206"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211016 01:29:59.206" level="INFO">${prefix} = 75405</msg>
<status status="PASS" starttime="20211016 01:29:59.206" endtime="20211016 01:29:59.206"/>
</kw>
<status status="PASS" starttime="20211016 01:29:59.204" endtime="20211016 01:29:59.207"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:29:59.215" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:29:59.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:29:59.219" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211016 01:29:59.210" endtime="20211016 01:29:59.219"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:29:59.221" level="INFO">scm</msg>
<status status="PASS" starttime="20211016 01:29:59.220" endtime="20211016 01:29:59.222"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:29:59.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:29:59.222" endtime="20211016 01:29:59.223"/>
</kw>
<status status="PASS" starttime="20211016 01:29:59.210" endtime="20211016 01:29:59.223"/>
</kw>
<msg timestamp="20211016 01:29:59.223" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:29:59.209" endtime="20211016 01:29:59.223"/>
</kw>
<msg timestamp="20211016 01:29:59.224" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211016 01:29:59.209" endtime="20211016 01:29:59.224"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211016 01:29:59.227" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211016 01:29:59.224" endtime="20211016 01:29:59.227"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:29:59.234" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:29:59.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:29:59.413" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:29:59.231" endtime="20211016 01:29:59.413"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:29:59.415" level="INFO"/>
<status status="PASS" starttime="20211016 01:29:59.414" endtime="20211016 01:29:59.415"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:29:59.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:29:59.415" endtime="20211016 01:29:59.416"/>
</kw>
<status status="PASS" starttime="20211016 01:29:59.230" endtime="20211016 01:29:59.416"/>
</kw>
<msg timestamp="20211016 01:29:59.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:29:59.230" endtime="20211016 01:29:59.417"/>
</kw>
<status status="PASS" starttime="20211016 01:29:59.228" endtime="20211016 01:29:59.417"/>
</kw>
<status status="PASS" starttime="20211016 01:29:59.227" endtime="20211016 01:29:59.417"/>
</kw>
<status status="PASS" starttime="20211016 01:29:59.208" endtime="20211016 01:29:59.418"/>
</kw>
<status status="PASS" starttime="20211016 01:29:59.208" endtime="20211016 01:29:59.418"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:29:59.422" level="INFO">Running command 'ozone sh volume info o3://om:9862/75405-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:30:07.370" level="INFO">${rc} = 255</msg>
<msg timestamp="20211016 01:30:07.370" level="INFO">${output} = VOLUME_NOT_FOUND Volume 75405-rpcwoport is not found</msg>
<status status="PASS" starttime="20211016 01:29:59.420" endtime="20211016 01:30:07.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:30:07.371" level="INFO">VOLUME_NOT_FOUND Volume 75405-rpcwoport is not found</msg>
<status status="PASS" starttime="20211016 01:30:07.370" endtime="20211016 01:30:07.371"/>
</kw>
<msg timestamp="20211016 01:30:07.372" level="INFO">${result} = VOLUME_NOT_FOUND Volume 75405-rpcwoport is not found</msg>
<status status="PASS" starttime="20211016 01:29:59.419" endtime="20211016 01:30:07.372"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 01:30:07.372" endtime="20211016 01:30:07.372"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:30:07.378" level="INFO">Running command 'ozone sh volume create o3://om:9862/75405-rpcwoport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:30:15.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:30:15.506" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:30:07.374" endtime="20211016 01:30:15.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:30:15.508" level="INFO"/>
<status status="PASS" starttime="20211016 01:30:15.507" endtime="20211016 01:30:15.508"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:30:15.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:30:15.508" endtime="20211016 01:30:15.510"/>
</kw>
<status status="PASS" starttime="20211016 01:30:07.374" endtime="20211016 01:30:15.510"/>
</kw>
<msg timestamp="20211016 01:30:15.510" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:30:07.373" endtime="20211016 01:30:15.510"/>
</kw>
<msg timestamp="20211016 01:30:15.511" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211016 01:30:07.373" endtime="20211016 01:30:15.511"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 01:30:15.511" endtime="20211016 01:30:15.512"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:30:15.517" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '.[] | select(.name=="75405-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:30:23.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:30:23.305" level="INFO">${output} = {
  "metadata": {},
  "name": "75405-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211016 01:30:15.515" endtime="20211016 01:30:23.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:30:23.307" level="INFO">{
  "metadata": {},
  "name": "75405-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-16T01:30:15.362Z",
  "modificationTime": "2021-10-16T01:30:15.362Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211016 01:30:23.306" endtime="20211016 01:30:23.307"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:30:23.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:30:23.308" endtime="20211016 01:30:23.309"/>
</kw>
<status status="PASS" starttime="20211016 01:30:15.514" endtime="20211016 01:30:23.309"/>
</kw>
<msg timestamp="20211016 01:30:23.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:30:15.514" endtime="20211016 01:30:23.309"/>
</kw>
<msg timestamp="20211016 01:30:23.310" level="INFO">${result} = {
  "metadata": {},
  "name": "75405-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211016 01:30:15.512" endtime="20211016 01:30:23.310"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 01:30:23.310" endtime="20211016 01:30:23.310"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:30:23.315" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="75405-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:30:30.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:30:30.747" level="INFO">${output} = {
  "metadata": {},
  "name": "75405-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211016 01:30:23.312" endtime="20211016 01:30:30.747"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:30:30.749" level="INFO">{
  "metadata": {},
  "name": "75405-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-16T01:30:15.362Z",
  "modificationTime": "2021-10-16T01:30:15.362Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211016 01:30:30.748" endtime="20211016 01:30:30.749"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:30:30.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:30:30.749" endtime="20211016 01:30:30.750"/>
</kw>
<status status="PASS" starttime="20211016 01:30:23.312" endtime="20211016 01:30:30.750"/>
</kw>
<msg timestamp="20211016 01:30:30.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:30:23.311" endtime="20211016 01:30:30.750"/>
</kw>
<msg timestamp="20211016 01:30:30.762" level="INFO">${result} = {
  "metadata": {},
  "name": "75405-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211016 01:30:23.310" endtime="20211016 01:30:30.763"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 01:30:30.763" endtime="20211016 01:30:30.764"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:30:30.770" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/75405-rpcwoport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:30:39.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:30:39.115" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:30:30.767" endtime="20211016 01:30:39.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:30:39.116" level="INFO"/>
<status status="PASS" starttime="20211016 01:30:39.115" endtime="20211016 01:30:39.116"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:30:39.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:30:39.116" endtime="20211016 01:30:39.117"/>
</kw>
<status status="PASS" starttime="20211016 01:30:30.766" endtime="20211016 01:30:39.118"/>
</kw>
<msg timestamp="20211016 01:30:39.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:30:30.766" endtime="20211016 01:30:39.119"/>
</kw>
<status status="PASS" starttime="20211016 01:30:30.764" endtime="20211016 01:30:39.119"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:30:39.127" level="INFO">Running command 'ozone sh volume info o3://om:9862/75405-rpcwoport | jq -r '. | select(.name=="75405-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:30:45.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:30:45.684" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211016 01:30:39.124" endtime="20211016 01:30:45.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:30:45.686" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211016 01:30:45.685" endtime="20211016 01:30:45.686"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:30:45.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:30:45.686" endtime="20211016 01:30:45.687"/>
</kw>
<status status="PASS" starttime="20211016 01:30:39.123" endtime="20211016 01:30:45.687"/>
</kw>
<msg timestamp="20211016 01:30:45.688" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:30:39.122" endtime="20211016 01:30:45.688"/>
</kw>
<msg timestamp="20211016 01:30:45.688" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211016 01:30:39.119" endtime="20211016 01:30:45.688"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211016 01:30:45.688" endtime="20211016 01:30:45.689"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:30:45.696" level="INFO">Running command 'ozone sh bucket create o3://om:9862/75405-rpcwoport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:30:53.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:30:53.649" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:30:45.693" endtime="20211016 01:30:53.650"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:30:53.651" level="INFO"/>
<status status="PASS" starttime="20211016 01:30:53.650" endtime="20211016 01:30:53.652"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:30:53.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:30:53.652" endtime="20211016 01:30:53.653"/>
</kw>
<status status="PASS" starttime="20211016 01:30:45.692" endtime="20211016 01:30:53.653"/>
</kw>
<msg timestamp="20211016 01:30:53.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:30:45.691" endtime="20211016 01:30:53.657"/>
</kw>
<status status="PASS" starttime="20211016 01:30:45.689" endtime="20211016 01:30:53.657"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:30:53.664" level="INFO">Running command 'ozone sh bucket info o3://om:9862/75405-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:31:02.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:31:02.843" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211016 01:30:53.660" endtime="20211016 01:31:02.843"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:31:02.845" level="INFO">DISK</msg>
<status status="PASS" starttime="20211016 01:31:02.844" endtime="20211016 01:31:02.845"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:31:02.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:31:02.845" endtime="20211016 01:31:02.846"/>
</kw>
<status status="PASS" starttime="20211016 01:30:53.659" endtime="20211016 01:31:02.846"/>
</kw>
<msg timestamp="20211016 01:31:02.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:30:53.659" endtime="20211016 01:31:02.847"/>
</kw>
<msg timestamp="20211016 01:31:02.847" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211016 01:30:53.658" endtime="20211016 01:31:02.847"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211016 01:31:02.847" endtime="20211016 01:31:02.848"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:31:02.855" level="INFO">Running command 'ozone sh bucket info o3://om:9862/75405-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:31:11.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:31:11.305" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211016 01:31:02.851" endtime="20211016 01:31:11.305"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:31:11.308" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211016 01:31:11.306" endtime="20211016 01:31:11.308"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:31:11.310" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:31:11.309" endtime="20211016 01:31:11.310"/>
</kw>
<status status="PASS" starttime="20211016 01:31:02.849" endtime="20211016 01:31:11.311"/>
</kw>
<msg timestamp="20211016 01:31:11.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:31:02.849" endtime="20211016 01:31:11.312"/>
</kw>
<msg timestamp="20211016 01:31:11.312" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211016 01:31:02.848" endtime="20211016 01:31:11.313"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211016 01:31:11.313" endtime="20211016 01:31:11.314"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:31:11.323" level="INFO">Running command 'ozone sh bucket info o3://om:9862/75405-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:31:19.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:31:19.651" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211016 01:31:11.317" endtime="20211016 01:31:19.651"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:31:19.655" level="INFO">100</msg>
<status status="PASS" starttime="20211016 01:31:19.653" endtime="20211016 01:31:19.655"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:31:19.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:31:19.656" endtime="20211016 01:31:19.657"/>
</kw>
<status status="PASS" starttime="20211016 01:31:11.317" endtime="20211016 01:31:19.657"/>
</kw>
<msg timestamp="20211016 01:31:19.658" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:31:11.316" endtime="20211016 01:31:19.658"/>
</kw>
<msg timestamp="20211016 01:31:19.659" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211016 01:31:11.314" endtime="20211016 01:31:19.659"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211016 01:31:19.660" endtime="20211016 01:31:19.661"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:31:19.670" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/75405-rpcwoport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:31:27.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:31:27.189" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:31:19.667" endtime="20211016 01:31:27.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:31:27.191" level="INFO"/>
<status status="PASS" starttime="20211016 01:31:27.190" endtime="20211016 01:31:27.191"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:31:27.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:31:27.191" endtime="20211016 01:31:27.192"/>
</kw>
<status status="PASS" starttime="20211016 01:31:19.665" endtime="20211016 01:31:27.193"/>
</kw>
<msg timestamp="20211016 01:31:27.193" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:31:19.664" endtime="20211016 01:31:27.193"/>
</kw>
<status status="PASS" starttime="20211016 01:31:19.662" endtime="20211016 01:31:27.193"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:31:27.200" level="INFO">Running command 'ozone sh bucket info o3://om:9862/75405-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:31:35.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:31:35.967" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211016 01:31:27.197" endtime="20211016 01:31:35.967"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:31:35.970" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211016 01:31:35.968" endtime="20211016 01:31:35.970"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:31:35.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:31:35.970" endtime="20211016 01:31:35.971"/>
</kw>
<status status="PASS" starttime="20211016 01:31:27.195" endtime="20211016 01:31:35.972"/>
</kw>
<msg timestamp="20211016 01:31:35.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:31:27.194" endtime="20211016 01:31:35.972"/>
</kw>
<msg timestamp="20211016 01:31:35.972" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211016 01:31:27.193" endtime="20211016 01:31:35.972"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211016 01:31:35.972" endtime="20211016 01:31:35.973"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:31:35.979" level="INFO">Running command 'ozone sh bucket info o3://om:9862/75405-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:31:44.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:31:44.585" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211016 01:31:35.976" endtime="20211016 01:31:44.585"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:31:44.586" level="INFO">1000</msg>
<status status="PASS" starttime="20211016 01:31:44.586" endtime="20211016 01:31:44.587"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:31:44.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:31:44.587" endtime="20211016 01:31:44.588"/>
</kw>
<status status="PASS" starttime="20211016 01:31:35.975" endtime="20211016 01:31:44.588"/>
</kw>
<msg timestamp="20211016 01:31:44.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:31:35.975" endtime="20211016 01:31:44.588"/>
</kw>
<msg timestamp="20211016 01:31:44.588" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211016 01:31:35.973" endtime="20211016 01:31:44.589"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211016 01:31:44.589" endtime="20211016 01:31:44.590"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:31:44.596" level="INFO">Running command 'ozone sh bucket list o3://om:9862/75405-rpcwoport/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:31:53.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:31:53.133" level="INFO">${output} = 75405-rpcwoport</msg>
<status status="PASS" starttime="20211016 01:31:44.593" endtime="20211016 01:31:53.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:31:53.135" level="INFO">75405-rpcwoport</msg>
<status status="PASS" starttime="20211016 01:31:53.133" endtime="20211016 01:31:53.135"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:31:53.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:31:53.135" endtime="20211016 01:31:53.136"/>
</kw>
<status status="PASS" starttime="20211016 01:31:44.592" endtime="20211016 01:31:53.136"/>
</kw>
<msg timestamp="20211016 01:31:53.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:31:44.592" endtime="20211016 01:31:53.137"/>
</kw>
<msg timestamp="20211016 01:31:53.137" level="INFO">${result} = 75405-rpcwoport</msg>
<status status="PASS" starttime="20211016 01:31:44.590" endtime="20211016 01:31:53.138"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211016 01:31:53.138" endtime="20211016 01:31:53.139"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:31:53.145" level="INFO">Running command 'ozone sh key put o3://om:9862/75405-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:34:59.208" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211016 01:31:53.143" endtime="20211016 01:34:59.208"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211016 01:34:59.209" endtime="20211016 01:34:59.209"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211016 01:34:59.209" endtime="20211016 01:34:59.209"/>
</kw>
<status status="FAIL" starttime="20211016 01:31:53.142" endtime="20211016 01:34:59.210"/>
</kw>
<msg timestamp="20211016 01:34:59.210" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211016 01:31:53.141" endtime="20211016 01:34:59.210"/>
</kw>
<status status="FAIL" starttime="20211016 01:31:53.140" endtime="20211016 01:34:59.210"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211016 01:34:59.210" endtime="20211016 01:34:59.210"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211016 01:34:59.210" endtime="20211016 01:34:59.211"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211016 01:34:59.211" endtime="20211016 01:34:59.211"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211016 01:34:59.211" endtime="20211016 01:34:59.211"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211016 01:34:59.211" endtime="20211016 01:34:59.211"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211016 01:34:59.211" endtime="20211016 01:34:59.211"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211016 01:34:59.211" endtime="20211016 01:34:59.211"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211016 01:34:59.212" endtime="20211016 01:34:59.214"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211016 01:34:59.214" endtime="20211016 01:34:59.214"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211016 01:34:59.214" endtime="20211016 01:34:59.214"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211016 01:34:59.214" endtime="20211016 01:34:59.214"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211016 01:34:59.214" endtime="20211016 01:34:59.215"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211016 01:34:59.215" endtime="20211016 01:34:59.215"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211016 01:34:59.215" endtime="20211016 01:34:59.215"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211016 01:34:59.215" endtime="20211016 01:34:59.215"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211016 01:34:59.216" endtime="20211016 01:34:59.216"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211016 01:34:59.216" endtime="20211016 01:34:59.216"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211016 01:34:59.216" endtime="20211016 01:34:59.216"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211016 01:34:59.216" endtime="20211016 01:34:59.216"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211016 01:34:59.216" endtime="20211016 01:34:59.216"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211016 01:34:59.216" endtime="20211016 01:34:59.217"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211016 01:34:59.217" endtime="20211016 01:34:59.217"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211016 01:34:59.217" endtime="20211016 01:34:59.217"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211016 01:34:59.218" endtime="20211016 01:34:59.218"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211016 01:34:59.218" endtime="20211016 01:34:59.218"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211016 01:34:59.218" endtime="20211016 01:34:59.218"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211016 01:34:59.218" endtime="20211016 01:34:59.219"/>
</kw>
<status status="FAIL" starttime="20211016 01:31:53.139" endtime="20211016 01:34:59.219"/>
</kw>
<status status="FAIL" starttime="20211016 01:31:53.139" endtime="20211016 01:34:59.219"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211016 01:34:59.219" endtime="20211016 01:34:59.219"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211016 01:34:59.219" endtime="20211016 01:34:59.219"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211016 01:34:59.219" endtime="20211016 01:34:59.220"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211016 01:34:59.220" endtime="20211016 01:34:59.220"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211016 01:34:59.220" endtime="20211016 01:34:59.220"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211016 01:34:59.220" endtime="20211016 01:34:59.220"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211016 01:34:59.220" endtime="20211016 01:34:59.220"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211016 01:34:59.220" endtime="20211016 01:34:59.220"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211016 01:34:59.221" endtime="20211016 01:34:59.221"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211016 01:34:59.221" endtime="20211016 01:34:59.221"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211016 01:34:59.221" endtime="20211016 01:34:59.221"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211016 01:34:59.221" endtime="20211016 01:34:59.221"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211016 01:34:59.221" endtime="20211016 01:34:59.221"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211016 01:34:59.222" endtime="20211016 01:34:59.222"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211016 01:34:59.222" endtime="20211016 01:34:59.222"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211016 01:34:59.222" endtime="20211016 01:34:59.222"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211016 01:34:59.222" endtime="20211016 01:34:59.222"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211016 01:34:59.222" endtime="20211016 01:34:59.222"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211016 01:34:59.223" endtime="20211016 01:34:59.223"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211016 01:34:59.223" endtime="20211016 01:34:59.223"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211016 01:34:59.223" endtime="20211016 01:34:59.223"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211016 01:34:59.223" endtime="20211016 01:34:59.223"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211016 01:34:59.223" endtime="20211016 01:34:59.224"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211016 01:34:59.224" endtime="20211016 01:34:59.224"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211016 01:34:59.224" endtime="20211016 01:34:59.224"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211016 01:34:59.224" endtime="20211016 01:34:59.224"/>
</kw>
<status status="FAIL" starttime="20211016 01:29:59.418" endtime="20211016 01:34:59.225"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211016 01:29:59.207" endtime="20211016 01:34:59.225">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:34:59.237" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:34:59.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:34:59.242" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211016 01:34:59.234" endtime="20211016 01:34:59.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:34:59.245" level="INFO">scm</msg>
<status status="PASS" starttime="20211016 01:34:59.243" endtime="20211016 01:34:59.245"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:34:59.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:34:59.245" endtime="20211016 01:34:59.245"/>
</kw>
<status status="PASS" starttime="20211016 01:34:59.232" endtime="20211016 01:34:59.246"/>
</kw>
<msg timestamp="20211016 01:34:59.246" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:34:59.232" endtime="20211016 01:34:59.246"/>
</kw>
<msg timestamp="20211016 01:34:59.246" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211016 01:34:59.231" endtime="20211016 01:34:59.246"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211016 01:34:59.247" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211016 01:34:59.247" endtime="20211016 01:34:59.247"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:34:59.267" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:34:59.277" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:34:59.277" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:34:59.251" endtime="20211016 01:34:59.277"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:34:59.279" level="INFO"/>
<status status="PASS" starttime="20211016 01:34:59.278" endtime="20211016 01:34:59.279"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:34:59.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:34:59.279" endtime="20211016 01:34:59.280"/>
</kw>
<status status="PASS" starttime="20211016 01:34:59.250" endtime="20211016 01:34:59.280"/>
</kw>
<msg timestamp="20211016 01:34:59.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:34:59.249" endtime="20211016 01:34:59.280"/>
</kw>
<status status="PASS" starttime="20211016 01:34:59.248" endtime="20211016 01:34:59.281"/>
</kw>
<status status="PASS" starttime="20211016 01:34:59.247" endtime="20211016 01:34:59.281"/>
</kw>
<status status="PASS" starttime="20211016 01:34:59.230" endtime="20211016 01:34:59.281"/>
</kw>
<status status="PASS" starttime="20211016 01:34:59.229" endtime="20211016 01:34:59.281"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:34:59.286" level="INFO">Running command 'ozone sh volume create o3://om:9862/75405-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:35:04.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:35:04.716" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:34:59.284" endtime="20211016 01:35:04.716"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:35:04.718" level="INFO"/>
<status status="PASS" starttime="20211016 01:35:04.717" endtime="20211016 01:35:04.718"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:35:04.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:35:04.718" endtime="20211016 01:35:04.719"/>
</kw>
<status status="PASS" starttime="20211016 01:34:59.283" endtime="20211016 01:35:04.719"/>
</kw>
<msg timestamp="20211016 01:35:04.719" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:34:59.283" endtime="20211016 01:35:04.719"/>
</kw>
<status status="PASS" starttime="20211016 01:34:59.282" endtime="20211016 01:35:04.720"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:35:04.725" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/75405-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:35:13.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:35:13.324" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211016 01:35:04.722" endtime="20211016 01:35:13.324"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:35:13.326" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211016 01:35:13.325" endtime="20211016 01:35:13.327"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:35:13.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:35:13.327" endtime="20211016 01:35:13.329"/>
</kw>
<status status="PASS" starttime="20211016 01:35:04.721" endtime="20211016 01:35:13.329"/>
</kw>
<msg timestamp="20211016 01:35:13.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:35:04.721" endtime="20211016 01:35:13.330"/>
</kw>
<msg timestamp="20211016 01:35:13.331" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211016 01:35:04.720" endtime="20211016 01:35:13.331"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211016 01:35:13.331" endtime="20211016 01:35:13.333"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:35:13.342" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/75405-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:35:20.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:35:20.054" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211016 01:35:13.339" endtime="20211016 01:35:20.054"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:35:20.056" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211016 01:35:20.055" endtime="20211016 01:35:20.056"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:35:20.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:35:20.056" endtime="20211016 01:35:20.057"/>
</kw>
<status status="PASS" starttime="20211016 01:35:13.337" endtime="20211016 01:35:20.057"/>
</kw>
<msg timestamp="20211016 01:35:20.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:35:13.336" endtime="20211016 01:35:20.058"/>
</kw>
<msg timestamp="20211016 01:35:20.058" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211016 01:35:13.334" endtime="20211016 01:35:20.058"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:35:20.064" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/75405-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:35:28.122" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:35:28.122" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211016 01:35:20.062" endtime="20211016 01:35:28.122"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:35:28.124" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211016 01:35:28.122" endtime="20211016 01:35:28.124"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:35:28.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:35:28.125" endtime="20211016 01:35:28.126"/>
</kw>
<status status="PASS" starttime="20211016 01:35:20.061" endtime="20211016 01:35:28.127"/>
</kw>
<msg timestamp="20211016 01:35:28.127" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:35:20.060" endtime="20211016 01:35:28.127"/>
</kw>
<msg timestamp="20211016 01:35:28.127" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211016 01:35:20.058" endtime="20211016 01:35:28.127"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211016 01:35:28.128" endtime="20211016 01:35:28.130"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:35:28.135" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/75405-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:35:36.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:35:36.078" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211016 01:35:28.133" endtime="20211016 01:35:36.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:35:36.081" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211016 01:35:36.078" endtime="20211016 01:35:36.082"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:35:36.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:35:36.082" endtime="20211016 01:35:36.084"/>
</kw>
<status status="PASS" starttime="20211016 01:35:28.132" endtime="20211016 01:35:36.086"/>
</kw>
<msg timestamp="20211016 01:35:36.086" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:35:28.131" endtime="20211016 01:35:36.086"/>
</kw>
<msg timestamp="20211016 01:35:36.087" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211016 01:35:28.130" endtime="20211016 01:35:36.087"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:35:36.095" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/75405-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:35:44.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:35:44.238" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211016 01:35:36.091" endtime="20211016 01:35:44.238"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:35:44.242" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211016 01:35:44.240" endtime="20211016 01:35:44.242"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:35:44.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:35:44.242" endtime="20211016 01:35:44.244"/>
</kw>
<status status="PASS" starttime="20211016 01:35:36.090" endtime="20211016 01:35:44.245"/>
</kw>
<msg timestamp="20211016 01:35:44.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:35:36.090" endtime="20211016 01:35:44.245"/>
</kw>
<msg timestamp="20211016 01:35:44.246" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211016 01:35:36.088" endtime="20211016 01:35:44.246"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211016 01:35:44.247" endtime="20211016 01:35:44.249"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:35:44.259" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/75405-rpcwoport2 -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:35:52.621" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:35:52.621" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211016 01:35:44.255" endtime="20211016 01:35:52.621"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:35:52.627" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211016 01:35:52.622" endtime="20211016 01:35:52.627"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:35:52.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:35:52.627" endtime="20211016 01:35:52.628"/>
</kw>
<status status="PASS" starttime="20211016 01:35:44.253" endtime="20211016 01:35:52.628"/>
</kw>
<msg timestamp="20211016 01:35:52.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:35:44.251" endtime="20211016 01:35:52.628"/>
</kw>
<msg timestamp="20211016 01:35:52.629" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211016 01:35:44.250" endtime="20211016 01:35:52.629"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:35:52.633" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/75405-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:36:01.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:36:01.654" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211016 01:35:52.631" endtime="20211016 01:36:01.655"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:36:01.657" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211016 01:36:01.655" endtime="20211016 01:36:01.657"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:36:01.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:36:01.657" endtime="20211016 01:36:01.658"/>
</kw>
<status status="PASS" starttime="20211016 01:35:52.630" endtime="20211016 01:36:01.659"/>
</kw>
<msg timestamp="20211016 01:36:01.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:35:52.630" endtime="20211016 01:36:01.659"/>
</kw>
<msg timestamp="20211016 01:36:01.660" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211016 01:35:52.629" endtime="20211016 01:36:01.660"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211016 01:36:01.661" endtime="20211016 01:36:01.662"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211016 01:36:01.662" endtime="20211016 01:36:01.664"/>
</kw>
<status status="PASS" starttime="20211016 01:34:59.282" endtime="20211016 01:36:01.664"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211016 01:34:59.227" endtime="20211016 01:36:01.665"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:36:01.676" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:36:01.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:36:01.685" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211016 01:36:01.672" endtime="20211016 01:36:01.685"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:36:01.690" level="INFO">scm</msg>
<status status="PASS" starttime="20211016 01:36:01.685" endtime="20211016 01:36:01.690"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:36:01.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:36:01.690" endtime="20211016 01:36:01.691"/>
</kw>
<status status="PASS" starttime="20211016 01:36:01.671" endtime="20211016 01:36:01.691"/>
</kw>
<msg timestamp="20211016 01:36:01.691" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:36:01.670" endtime="20211016 01:36:01.691"/>
</kw>
<msg timestamp="20211016 01:36:01.693" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211016 01:36:01.670" endtime="20211016 01:36:01.693"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211016 01:36:01.694" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211016 01:36:01.694" endtime="20211016 01:36:01.695"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:36:01.701" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:36:01.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:36:01.907" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:36:01.698" endtime="20211016 01:36:01.907"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:36:01.908" level="INFO"/>
<status status="PASS" starttime="20211016 01:36:01.907" endtime="20211016 01:36:01.908"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:36:01.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:36:01.908" endtime="20211016 01:36:01.909"/>
</kw>
<status status="PASS" starttime="20211016 01:36:01.697" endtime="20211016 01:36:01.909"/>
</kw>
<msg timestamp="20211016 01:36:01.910" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:36:01.697" endtime="20211016 01:36:01.910"/>
</kw>
<status status="PASS" starttime="20211016 01:36:01.696" endtime="20211016 01:36:01.910"/>
</kw>
<status status="PASS" starttime="20211016 01:36:01.695" endtime="20211016 01:36:01.910"/>
</kw>
<status status="PASS" starttime="20211016 01:36:01.669" endtime="20211016 01:36:01.911"/>
</kw>
<status status="PASS" starttime="20211016 01:36:01.668" endtime="20211016 01:36:01.911"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:36:01.920" level="INFO">Running command 'ozone sh bucket create o3://om:9862/75405-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:36:07.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:36:07.618" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:36:01.915" endtime="20211016 01:36:07.618"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:36:07.620" level="INFO"/>
<status status="PASS" starttime="20211016 01:36:07.619" endtime="20211016 01:36:07.620"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:36:07.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:36:07.621" endtime="20211016 01:36:07.623"/>
</kw>
<status status="PASS" starttime="20211016 01:36:01.913" endtime="20211016 01:36:07.623"/>
</kw>
<msg timestamp="20211016 01:36:07.624" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:36:01.912" endtime="20211016 01:36:07.624"/>
</kw>
<status status="PASS" starttime="20211016 01:36:01.912" endtime="20211016 01:36:07.624"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:36:07.630" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/75405-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:36:13.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:36:13.562" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211016 01:36:07.627" endtime="20211016 01:36:13.562"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:36:13.564" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211016 01:36:13.563" endtime="20211016 01:36:13.564"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:36:13.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:36:13.564" endtime="20211016 01:36:13.565"/>
</kw>
<status status="PASS" starttime="20211016 01:36:07.626" endtime="20211016 01:36:13.565"/>
</kw>
<msg timestamp="20211016 01:36:13.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:36:07.625" endtime="20211016 01:36:13.566"/>
</kw>
<msg timestamp="20211016 01:36:13.566" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211016 01:36:07.624" endtime="20211016 01:36:13.566"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211016 01:36:13.566" endtime="20211016 01:36:13.567"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:36:13.572" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/75405-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:36:21.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:36:21.450" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20211016 01:36:13.569" endtime="20211016 01:36:21.450"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:36:21.451" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20211016 01:36:21.450" endtime="20211016 01:36:21.451"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:36:21.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:36:21.451" endtime="20211016 01:36:21.452"/>
</kw>
<status status="PASS" starttime="20211016 01:36:13.568" endtime="20211016 01:36:21.452"/>
</kw>
<msg timestamp="20211016 01:36:21.452" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:36:13.568" endtime="20211016 01:36:21.452"/>
</kw>
<msg timestamp="20211016 01:36:21.453" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20211016 01:36:13.567" endtime="20211016 01:36:21.454"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:36:21.464" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/75405-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:36:29.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:36:29.969" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211016 01:36:21.460" endtime="20211016 01:36:29.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:36:29.971" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211016 01:36:29.970" endtime="20211016 01:36:29.971"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:36:29.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:36:29.972" endtime="20211016 01:36:29.973"/>
</kw>
<status status="PASS" starttime="20211016 01:36:21.457" endtime="20211016 01:36:29.974"/>
</kw>
<msg timestamp="20211016 01:36:29.974" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:36:21.456" endtime="20211016 01:36:29.975"/>
</kw>
<msg timestamp="20211016 01:36:29.975" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211016 01:36:21.454" endtime="20211016 01:36:29.976"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211016 01:36:29.976" endtime="20211016 01:36:29.979"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:36:29.989" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/75405-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:36:37.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:36:37.902" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211016 01:36:29.984" endtime="20211016 01:36:37.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:36:37.904" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211016 01:36:37.903" endtime="20211016 01:36:37.904"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:36:37.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:36:37.904" endtime="20211016 01:36:37.905"/>
</kw>
<status status="PASS" starttime="20211016 01:36:29.982" endtime="20211016 01:36:37.905"/>
</kw>
<msg timestamp="20211016 01:36:37.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:36:29.981" endtime="20211016 01:36:37.905"/>
</kw>
<msg timestamp="20211016 01:36:37.906" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211016 01:36:29.980" endtime="20211016 01:36:37.906"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:36:37.911" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/75405-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:36:45.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:36:45.218" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211016 01:36:37.908" endtime="20211016 01:36:45.219"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:36:45.220" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211016 01:36:45.219" endtime="20211016 01:36:45.220"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:36:45.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:36:45.220" endtime="20211016 01:36:45.221"/>
</kw>
<status status="PASS" starttime="20211016 01:36:37.907" endtime="20211016 01:36:45.221"/>
</kw>
<msg timestamp="20211016 01:36:45.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:36:37.907" endtime="20211016 01:36:45.222"/>
</kw>
<msg timestamp="20211016 01:36:45.222" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211016 01:36:37.906" endtime="20211016 01:36:45.222"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211016 01:36:45.222" endtime="20211016 01:36:45.223"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:36:45.227" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/75405-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:36:52.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:36:52.709" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211016 01:36:45.225" endtime="20211016 01:36:52.709"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:36:52.711" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211016 01:36:52.710" endtime="20211016 01:36:52.711"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:36:52.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:36:52.711" endtime="20211016 01:36:52.712"/>
</kw>
<status status="PASS" starttime="20211016 01:36:45.225" endtime="20211016 01:36:52.712"/>
</kw>
<msg timestamp="20211016 01:36:52.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:36:45.224" endtime="20211016 01:36:52.712"/>
</kw>
<msg timestamp="20211016 01:36:52.713" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211016 01:36:45.223" endtime="20211016 01:36:52.713"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:36:52.719" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/75405-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:36:59.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:36:59.954" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211016 01:36:52.715" endtime="20211016 01:36:59.954"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:36:59.956" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211016 01:36:59.955" endtime="20211016 01:36:59.956"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:36:59.957" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:36:59.957" endtime="20211016 01:36:59.958"/>
</kw>
<status status="PASS" starttime="20211016 01:36:52.714" endtime="20211016 01:36:59.958"/>
</kw>
<msg timestamp="20211016 01:36:59.958" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:36:52.714" endtime="20211016 01:36:59.958"/>
</kw>
<msg timestamp="20211016 01:36:59.958" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211016 01:36:52.713" endtime="20211016 01:36:59.958"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211016 01:36:59.959" endtime="20211016 01:36:59.959"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211016 01:36:59.959" endtime="20211016 01:36:59.960"/>
</kw>
<status status="PASS" starttime="20211016 01:36:01.911" endtime="20211016 01:36:59.960"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211016 01:36:01.666" endtime="20211016 01:36:59.961"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:36:59.972" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:36:59.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:36:59.975" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211016 01:36:59.967" endtime="20211016 01:36:59.976"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:36:59.978" level="INFO">scm</msg>
<status status="PASS" starttime="20211016 01:36:59.976" endtime="20211016 01:36:59.978"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:36:59.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:36:59.978" endtime="20211016 01:36:59.979"/>
</kw>
<status status="PASS" starttime="20211016 01:36:59.966" endtime="20211016 01:36:59.979"/>
</kw>
<msg timestamp="20211016 01:36:59.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:36:59.966" endtime="20211016 01:36:59.980"/>
</kw>
<msg timestamp="20211016 01:36:59.980" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211016 01:36:59.966" endtime="20211016 01:36:59.980"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211016 01:36:59.981" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211016 01:36:59.980" endtime="20211016 01:36:59.981"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:36:59.988" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:36:59.998" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:36:59.998" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:36:59.985" endtime="20211016 01:36:59.998"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:36:59.999" level="INFO"/>
<status status="PASS" starttime="20211016 01:36:59.999" endtime="20211016 01:37:00.000"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:37:00.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:37:00.000" endtime="20211016 01:37:00.009"/>
</kw>
<status status="PASS" starttime="20211016 01:36:59.984" endtime="20211016 01:37:00.010"/>
</kw>
<msg timestamp="20211016 01:37:00.010" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:36:59.983" endtime="20211016 01:37:00.010"/>
</kw>
<status status="PASS" starttime="20211016 01:36:59.982" endtime="20211016 01:37:00.010"/>
</kw>
<status status="PASS" starttime="20211016 01:36:59.982" endtime="20211016 01:37:00.011"/>
</kw>
<status status="PASS" starttime="20211016 01:36:59.965" endtime="20211016 01:37:00.011"/>
</kw>
<status status="PASS" starttime="20211016 01:36:59.964" endtime="20211016 01:37:00.011"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:37:00.020" level="INFO">Running command 'ozone sh key put o3://om:9862/75405-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:40:10.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:40:10.584" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:37:00.017" endtime="20211016 01:40:10.584"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:40:10.586" level="INFO"/>
<status status="PASS" starttime="20211016 01:40:10.584" endtime="20211016 01:40:10.586"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:40:10.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:40:10.586" endtime="20211016 01:40:10.587"/>
</kw>
<status status="PASS" starttime="20211016 01:37:00.016" endtime="20211016 01:40:10.587"/>
</kw>
<msg timestamp="20211016 01:40:10.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:37:00.016" endtime="20211016 01:40:10.587"/>
</kw>
<status status="PASS" starttime="20211016 01:37:00.015" endtime="20211016 01:40:10.588"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:40:10.593" level="INFO">Running command 'ozone sh key getacl o3://om:9862/75405-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:40:16.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:40:16.618" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211016 01:40:10.590" endtime="20211016 01:40:16.618"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:40:16.621" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211016 01:40:16.619" endtime="20211016 01:40:16.621"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:40:16.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:40:16.621" endtime="20211016 01:40:16.623"/>
</kw>
<status status="PASS" starttime="20211016 01:40:10.589" endtime="20211016 01:40:16.623"/>
</kw>
<msg timestamp="20211016 01:40:16.624" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:40:10.589" endtime="20211016 01:40:16.624"/>
</kw>
<msg timestamp="20211016 01:40:16.624" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211016 01:40:10.588" endtime="20211016 01:40:16.624"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211016 01:40:16.625" endtime="20211016 01:40:16.626"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:40:16.632" level="INFO">Running command 'ozone sh key addacl o3://om:9862/75405-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:40:24.729" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:40:24.729" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211016 01:40:16.629" endtime="20211016 01:40:24.730"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:40:24.733" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211016 01:40:24.731" endtime="20211016 01:40:24.733"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:40:24.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:40:24.734" endtime="20211016 01:40:24.735"/>
</kw>
<status status="PASS" starttime="20211016 01:40:16.628" endtime="20211016 01:40:24.736"/>
</kw>
<msg timestamp="20211016 01:40:24.736" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:40:16.628" endtime="20211016 01:40:24.737"/>
</kw>
<msg timestamp="20211016 01:40:24.738" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211016 01:40:16.626" endtime="20211016 01:40:24.738"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:40:24.745" level="INFO">Running command 'ozone sh key getacl o3://om:9862/75405-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:40:33.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:40:33.123" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211016 01:40:24.742" endtime="20211016 01:40:33.123"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:40:33.126" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211016 01:40:33.125" endtime="20211016 01:40:33.126"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:40:33.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:40:33.126" endtime="20211016 01:40:33.127"/>
</kw>
<status status="PASS" starttime="20211016 01:40:24.741" endtime="20211016 01:40:33.127"/>
</kw>
<msg timestamp="20211016 01:40:33.127" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:40:24.740" endtime="20211016 01:40:33.128"/>
</kw>
<msg timestamp="20211016 01:40:33.128" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211016 01:40:24.739" endtime="20211016 01:40:33.128"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211016 01:40:33.128" endtime="20211016 01:40:33.130"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:40:33.136" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/75405-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:40:41.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:40:41.193" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211016 01:40:33.133" endtime="20211016 01:40:41.193"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:40:41.195" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211016 01:40:41.194" endtime="20211016 01:40:41.196"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:40:41.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:40:41.196" endtime="20211016 01:40:41.197"/>
</kw>
<status status="PASS" starttime="20211016 01:40:33.133" endtime="20211016 01:40:41.197"/>
</kw>
<msg timestamp="20211016 01:40:41.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:40:33.132" endtime="20211016 01:40:41.197"/>
</kw>
<msg timestamp="20211016 01:40:41.198" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211016 01:40:33.131" endtime="20211016 01:40:41.198"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:40:41.204" level="INFO">Running command 'ozone sh key getacl o3://om:9862/75405-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:40:49.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:40:49.449" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211016 01:40:41.201" endtime="20211016 01:40:49.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:40:49.451" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20211016 01:40:49.450" endtime="20211016 01:40:49.451"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:40:49.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:40:49.451" endtime="20211016 01:40:49.453"/>
</kw>
<status status="PASS" starttime="20211016 01:40:41.200" endtime="20211016 01:40:49.453"/>
</kw>
<msg timestamp="20211016 01:40:49.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:40:41.199" endtime="20211016 01:40:49.454"/>
</kw>
<msg timestamp="20211016 01:40:49.454" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211016 01:40:41.198" endtime="20211016 01:40:49.455"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211016 01:40:49.455" endtime="20211016 01:40:49.456"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:40:49.463" level="INFO">Running command 'ozone sh key setacl o3://om:9862/75405-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:40:57.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:40:57.240" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211016 01:40:49.460" endtime="20211016 01:40:57.240"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:40:57.242" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211016 01:40:57.241" endtime="20211016 01:40:57.242"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:40:57.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:40:57.242" endtime="20211016 01:40:57.243"/>
</kw>
<status status="PASS" starttime="20211016 01:40:49.459" endtime="20211016 01:40:57.243"/>
</kw>
<msg timestamp="20211016 01:40:57.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:40:49.458" endtime="20211016 01:40:57.244"/>
</kw>
<msg timestamp="20211016 01:40:57.244" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211016 01:40:49.456" endtime="20211016 01:40:57.244"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:40:57.250" level="INFO">Running command 'ozone sh key getacl o3://om:9862/75405-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:41:05.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:41:05.763" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211016 01:40:57.246" endtime="20211016 01:41:05.763"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:41:05.766" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211016 01:41:05.764" endtime="20211016 01:41:05.766"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:41:05.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:41:05.766" endtime="20211016 01:41:05.767"/>
</kw>
<status status="PASS" starttime="20211016 01:40:57.245" endtime="20211016 01:41:05.768"/>
</kw>
<msg timestamp="20211016 01:41:05.768" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:40:57.245" endtime="20211016 01:41:05.769"/>
</kw>
<msg timestamp="20211016 01:41:05.769" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211016 01:40:57.244" endtime="20211016 01:41:05.769"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211016 01:41:05.769" endtime="20211016 01:41:05.770"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211016 01:41:05.771" endtime="20211016 01:41:05.772"/>
</kw>
<status status="PASS" starttime="20211016 01:37:00.014" endtime="20211016 01:41:05.772"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211016 01:36:59.963" endtime="20211016 01:41:05.773"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient prefix acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:41:05.784" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:41:05.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:41:05.791" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211016 01:41:05.781" endtime="20211016 01:41:05.791"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:41:05.794" level="INFO">scm</msg>
<status status="PASS" starttime="20211016 01:41:05.792" endtime="20211016 01:41:05.794"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:41:05.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:41:05.794" endtime="20211016 01:41:05.795"/>
</kw>
<status status="PASS" starttime="20211016 01:41:05.780" endtime="20211016 01:41:05.796"/>
</kw>
<msg timestamp="20211016 01:41:05.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:41:05.779" endtime="20211016 01:41:05.796"/>
</kw>
<msg timestamp="20211016 01:41:05.797" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211016 01:41:05.778" endtime="20211016 01:41:05.797"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211016 01:41:05.798" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211016 01:41:05.797" endtime="20211016 01:41:05.798"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:41:05.806" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:41:06.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:41:06.015" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:41:05.804" endtime="20211016 01:41:06.015"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:41:06.017" level="INFO"/>
<status status="PASS" starttime="20211016 01:41:06.016" endtime="20211016 01:41:06.017"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:41:06.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:41:06.017" endtime="20211016 01:41:06.018"/>
</kw>
<status status="PASS" starttime="20211016 01:41:05.802" endtime="20211016 01:41:06.018"/>
</kw>
<msg timestamp="20211016 01:41:06.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:41:05.802" endtime="20211016 01:41:06.019"/>
</kw>
<status status="PASS" starttime="20211016 01:41:05.799" endtime="20211016 01:41:06.019"/>
</kw>
<status status="PASS" starttime="20211016 01:41:05.799" endtime="20211016 01:41:06.019"/>
</kw>
<status status="PASS" starttime="20211016 01:41:05.778" endtime="20211016 01:41:06.019"/>
</kw>
<status status="PASS" starttime="20211016 01:41:05.777" endtime="20211016 01:41:06.020"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:41:06.025" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/75405-rpcwoport2/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:41:13.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:41:13.615" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211016 01:41:06.023" endtime="20211016 01:41:13.615"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:41:13.616" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211016 01:41:13.616" endtime="20211016 01:41:13.617"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:41:13.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:41:13.617" endtime="20211016 01:41:13.618"/>
</kw>
<status status="PASS" starttime="20211016 01:41:06.022" endtime="20211016 01:41:13.618"/>
</kw>
<msg timestamp="20211016 01:41:13.619" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:41:06.022" endtime="20211016 01:41:13.619"/>
</kw>
<status status="PASS" starttime="20211016 01:41:06.021" endtime="20211016 01:41:13.619"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:41:13.628" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/75405-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:41:22.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:41:22.248" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211016 01:41:13.625" endtime="20211016 01:41:22.248"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:41:22.252" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211016 01:41:22.250" endtime="20211016 01:41:22.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:41:22.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:41:22.253" endtime="20211016 01:41:22.254"/>
</kw>
<status status="PASS" starttime="20211016 01:41:13.620" endtime="20211016 01:41:22.256"/>
</kw>
<msg timestamp="20211016 01:41:22.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:41:13.620" endtime="20211016 01:41:22.256"/>
</kw>
<msg timestamp="20211016 01:41:22.257" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211016 01:41:13.619" endtime="20211016 01:41:22.257"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211016 01:41:22.258" endtime="20211016 01:41:22.260"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:41:22.268" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/75405-rpcwoport2/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:41:27.871" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:41:27.871" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20211016 01:41:22.265" endtime="20211016 01:41:27.871"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:41:27.873" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20211016 01:41:27.872" endtime="20211016 01:41:27.873"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:41:27.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:41:27.874" endtime="20211016 01:41:27.875"/>
</kw>
<status status="PASS" starttime="20211016 01:41:22.263" endtime="20211016 01:41:27.876"/>
</kw>
<msg timestamp="20211016 01:41:27.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:41:22.262" endtime="20211016 01:41:27.876"/>
</kw>
<msg timestamp="20211016 01:41:27.877" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20211016 01:41:22.260" endtime="20211016 01:41:27.877"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:41:27.883" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/75405-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:41:36.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:41:36.320" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211016 01:41:27.880" endtime="20211016 01:41:36.320"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:41:36.322" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211016 01:41:36.320" endtime="20211016 01:41:36.322"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:41:36.323" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:41:36.323" endtime="20211016 01:41:36.323"/>
</kw>
<status status="PASS" starttime="20211016 01:41:27.880" endtime="20211016 01:41:36.324"/>
</kw>
<msg timestamp="20211016 01:41:36.324" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:41:27.879" endtime="20211016 01:41:36.324"/>
</kw>
<msg timestamp="20211016 01:41:36.325" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211016 01:41:27.877" endtime="20211016 01:41:36.325"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211016 01:41:36.325" endtime="20211016 01:41:36.327"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:41:36.334" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/75405-rpcwoport2/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:41:41.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:41:41.421" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211016 01:41:36.331" endtime="20211016 01:41:41.421"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:41:41.423" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211016 01:41:41.422" endtime="20211016 01:41:41.423"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:41:41.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:41:41.424" endtime="20211016 01:41:41.425"/>
</kw>
<status status="PASS" starttime="20211016 01:41:36.329" endtime="20211016 01:41:41.426"/>
</kw>
<msg timestamp="20211016 01:41:41.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:41:36.329" endtime="20211016 01:41:41.426"/>
</kw>
<msg timestamp="20211016 01:41:41.427" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211016 01:41:36.327" endtime="20211016 01:41:41.427"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:41:41.434" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/75405-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:41:47.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:41:47.880" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20211016 01:41:41.431" endtime="20211016 01:41:47.880"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:41:47.883" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211016 01:41:47.881" endtime="20211016 01:41:47.884"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:41:47.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:41:47.884" endtime="20211016 01:41:47.886"/>
</kw>
<status status="PASS" starttime="20211016 01:41:41.430" endtime="20211016 01:41:47.887"/>
</kw>
<msg timestamp="20211016 01:41:47.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:41:41.429" endtime="20211016 01:41:47.887"/>
</kw>
<msg timestamp="20211016 01:41:47.888" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20211016 01:41:41.427" endtime="20211016 01:41:47.888"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211016 01:41:47.889" endtime="20211016 01:41:47.890"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211016 01:41:47.890" endtime="20211016 01:41:47.892"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:41:47.901" level="INFO">Running command 'ozone sh key put o3://om:9862/75405-rpcwoport2/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:44:58.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:44:58.626" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:41:47.897" endtime="20211016 01:44:58.626"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:44:58.627" level="INFO"/>
<status status="PASS" starttime="20211016 01:44:58.626" endtime="20211016 01:44:58.627"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:44:58.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:44:58.627" endtime="20211016 01:44:58.628"/>
</kw>
<status status="PASS" starttime="20211016 01:41:47.895" endtime="20211016 01:44:58.628"/>
</kw>
<msg timestamp="20211016 01:44:58.629" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:41:47.894" endtime="20211016 01:44:58.629"/>
</kw>
<status status="PASS" starttime="20211016 01:41:47.892" endtime="20211016 01:44:58.629"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:44:58.635" level="INFO">Running command 'ozone sh key getacl o3://om:9862/75405-rpcwoport2/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:45:06.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:45:06.207" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211016 01:44:58.631" endtime="20211016 01:45:06.207"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:45:06.208" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211016 01:45:06.208" endtime="20211016 01:45:06.209"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:45:06.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:45:06.209" endtime="20211016 01:45:06.211"/>
</kw>
<status status="PASS" starttime="20211016 01:44:58.631" endtime="20211016 01:45:06.211"/>
</kw>
<msg timestamp="20211016 01:45:06.211" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:44:58.630" endtime="20211016 01:45:06.212"/>
</kw>
<msg timestamp="20211016 01:45:06.213" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211016 01:44:58.629" endtime="20211016 01:45:06.213"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211016 01:45:06.214" endtime="20211016 01:45:06.214"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211016 01:45:06.214" endtime="20211016 01:45:06.215"/>
</kw>
<status status="PASS" starttime="20211016 01:41:06.020" endtime="20211016 01:45:06.215"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211016 01:41:05.775" endtime="20211016 01:45:06.216"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:45:06.226" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:45:06.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:45:06.231" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211016 01:45:06.223" endtime="20211016 01:45:06.231"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:45:06.234" level="INFO">scm</msg>
<status status="PASS" starttime="20211016 01:45:06.232" endtime="20211016 01:45:06.234"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:45:06.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:45:06.234" endtime="20211016 01:45:06.235"/>
</kw>
<status status="PASS" starttime="20211016 01:45:06.222" endtime="20211016 01:45:06.236"/>
</kw>
<msg timestamp="20211016 01:45:06.236" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:45:06.221" endtime="20211016 01:45:06.236"/>
</kw>
<msg timestamp="20211016 01:45:06.237" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211016 01:45:06.220" endtime="20211016 01:45:06.237"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211016 01:45:06.238" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211016 01:45:06.237" endtime="20211016 01:45:06.238"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:45:06.243" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:45:06.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:45:06.255" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:45:06.240" endtime="20211016 01:45:06.255"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:45:06.256" level="INFO"/>
<status status="PASS" starttime="20211016 01:45:06.255" endtime="20211016 01:45:06.257"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:45:06.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:45:06.257" endtime="20211016 01:45:06.258"/>
</kw>
<status status="PASS" starttime="20211016 01:45:06.240" endtime="20211016 01:45:06.259"/>
</kw>
<msg timestamp="20211016 01:45:06.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:45:06.239" endtime="20211016 01:45:06.259"/>
</kw>
<status status="PASS" starttime="20211016 01:45:06.238" endtime="20211016 01:45:06.259"/>
</kw>
<status status="PASS" starttime="20211016 01:45:06.238" endtime="20211016 01:45:06.260"/>
</kw>
<status status="PASS" starttime="20211016 01:45:06.219" endtime="20211016 01:45:06.260"/>
</kw>
<status status="PASS" starttime="20211016 01:45:06.218" endtime="20211016 01:45:06.260"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:45:06.266" level="INFO">Running command 'ozone sh volume info o3:///75405-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:45:13.928" level="INFO">${rc} = 255</msg>
<msg timestamp="20211016 01:45:13.928" level="INFO">${output} = VOLUME_NOT_FOUND Volume 75405-rpcwport is not found</msg>
<status status="PASS" starttime="20211016 01:45:06.264" endtime="20211016 01:45:13.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:45:13.930" level="INFO">VOLUME_NOT_FOUND Volume 75405-rpcwport is not found</msg>
<status status="PASS" starttime="20211016 01:45:13.928" endtime="20211016 01:45:13.930"/>
</kw>
<msg timestamp="20211016 01:45:13.930" level="INFO">${result} = VOLUME_NOT_FOUND Volume 75405-rpcwport is not found</msg>
<status status="PASS" starttime="20211016 01:45:06.263" endtime="20211016 01:45:13.930"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 01:45:13.931" endtime="20211016 01:45:13.932"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:45:13.940" level="INFO">Running command 'ozone sh volume create o3:///75405-rpcwport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:45:21.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:45:21.392" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:45:13.936" endtime="20211016 01:45:21.392"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:45:21.394" level="INFO"/>
<status status="PASS" starttime="20211016 01:45:21.393" endtime="20211016 01:45:21.394"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:45:21.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:45:21.394" endtime="20211016 01:45:21.395"/>
</kw>
<status status="PASS" starttime="20211016 01:45:13.935" endtime="20211016 01:45:21.396"/>
</kw>
<msg timestamp="20211016 01:45:21.396" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:45:13.934" endtime="20211016 01:45:21.396"/>
</kw>
<msg timestamp="20211016 01:45:21.397" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211016 01:45:13.932" endtime="20211016 01:45:21.397"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 01:45:21.397" endtime="20211016 01:45:21.398"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:45:21.404" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '.[] | select(.name=="75405-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:45:28.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:45:28.450" level="INFO">${output} = {
  "metadata": {},
  "name": "75405-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211016 01:45:21.401" endtime="20211016 01:45:28.450"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:45:28.451" level="INFO">{
  "metadata": {},
  "name": "75405-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-16T01:45:21.310Z",
  "modificationTime": "2021-10-16T01:45:21.310Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211016 01:45:28.450" endtime="20211016 01:45:28.451"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:45:28.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:45:28.452" endtime="20211016 01:45:28.452"/>
</kw>
<status status="PASS" starttime="20211016 01:45:21.400" endtime="20211016 01:45:28.453"/>
</kw>
<msg timestamp="20211016 01:45:28.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:45:21.399" endtime="20211016 01:45:28.453"/>
</kw>
<msg timestamp="20211016 01:45:28.453" level="INFO">${result} = {
  "metadata": {},
  "name": "75405-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211016 01:45:21.398" endtime="20211016 01:45:28.453"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 01:45:28.453" endtime="20211016 01:45:28.454"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:45:28.459" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="75405-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:45:37.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:45:37.710" level="INFO">${output} = {
  "metadata": {},
  "name": "75405-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211016 01:45:28.456" endtime="20211016 01:45:37.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:45:37.711" level="INFO">{
  "metadata": {},
  "name": "75405-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-16T01:45:21.310Z",
  "modificationTime": "2021-10-16T01:45:21.310Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211016 01:45:37.710" endtime="20211016 01:45:37.711"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:45:37.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:45:37.711" endtime="20211016 01:45:37.714"/>
</kw>
<status status="PASS" starttime="20211016 01:45:28.455" endtime="20211016 01:45:37.714"/>
</kw>
<msg timestamp="20211016 01:45:37.714" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:45:28.455" endtime="20211016 01:45:37.714"/>
</kw>
<msg timestamp="20211016 01:45:37.714" level="INFO">${result} = {
  "metadata": {},
  "name": "75405-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211016 01:45:28.454" endtime="20211016 01:45:37.714"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 01:45:37.715" endtime="20211016 01:45:37.715"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:45:37.722" level="INFO">Running command 'ozone sh volume setquota o3:///75405-rpcwport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:45:45.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:45:45.515" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:45:37.718" endtime="20211016 01:45:45.515"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:45:45.517" level="INFO"/>
<status status="PASS" starttime="20211016 01:45:45.516" endtime="20211016 01:45:45.517"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:45:45.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:45:45.518" endtime="20211016 01:45:45.519"/>
</kw>
<status status="PASS" starttime="20211016 01:45:37.716" endtime="20211016 01:45:45.519"/>
</kw>
<msg timestamp="20211016 01:45:45.519" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:45:37.716" endtime="20211016 01:45:45.520"/>
</kw>
<status status="PASS" starttime="20211016 01:45:37.715" endtime="20211016 01:45:45.520"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:45:45.527" level="INFO">Running command 'ozone sh volume info o3:///75405-rpcwport | jq -r '. | select(.name=="75405-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:45:54.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:45:54.188" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211016 01:45:45.524" endtime="20211016 01:45:54.188"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:45:54.190" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211016 01:45:54.189" endtime="20211016 01:45:54.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:45:54.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:45:54.190" endtime="20211016 01:45:54.191"/>
</kw>
<status status="PASS" starttime="20211016 01:45:45.523" endtime="20211016 01:45:54.192"/>
</kw>
<msg timestamp="20211016 01:45:54.192" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:45:45.522" endtime="20211016 01:45:54.192"/>
</kw>
<msg timestamp="20211016 01:45:54.192" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211016 01:45:45.521" endtime="20211016 01:45:54.193"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211016 01:45:54.193" endtime="20211016 01:45:54.193"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:45:54.199" level="INFO">Running command 'ozone sh bucket create o3:///75405-rpcwport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:46:02.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:46:02.577" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:45:54.196" endtime="20211016 01:46:02.577"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:46:02.579" level="INFO"/>
<status status="PASS" starttime="20211016 01:46:02.578" endtime="20211016 01:46:02.579"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:46:02.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:46:02.579" endtime="20211016 01:46:02.580"/>
</kw>
<status status="PASS" starttime="20211016 01:45:54.195" endtime="20211016 01:46:02.580"/>
</kw>
<msg timestamp="20211016 01:46:02.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:45:54.195" endtime="20211016 01:46:02.580"/>
</kw>
<status status="PASS" starttime="20211016 01:45:54.194" endtime="20211016 01:46:02.580"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:46:02.586" level="INFO">Running command 'ozone sh bucket info o3:///75405-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:46:11.411" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:46:11.411" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211016 01:46:02.583" endtime="20211016 01:46:11.411"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:46:11.413" level="INFO">DISK</msg>
<status status="PASS" starttime="20211016 01:46:11.412" endtime="20211016 01:46:11.414"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:46:11.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:46:11.414" endtime="20211016 01:46:11.415"/>
</kw>
<status status="PASS" starttime="20211016 01:46:02.582" endtime="20211016 01:46:11.416"/>
</kw>
<msg timestamp="20211016 01:46:11.416" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:46:02.582" endtime="20211016 01:46:11.416"/>
</kw>
<msg timestamp="20211016 01:46:11.417" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211016 01:46:02.581" endtime="20211016 01:46:11.417"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211016 01:46:11.417" endtime="20211016 01:46:11.418"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:46:11.425" level="INFO">Running command 'ozone sh bucket info o3:///75405-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:46:17.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:46:17.604" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211016 01:46:11.422" endtime="20211016 01:46:17.604"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:46:17.606" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211016 01:46:17.605" endtime="20211016 01:46:17.607"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:46:17.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:46:17.607" endtime="20211016 01:46:17.608"/>
</kw>
<status status="PASS" starttime="20211016 01:46:11.421" endtime="20211016 01:46:17.608"/>
</kw>
<msg timestamp="20211016 01:46:17.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:46:11.420" endtime="20211016 01:46:17.609"/>
</kw>
<msg timestamp="20211016 01:46:17.609" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211016 01:46:11.418" endtime="20211016 01:46:17.609"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211016 01:46:17.610" endtime="20211016 01:46:17.611"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:46:17.618" level="INFO">Running command 'ozone sh bucket info o3:///75405-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:46:26.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:46:26.485" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211016 01:46:17.615" endtime="20211016 01:46:26.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:46:26.490" level="INFO">100</msg>
<status status="PASS" starttime="20211016 01:46:26.486" endtime="20211016 01:46:26.490"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:46:26.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:46:26.490" endtime="20211016 01:46:26.491"/>
</kw>
<status status="PASS" starttime="20211016 01:46:17.614" endtime="20211016 01:46:26.492"/>
</kw>
<msg timestamp="20211016 01:46:26.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:46:17.613" endtime="20211016 01:46:26.492"/>
</kw>
<msg timestamp="20211016 01:46:26.492" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211016 01:46:17.611" endtime="20211016 01:46:26.493"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211016 01:46:26.494" endtime="20211016 01:46:26.495"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:46:26.503" level="INFO">Running command 'ozone sh bucket setquota o3:///75405-rpcwport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:46:34.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:46:34.519" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:46:26.500" endtime="20211016 01:46:34.519"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:46:34.521" level="INFO"/>
<status status="PASS" starttime="20211016 01:46:34.520" endtime="20211016 01:46:34.521"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:46:34.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:46:34.521" endtime="20211016 01:46:34.522"/>
</kw>
<status status="PASS" starttime="20211016 01:46:26.498" endtime="20211016 01:46:34.522"/>
</kw>
<msg timestamp="20211016 01:46:34.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:46:26.498" endtime="20211016 01:46:34.522"/>
</kw>
<status status="PASS" starttime="20211016 01:46:26.495" endtime="20211016 01:46:34.523"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:46:34.529" level="INFO">Running command 'ozone sh bucket info o3:///75405-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:46:42.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:46:42.570" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211016 01:46:34.525" endtime="20211016 01:46:42.570"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:46:42.571" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211016 01:46:42.570" endtime="20211016 01:46:42.572"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:46:42.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:46:42.572" endtime="20211016 01:46:42.572"/>
</kw>
<status status="PASS" starttime="20211016 01:46:34.524" endtime="20211016 01:46:42.573"/>
</kw>
<msg timestamp="20211016 01:46:42.573" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:46:34.524" endtime="20211016 01:46:42.573"/>
</kw>
<msg timestamp="20211016 01:46:42.574" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211016 01:46:34.523" endtime="20211016 01:46:42.574"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211016 01:46:42.574" endtime="20211016 01:46:42.575"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:46:42.582" level="INFO">Running command 'ozone sh bucket info o3:///75405-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:46:51.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:46:51.516" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211016 01:46:42.578" endtime="20211016 01:46:51.516"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:46:51.519" level="INFO">1000</msg>
<status status="PASS" starttime="20211016 01:46:51.518" endtime="20211016 01:46:51.520"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:46:51.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:46:51.520" endtime="20211016 01:46:51.522"/>
</kw>
<status status="PASS" starttime="20211016 01:46:42.577" endtime="20211016 01:46:51.522"/>
</kw>
<msg timestamp="20211016 01:46:51.523" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:46:42.576" endtime="20211016 01:46:51.523"/>
</kw>
<msg timestamp="20211016 01:46:51.524" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211016 01:46:42.575" endtime="20211016 01:46:51.524"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211016 01:46:51.525" endtime="20211016 01:46:51.526"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:46:51.534" level="INFO">Running command 'ozone sh bucket list o3:///75405-rpcwport/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:47:00.025" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:47:00.025" level="INFO">${output} = 75405-rpcwport</msg>
<status status="PASS" starttime="20211016 01:46:51.531" endtime="20211016 01:47:00.025"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:47:00.027" level="INFO">75405-rpcwport</msg>
<status status="PASS" starttime="20211016 01:47:00.026" endtime="20211016 01:47:00.027"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:47:00.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:47:00.027" endtime="20211016 01:47:00.028"/>
</kw>
<status status="PASS" starttime="20211016 01:46:51.529" endtime="20211016 01:47:00.028"/>
</kw>
<msg timestamp="20211016 01:47:00.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:46:51.528" endtime="20211016 01:47:00.029"/>
</kw>
<msg timestamp="20211016 01:47:00.029" level="INFO">${result} = 75405-rpcwport</msg>
<status status="PASS" starttime="20211016 01:46:51.526" endtime="20211016 01:47:00.029"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211016 01:47:00.029" endtime="20211016 01:47:00.030"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:47:00.038" level="INFO">Running command 'ozone sh key put o3:///75405-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:50:06.218" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211016 01:47:00.033" endtime="20211016 01:50:06.218"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211016 01:50:06.219" endtime="20211016 01:50:06.219"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211016 01:50:06.219" endtime="20211016 01:50:06.219"/>
</kw>
<status status="FAIL" starttime="20211016 01:47:00.032" endtime="20211016 01:50:06.219"/>
</kw>
<msg timestamp="20211016 01:50:06.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211016 01:47:00.032" endtime="20211016 01:50:06.220"/>
</kw>
<status status="FAIL" starttime="20211016 01:47:00.031" endtime="20211016 01:50:06.220"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211016 01:50:06.220" endtime="20211016 01:50:06.221"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211016 01:50:06.221" endtime="20211016 01:50:06.222"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211016 01:50:06.223" endtime="20211016 01:50:06.223"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211016 01:50:06.223" endtime="20211016 01:50:06.223"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211016 01:50:06.223" endtime="20211016 01:50:06.223"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211016 01:50:06.223" endtime="20211016 01:50:06.223"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211016 01:50:06.223" endtime="20211016 01:50:06.224"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211016 01:50:06.224" endtime="20211016 01:50:06.224"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211016 01:50:06.224" endtime="20211016 01:50:06.224"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211016 01:50:06.224" endtime="20211016 01:50:06.224"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211016 01:50:06.224" endtime="20211016 01:50:06.224"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211016 01:50:06.225" endtime="20211016 01:50:06.225"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211016 01:50:06.225" endtime="20211016 01:50:06.225"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211016 01:50:06.225" endtime="20211016 01:50:06.225"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211016 01:50:06.225" endtime="20211016 01:50:06.225"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211016 01:50:06.226" endtime="20211016 01:50:06.226"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211016 01:50:06.226" endtime="20211016 01:50:06.226"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211016 01:50:06.226" endtime="20211016 01:50:06.226"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211016 01:50:06.226" endtime="20211016 01:50:06.226"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211016 01:50:06.226" endtime="20211016 01:50:06.226"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211016 01:50:06.227" endtime="20211016 01:50:06.227"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211016 01:50:06.227" endtime="20211016 01:50:06.227"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211016 01:50:06.227" endtime="20211016 01:50:06.227"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211016 01:50:06.227" endtime="20211016 01:50:06.227"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211016 01:50:06.227" endtime="20211016 01:50:06.227"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211016 01:50:06.228" endtime="20211016 01:50:06.228"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211016 01:50:06.228" endtime="20211016 01:50:06.228"/>
</kw>
<status status="FAIL" starttime="20211016 01:47:00.031" endtime="20211016 01:50:06.228"/>
</kw>
<status status="FAIL" starttime="20211016 01:47:00.030" endtime="20211016 01:50:06.228"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211016 01:50:06.228" endtime="20211016 01:50:06.228"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211016 01:50:06.228" endtime="20211016 01:50:06.229"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211016 01:50:06.229" endtime="20211016 01:50:06.229"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211016 01:50:06.229" endtime="20211016 01:50:06.229"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211016 01:50:06.230" endtime="20211016 01:50:06.230"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211016 01:50:06.230" endtime="20211016 01:50:06.231"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211016 01:50:06.231" endtime="20211016 01:50:06.233"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211016 01:50:06.233" endtime="20211016 01:50:06.233"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211016 01:50:06.234" endtime="20211016 01:50:06.234"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211016 01:50:06.234" endtime="20211016 01:50:06.234"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211016 01:50:06.235" endtime="20211016 01:50:06.235"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211016 01:50:06.235" endtime="20211016 01:50:06.236"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211016 01:50:06.236" endtime="20211016 01:50:06.236"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211016 01:50:06.237" endtime="20211016 01:50:06.237"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211016 01:50:06.237" endtime="20211016 01:50:06.237"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211016 01:50:06.237" endtime="20211016 01:50:06.238"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211016 01:50:06.238" endtime="20211016 01:50:06.238"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211016 01:50:06.238" endtime="20211016 01:50:06.238"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211016 01:50:06.239" endtime="20211016 01:50:06.239"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211016 01:50:06.239" endtime="20211016 01:50:06.239"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211016 01:50:06.239" endtime="20211016 01:50:06.239"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211016 01:50:06.239" endtime="20211016 01:50:06.239"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211016 01:50:06.239" endtime="20211016 01:50:06.240"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211016 01:50:06.240" endtime="20211016 01:50:06.240"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211016 01:50:06.240" endtime="20211016 01:50:06.240"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211016 01:50:06.240" endtime="20211016 01:50:06.240"/>
</kw>
<status status="FAIL" starttime="20211016 01:45:06.260" endtime="20211016 01:50:06.241"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211016 01:45:06.217" endtime="20211016 01:50:06.241">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t7" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:50:06.251" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:50:06.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:50:06.256" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211016 01:50:06.248" endtime="20211016 01:50:06.256"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:50:06.259" level="INFO">scm</msg>
<status status="PASS" starttime="20211016 01:50:06.256" endtime="20211016 01:50:06.259"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:50:06.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:50:06.259" endtime="20211016 01:50:06.259"/>
</kw>
<status status="PASS" starttime="20211016 01:50:06.248" endtime="20211016 01:50:06.260"/>
</kw>
<msg timestamp="20211016 01:50:06.260" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:50:06.247" endtime="20211016 01:50:06.260"/>
</kw>
<msg timestamp="20211016 01:50:06.260" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211016 01:50:06.247" endtime="20211016 01:50:06.260"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211016 01:50:06.261" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211016 01:50:06.261" endtime="20211016 01:50:06.261"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:50:06.267" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:50:06.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:50:06.502" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:50:06.265" endtime="20211016 01:50:06.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:50:06.503" level="INFO"/>
<status status="PASS" starttime="20211016 01:50:06.503" endtime="20211016 01:50:06.503"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:50:06.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:50:06.504" endtime="20211016 01:50:06.504"/>
</kw>
<status status="PASS" starttime="20211016 01:50:06.264" endtime="20211016 01:50:06.505"/>
</kw>
<msg timestamp="20211016 01:50:06.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:50:06.264" endtime="20211016 01:50:06.505"/>
</kw>
<status status="PASS" starttime="20211016 01:50:06.263" endtime="20211016 01:50:06.506"/>
</kw>
<status status="PASS" starttime="20211016 01:50:06.262" endtime="20211016 01:50:06.506"/>
</kw>
<status status="PASS" starttime="20211016 01:50:06.246" endtime="20211016 01:50:06.506"/>
</kw>
<status status="PASS" starttime="20211016 01:50:06.245" endtime="20211016 01:50:06.506"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:50:06.512" level="INFO">Running command 'ozone sh volume info /75405-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:50:14.779" level="INFO">${rc} = 255</msg>
<msg timestamp="20211016 01:50:14.779" level="INFO">${output} = VOLUME_NOT_FOUND Volume 75405-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20211016 01:50:06.510" endtime="20211016 01:50:14.780"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:50:14.781" level="INFO">VOLUME_NOT_FOUND Volume 75405-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20211016 01:50:14.780" endtime="20211016 01:50:14.781"/>
</kw>
<msg timestamp="20211016 01:50:14.782" level="INFO">${result} = VOLUME_NOT_FOUND Volume 75405-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20211016 01:50:06.509" endtime="20211016 01:50:14.782"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 01:50:14.782" endtime="20211016 01:50:14.782"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:50:14.788" level="INFO">Running command 'ozone sh volume create /75405-rpcwoscheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:50:23.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:50:23.230" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:50:14.785" endtime="20211016 01:50:23.230"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:50:23.231" level="INFO"/>
<status status="PASS" starttime="20211016 01:50:23.231" endtime="20211016 01:50:23.231"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:50:23.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:50:23.232" endtime="20211016 01:50:23.232"/>
</kw>
<status status="PASS" starttime="20211016 01:50:14.784" endtime="20211016 01:50:23.233"/>
</kw>
<msg timestamp="20211016 01:50:23.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:50:14.783" endtime="20211016 01:50:23.233"/>
</kw>
<msg timestamp="20211016 01:50:23.233" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211016 01:50:14.782" endtime="20211016 01:50:23.233"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 01:50:23.234" endtime="20211016 01:50:23.235"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:50:23.243" level="INFO">Running command 'ozone sh volume list / | jq -r '.[] | select(.name=="75405-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:50:30.760" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:50:30.761" level="INFO">${output} = {
  "metadata": {},
  "name": "75405-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211016 01:50:23.238" endtime="20211016 01:50:30.761"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:50:30.762" level="INFO">{
  "metadata": {},
  "name": "75405-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-16T01:50:22.966Z",
  "modificationTime": "2021-10-16T01:50:22.966Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211016 01:50:30.761" endtime="20211016 01:50:30.763"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:50:30.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:50:30.763" endtime="20211016 01:50:30.764"/>
</kw>
<status status="PASS" starttime="20211016 01:50:23.237" endtime="20211016 01:50:30.764"/>
</kw>
<msg timestamp="20211016 01:50:30.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:50:23.236" endtime="20211016 01:50:30.764"/>
</kw>
<msg timestamp="20211016 01:50:30.765" level="INFO">${result} = {
  "metadata": {},
  "name": "75405-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211016 01:50:23.235" endtime="20211016 01:50:30.765"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 01:50:30.765" endtime="20211016 01:50:30.766"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:50:30.773" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="75405-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:50:39.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:50:39.183" level="INFO">${output} = {
  "metadata": {},
  "name": "75405-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211016 01:50:30.770" endtime="20211016 01:50:39.183"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:50:39.184" level="INFO">{
  "metadata": {},
  "name": "75405-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-16T01:50:22.966Z",
  "modificationTime": "2021-10-16T01:50:22.966Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211016 01:50:39.183" endtime="20211016 01:50:39.185"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:50:39.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:50:39.185" endtime="20211016 01:50:39.187"/>
</kw>
<status status="PASS" starttime="20211016 01:50:30.767" endtime="20211016 01:50:39.188"/>
</kw>
<msg timestamp="20211016 01:50:39.188" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:50:30.767" endtime="20211016 01:50:39.189"/>
</kw>
<msg timestamp="20211016 01:50:39.189" level="INFO">${result} = {
  "metadata": {},
  "name": "75405-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211016 01:50:30.766" endtime="20211016 01:50:39.190"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211016 01:50:39.190" endtime="20211016 01:50:39.191"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:50:39.199" level="INFO">Running command 'ozone sh volume setquota /75405-rpcwoscheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:50:46.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:50:46.581" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:50:39.196" endtime="20211016 01:50:46.581"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:50:46.582" level="INFO"/>
<status status="PASS" starttime="20211016 01:50:46.581" endtime="20211016 01:50:46.582"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:50:46.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:50:46.582" endtime="20211016 01:50:46.583"/>
</kw>
<status status="PASS" starttime="20211016 01:50:39.195" endtime="20211016 01:50:46.583"/>
</kw>
<msg timestamp="20211016 01:50:46.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:50:39.194" endtime="20211016 01:50:46.584"/>
</kw>
<status status="PASS" starttime="20211016 01:50:39.191" endtime="20211016 01:50:46.584"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:50:46.592" level="INFO">Running command 'ozone sh volume info /75405-rpcwoscheme | jq -r '. | select(.name=="75405-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:50:55.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:50:55.649" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211016 01:50:46.588" endtime="20211016 01:50:55.650"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:50:55.651" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211016 01:50:55.650" endtime="20211016 01:50:55.651"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:50:55.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:50:55.651" endtime="20211016 01:50:55.652"/>
</kw>
<status status="PASS" starttime="20211016 01:50:46.587" endtime="20211016 01:50:55.653"/>
</kw>
<msg timestamp="20211016 01:50:55.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:50:46.586" endtime="20211016 01:50:55.653"/>
</kw>
<msg timestamp="20211016 01:50:55.654" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211016 01:50:46.584" endtime="20211016 01:50:55.654"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211016 01:50:55.654" endtime="20211016 01:50:55.655"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:50:55.662" level="INFO">Running command 'ozone sh bucket create /75405-rpcwoscheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:51:04.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:51:04.125" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:50:55.659" endtime="20211016 01:51:04.125"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:51:04.126" level="INFO"/>
<status status="PASS" starttime="20211016 01:51:04.126" endtime="20211016 01:51:04.126"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:51:04.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:51:04.127" endtime="20211016 01:51:04.128"/>
</kw>
<status status="PASS" starttime="20211016 01:50:55.658" endtime="20211016 01:51:04.128"/>
</kw>
<msg timestamp="20211016 01:51:04.129" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:50:55.657" endtime="20211016 01:51:04.129"/>
</kw>
<status status="PASS" starttime="20211016 01:50:55.655" endtime="20211016 01:51:04.130"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:51:04.140" level="INFO">Running command 'ozone sh bucket info /75405-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:51:12.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:51:12.630" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211016 01:51:04.136" endtime="20211016 01:51:12.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:51:12.633" level="INFO">DISK</msg>
<status status="PASS" starttime="20211016 01:51:12.631" endtime="20211016 01:51:12.633"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:51:12.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:51:12.633" endtime="20211016 01:51:12.635"/>
</kw>
<status status="PASS" starttime="20211016 01:51:04.134" endtime="20211016 01:51:12.635"/>
</kw>
<msg timestamp="20211016 01:51:12.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:51:04.133" endtime="20211016 01:51:12.636"/>
</kw>
<msg timestamp="20211016 01:51:12.636" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211016 01:51:04.131" endtime="20211016 01:51:12.637"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211016 01:51:12.637" endtime="20211016 01:51:12.638"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:51:12.644" level="INFO">Running command 'ozone sh bucket info /75405-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:51:21.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:51:21.391" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211016 01:51:12.641" endtime="20211016 01:51:21.391"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:51:21.393" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211016 01:51:21.391" endtime="20211016 01:51:21.393"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:51:21.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:51:21.393" endtime="20211016 01:51:21.394"/>
</kw>
<status status="PASS" starttime="20211016 01:51:12.640" endtime="20211016 01:51:21.395"/>
</kw>
<msg timestamp="20211016 01:51:21.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:51:12.640" endtime="20211016 01:51:21.396"/>
</kw>
<msg timestamp="20211016 01:51:21.396" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211016 01:51:12.638" endtime="20211016 01:51:21.396"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211016 01:51:21.397" endtime="20211016 01:51:21.397"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:51:21.406" level="INFO">Running command 'ozone sh bucket info /75405-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:51:30.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:51:30.001" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211016 01:51:21.403" endtime="20211016 01:51:30.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:51:30.004" level="INFO">100</msg>
<status status="PASS" starttime="20211016 01:51:30.002" endtime="20211016 01:51:30.004"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:51:30.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:51:30.005" endtime="20211016 01:51:30.007"/>
</kw>
<status status="PASS" starttime="20211016 01:51:21.402" endtime="20211016 01:51:30.010"/>
</kw>
<msg timestamp="20211016 01:51:30.010" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:51:21.400" endtime="20211016 01:51:30.010"/>
</kw>
<msg timestamp="20211016 01:51:30.010" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211016 01:51:21.398" endtime="20211016 01:51:30.010"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211016 01:51:30.011" endtime="20211016 01:51:30.011"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:51:30.017" level="INFO">Running command 'ozone sh bucket setquota /75405-rpcwoscheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:51:37.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:51:37.514" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:51:30.014" endtime="20211016 01:51:37.514"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:51:37.515" level="INFO"/>
<status status="PASS" starttime="20211016 01:51:37.514" endtime="20211016 01:51:37.515"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:51:37.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:51:37.515" endtime="20211016 01:51:37.516"/>
</kw>
<status status="PASS" starttime="20211016 01:51:30.013" endtime="20211016 01:51:37.516"/>
</kw>
<msg timestamp="20211016 01:51:37.517" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:51:30.013" endtime="20211016 01:51:37.517"/>
</kw>
<status status="PASS" starttime="20211016 01:51:30.012" endtime="20211016 01:51:37.517"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:51:37.522" level="INFO">Running command 'ozone sh bucket info /75405-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:51:44.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:51:44.074" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211016 01:51:37.520" endtime="20211016 01:51:44.074"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:51:44.076" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211016 01:51:44.075" endtime="20211016 01:51:44.076"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:51:44.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:51:44.076" endtime="20211016 01:51:44.077"/>
</kw>
<status status="PASS" starttime="20211016 01:51:37.519" endtime="20211016 01:51:44.078"/>
</kw>
<msg timestamp="20211016 01:51:44.078" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:51:37.518" endtime="20211016 01:51:44.078"/>
</kw>
<msg timestamp="20211016 01:51:44.078" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211016 01:51:37.517" endtime="20211016 01:51:44.078"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211016 01:51:44.079" endtime="20211016 01:51:44.079"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:51:44.086" level="INFO">Running command 'ozone sh bucket info /75405-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:51:52.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:51:52.759" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211016 01:51:44.082" endtime="20211016 01:51:52.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:51:52.761" level="INFO">1000</msg>
<status status="PASS" starttime="20211016 01:51:52.760" endtime="20211016 01:51:52.761"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:51:52.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:51:52.761" endtime="20211016 01:51:52.762"/>
</kw>
<status status="PASS" starttime="20211016 01:51:44.082" endtime="20211016 01:51:52.763"/>
</kw>
<msg timestamp="20211016 01:51:52.763" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:51:44.081" endtime="20211016 01:51:52.763"/>
</kw>
<msg timestamp="20211016 01:51:52.763" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211016 01:51:44.079" endtime="20211016 01:51:52.763"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211016 01:51:52.763" endtime="20211016 01:51:52.764"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:51:52.769" level="INFO">Running command 'ozone sh bucket list /75405-rpcwoscheme/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:52:01.396" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:52:01.397" level="INFO">${output} = 75405-rpcwoscheme</msg>
<status status="PASS" starttime="20211016 01:51:52.766" endtime="20211016 01:52:01.397"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:52:01.399" level="INFO">75405-rpcwoscheme</msg>
<status status="PASS" starttime="20211016 01:52:01.398" endtime="20211016 01:52:01.399"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:52:01.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:52:01.399" endtime="20211016 01:52:01.400"/>
</kw>
<status status="PASS" starttime="20211016 01:51:52.766" endtime="20211016 01:52:01.400"/>
</kw>
<msg timestamp="20211016 01:52:01.400" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:51:52.765" endtime="20211016 01:52:01.401"/>
</kw>
<msg timestamp="20211016 01:52:01.401" level="INFO">${result} = 75405-rpcwoscheme</msg>
<status status="PASS" starttime="20211016 01:51:52.764" endtime="20211016 01:52:01.402"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211016 01:52:01.402" endtime="20211016 01:52:01.404"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:52:01.414" level="INFO">Running command 'ozone sh key put /75405-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:55:06.245" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211016 01:52:01.410" endtime="20211016 01:55:06.245"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211016 01:55:06.246" endtime="20211016 01:55:06.246"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211016 01:55:06.246" endtime="20211016 01:55:06.247"/>
</kw>
<status status="FAIL" starttime="20211016 01:52:01.409" endtime="20211016 01:55:06.247"/>
</kw>
<msg timestamp="20211016 01:55:06.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211016 01:52:01.409" endtime="20211016 01:55:06.248"/>
</kw>
<status status="FAIL" starttime="20211016 01:52:01.407" endtime="20211016 01:55:06.248"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211016 01:55:06.248" endtime="20211016 01:55:06.248"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211016 01:55:06.248" endtime="20211016 01:55:06.249"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211016 01:55:06.249" endtime="20211016 01:55:06.249"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211016 01:55:06.249" endtime="20211016 01:55:06.249"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211016 01:55:06.250" endtime="20211016 01:55:06.250"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211016 01:55:06.250" endtime="20211016 01:55:06.250"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211016 01:55:06.250" endtime="20211016 01:55:06.250"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211016 01:55:06.250" endtime="20211016 01:55:06.250"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211016 01:55:06.251" endtime="20211016 01:55:06.251"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211016 01:55:06.251" endtime="20211016 01:55:06.251"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211016 01:55:06.251" endtime="20211016 01:55:06.251"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211016 01:55:06.251" endtime="20211016 01:55:06.251"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211016 01:55:06.252" endtime="20211016 01:55:06.252"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211016 01:55:06.252" endtime="20211016 01:55:06.252"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211016 01:55:06.252" endtime="20211016 01:55:06.252"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211016 01:55:06.252" endtime="20211016 01:55:06.253"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211016 01:55:06.253" endtime="20211016 01:55:06.253"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211016 01:55:06.254" endtime="20211016 01:55:06.254"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211016 01:55:06.254" endtime="20211016 01:55:06.254"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211016 01:55:06.254" endtime="20211016 01:55:06.254"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211016 01:55:06.254" endtime="20211016 01:55:06.254"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211016 01:55:06.255" endtime="20211016 01:55:06.255"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211016 01:55:06.255" endtime="20211016 01:55:06.255"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211016 01:55:06.255" endtime="20211016 01:55:06.255"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211016 01:55:06.255" endtime="20211016 01:55:06.255"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211016 01:55:06.255" endtime="20211016 01:55:06.256"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211016 01:55:06.256" endtime="20211016 01:55:06.256"/>
</kw>
<status status="FAIL" starttime="20211016 01:52:01.405" endtime="20211016 01:55:06.256"/>
</kw>
<status status="FAIL" starttime="20211016 01:52:01.404" endtime="20211016 01:55:06.256"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211016 01:55:06.257" endtime="20211016 01:55:06.257"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211016 01:55:06.257" endtime="20211016 01:55:06.257"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211016 01:55:06.258" endtime="20211016 01:55:06.258"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211016 01:55:06.258" endtime="20211016 01:55:06.259"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211016 01:55:06.261" endtime="20211016 01:55:06.261"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211016 01:55:06.261" endtime="20211016 01:55:06.261"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211016 01:55:06.261" endtime="20211016 01:55:06.262"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211016 01:55:06.262" endtime="20211016 01:55:06.262"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211016 01:55:06.263" endtime="20211016 01:55:06.263"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211016 01:55:06.263" endtime="20211016 01:55:06.264"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211016 01:55:06.264" endtime="20211016 01:55:06.264"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211016 01:55:06.265" endtime="20211016 01:55:06.265"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211016 01:55:06.266" endtime="20211016 01:55:06.266"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211016 01:55:06.267" endtime="20211016 01:55:06.267"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211016 01:55:06.267" endtime="20211016 01:55:06.268"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211016 01:55:06.268" endtime="20211016 01:55:06.268"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211016 01:55:06.269" endtime="20211016 01:55:06.269"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211016 01:55:06.270" endtime="20211016 01:55:06.270"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211016 01:55:06.270" endtime="20211016 01:55:06.271"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211016 01:55:06.271" endtime="20211016 01:55:06.271"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211016 01:55:06.272" endtime="20211016 01:55:06.272"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211016 01:55:06.272" endtime="20211016 01:55:06.272"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211016 01:55:06.273" endtime="20211016 01:55:06.273"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211016 01:55:06.274" endtime="20211016 01:55:06.274"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211016 01:55:06.274" endtime="20211016 01:55:06.274"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211016 01:55:06.275" endtime="20211016 01:55:06.275"/>
</kw>
<status status="FAIL" starttime="20211016 01:50:06.506" endtime="20211016 01:55:06.275"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211016 01:50:06.244" endtime="20211016 01:55:06.276">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20211016 01:29:59.192" endtime="20211016 01:55:06.279"/>
</suite>
<status status="FAIL" starttime="20211016 01:05:13.382" endtime="20211016 01:55:06.292"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:05:08.152" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:05:08.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:05:08.157" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211016 01:05:08.148" endtime="20211016 01:05:08.157"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:05:08.158" level="INFO">scm</msg>
<status status="PASS" starttime="20211016 01:05:08.158" endtime="20211016 01:05:08.158"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:05:08.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:05:08.158" endtime="20211016 01:05:08.159"/>
</kw>
<status status="PASS" starttime="20211016 01:05:08.147" endtime="20211016 01:05:08.160"/>
</kw>
<msg timestamp="20211016 01:05:08.160" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:05:08.147" endtime="20211016 01:05:08.160"/>
</kw>
<msg timestamp="20211016 01:05:08.160" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211016 01:05:08.146" endtime="20211016 01:05:08.160"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211016 01:05:08.161" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211016 01:05:08.160" endtime="20211016 01:05:08.161"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211016 01:05:08.165" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211016 01:05:08.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20211016 01:05:08.173" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211016 01:05:08.163" endtime="20211016 01:05:08.173"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211016 01:05:08.174" level="INFO"/>
<status status="PASS" starttime="20211016 01:05:08.173" endtime="20211016 01:05:08.174"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211016 01:05:08.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211016 01:05:08.175" endtime="20211016 01:05:08.175"/>
</kw>
<status status="PASS" starttime="20211016 01:05:08.162" endtime="20211016 01:05:08.176"/>
</kw>
<msg timestamp="20211016 01:05:08.176" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211016 01:05:08.162" endtime="20211016 01:05:08.176"/>
</kw>
<status status="PASS" starttime="20211016 01:05:08.162" endtime="20211016 01:05:08.176"/>
</kw>
<status status="PASS" starttime="20211016 01:05:08.161" endtime="20211016 01:05:08.176"/>
</kw>
<status status="PASS" starttime="20211016 01:05:08.145" endtime="20211016 01:05:08.176"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211016 01:05:08.144" endtime="20211016 01:05:08.177"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20211016 01:05:08.077" endtime="20211016 01:05:08.178"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="2993011"/>
</suite>
<statistics>
<total>
<stat pass="20" fail="10" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="20" fail="10" skip="0" id="s1" name="ozonesecure">ozonesecure</stat>
<stat pass="19" fail="10" skip="0" id="s1-s1" name="Basic">ozonesecure.Basic</stat>
<stat pass="1" fail="1" skip="0" id="s1-s1-s1" name="Basic">ozonesecure.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Getconf">ozonesecure.Basic.Getconf</stat>
<stat pass="10" fail="5" skip="0" id="s1-s1-s3" name="Links">ozonesecure.Basic.Links</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat pass="4" fail="3" skip="0" id="s1-s1-s5" name="Ozone-Shell">ozonesecure.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
