<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1.1 (Python 3.6.9 on linux)" generated="20211006 11:22:03.589" rpa="false" schemaversion="2">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211006 11:13:15.625" level="INFO">${random} = 72458</msg>
<status status="PASS" starttime="20211006 11:13:15.625" endtime="20211006 11:13:15.625"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211006 11:13:15.633" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-72458 2&gt;&amp;1'.</msg>
<msg timestamp="20211006 11:13:19.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20211006 11:13:19.928" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211006 11:13:15.627" endtime="20211006 11:13:19.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211006 11:13:19.930" level="INFO"/>
<status status="PASS" starttime="20211006 11:13:19.929" endtime="20211006 11:13:19.930"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211006 11:13:19.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211006 11:13:19.930" endtime="20211006 11:13:19.931"/>
</kw>
<status status="PASS" starttime="20211006 11:13:15.627" endtime="20211006 11:13:19.931"/>
</kw>
<msg timestamp="20211006 11:13:19.931" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211006 11:13:15.626" endtime="20211006 11:13:19.931"/>
</kw>
<msg timestamp="20211006 11:13:19.932" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211006 11:13:15.625" endtime="20211006 11:13:19.932"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211006 11:13:19.932" endtime="20211006 11:13:19.933"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211006 11:13:15.624" endtime="20211006 11:13:19.933"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211006 11:13:15.549" endtime="20211006 11:13:19.934"/>
</suite>
<suite id="s1-s2" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s2-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211006 11:17:14.608" level="INFO">${random} = 95802</msg>
<status status="PASS" starttime="20211006 11:17:14.608" endtime="20211006 11:17:14.608"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211006 11:17:14.616" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-95802 2&gt;&amp;1'.</msg>
<msg timestamp="20211006 11:17:18.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20211006 11:17:18.724" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211006 11:17:14.610" endtime="20211006 11:17:18.724"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211006 11:17:18.725" level="INFO"/>
<status status="PASS" starttime="20211006 11:17:18.724" endtime="20211006 11:17:18.725"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211006 11:17:18.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211006 11:17:18.725" endtime="20211006 11:17:18.726"/>
</kw>
<status status="PASS" starttime="20211006 11:17:14.610" endtime="20211006 11:17:18.726"/>
</kw>
<msg timestamp="20211006 11:17:18.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211006 11:17:14.609" endtime="20211006 11:17:18.726"/>
</kw>
<msg timestamp="20211006 11:17:18.727" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211006 11:17:14.608" endtime="20211006 11:17:18.727"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211006 11:17:18.727" endtime="20211006 11:17:18.727"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211006 11:17:14.606" endtime="20211006 11:17:18.728"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211006 11:17:14.544" endtime="20211006 11:17:18.729"/>
</suite>
<suite id="s1-s3" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211006 11:17:22.580" level="INFO">Running command 'ozone sh volume create old2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20211006 11:17:24.909" level="INFO">${rc} = 0</msg>
<msg timestamp="20211006 11:17:24.909" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211006 11:17:22.577" endtime="20211006 11:17:24.909"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211006 11:17:24.910" level="INFO"/>
<status status="PASS" starttime="20211006 11:17:24.910" endtime="20211006 11:17:24.910"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211006 11:17:24.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211006 11:17:24.911" endtime="20211006 11:17:24.911"/>
</kw>
<status status="PASS" starttime="20211006 11:17:22.576" endtime="20211006 11:17:24.912"/>
</kw>
<msg timestamp="20211006 11:17:24.912" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211006 11:17:22.576" endtime="20211006 11:17:24.912"/>
</kw>
<msg timestamp="20211006 11:17:24.912" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211006 11:17:22.575" endtime="20211006 11:17:24.912"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211006 11:17:24.913" endtime="20211006 11:17:24.913"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211006 11:17:24.926" level="INFO">Running command 'ozone sh bucket create /old2-volume/old2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211006 11:17:27.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20211006 11:17:27.424" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211006 11:17:24.915" endtime="20211006 11:17:27.424"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211006 11:17:27.425" level="INFO"/>
<status status="PASS" starttime="20211006 11:17:27.424" endtime="20211006 11:17:27.425"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211006 11:17:27.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211006 11:17:27.425" endtime="20211006 11:17:27.426"/>
</kw>
<status status="PASS" starttime="20211006 11:17:24.914" endtime="20211006 11:17:27.426"/>
</kw>
<msg timestamp="20211006 11:17:27.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211006 11:17:24.914" endtime="20211006 11:17:27.426"/>
</kw>
<msg timestamp="20211006 11:17:27.427" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211006 11:17:24.913" endtime="20211006 11:17:27.427"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211006 11:17:27.427" endtime="20211006 11:17:27.427"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211006 11:17:27.432" level="INFO">Running command 'ozone sh key put /old2-volume/old2-bucket/old2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211006 11:17:32.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20211006 11:17:32.674" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211006 11:17:27.430" endtime="20211006 11:17:32.675"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211006 11:17:32.676" level="INFO"/>
<status status="PASS" starttime="20211006 11:17:32.675" endtime="20211006 11:17:32.676"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211006 11:17:32.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211006 11:17:32.676" endtime="20211006 11:17:32.677"/>
</kw>
<status status="PASS" starttime="20211006 11:17:27.429" endtime="20211006 11:17:32.677"/>
</kw>
<msg timestamp="20211006 11:17:32.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211006 11:17:27.428" endtime="20211006 11:17:32.678"/>
</kw>
<msg timestamp="20211006 11:17:32.678" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211006 11:17:27.428" endtime="20211006 11:17:32.678"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211006 11:17:32.678" endtime="20211006 11:17:32.679"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211006 11:17:22.574" endtime="20211006 11:17:32.679"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20211006 11:17:22.498" endtime="20211006 11:17:32.681"/>
</suite>
<suite id="s1-s4" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211006 11:17:36.516" level="INFO">${random} = 47298</msg>
<status status="PASS" starttime="20211006 11:17:36.516" endtime="20211006 11:17:36.516"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211006 11:17:36.525" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-47298 2&gt;&amp;1'.</msg>
<msg timestamp="20211006 11:17:41.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20211006 11:17:41.319" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211006 11:17:36.521" endtime="20211006 11:17:41.319"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211006 11:17:41.320" level="INFO"/>
<status status="PASS" starttime="20211006 11:17:41.319" endtime="20211006 11:17:41.320"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211006 11:17:41.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211006 11:17:41.320" endtime="20211006 11:17:41.321"/>
</kw>
<status status="PASS" starttime="20211006 11:17:36.521" endtime="20211006 11:17:41.321"/>
</kw>
<msg timestamp="20211006 11:17:41.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211006 11:17:36.518" endtime="20211006 11:17:41.322"/>
</kw>
<msg timestamp="20211006 11:17:41.322" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211006 11:17:36.516" endtime="20211006 11:17:41.322"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211006 11:17:41.322" endtime="20211006 11:17:41.323"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211006 11:17:36.515" endtime="20211006 11:17:41.323"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211006 11:17:36.444" endtime="20211006 11:17:41.325"/>
</suite>
<suite id="s1-s5" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211006 11:17:06.308" level="INFO">${random} = 97085</msg>
<status status="PASS" starttime="20211006 11:17:06.308" endtime="20211006 11:17:06.308"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211006 11:17:06.314" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-97085 2&gt;&amp;1'.</msg>
<msg timestamp="20211006 11:17:10.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20211006 11:17:10.789" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211006 11:17:06.311" endtime="20211006 11:17:10.789"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211006 11:17:10.790" level="INFO"/>
<status status="PASS" starttime="20211006 11:17:10.790" endtime="20211006 11:17:10.791"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211006 11:17:10.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211006 11:17:10.791" endtime="20211006 11:17:10.792"/>
</kw>
<status status="PASS" starttime="20211006 11:17:06.310" endtime="20211006 11:17:10.792"/>
</kw>
<msg timestamp="20211006 11:17:10.792" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211006 11:17:06.310" endtime="20211006 11:17:10.792"/>
</kw>
<msg timestamp="20211006 11:17:10.792" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211006 11:17:06.309" endtime="20211006 11:17:10.792"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211006 11:17:10.793" endtime="20211006 11:17:10.793"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211006 11:17:06.307" endtime="20211006 11:17:10.793"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211006 11:17:06.241" endtime="20211006 11:17:10.795"/>
</suite>
<suite id="s1-s6" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s6-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211006 11:13:00.791" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20211006 11:13:03.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20211006 11:13:03.221" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211006 11:13:00.786" endtime="20211006 11:13:03.221"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211006 11:13:03.223" level="INFO"/>
<status status="PASS" starttime="20211006 11:13:03.222" endtime="20211006 11:13:03.223"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211006 11:13:03.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211006 11:13:03.223" endtime="20211006 11:13:03.224"/>
</kw>
<status status="PASS" starttime="20211006 11:13:00.786" endtime="20211006 11:13:03.224"/>
</kw>
<msg timestamp="20211006 11:13:03.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211006 11:13:00.785" endtime="20211006 11:13:03.224"/>
</kw>
<msg timestamp="20211006 11:13:03.225" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211006 11:13:00.784" endtime="20211006 11:13:03.225"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211006 11:13:03.225" endtime="20211006 11:13:03.225"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211006 11:13:03.238" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211006 11:13:06.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20211006 11:13:06.057" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211006 11:13:03.227" endtime="20211006 11:13:06.057"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211006 11:13:06.059" level="INFO"/>
<status status="PASS" starttime="20211006 11:13:06.058" endtime="20211006 11:13:06.059"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211006 11:13:06.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211006 11:13:06.059" endtime="20211006 11:13:06.061"/>
</kw>
<status status="PASS" starttime="20211006 11:13:03.227" endtime="20211006 11:13:06.061"/>
</kw>
<msg timestamp="20211006 11:13:06.061" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211006 11:13:03.226" endtime="20211006 11:13:06.062"/>
</kw>
<msg timestamp="20211006 11:13:06.062" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211006 11:13:03.226" endtime="20211006 11:13:06.062"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211006 11:13:06.062" endtime="20211006 11:13:06.063"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211006 11:13:06.070" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211006 11:13:11.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20211006 11:13:11.747" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211006 11:13:06.066" endtime="20211006 11:13:11.747"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211006 11:13:11.748" level="INFO"/>
<status status="PASS" starttime="20211006 11:13:11.747" endtime="20211006 11:13:11.748"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211006 11:13:11.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211006 11:13:11.748" endtime="20211006 11:13:11.749"/>
</kw>
<status status="PASS" starttime="20211006 11:13:06.064" endtime="20211006 11:13:11.749"/>
</kw>
<msg timestamp="20211006 11:13:11.749" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211006 11:13:06.064" endtime="20211006 11:13:11.750"/>
</kw>
<msg timestamp="20211006 11:13:11.750" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211006 11:13:06.063" endtime="20211006 11:13:11.750"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211006 11:13:11.750" endtime="20211006 11:13:11.751"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211006 11:13:00.783" endtime="20211006 11:13:11.751"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20211006 11:13:00.718" endtime="20211006 11:13:11.752"/>
</suite>
<suite id="s1-s7" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s7-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211006 11:20:36.608" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20211006 11:20:36.607" endtime="20211006 11:20:36.608"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211006 11:20:36.609" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211006 11:20:36.608" endtime="20211006 11:20:36.609"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211006 11:20:36.610" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211006 11:20:36.609" endtime="20211006 11:20:36.610"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211006 11:20:36.611" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20211006 11:20:36.610" endtime="20211006 11:20:36.611"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211006 11:20:36.612" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211006 11:20:36.613" level="INFO">${version_file_contents} = #Wed Oct 06 11:19:13 UTC 2021
cTime=1633518717602
clusterID=CID-ffa182e5-46e3-4218-af01-dfe61b2d0548
nodeType=SCM
scmUuid=a1fc52cf-043a-4d7e-9c12-efc890f5c955
layoutVersion=2
</msg>
<status status="PASS" starttime="20211006 11:20:36.612" endtime="20211006 11:20:36.613"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211006 11:20:36.613" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20211006 11:20:36.613" endtime="20211006 11:20:36.613"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211006 11:20:36.614" endtime="20211006 11:20:36.614"/>
</kw>
<status status="PASS" starttime="20211006 11:20:36.611" endtime="20211006 11:20:36.614"/>
</kw>
<status status="PASS" starttime="20211006 11:20:36.611" endtime="20211006 11:20:36.614"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211006 11:20:36.606" endtime="20211006 11:20:36.615"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211006 11:20:36.541" endtime="20211006 11:20:36.616"/>
</suite>
<suite id="s1-s8" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s8-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211006 11:21:21.750" level="INFO">${random} = 98013</msg>
<status status="PASS" starttime="20211006 11:21:21.749" endtime="20211006 11:21:21.750"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211006 11:21:21.756" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-98013 2&gt;&amp;1'.</msg>
<msg timestamp="20211006 11:21:26.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20211006 11:21:26.060" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211006 11:21:21.752" endtime="20211006 11:21:26.060"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211006 11:21:26.062" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211006 11:21:26.061" endtime="20211006 11:21:26.062"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211006 11:21:26.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211006 11:21:26.062" endtime="20211006 11:21:26.063"/>
</kw>
<status status="PASS" starttime="20211006 11:21:21.752" endtime="20211006 11:21:26.064"/>
</kw>
<msg timestamp="20211006 11:21:26.064" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211006 11:21:21.751" endtime="20211006 11:21:26.064"/>
</kw>
<msg timestamp="20211006 11:21:26.064" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211006 11:21:21.750" endtime="20211006 11:21:26.064"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211006 11:21:26.065" endtime="20211006 11:21:26.065"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211006 11:21:21.748" endtime="20211006 11:21:26.065"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211006 11:21:21.681" endtime="20211006 11:21:26.067"/>
</suite>
<suite id="s1-s9" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s9-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211006 11:21:29.962" level="INFO">Running command 'ozone sh volume create new2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20211006 11:21:32.644" level="INFO">${rc} = 0</msg>
<msg timestamp="20211006 11:21:32.644" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211006 11:21:29.952" endtime="20211006 11:21:32.644"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211006 11:21:32.645" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211006 11:21:32.644" endtime="20211006 11:21:32.645"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211006 11:21:32.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211006 11:21:32.646" endtime="20211006 11:21:32.647"/>
</kw>
<status status="PASS" starttime="20211006 11:21:29.951" endtime="20211006 11:21:32.647"/>
</kw>
<msg timestamp="20211006 11:21:32.647" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211006 11:21:29.951" endtime="20211006 11:21:32.647"/>
</kw>
<msg timestamp="20211006 11:21:32.647" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211006 11:21:29.950" endtime="20211006 11:21:32.647"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211006 11:21:32.648" endtime="20211006 11:21:32.648"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211006 11:21:32.667" level="INFO">Running command 'ozone sh bucket create /new2-volume/new2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211006 11:21:35.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20211006 11:21:35.620" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211006 11:21:32.655" endtime="20211006 11:21:35.620"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211006 11:21:35.621" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211006 11:21:35.620" endtime="20211006 11:21:35.621"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211006 11:21:35.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211006 11:21:35.622" endtime="20211006 11:21:35.622"/>
</kw>
<status status="PASS" starttime="20211006 11:21:32.654" endtime="20211006 11:21:35.622"/>
</kw>
<msg timestamp="20211006 11:21:35.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211006 11:21:32.654" endtime="20211006 11:21:35.623"/>
</kw>
<msg timestamp="20211006 11:21:35.623" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211006 11:21:32.653" endtime="20211006 11:21:35.623"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211006 11:21:35.623" endtime="20211006 11:21:35.624"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211006 11:21:35.628" level="INFO">Running command 'ozone sh key put /new2-volume/new2-bucket/new2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211006 11:21:41.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20211006 11:21:41.143" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211006 11:21:35.626" endtime="20211006 11:21:41.143"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211006 11:21:41.145" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211006 11:21:41.144" endtime="20211006 11:21:41.145"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211006 11:21:41.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211006 11:21:41.145" endtime="20211006 11:21:41.146"/>
</kw>
<status status="PASS" starttime="20211006 11:21:35.625" endtime="20211006 11:21:41.146"/>
</kw>
<msg timestamp="20211006 11:21:41.146" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211006 11:21:35.625" endtime="20211006 11:21:41.146"/>
</kw>
<msg timestamp="20211006 11:21:41.147" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211006 11:21:35.624" endtime="20211006 11:21:41.147"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211006 11:21:41.147" endtime="20211006 11:21:41.147"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211006 11:21:29.949" endtime="20211006 11:21:41.148"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20211006 11:21:29.887" endtime="20211006 11:21:41.152"/>
</suite>
<suite id="s1-s10" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s10-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211006 11:21:44.935" level="INFO">${random} = 08817</msg>
<status status="PASS" starttime="20211006 11:21:44.935" endtime="20211006 11:21:44.935"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211006 11:21:44.941" level="INFO">Running command 'ozone sh key get /new2-volume/new2-bucket/new2-key /tmp/key-08817 2&gt;&amp;1'.</msg>
<msg timestamp="20211006 11:21:49.328" level="INFO">${rc} = 0</msg>
<msg timestamp="20211006 11:21:49.328" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211006 11:21:44.937" endtime="20211006 11:21:49.328"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211006 11:21:49.329" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211006 11:21:49.329" endtime="20211006 11:21:49.329"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211006 11:21:49.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211006 11:21:49.330" endtime="20211006 11:21:49.330"/>
</kw>
<status status="PASS" starttime="20211006 11:21:44.937" endtime="20211006 11:21:49.331"/>
</kw>
<msg timestamp="20211006 11:21:49.331" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211006 11:21:44.937" endtime="20211006 11:21:49.331"/>
</kw>
<msg timestamp="20211006 11:21:49.331" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211006 11:21:44.936" endtime="20211006 11:21:49.331"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211006 11:21:49.332" endtime="20211006 11:21:49.332"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211006 11:21:44.934" endtime="20211006 11:21:49.332"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211006 11:21:44.871" endtime="20211006 11:21:49.334"/>
</suite>
<suite id="s1-s11" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s11-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211006 11:20:40.707" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211006 11:20:40.706" endtime="20211006 11:20:40.707"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211006 11:20:40.708" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211006 11:20:40.707" endtime="20211006 11:20:40.708"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211006 11:20:40.709" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211006 11:20:40.708" endtime="20211006 11:20:40.709"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211006 11:20:40.709" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211006 11:20:40.709" endtime="20211006 11:20:40.709"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211006 11:20:40.711" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211006 11:20:40.711" level="INFO">${version_file_contents} = #Wed Oct 06 11:19:34 UTC 2021
cTime=1633518825357
clusterID=58e1ee15-78e5-4aa0-ba4e-de624ace6ae0
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20211006 11:20:40.710" endtime="20211006 11:20:40.711"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211006 11:20:40.712" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20211006 11:20:40.711" endtime="20211006 11:20:40.712"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211006 11:20:40.712" endtime="20211006 11:20:40.713"/>
</kw>
<status status="PASS" starttime="20211006 11:20:40.710" endtime="20211006 11:20:40.713"/>
</kw>
<status status="PASS" starttime="20211006 11:20:40.710" endtime="20211006 11:20:40.713"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211006 11:20:40.705" endtime="20211006 11:20:40.713"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211006 11:20:40.638" endtime="20211006 11:20:40.714"/>
</suite>
<suite id="s1-s12" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s12-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211006 11:20:44.660" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211006 11:20:44.660" endtime="20211006 11:20:44.661"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211006 11:20:44.661" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211006 11:20:44.661" endtime="20211006 11:20:44.662"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211006 11:20:44.662" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211006 11:20:44.662" endtime="20211006 11:20:44.662"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211006 11:20:44.663" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211006 11:20:44.662" endtime="20211006 11:20:44.663"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211006 11:20:44.665" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211006 11:20:44.665" level="INFO">${version_file_contents} = #Wed Oct 06 11:19:24 UTC 2021
cTime=1633518825777
clusterID=15303bce-24ce-40ee-a9d6-4fe691c1294e
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20211006 11:20:44.664" endtime="20211006 11:20:44.665"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211006 11:20:44.666" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20211006 11:20:44.665" endtime="20211006 11:20:44.666"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211006 11:20:44.666" endtime="20211006 11:20:44.666"/>
</kw>
<status status="PASS" starttime="20211006 11:20:44.664" endtime="20211006 11:20:44.667"/>
</kw>
<status status="PASS" starttime="20211006 11:20:44.663" endtime="20211006 11:20:44.667"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211006 11:20:44.658" endtime="20211006 11:20:44.667"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211006 11:20:44.593" endtime="20211006 11:20:44.668"/>
</suite>
<suite id="s1-s13" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s13-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211006 11:20:48.634" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211006 11:20:48.634" endtime="20211006 11:20:48.635"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211006 11:20:48.635" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211006 11:20:48.635" endtime="20211006 11:20:48.635"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211006 11:20:48.636" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211006 11:20:48.635" endtime="20211006 11:20:48.636"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211006 11:20:48.637" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211006 11:20:48.636" endtime="20211006 11:20:48.637"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211006 11:20:48.638" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211006 11:20:48.638" level="INFO">${version_file_contents} = #Wed Oct 06 11:19:16 UTC 2021
cTime=1633518822835
clusterID=30b589a3-f11b-4004-b20e-5ddb49991dcd
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20211006 11:20:48.638" endtime="20211006 11:20:48.639"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211006 11:20:48.639" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20211006 11:20:48.639" endtime="20211006 11:20:48.639"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211006 11:20:48.640" endtime="20211006 11:20:48.640"/>
</kw>
<status status="PASS" starttime="20211006 11:20:48.637" endtime="20211006 11:20:48.643"/>
</kw>
<status status="PASS" starttime="20211006 11:20:48.637" endtime="20211006 11:20:48.643"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211006 11:20:48.633" endtime="20211006 11:20:48.643"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211006 11:20:48.567" endtime="20211006 11:20:48.644"/>
</suite>
<suite id="s1-s14" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s14-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211006 11:20:52.649" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211006 11:20:52.648" endtime="20211006 11:20:52.650"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211006 11:20:52.650" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211006 11:20:52.650" endtime="20211006 11:20:52.650"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211006 11:20:52.651" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211006 11:20:52.650" endtime="20211006 11:20:52.651"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211006 11:20:52.652" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211006 11:20:52.651" endtime="20211006 11:20:52.652"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211006 11:20:52.653" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211006 11:20:52.654" level="INFO">${version_file_contents} = #Wed Oct 06 11:12:21 UTC 2021
cTime=1633518719775
clusterID=CID-ffa182e5-46e3-4218-af01-dfe61b2d0548
omUuid=e89b7a04-5432-4fb1-9653-d10b10e1aa44
nodeType=OM
scmUuid=a1fc52cf-043a-4d7e-9c12-efc890f5c95...</msg>
<status status="PASS" starttime="20211006 11:20:52.653" endtime="20211006 11:20:52.654"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211006 11:20:52.654" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211006 11:20:52.654" endtime="20211006 11:20:52.655"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211006 11:20:52.655" endtime="20211006 11:20:52.655"/>
</kw>
<status status="PASS" starttime="20211006 11:20:52.652" endtime="20211006 11:20:52.655"/>
</kw>
<status status="PASS" starttime="20211006 11:20:52.652" endtime="20211006 11:20:52.655"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211006 11:20:52.648" endtime="20211006 11:20:52.656"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211006 11:20:52.579" endtime="20211006 11:20:52.657"/>
</suite>
<suite id="s1-s15" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s15-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211006 11:20:56.667" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211006 11:20:56.666" endtime="20211006 11:20:56.667"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211006 11:20:56.668" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211006 11:20:56.667" endtime="20211006 11:20:56.668"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211006 11:20:56.668" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211006 11:20:56.668" endtime="20211006 11:20:56.669"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211006 11:20:56.669" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211006 11:20:56.669" endtime="20211006 11:20:56.669"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211006 11:20:56.671" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211006 11:20:56.671" level="INFO">${version_file_contents} = #Wed Oct 06 11:12:21 UTC 2021
cTime=1633518721775
clusterID=CID-ffa182e5-46e3-4218-af01-dfe61b2d0548
omUuid=1d61aa5f-9e76-44c6-80f3-9226c23a44fb
nodeType=OM
scmUuid=a1fc52cf-043a-4d7e-9c12-efc890f5c95...</msg>
<status status="PASS" starttime="20211006 11:20:56.671" endtime="20211006 11:20:56.671"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211006 11:20:56.672" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211006 11:20:56.671" endtime="20211006 11:20:56.672"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211006 11:20:56.672" endtime="20211006 11:20:56.673"/>
</kw>
<status status="PASS" starttime="20211006 11:20:56.670" endtime="20211006 11:20:56.673"/>
</kw>
<status status="PASS" starttime="20211006 11:20:56.670" endtime="20211006 11:20:56.673"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211006 11:20:56.665" endtime="20211006 11:20:56.673"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211006 11:20:56.591" endtime="20211006 11:20:56.675"/>
</suite>
<suite id="s1-s16" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s16-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211006 11:21:00.728" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211006 11:21:00.727" endtime="20211006 11:21:00.729"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211006 11:21:00.729" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211006 11:21:00.729" endtime="20211006 11:21:00.729"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211006 11:21:00.730" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211006 11:21:00.730" endtime="20211006 11:21:00.730"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211006 11:21:00.731" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211006 11:21:00.730" endtime="20211006 11:21:00.731"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211006 11:21:00.732" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211006 11:21:00.733" level="INFO">${version_file_contents} = #Wed Oct 06 11:12:21 UTC 2021
cTime=1633518719945
clusterID=CID-ffa182e5-46e3-4218-af01-dfe61b2d0548
omUuid=f6ac0d09-b290-46ee-9ce9-68e548fdface
nodeType=OM
scmUuid=a1fc52cf-043a-4d7e-9c12-efc890f5c95...</msg>
<status status="PASS" starttime="20211006 11:21:00.732" endtime="20211006 11:21:00.733"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211006 11:21:00.733" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211006 11:21:00.733" endtime="20211006 11:21:00.733"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211006 11:21:00.734" endtime="20211006 11:21:00.734"/>
</kw>
<status status="PASS" starttime="20211006 11:21:00.731" endtime="20211006 11:21:00.734"/>
</kw>
<status status="PASS" starttime="20211006 11:21:00.731" endtime="20211006 11:21:00.734"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211006 11:21:00.726" endtime="20211006 11:21:00.735"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211006 11:21:00.656" endtime="20211006 11:21:00.736"/>
</suite>
<suite id="s1-s17" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s17-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211006 11:21:04.669" level="INFO">${random} = 67137</msg>
<status status="PASS" starttime="20211006 11:21:04.669" endtime="20211006 11:21:04.669"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211006 11:21:04.675" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-67137 2&gt;&amp;1'.</msg>
<msg timestamp="20211006 11:21:09.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20211006 11:21:09.557" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211006 11:21:04.672" endtime="20211006 11:21:09.557"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211006 11:21:09.558" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211006 11:21:09.557" endtime="20211006 11:21:09.558"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211006 11:21:09.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211006 11:21:09.558" endtime="20211006 11:21:09.559"/>
</kw>
<status status="PASS" starttime="20211006 11:21:04.671" endtime="20211006 11:21:09.559"/>
</kw>
<msg timestamp="20211006 11:21:09.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211006 11:21:04.671" endtime="20211006 11:21:09.560"/>
</kw>
<msg timestamp="20211006 11:21:09.560" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211006 11:21:04.670" endtime="20211006 11:21:09.560"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211006 11:21:09.560" endtime="20211006 11:21:09.561"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211006 11:21:04.668" endtime="20211006 11:21:09.561"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211006 11:21:04.599" endtime="20211006 11:21:09.563"/>
</suite>
<suite id="s1-s18" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s18-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211006 11:21:13.482" level="INFO">${random} = 73713</msg>
<status status="PASS" starttime="20211006 11:21:13.482" endtime="20211006 11:21:13.482"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211006 11:21:13.489" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-73713 2&gt;&amp;1'.</msg>
<msg timestamp="20211006 11:21:17.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20211006 11:21:17.969" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211006 11:21:13.485" endtime="20211006 11:21:17.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211006 11:21:17.971" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211006 11:21:17.970" endtime="20211006 11:21:17.971"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211006 11:21:17.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211006 11:21:17.971" endtime="20211006 11:21:17.972"/>
</kw>
<status status="PASS" starttime="20211006 11:21:13.484" endtime="20211006 11:21:17.972"/>
</kw>
<msg timestamp="20211006 11:21:17.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211006 11:21:13.484" endtime="20211006 11:21:17.972"/>
</kw>
<msg timestamp="20211006 11:21:17.973" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211006 11:21:13.483" endtime="20211006 11:21:17.973"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211006 11:21:17.974" endtime="20211006 11:21:17.974"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211006 11:21:13.481" endtime="20211006 11:21:17.974"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211006 11:21:13.418" endtime="20211006 11:21:17.978"/>
</suite>
<suite id="s1-s19" name="Finalize" source="/opt/hadoop/smoketest/upgrade/finalize.robot">
<test id="s1-s19-t1" name="Finalize SCM">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20211006 11:19:05.547" endtime="20211006 11:19:05.548"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizeupgrade</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211006 11:19:05.554" level="INFO">Running command 'ozone admin scm finalizeupgrade 2&gt;&amp;1'.</msg>
<msg timestamp="20211006 11:20:29.025" level="INFO">${rc} = 0</msg>
<msg timestamp="20211006 11:20:29.025" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20211006 11:19:05.550" endtime="20211006 11:20:29.026"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211006 11:20:29.027" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20211006 11:20:29.026" endtime="20211006 11:20:29.027"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211006 11:20:29.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211006 11:20:29.027" endtime="20211006 11:20:29.030"/>
</kw>
<status status="PASS" starttime="20211006 11:19:05.549" endtime="20211006 11:20:29.030"/>
</kw>
<msg timestamp="20211006 11:20:29.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211006 11:19:05.549" endtime="20211006 11:20:29.030"/>
</kw>
<msg timestamp="20211006 11:20:29.031" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20211006 11:19:05.548" endtime="20211006 11:20:29.031"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211006 11:20:29.031" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20211006 11:20:29.031" endtime="20211006 11:20:29.032"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211006 11:19:05.546" endtime="20211006 11:20:29.032"/>
</test>
<test id="s1-s19-t2" name="Finalize OMs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20211006 11:20:29.034" endtime="20211006 11:20:29.035"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizeupgrade -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211006 11:20:29.041" level="INFO">Running command 'ozone admin om finalizeupgrade -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20211006 11:20:32.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20211006 11:20:32.594" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteExceptio...</msg>
<status status="PASS" starttime="20211006 11:20:29.038" endtime="20211006 11:20:32.594"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211006 11:20:32.595" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.createNotLeaderException(OzoneManagerRatisUtils.java:465)
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.checkLeaderStatus(OzoneManagerRatisUtils.java:451)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.checkLeaderStatus(OzoneManagerProtocolServerSideTranslatorPB.java:242)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:135)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy20.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20211006 11:20:32.594" endtime="20211006 11:20:32.595"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211006 11:20:32.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211006 11:20:32.596" endtime="20211006 11:20:32.596"/>
</kw>
<status status="PASS" starttime="20211006 11:20:29.036" endtime="20211006 11:20:32.597"/>
</kw>
<msg timestamp="20211006 11:20:32.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211006 11:20:29.036" endtime="20211006 11:20:32.597"/>
</kw>
<msg timestamp="20211006 11:20:32.597" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteExceptio...</msg>
<status status="PASS" starttime="20211006 11:20:29.035" endtime="20211006 11:20:32.597"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211006 11:20:32.598" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.createNotLeaderException(OzoneManagerRatisUtils.java:465)
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.checkLeaderStatus(OzoneManagerRatisUtils.java:451)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.checkLeaderStatus(OzoneManagerProtocolServerSideTranslatorPB.java:242)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:135)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy20.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20211006 11:20:32.598" endtime="20211006 11:20:32.598"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211006 11:20:29.033" endtime="20211006 11:20:32.598"/>
</test>
<doc>Finalize Upgrade of OMs and SCM</doc>
<status status="PASS" starttime="20211006 11:19:05.481" endtime="20211006 11:20:32.605"/>
</suite>
<suite id="s1-s20" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s20-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211006 11:14:45.223" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211006 11:14:45.223" endtime="20211006 11:14:45.223"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211006 11:14:45.224" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211006 11:14:45.224" endtime="20211006 11:14:45.224"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211006 11:14:45.225" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211006 11:14:45.224" endtime="20211006 11:14:45.225"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211006 11:14:45.225" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211006 11:14:45.225" endtime="20211006 11:14:45.225"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211006 11:14:45.227" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211006 11:14:45.227" level="INFO">${version_file_contents} = #Wed Oct 06 11:13:45 UTC 2021
cTime=1633518825357
clusterID=58e1ee15-78e5-4aa0-ba4e-de624ace6ae0
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20211006 11:14:45.227" endtime="20211006 11:14:45.227"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211006 11:14:45.228" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211006 11:14:45.227" endtime="20211006 11:14:45.228"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211006 11:14:45.229" endtime="20211006 11:14:45.229"/>
</kw>
<status status="PASS" starttime="20211006 11:14:45.226" endtime="20211006 11:14:45.229"/>
</kw>
<status status="PASS" starttime="20211006 11:14:45.226" endtime="20211006 11:14:45.230"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211006 11:14:45.222" endtime="20211006 11:14:45.230"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211006 11:14:45.158" endtime="20211006 11:14:45.231"/>
</suite>
<suite id="s1-s21" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s21-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211006 11:14:49.110" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211006 11:14:49.109" endtime="20211006 11:14:49.110"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211006 11:14:49.111" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211006 11:14:49.110" endtime="20211006 11:14:49.111"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211006 11:14:49.111" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211006 11:14:49.111" endtime="20211006 11:14:49.111"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211006 11:14:49.112" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211006 11:14:49.112" endtime="20211006 11:14:49.112"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211006 11:14:49.114" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211006 11:14:49.114" level="INFO">${version_file_contents} = #Wed Oct 06 11:13:45 UTC 2021
cTime=1633518825777
clusterID=15303bce-24ce-40ee-a9d6-4fe691c1294e
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20211006 11:14:49.114" endtime="20211006 11:14:49.114"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211006 11:14:49.115" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211006 11:14:49.114" endtime="20211006 11:14:49.115"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211006 11:14:49.115" endtime="20211006 11:14:49.116"/>
</kw>
<status status="PASS" starttime="20211006 11:14:49.113" endtime="20211006 11:14:49.116"/>
</kw>
<status status="PASS" starttime="20211006 11:14:49.113" endtime="20211006 11:14:49.116"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211006 11:14:49.108" endtime="20211006 11:14:49.116"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211006 11:14:49.040" endtime="20211006 11:14:49.117"/>
</suite>
<suite id="s1-s22" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s22-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211006 11:14:52.894" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211006 11:14:52.894" endtime="20211006 11:14:52.895"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211006 11:14:52.895" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211006 11:14:52.895" endtime="20211006 11:14:52.895"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211006 11:14:52.896" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211006 11:14:52.895" endtime="20211006 11:14:52.896"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211006 11:14:52.897" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211006 11:14:52.896" endtime="20211006 11:14:52.897"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211006 11:14:52.898" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211006 11:14:52.898" level="INFO">${version_file_contents} = #Wed Oct 06 11:13:42 UTC 2021
cTime=1633518822835
clusterID=30b589a3-f11b-4004-b20e-5ddb49991dcd
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20211006 11:14:52.898" endtime="20211006 11:14:52.899"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211006 11:14:52.899" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211006 11:14:52.899" endtime="20211006 11:14:52.899"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211006 11:14:52.899" endtime="20211006 11:14:52.900"/>
</kw>
<status status="PASS" starttime="20211006 11:14:52.897" endtime="20211006 11:14:52.900"/>
</kw>
<status status="PASS" starttime="20211006 11:14:52.897" endtime="20211006 11:14:52.900"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211006 11:14:52.893" endtime="20211006 11:14:52.900"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211006 11:14:52.831" endtime="20211006 11:14:52.901"/>
</suite>
<suite id="s1-s23" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s23-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211006 11:14:56.777" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211006 11:14:56.776" endtime="20211006 11:14:56.777"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211006 11:14:56.778" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211006 11:14:56.777" endtime="20211006 11:14:56.778"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211006 11:14:56.778" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211006 11:14:56.778" endtime="20211006 11:14:56.778"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211006 11:14:56.779" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211006 11:14:56.778" endtime="20211006 11:14:56.779"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211006 11:14:56.780" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211006 11:14:56.781" level="INFO">${version_file_contents} = #Wed Oct 06 11:12:21 UTC 2021
cTime=1633518719775
clusterID=CID-ffa182e5-46e3-4218-af01-dfe61b2d0548
omUuid=e89b7a04-5432-4fb1-9653-d10b10e1aa44
nodeType=OM
scmUuid=a1fc52cf-043a-4d7e-9c12-efc890f5c95...</msg>
<status status="PASS" starttime="20211006 11:14:56.780" endtime="20211006 11:14:56.781"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211006 11:14:56.781" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211006 11:14:56.781" endtime="20211006 11:14:56.781"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211006 11:14:56.782" endtime="20211006 11:14:56.782"/>
</kw>
<status status="PASS" starttime="20211006 11:14:56.780" endtime="20211006 11:14:56.783"/>
</kw>
<status status="PASS" starttime="20211006 11:14:56.779" endtime="20211006 11:14:56.783"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211006 11:14:56.775" endtime="20211006 11:14:56.783"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211006 11:14:56.707" endtime="20211006 11:14:56.784"/>
</suite>
<suite id="s1-s24" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s24-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211006 11:15:00.627" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211006 11:15:00.626" endtime="20211006 11:15:00.627"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211006 11:15:00.628" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211006 11:15:00.627" endtime="20211006 11:15:00.628"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211006 11:15:00.629" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211006 11:15:00.628" endtime="20211006 11:15:00.629"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211006 11:15:00.629" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211006 11:15:00.629" endtime="20211006 11:15:00.630"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211006 11:15:00.631" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211006 11:15:00.631" level="INFO">${version_file_contents} = #Wed Oct 06 11:12:21 UTC 2021
cTime=1633518721775
clusterID=CID-ffa182e5-46e3-4218-af01-dfe61b2d0548
omUuid=1d61aa5f-9e76-44c6-80f3-9226c23a44fb
nodeType=OM
scmUuid=a1fc52cf-043a-4d7e-9c12-efc890f5c95...</msg>
<status status="PASS" starttime="20211006 11:15:00.631" endtime="20211006 11:15:00.631"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211006 11:15:00.632" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211006 11:15:00.632" endtime="20211006 11:15:00.632"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211006 11:15:00.632" endtime="20211006 11:15:00.633"/>
</kw>
<status status="PASS" starttime="20211006 11:15:00.630" endtime="20211006 11:15:00.633"/>
</kw>
<status status="PASS" starttime="20211006 11:15:00.630" endtime="20211006 11:15:00.633"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211006 11:15:00.626" endtime="20211006 11:15:00.633"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211006 11:15:00.555" endtime="20211006 11:15:00.634"/>
</suite>
<suite id="s1-s25" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s25-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211006 11:15:04.480" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211006 11:15:04.479" endtime="20211006 11:15:04.480"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211006 11:15:04.481" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211006 11:15:04.480" endtime="20211006 11:15:04.481"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211006 11:15:04.481" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211006 11:15:04.481" endtime="20211006 11:15:04.482"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211006 11:15:04.482" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211006 11:15:04.482" endtime="20211006 11:15:04.482"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211006 11:15:04.484" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211006 11:15:04.484" level="INFO">${version_file_contents} = #Wed Oct 06 11:12:21 UTC 2021
cTime=1633518719945
clusterID=CID-ffa182e5-46e3-4218-af01-dfe61b2d0548
omUuid=f6ac0d09-b290-46ee-9ce9-68e548fdface
nodeType=OM
scmUuid=a1fc52cf-043a-4d7e-9c12-efc890f5c95...</msg>
<status status="PASS" starttime="20211006 11:15:04.483" endtime="20211006 11:15:04.484"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211006 11:15:04.485" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211006 11:15:04.484" endtime="20211006 11:15:04.485"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211006 11:15:04.485" endtime="20211006 11:15:04.486"/>
</kw>
<status status="PASS" starttime="20211006 11:15:04.483" endtime="20211006 11:15:04.486"/>
</kw>
<status status="PASS" starttime="20211006 11:15:04.483" endtime="20211006 11:15:04.486"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211006 11:15:04.478" endtime="20211006 11:15:04.486"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211006 11:15:04.416" endtime="20211006 11:15:04.487"/>
</suite>
<suite id="s1-s26" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s26-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211006 11:15:08.299" level="INFO">${random} = 62884</msg>
<status status="PASS" starttime="20211006 11:15:08.298" endtime="20211006 11:15:08.299"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211006 11:15:08.305" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-62884 2&gt;&amp;1'.</msg>
<msg timestamp="20211006 11:15:12.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20211006 11:15:12.960" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211006 11:15:08.301" endtime="20211006 11:15:12.960"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211006 11:15:12.961" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211006 11:15:12.960" endtime="20211006 11:15:12.961"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211006 11:15:12.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211006 11:15:12.961" endtime="20211006 11:15:12.962"/>
</kw>
<status status="PASS" starttime="20211006 11:15:08.301" endtime="20211006 11:15:12.962"/>
</kw>
<msg timestamp="20211006 11:15:12.962" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211006 11:15:08.300" endtime="20211006 11:15:12.963"/>
</kw>
<msg timestamp="20211006 11:15:12.963" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211006 11:15:08.299" endtime="20211006 11:15:12.963"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211006 11:15:12.963" endtime="20211006 11:15:12.964"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211006 11:15:08.298" endtime="20211006 11:15:12.964"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211006 11:15:08.228" endtime="20211006 11:15:12.965"/>
</suite>
<suite id="s1-s27" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s27-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211006 11:15:16.882" level="INFO">Running command 'ozone sh volume create new1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20211006 11:15:19.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20211006 11:15:19.730" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211006 11:15:16.877" endtime="20211006 11:15:19.730"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211006 11:15:19.732" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211006 11:15:19.730" endtime="20211006 11:15:19.732"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211006 11:15:19.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211006 11:15:19.732" endtime="20211006 11:15:19.733"/>
</kw>
<status status="PASS" starttime="20211006 11:15:16.876" endtime="20211006 11:15:19.733"/>
</kw>
<msg timestamp="20211006 11:15:19.734" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211006 11:15:16.876" endtime="20211006 11:15:19.734"/>
</kw>
<msg timestamp="20211006 11:15:19.734" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211006 11:15:16.875" endtime="20211006 11:15:19.734"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211006 11:15:19.734" endtime="20211006 11:15:19.735"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211006 11:15:19.749" level="INFO">Running command 'ozone sh bucket create /new1-volume/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211006 11:15:22.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20211006 11:15:22.502" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211006 11:15:19.744" endtime="20211006 11:15:22.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211006 11:15:22.503" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211006 11:15:22.502" endtime="20211006 11:15:22.503"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211006 11:15:22.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211006 11:15:22.503" endtime="20211006 11:15:22.504"/>
</kw>
<status status="PASS" starttime="20211006 11:15:19.736" endtime="20211006 11:15:22.504"/>
</kw>
<msg timestamp="20211006 11:15:22.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211006 11:15:19.736" endtime="20211006 11:15:22.504"/>
</kw>
<msg timestamp="20211006 11:15:22.505" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211006 11:15:19.735" endtime="20211006 11:15:22.505"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211006 11:15:22.505" endtime="20211006 11:15:22.505"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211006 11:15:22.511" level="INFO">Running command 'ozone sh key put /new1-volume/new1-bucket/new1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211006 11:15:28.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20211006 11:15:28.017" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211006 11:15:22.507" endtime="20211006 11:15:28.017"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211006 11:15:28.018" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211006 11:15:28.017" endtime="20211006 11:15:28.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211006 11:15:28.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211006 11:15:28.018" endtime="20211006 11:15:28.019"/>
</kw>
<status status="PASS" starttime="20211006 11:15:22.507" endtime="20211006 11:15:28.019"/>
</kw>
<msg timestamp="20211006 11:15:28.019" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211006 11:15:22.507" endtime="20211006 11:15:28.019"/>
</kw>
<msg timestamp="20211006 11:15:28.020" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211006 11:15:22.506" endtime="20211006 11:15:28.020"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211006 11:15:28.020" endtime="20211006 11:15:28.020"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211006 11:15:16.874" endtime="20211006 11:15:28.021"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20211006 11:15:16.806" endtime="20211006 11:15:28.022"/>
</suite>
<suite id="s1-s28" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s28-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211006 11:15:31.965" level="INFO">${random} = 77886</msg>
<status status="PASS" starttime="20211006 11:15:31.964" endtime="20211006 11:15:31.965"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211006 11:15:31.971" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-77886 2&gt;&amp;1'.</msg>
<msg timestamp="20211006 11:15:36.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20211006 11:15:36.716" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211006 11:15:31.967" endtime="20211006 11:15:36.716"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211006 11:15:36.717" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211006 11:15:36.716" endtime="20211006 11:15:36.717"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211006 11:15:36.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211006 11:15:36.717" endtime="20211006 11:15:36.718"/>
</kw>
<status status="PASS" starttime="20211006 11:15:31.966" endtime="20211006 11:15:36.719"/>
</kw>
<msg timestamp="20211006 11:15:36.719" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211006 11:15:31.966" endtime="20211006 11:15:36.719"/>
</kw>
<msg timestamp="20211006 11:15:36.719" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211006 11:15:31.965" endtime="20211006 11:15:36.719"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211006 11:15:36.720" endtime="20211006 11:15:36.720"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211006 11:15:31.963" endtime="20211006 11:15:36.720"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211006 11:15:31.893" endtime="20211006 11:15:36.722"/>
</suite>
<suite id="s1-s29" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s29-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211006 11:14:41.366" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20211006 11:14:41.365" endtime="20211006 11:14:41.366"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211006 11:14:41.367" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211006 11:14:41.366" endtime="20211006 11:14:41.367"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211006 11:14:41.367" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211006 11:14:41.367" endtime="20211006 11:14:41.367"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211006 11:14:41.368" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20211006 11:14:41.367" endtime="20211006 11:14:41.368"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211006 11:14:41.369" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211006 11:14:41.370" level="INFO">${version_file_contents} = #Wed Oct 06 11:11:57 UTC 2021
cTime=1633518717602
clusterID=CID-ffa182e5-46e3-4218-af01-dfe61b2d0548
nodeType=SCM
scmUuid=a1fc52cf-043a-4d7e-9c12-efc890f5c955
layoutVersion=0
</msg>
<status status="PASS" starttime="20211006 11:14:41.369" endtime="20211006 11:14:41.370"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211006 11:14:41.370" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211006 11:14:41.370" endtime="20211006 11:14:41.370"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211006 11:14:41.371" endtime="20211006 11:14:41.371"/>
</kw>
<status status="PASS" starttime="20211006 11:14:41.369" endtime="20211006 11:14:41.371"/>
</kw>
<status status="PASS" starttime="20211006 11:14:41.368" endtime="20211006 11:14:41.371"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211006 11:14:41.364" endtime="20211006 11:14:41.372"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211006 11:14:41.301" endtime="20211006 11:14:41.372"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="177829"/>
</suite>
<statistics>
<total>
<stat pass="30" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="30" fail="0" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s8" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s9" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s10" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s11" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s12" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s13" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s14" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s15" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s16" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s17" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s18" name="Validate">upgrade.Validate</stat>
<stat pass="2" fail="0" skip="0" id="s1-s19" name="Finalize">upgrade.Finalize</stat>
<stat pass="1" fail="0" skip="0" id="s1-s20" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s21" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s22" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s23" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s24" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s25" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s26" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s27" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s28" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s29" name="Check-Mlv">upgrade.Check-Mlv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
