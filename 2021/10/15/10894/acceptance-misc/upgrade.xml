<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1.2 (Python 3.6.9 on linux)" generated="20211015 17:21:57.051" rpa="false" schemaversion="2">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211015 17:12:40.384" level="INFO">${random} = 44457</msg>
<status status="PASS" starttime="20211015 17:12:40.383" endtime="20211015 17:12:40.384"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211015 17:12:40.390" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-44457 2&gt;&amp;1'.</msg>
<msg timestamp="20211015 17:12:44.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20211015 17:12:44.474" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211015 17:12:40.386" endtime="20211015 17:12:44.474"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211015 17:12:44.476" level="INFO"/>
<status status="PASS" starttime="20211015 17:12:44.475" endtime="20211015 17:12:44.477"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211015 17:12:44.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211015 17:12:44.477" endtime="20211015 17:12:44.478"/>
</kw>
<status status="PASS" starttime="20211015 17:12:40.385" endtime="20211015 17:12:44.478"/>
</kw>
<msg timestamp="20211015 17:12:44.479" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211015 17:12:40.385" endtime="20211015 17:12:44.479"/>
</kw>
<msg timestamp="20211015 17:12:44.480" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211015 17:12:40.384" endtime="20211015 17:12:44.481"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211015 17:12:44.481" endtime="20211015 17:12:44.482"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211015 17:12:40.382" endtime="20211015 17:12:44.482"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211015 17:12:40.329" endtime="20211015 17:12:44.484"/>
</suite>
<suite id="s1-s2" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s2-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211015 17:16:56.937" level="INFO">${random} = 30058</msg>
<status status="PASS" starttime="20211015 17:16:56.937" endtime="20211015 17:16:56.937"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211015 17:16:56.943" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-30058 2&gt;&amp;1'.</msg>
<msg timestamp="20211015 17:17:00.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20211015 17:17:00.978" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211015 17:16:56.939" endtime="20211015 17:17:00.979"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211015 17:17:00.980" level="INFO"/>
<status status="PASS" starttime="20211015 17:17:00.979" endtime="20211015 17:17:00.980"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211015 17:17:00.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211015 17:17:00.980" endtime="20211015 17:17:00.981"/>
</kw>
<status status="PASS" starttime="20211015 17:16:56.939" endtime="20211015 17:17:00.981"/>
</kw>
<msg timestamp="20211015 17:17:00.981" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211015 17:16:56.938" endtime="20211015 17:17:00.981"/>
</kw>
<msg timestamp="20211015 17:17:00.982" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211015 17:16:56.937" endtime="20211015 17:17:00.982"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211015 17:17:00.982" endtime="20211015 17:17:00.982"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211015 17:16:56.936" endtime="20211015 17:17:00.982"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211015 17:16:56.886" endtime="20211015 17:17:00.984"/>
</suite>
<suite id="s1-s3" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211015 17:17:04.842" level="INFO">Running command 'ozone sh volume create old2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20211015 17:17:07.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20211015 17:17:07.139" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211015 17:17:04.838" endtime="20211015 17:17:07.139"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211015 17:17:07.141" level="INFO"/>
<status status="PASS" starttime="20211015 17:17:07.140" endtime="20211015 17:17:07.141"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211015 17:17:07.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211015 17:17:07.141" endtime="20211015 17:17:07.142"/>
</kw>
<status status="PASS" starttime="20211015 17:17:04.838" endtime="20211015 17:17:07.142"/>
</kw>
<msg timestamp="20211015 17:17:07.142" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211015 17:17:04.837" endtime="20211015 17:17:07.142"/>
</kw>
<msg timestamp="20211015 17:17:07.143" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211015 17:17:04.837" endtime="20211015 17:17:07.143"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211015 17:17:07.143" endtime="20211015 17:17:07.143"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211015 17:17:07.151" level="INFO">Running command 'ozone sh bucket create /old2-volume/old2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211015 17:17:09.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20211015 17:17:09.641" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211015 17:17:07.147" endtime="20211015 17:17:09.641"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211015 17:17:09.642" level="INFO"/>
<status status="PASS" starttime="20211015 17:17:09.641" endtime="20211015 17:17:09.642"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211015 17:17:09.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211015 17:17:09.642" endtime="20211015 17:17:09.647"/>
</kw>
<status status="PASS" starttime="20211015 17:17:07.144" endtime="20211015 17:17:09.647"/>
</kw>
<msg timestamp="20211015 17:17:09.647" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211015 17:17:07.144" endtime="20211015 17:17:09.648"/>
</kw>
<msg timestamp="20211015 17:17:09.648" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211015 17:17:07.144" endtime="20211015 17:17:09.648"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211015 17:17:09.648" endtime="20211015 17:17:09.649"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211015 17:17:09.654" level="INFO">Running command 'ozone sh key put /old2-volume/old2-bucket/old2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211015 17:17:14.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20211015 17:17:14.424" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211015 17:17:09.651" endtime="20211015 17:17:14.424"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211015 17:17:14.425" level="INFO"/>
<status status="PASS" starttime="20211015 17:17:14.425" endtime="20211015 17:17:14.425"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211015 17:17:14.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211015 17:17:14.426" endtime="20211015 17:17:14.426"/>
</kw>
<status status="PASS" starttime="20211015 17:17:09.651" endtime="20211015 17:17:14.426"/>
</kw>
<msg timestamp="20211015 17:17:14.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211015 17:17:09.650" endtime="20211015 17:17:14.427"/>
</kw>
<msg timestamp="20211015 17:17:14.427" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211015 17:17:09.650" endtime="20211015 17:17:14.427"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211015 17:17:14.427" endtime="20211015 17:17:14.427"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211015 17:17:04.836" endtime="20211015 17:17:14.428"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20211015 17:17:04.786" endtime="20211015 17:17:14.429"/>
</suite>
<suite id="s1-s4" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211015 17:17:18.355" level="INFO">${random} = 17664</msg>
<status status="PASS" starttime="20211015 17:17:18.355" endtime="20211015 17:17:18.355"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211015 17:17:18.361" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-17664 2&gt;&amp;1'.</msg>
<msg timestamp="20211015 17:17:22.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20211015 17:17:22.404" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211015 17:17:18.357" endtime="20211015 17:17:22.404"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211015 17:17:22.405" level="INFO"/>
<status status="PASS" starttime="20211015 17:17:22.404" endtime="20211015 17:17:22.405"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211015 17:17:22.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211015 17:17:22.405" endtime="20211015 17:17:22.406"/>
</kw>
<status status="PASS" starttime="20211015 17:17:18.357" endtime="20211015 17:17:22.406"/>
</kw>
<msg timestamp="20211015 17:17:22.407" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211015 17:17:18.356" endtime="20211015 17:17:22.407"/>
</kw>
<msg timestamp="20211015 17:17:22.407" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211015 17:17:18.356" endtime="20211015 17:17:22.407"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211015 17:17:22.407" endtime="20211015 17:17:22.408"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211015 17:17:18.354" endtime="20211015 17:17:22.408"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211015 17:17:18.297" endtime="20211015 17:17:22.410"/>
</suite>
<suite id="s1-s5" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211015 17:16:48.770" level="INFO">${random} = 80468</msg>
<status status="PASS" starttime="20211015 17:16:48.769" endtime="20211015 17:16:48.770"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211015 17:16:48.776" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-80468 2&gt;&amp;1'.</msg>
<msg timestamp="20211015 17:16:53.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20211015 17:16:53.090" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211015 17:16:48.772" endtime="20211015 17:16:53.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211015 17:16:53.092" level="INFO"/>
<status status="PASS" starttime="20211015 17:16:53.091" endtime="20211015 17:16:53.092"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211015 17:16:53.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211015 17:16:53.092" endtime="20211015 17:16:53.093"/>
</kw>
<status status="PASS" starttime="20211015 17:16:48.771" endtime="20211015 17:16:53.093"/>
</kw>
<msg timestamp="20211015 17:16:53.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211015 17:16:48.771" endtime="20211015 17:16:53.094"/>
</kw>
<msg timestamp="20211015 17:16:53.094" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211015 17:16:48.770" endtime="20211015 17:16:53.094"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211015 17:16:53.094" endtime="20211015 17:16:53.095"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211015 17:16:48.768" endtime="20211015 17:16:53.095"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211015 17:16:48.707" endtime="20211015 17:16:53.096"/>
</suite>
<suite id="s1-s6" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s6-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211015 17:12:24.958" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20211015 17:12:27.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20211015 17:12:27.323" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211015 17:12:24.954" endtime="20211015 17:12:27.324"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211015 17:12:27.325" level="INFO"/>
<status status="PASS" starttime="20211015 17:12:27.324" endtime="20211015 17:12:27.325"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211015 17:12:27.326" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211015 17:12:27.325" endtime="20211015 17:12:27.326"/>
</kw>
<status status="PASS" starttime="20211015 17:12:24.954" endtime="20211015 17:12:27.327"/>
</kw>
<msg timestamp="20211015 17:12:27.327" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211015 17:12:24.953" endtime="20211015 17:12:27.328"/>
</kw>
<msg timestamp="20211015 17:12:27.328" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211015 17:12:24.952" endtime="20211015 17:12:27.328"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211015 17:12:27.328" endtime="20211015 17:12:27.328"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211015 17:12:27.340" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211015 17:12:29.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20211015 17:12:29.928" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211015 17:12:27.330" endtime="20211015 17:12:29.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211015 17:12:29.930" level="INFO"/>
<status status="PASS" starttime="20211015 17:12:29.929" endtime="20211015 17:12:29.930"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211015 17:12:29.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211015 17:12:29.930" endtime="20211015 17:12:29.930"/>
</kw>
<status status="PASS" starttime="20211015 17:12:27.330" endtime="20211015 17:12:29.931"/>
</kw>
<msg timestamp="20211015 17:12:29.931" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211015 17:12:27.329" endtime="20211015 17:12:29.931"/>
</kw>
<msg timestamp="20211015 17:12:29.931" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211015 17:12:27.329" endtime="20211015 17:12:29.931"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211015 17:12:29.931" endtime="20211015 17:12:29.934"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211015 17:12:29.943" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211015 17:12:36.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20211015 17:12:36.420" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211015 17:12:29.939" endtime="20211015 17:12:36.420"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211015 17:12:36.421" level="INFO"/>
<status status="PASS" starttime="20211015 17:12:36.420" endtime="20211015 17:12:36.421"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211015 17:12:36.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211015 17:12:36.421" endtime="20211015 17:12:36.422"/>
</kw>
<status status="PASS" starttime="20211015 17:12:29.938" endtime="20211015 17:12:36.422"/>
</kw>
<msg timestamp="20211015 17:12:36.422" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211015 17:12:29.936" endtime="20211015 17:12:36.422"/>
</kw>
<msg timestamp="20211015 17:12:36.422" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211015 17:12:29.935" endtime="20211015 17:12:36.422"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211015 17:12:36.423" endtime="20211015 17:12:36.423"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211015 17:12:24.952" endtime="20211015 17:12:36.423"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20211015 17:12:24.898" endtime="20211015 17:12:36.425"/>
</suite>
<suite id="s1-s7" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s7-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211015 17:20:29.095" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20211015 17:20:29.094" endtime="20211015 17:20:29.095"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211015 17:20:29.095" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211015 17:20:29.095" endtime="20211015 17:20:29.095"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211015 17:20:29.096" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211015 17:20:29.096" endtime="20211015 17:20:29.096"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211015 17:20:29.097" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20211015 17:20:29.096" endtime="20211015 17:20:29.097"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211015 17:20:29.098" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211015 17:20:29.098" level="INFO">${version_file_contents} = #Fri Oct 15 17:19:05 UTC 2021
cTime=1634317876870
clusterID=CID-ddd3f8e7-eadf-4e46-9948-74d070907dab
nodeType=SCM
scmUuid=5c5f1605-edb9-4eff-8e7e-2eeb5dbd9308
layoutVersion=2
</msg>
<status status="PASS" starttime="20211015 17:20:29.098" endtime="20211015 17:20:29.098"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211015 17:20:29.099" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20211015 17:20:29.099" endtime="20211015 17:20:29.099"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211015 17:20:29.099" endtime="20211015 17:20:29.100"/>
</kw>
<status status="PASS" starttime="20211015 17:20:29.097" endtime="20211015 17:20:29.100"/>
</kw>
<status status="PASS" starttime="20211015 17:20:29.097" endtime="20211015 17:20:29.100"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211015 17:20:29.093" endtime="20211015 17:20:29.100"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211015 17:20:29.040" endtime="20211015 17:20:29.101"/>
</suite>
<suite id="s1-s8" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s8-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211015 17:21:14.708" level="INFO">${random} = 94516</msg>
<status status="PASS" starttime="20211015 17:21:14.707" endtime="20211015 17:21:14.708"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211015 17:21:14.714" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-94516 2&gt;&amp;1'.</msg>
<msg timestamp="20211015 17:21:19.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20211015 17:21:19.098" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211015 17:21:14.710" endtime="20211015 17:21:19.098"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211015 17:21:19.099" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211015 17:21:19.099" endtime="20211015 17:21:19.100"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211015 17:21:19.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211015 17:21:19.100" endtime="20211015 17:21:19.100"/>
</kw>
<status status="PASS" starttime="20211015 17:21:14.710" endtime="20211015 17:21:19.101"/>
</kw>
<msg timestamp="20211015 17:21:19.101" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211015 17:21:14.709" endtime="20211015 17:21:19.101"/>
</kw>
<msg timestamp="20211015 17:21:19.101" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211015 17:21:14.708" endtime="20211015 17:21:19.101"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211015 17:21:19.101" endtime="20211015 17:21:19.102"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211015 17:21:14.706" endtime="20211015 17:21:19.102"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211015 17:21:14.644" endtime="20211015 17:21:19.103"/>
</suite>
<suite id="s1-s9" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s9-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211015 17:21:23.021" level="INFO">Running command 'ozone sh volume create new2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20211015 17:21:25.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20211015 17:21:25.722" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211015 17:21:23.018" endtime="20211015 17:21:25.722"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211015 17:21:25.723" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211015 17:21:25.723" endtime="20211015 17:21:25.724"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211015 17:21:25.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211015 17:21:25.724" endtime="20211015 17:21:25.725"/>
</kw>
<status status="PASS" starttime="20211015 17:21:23.017" endtime="20211015 17:21:25.725"/>
</kw>
<msg timestamp="20211015 17:21:25.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211015 17:21:23.017" endtime="20211015 17:21:25.725"/>
</kw>
<msg timestamp="20211015 17:21:25.725" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211015 17:21:23.016" endtime="20211015 17:21:25.725"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211015 17:21:25.726" endtime="20211015 17:21:25.726"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211015 17:21:25.739" level="INFO">Running command 'ozone sh bucket create /new2-volume/new2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211015 17:21:28.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20211015 17:21:28.333" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211015 17:21:25.733" endtime="20211015 17:21:28.333"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211015 17:21:28.334" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211015 17:21:28.333" endtime="20211015 17:21:28.334"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211015 17:21:28.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211015 17:21:28.334" endtime="20211015 17:21:28.335"/>
</kw>
<status status="PASS" starttime="20211015 17:21:25.727" endtime="20211015 17:21:28.335"/>
</kw>
<msg timestamp="20211015 17:21:28.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211015 17:21:25.727" endtime="20211015 17:21:28.335"/>
</kw>
<msg timestamp="20211015 17:21:28.336" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211015 17:21:25.726" endtime="20211015 17:21:28.336"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211015 17:21:28.336" endtime="20211015 17:21:28.336"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211015 17:21:28.340" level="INFO">Running command 'ozone sh key put /new2-volume/new2-bucket/new2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211015 17:21:33.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20211015 17:21:33.144" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211015 17:21:28.338" endtime="20211015 17:21:33.144"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211015 17:21:33.146" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211015 17:21:33.145" endtime="20211015 17:21:33.146"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211015 17:21:33.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211015 17:21:33.146" endtime="20211015 17:21:33.147"/>
</kw>
<status status="PASS" starttime="20211015 17:21:28.338" endtime="20211015 17:21:33.147"/>
</kw>
<msg timestamp="20211015 17:21:33.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211015 17:21:28.337" endtime="20211015 17:21:33.147"/>
</kw>
<msg timestamp="20211015 17:21:33.148" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211015 17:21:28.336" endtime="20211015 17:21:33.148"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211015 17:21:33.148" endtime="20211015 17:21:33.148"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211015 17:21:23.015" endtime="20211015 17:21:33.149"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20211015 17:21:22.961" endtime="20211015 17:21:33.150"/>
</suite>
<suite id="s1-s10" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s10-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211015 17:21:36.931" level="INFO">${random} = 44232</msg>
<status status="PASS" starttime="20211015 17:21:36.930" endtime="20211015 17:21:36.931"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211015 17:21:36.936" level="INFO">Running command 'ozone sh key get /new2-volume/new2-bucket/new2-key /tmp/key-44232 2&gt;&amp;1'.</msg>
<msg timestamp="20211015 17:21:42.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20211015 17:21:42.207" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211015 17:21:36.933" endtime="20211015 17:21:42.207"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211015 17:21:42.208" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211015 17:21:42.207" endtime="20211015 17:21:42.208"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211015 17:21:42.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211015 17:21:42.208" endtime="20211015 17:21:42.209"/>
</kw>
<status status="PASS" starttime="20211015 17:21:36.932" endtime="20211015 17:21:42.210"/>
</kw>
<msg timestamp="20211015 17:21:42.210" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211015 17:21:36.932" endtime="20211015 17:21:42.210"/>
</kw>
<msg timestamp="20211015 17:21:42.210" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211015 17:21:36.931" endtime="20211015 17:21:42.210"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211015 17:21:42.210" endtime="20211015 17:21:42.211"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211015 17:21:36.929" endtime="20211015 17:21:42.211"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211015 17:21:36.878" endtime="20211015 17:21:42.213"/>
</suite>
<suite id="s1-s11" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s11-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211015 17:20:33.097" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211015 17:20:33.096" endtime="20211015 17:20:33.097"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211015 17:20:33.097" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211015 17:20:33.097" endtime="20211015 17:20:33.097"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211015 17:20:33.098" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211015 17:20:33.097" endtime="20211015 17:20:33.098"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211015 17:20:33.098" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211015 17:20:33.098" endtime="20211015 17:20:33.099"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211015 17:20:33.100" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211015 17:20:33.100" level="INFO">${version_file_contents} = #Fri Oct 15 17:19:30 UTC 2021
cTime=1634318008620
clusterID=647b59bd-984f-4f2f-92a3-9f4266e88b10
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20211015 17:20:33.099" endtime="20211015 17:20:33.100"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211015 17:20:33.101" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20211015 17:20:33.100" endtime="20211015 17:20:33.101"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211015 17:20:33.101" endtime="20211015 17:20:33.101"/>
</kw>
<status status="PASS" starttime="20211015 17:20:33.099" endtime="20211015 17:20:33.102"/>
</kw>
<status status="PASS" starttime="20211015 17:20:33.099" endtime="20211015 17:20:33.102"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211015 17:20:33.095" endtime="20211015 17:20:33.102"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211015 17:20:33.043" endtime="20211015 17:20:33.103"/>
</suite>
<suite id="s1-s12" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s12-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211015 17:20:37.265" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211015 17:20:37.265" endtime="20211015 17:20:37.265"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211015 17:20:37.266" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211015 17:20:37.265" endtime="20211015 17:20:37.266"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211015 17:20:37.266" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211015 17:20:37.266" endtime="20211015 17:20:37.267"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211015 17:20:37.267" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211015 17:20:37.267" endtime="20211015 17:20:37.267"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211015 17:20:37.268" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211015 17:20:37.269" level="INFO">${version_file_contents} = #Fri Oct 15 17:19:25 UTC 2021
cTime=1634317996711
clusterID=be088625-d639-4963-873e-e8b0b0721d02
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20211015 17:20:37.268" endtime="20211015 17:20:37.269"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211015 17:20:37.269" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20211015 17:20:37.269" endtime="20211015 17:20:37.269"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211015 17:20:37.269" endtime="20211015 17:20:37.270"/>
</kw>
<status status="PASS" starttime="20211015 17:20:37.268" endtime="20211015 17:20:37.270"/>
</kw>
<status status="PASS" starttime="20211015 17:20:37.267" endtime="20211015 17:20:37.270"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211015 17:20:37.264" endtime="20211015 17:20:37.270"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211015 17:20:37.211" endtime="20211015 17:20:37.271"/>
</suite>
<suite id="s1-s13" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s13-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211015 17:20:41.388" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211015 17:20:41.387" endtime="20211015 17:20:41.388"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211015 17:20:41.389" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211015 17:20:41.388" endtime="20211015 17:20:41.389"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211015 17:20:41.389" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211015 17:20:41.389" endtime="20211015 17:20:41.390"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211015 17:20:41.390" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211015 17:20:41.390" endtime="20211015 17:20:41.390"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211015 17:20:41.391" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211015 17:20:41.392" level="INFO">${version_file_contents} = #Fri Oct 15 17:19:12 UTC 2021
cTime=1634318007747
clusterID=c085c5d9-8b25-4b2c-855b-64f2004d3430
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20211015 17:20:41.391" endtime="20211015 17:20:41.392"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211015 17:20:41.392" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20211015 17:20:41.392" endtime="20211015 17:20:41.392"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211015 17:20:41.393" endtime="20211015 17:20:41.393"/>
</kw>
<status status="PASS" starttime="20211015 17:20:41.391" endtime="20211015 17:20:41.393"/>
</kw>
<status status="PASS" starttime="20211015 17:20:41.390" endtime="20211015 17:20:41.393"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211015 17:20:41.386" endtime="20211015 17:20:41.393"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211015 17:20:41.327" endtime="20211015 17:20:41.394"/>
</suite>
<suite id="s1-s14" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s14-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211015 17:20:45.644" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211015 17:20:45.643" endtime="20211015 17:20:45.644"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211015 17:20:45.644" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211015 17:20:45.644" endtime="20211015 17:20:45.644"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211015 17:20:45.645" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211015 17:20:45.645" endtime="20211015 17:20:45.645"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211015 17:20:45.646" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211015 17:20:45.645" endtime="20211015 17:20:45.646"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211015 17:20:45.647" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211015 17:20:45.647" level="INFO">${version_file_contents} = #Fri Oct 15 17:11:43 UTC 2021
cTime=1634317882740
clusterID=CID-ddd3f8e7-eadf-4e46-9948-74d070907dab
omUuid=52ada0b5-c388-4214-9099-4e0ef33bd04d
nodeType=OM
scmUuid=5c5f1605-edb9-4eff-8e7e-2eeb5dbd930...</msg>
<status status="PASS" starttime="20211015 17:20:45.647" endtime="20211015 17:20:45.647"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211015 17:20:45.648" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211015 17:20:45.648" endtime="20211015 17:20:45.648"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211015 17:20:45.648" endtime="20211015 17:20:45.649"/>
</kw>
<status status="PASS" starttime="20211015 17:20:45.646" endtime="20211015 17:20:45.649"/>
</kw>
<status status="PASS" starttime="20211015 17:20:45.646" endtime="20211015 17:20:45.649"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211015 17:20:45.642" endtime="20211015 17:20:45.649"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211015 17:20:45.585" endtime="20211015 17:20:45.650"/>
</suite>
<suite id="s1-s15" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s15-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211015 17:20:49.793" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211015 17:20:49.792" endtime="20211015 17:20:49.793"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211015 17:20:49.794" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211015 17:20:49.793" endtime="20211015 17:20:49.794"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211015 17:20:49.794" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211015 17:20:49.794" endtime="20211015 17:20:49.794"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211015 17:20:49.795" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211015 17:20:49.795" endtime="20211015 17:20:49.795"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211015 17:20:49.797" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211015 17:20:49.797" level="INFO">${version_file_contents} = #Fri Oct 15 17:11:43 UTC 2021
cTime=1634317882583
clusterID=CID-ddd3f8e7-eadf-4e46-9948-74d070907dab
omUuid=55344030-3592-487c-8184-1c230ef0cace
nodeType=OM
scmUuid=5c5f1605-edb9-4eff-8e7e-2eeb5dbd930...</msg>
<status status="PASS" starttime="20211015 17:20:49.796" endtime="20211015 17:20:49.797"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211015 17:20:49.798" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211015 17:20:49.797" endtime="20211015 17:20:49.798"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211015 17:20:49.798" endtime="20211015 17:20:49.798"/>
</kw>
<status status="PASS" starttime="20211015 17:20:49.796" endtime="20211015 17:20:49.799"/>
</kw>
<status status="PASS" starttime="20211015 17:20:49.795" endtime="20211015 17:20:49.799"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211015 17:20:49.792" endtime="20211015 17:20:49.799"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211015 17:20:49.733" endtime="20211015 17:20:49.800"/>
</suite>
<suite id="s1-s16" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s16-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211015 17:20:53.786" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211015 17:20:53.785" endtime="20211015 17:20:53.786"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211015 17:20:53.786" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211015 17:20:53.786" endtime="20211015 17:20:53.786"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211015 17:20:53.787" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211015 17:20:53.786" endtime="20211015 17:20:53.787"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211015 17:20:53.788" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211015 17:20:53.787" endtime="20211015 17:20:53.788"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211015 17:20:53.789" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211015 17:20:53.789" level="INFO">${version_file_contents} = #Fri Oct 15 17:11:43 UTC 2021
cTime=1634317882490
clusterID=CID-ddd3f8e7-eadf-4e46-9948-74d070907dab
omUuid=0d99eb8f-629a-4e44-aa98-5113c521d610
nodeType=OM
scmUuid=5c5f1605-edb9-4eff-8e7e-2eeb5dbd930...</msg>
<status status="PASS" starttime="20211015 17:20:53.789" endtime="20211015 17:20:53.790"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211015 17:20:53.790" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211015 17:20:53.790" endtime="20211015 17:20:53.790"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211015 17:20:53.790" endtime="20211015 17:20:53.791"/>
</kw>
<status status="PASS" starttime="20211015 17:20:53.788" endtime="20211015 17:20:53.791"/>
</kw>
<status status="PASS" starttime="20211015 17:20:53.788" endtime="20211015 17:20:53.791"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211015 17:20:53.784" endtime="20211015 17:20:53.791"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211015 17:20:53.724" endtime="20211015 17:20:53.792"/>
</suite>
<suite id="s1-s17" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s17-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211015 17:20:57.789" level="INFO">${random} = 90274</msg>
<status status="PASS" starttime="20211015 17:20:57.789" endtime="20211015 17:20:57.789"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211015 17:20:57.795" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-90274 2&gt;&amp;1'.</msg>
<msg timestamp="20211015 17:21:02.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20211015 17:21:02.483" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211015 17:20:57.791" endtime="20211015 17:21:02.483"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211015 17:21:02.485" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211015 17:21:02.484" endtime="20211015 17:21:02.485"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211015 17:21:02.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211015 17:21:02.485" endtime="20211015 17:21:02.485"/>
</kw>
<status status="PASS" starttime="20211015 17:20:57.791" endtime="20211015 17:21:02.486"/>
</kw>
<msg timestamp="20211015 17:21:02.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211015 17:20:57.791" endtime="20211015 17:21:02.486"/>
</kw>
<msg timestamp="20211015 17:21:02.486" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211015 17:20:57.790" endtime="20211015 17:21:02.486"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211015 17:21:02.486" endtime="20211015 17:21:02.487"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211015 17:20:57.788" endtime="20211015 17:21:02.487"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211015 17:20:57.734" endtime="20211015 17:21:02.489"/>
</suite>
<suite id="s1-s18" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s18-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211015 17:21:06.290" level="INFO">${random} = 37035</msg>
<status status="PASS" starttime="20211015 17:21:06.290" endtime="20211015 17:21:06.290"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211015 17:21:06.296" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-37035 2&gt;&amp;1'.</msg>
<msg timestamp="20211015 17:21:10.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20211015 17:21:10.785" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211015 17:21:06.292" endtime="20211015 17:21:10.785"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211015 17:21:10.786" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211015 17:21:10.785" endtime="20211015 17:21:10.786"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211015 17:21:10.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211015 17:21:10.786" endtime="20211015 17:21:10.787"/>
</kw>
<status status="PASS" starttime="20211015 17:21:06.292" endtime="20211015 17:21:10.788"/>
</kw>
<msg timestamp="20211015 17:21:10.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211015 17:21:06.291" endtime="20211015 17:21:10.788"/>
</kw>
<msg timestamp="20211015 17:21:10.788" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211015 17:21:06.290" endtime="20211015 17:21:10.788"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211015 17:21:10.788" endtime="20211015 17:21:10.789"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211015 17:21:06.289" endtime="20211015 17:21:10.789"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211015 17:21:06.235" endtime="20211015 17:21:10.791"/>
</suite>
<suite id="s1-s19" name="Finalize" source="/opt/hadoop/smoketest/upgrade/finalize.robot">
<test id="s1-s19-t1" name="Finalize SCM">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20211015 17:18:58.297" endtime="20211015 17:18:58.297"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizeupgrade</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211015 17:18:58.302" level="INFO">Running command 'ozone admin scm finalizeupgrade 2&gt;&amp;1'.</msg>
<msg timestamp="20211015 17:20:21.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20211015 17:20:21.545" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20211015 17:18:58.299" endtime="20211015 17:20:21.545"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211015 17:20:21.546" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20211015 17:20:21.545" endtime="20211015 17:20:21.546"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211015 17:20:21.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211015 17:20:21.546" endtime="20211015 17:20:21.547"/>
</kw>
<status status="PASS" starttime="20211015 17:18:58.298" endtime="20211015 17:20:21.547"/>
</kw>
<msg timestamp="20211015 17:20:21.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211015 17:18:58.298" endtime="20211015 17:20:21.548"/>
</kw>
<msg timestamp="20211015 17:20:21.548" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20211015 17:18:58.298" endtime="20211015 17:20:21.548"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211015 17:20:21.548" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20211015 17:20:21.548" endtime="20211015 17:20:21.549"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211015 17:18:58.296" endtime="20211015 17:20:21.549"/>
</test>
<test id="s1-s19-t2" name="Finalize OMs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20211015 17:20:21.550" endtime="20211015 17:20:21.551"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizeupgrade -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211015 17:20:21.555" level="INFO">Running command 'ozone admin om finalizeupgrade -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20211015 17:20:24.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20211015 17:20:24.914" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteExceptio...</msg>
<status status="PASS" starttime="20211015 17:20:21.553" endtime="20211015 17:20:24.914"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211015 17:20:24.916" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.createNotLeaderException(OzoneManagerRatisUtils.java:465)
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.checkLeaderStatus(OzoneManagerRatisUtils.java:451)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.checkLeaderStatus(OzoneManagerProtocolServerSideTranslatorPB.java:243)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:135)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy20.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20211015 17:20:24.915" endtime="20211015 17:20:24.916"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211015 17:20:24.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211015 17:20:24.916" endtime="20211015 17:20:24.917"/>
</kw>
<status status="PASS" starttime="20211015 17:20:21.552" endtime="20211015 17:20:24.919"/>
</kw>
<msg timestamp="20211015 17:20:24.919" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211015 17:20:21.552" endtime="20211015 17:20:24.919"/>
</kw>
<msg timestamp="20211015 17:20:24.920" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteExceptio...</msg>
<status status="PASS" starttime="20211015 17:20:21.551" endtime="20211015 17:20:24.920"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211015 17:20:24.920" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.createNotLeaderException(OzoneManagerRatisUtils.java:465)
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.checkLeaderStatus(OzoneManagerRatisUtils.java:451)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.checkLeaderStatus(OzoneManagerProtocolServerSideTranslatorPB.java:243)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:135)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy20.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20211015 17:20:24.920" endtime="20211015 17:20:24.922"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211015 17:20:21.550" endtime="20211015 17:20:24.922"/>
</test>
<doc>Finalize Upgrade of OMs and SCM</doc>
<status status="PASS" starttime="20211015 17:18:58.245" endtime="20211015 17:20:24.926"/>
</suite>
<suite id="s1-s20" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s20-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211015 17:14:26.278" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211015 17:14:26.277" endtime="20211015 17:14:26.278"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211015 17:14:26.279" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211015 17:14:26.278" endtime="20211015 17:14:26.279"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211015 17:14:26.280" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211015 17:14:26.279" endtime="20211015 17:14:26.280"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211015 17:14:26.280" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211015 17:14:26.280" endtime="20211015 17:14:26.281"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211015 17:14:26.282" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211015 17:14:26.282" level="INFO">${version_file_contents} = #Fri Oct 15 17:13:28 UTC 2021
cTime=1634318008620
clusterID=647b59bd-984f-4f2f-92a3-9f4266e88b10
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20211015 17:14:26.282" endtime="20211015 17:14:26.282"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211015 17:14:26.283" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211015 17:14:26.282" endtime="20211015 17:14:26.283"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211015 17:14:26.283" endtime="20211015 17:14:26.284"/>
</kw>
<status status="PASS" starttime="20211015 17:14:26.281" endtime="20211015 17:14:26.284"/>
</kw>
<status status="PASS" starttime="20211015 17:14:26.281" endtime="20211015 17:14:26.284"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211015 17:14:26.276" endtime="20211015 17:14:26.284"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211015 17:14:26.219" endtime="20211015 17:14:26.285"/>
</suite>
<suite id="s1-s21" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s21-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211015 17:14:30.199" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211015 17:14:30.198" endtime="20211015 17:14:30.199"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211015 17:14:30.200" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211015 17:14:30.199" endtime="20211015 17:14:30.200"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211015 17:14:30.200" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211015 17:14:30.200" endtime="20211015 17:14:30.200"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211015 17:14:30.201" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211015 17:14:30.200" endtime="20211015 17:14:30.201"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211015 17:14:30.202" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211015 17:14:30.202" level="INFO">${version_file_contents} = #Fri Oct 15 17:13:16 UTC 2021
cTime=1634317996711
clusterID=be088625-d639-4963-873e-e8b0b0721d02
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20211015 17:14:30.202" endtime="20211015 17:14:30.202"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211015 17:14:30.203" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211015 17:14:30.202" endtime="20211015 17:14:30.203"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211015 17:14:30.203" endtime="20211015 17:14:30.204"/>
</kw>
<status status="PASS" starttime="20211015 17:14:30.201" endtime="20211015 17:14:30.204"/>
</kw>
<status status="PASS" starttime="20211015 17:14:30.201" endtime="20211015 17:14:30.204"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211015 17:14:30.198" endtime="20211015 17:14:30.204"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211015 17:14:30.148" endtime="20211015 17:14:30.205"/>
</suite>
<suite id="s1-s22" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s22-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211015 17:14:34.012" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211015 17:14:34.011" endtime="20211015 17:14:34.012"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211015 17:14:34.013" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211015 17:14:34.012" endtime="20211015 17:14:34.013"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211015 17:14:34.013" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211015 17:14:34.013" endtime="20211015 17:14:34.013"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211015 17:14:34.014" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211015 17:14:34.014" endtime="20211015 17:14:34.014"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211015 17:14:34.015" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211015 17:14:34.016" level="INFO">${version_file_contents} = #Fri Oct 15 17:13:27 UTC 2021
cTime=1634318007747
clusterID=c085c5d9-8b25-4b2c-855b-64f2004d3430
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20211015 17:14:34.015" endtime="20211015 17:14:34.016"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211015 17:14:34.016" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211015 17:14:34.016" endtime="20211015 17:14:34.016"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211015 17:14:34.016" endtime="20211015 17:14:34.017"/>
</kw>
<status status="PASS" starttime="20211015 17:14:34.015" endtime="20211015 17:14:34.017"/>
</kw>
<status status="PASS" starttime="20211015 17:14:34.014" endtime="20211015 17:14:34.017"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211015 17:14:34.010" endtime="20211015 17:14:34.017"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211015 17:14:33.956" endtime="20211015 17:14:34.018"/>
</suite>
<suite id="s1-s23" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s23-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211015 17:14:37.823" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211015 17:14:37.823" endtime="20211015 17:14:37.824"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211015 17:14:37.824" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211015 17:14:37.824" endtime="20211015 17:14:37.824"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211015 17:14:37.825" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211015 17:14:37.824" endtime="20211015 17:14:37.825"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211015 17:14:37.825" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211015 17:14:37.825" endtime="20211015 17:14:37.825"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211015 17:14:37.827" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211015 17:14:37.827" level="INFO">${version_file_contents} = #Fri Oct 15 17:11:43 UTC 2021
cTime=1634317882740
clusterID=CID-ddd3f8e7-eadf-4e46-9948-74d070907dab
omUuid=52ada0b5-c388-4214-9099-4e0ef33bd04d
nodeType=OM
scmUuid=5c5f1605-edb9-4eff-8e7e-2eeb5dbd930...</msg>
<status status="PASS" starttime="20211015 17:14:37.826" endtime="20211015 17:14:37.827"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211015 17:14:37.828" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211015 17:14:37.827" endtime="20211015 17:14:37.828"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211015 17:14:37.828" endtime="20211015 17:14:37.828"/>
</kw>
<status status="PASS" starttime="20211015 17:14:37.826" endtime="20211015 17:14:37.829"/>
</kw>
<status status="PASS" starttime="20211015 17:14:37.826" endtime="20211015 17:14:37.829"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211015 17:14:37.822" endtime="20211015 17:14:37.829"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211015 17:14:37.766" endtime="20211015 17:14:37.830"/>
</suite>
<suite id="s1-s24" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s24-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211015 17:14:41.735" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211015 17:14:41.734" endtime="20211015 17:14:41.735"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211015 17:14:41.736" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211015 17:14:41.735" endtime="20211015 17:14:41.736"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211015 17:14:41.736" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211015 17:14:41.736" endtime="20211015 17:14:41.737"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211015 17:14:41.737" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211015 17:14:41.737" endtime="20211015 17:14:41.737"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211015 17:14:41.738" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211015 17:14:41.739" level="INFO">${version_file_contents} = #Fri Oct 15 17:11:43 UTC 2021
cTime=1634317882583
clusterID=CID-ddd3f8e7-eadf-4e46-9948-74d070907dab
omUuid=55344030-3592-487c-8184-1c230ef0cace
nodeType=OM
scmUuid=5c5f1605-edb9-4eff-8e7e-2eeb5dbd930...</msg>
<status status="PASS" starttime="20211015 17:14:41.738" endtime="20211015 17:14:41.739"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211015 17:14:41.739" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211015 17:14:41.739" endtime="20211015 17:14:41.739"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211015 17:14:41.740" endtime="20211015 17:14:41.740"/>
</kw>
<status status="PASS" starttime="20211015 17:14:41.738" endtime="20211015 17:14:41.740"/>
</kw>
<status status="PASS" starttime="20211015 17:14:41.737" endtime="20211015 17:14:41.740"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211015 17:14:41.734" endtime="20211015 17:14:41.740"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211015 17:14:41.682" endtime="20211015 17:14:41.741"/>
</suite>
<suite id="s1-s25" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s25-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211015 17:14:45.622" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211015 17:14:45.621" endtime="20211015 17:14:45.622"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211015 17:14:45.623" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211015 17:14:45.622" endtime="20211015 17:14:45.623"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211015 17:14:45.623" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211015 17:14:45.623" endtime="20211015 17:14:45.624"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211015 17:14:45.624" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211015 17:14:45.624" endtime="20211015 17:14:45.624"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211015 17:14:45.625" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211015 17:14:45.626" level="INFO">${version_file_contents} = #Fri Oct 15 17:11:43 UTC 2021
cTime=1634317882490
clusterID=CID-ddd3f8e7-eadf-4e46-9948-74d070907dab
omUuid=0d99eb8f-629a-4e44-aa98-5113c521d610
nodeType=OM
scmUuid=5c5f1605-edb9-4eff-8e7e-2eeb5dbd930...</msg>
<status status="PASS" starttime="20211015 17:14:45.625" endtime="20211015 17:14:45.626"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211015 17:14:45.626" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211015 17:14:45.626" endtime="20211015 17:14:45.626"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211015 17:14:45.627" endtime="20211015 17:14:45.627"/>
</kw>
<status status="PASS" starttime="20211015 17:14:45.625" endtime="20211015 17:14:45.627"/>
</kw>
<status status="PASS" starttime="20211015 17:14:45.624" endtime="20211015 17:14:45.627"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211015 17:14:45.621" endtime="20211015 17:14:45.627"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211015 17:14:45.568" endtime="20211015 17:14:45.628"/>
</suite>
<suite id="s1-s26" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s26-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211015 17:14:49.455" level="INFO">${random} = 91468</msg>
<status status="PASS" starttime="20211015 17:14:49.455" endtime="20211015 17:14:49.456"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211015 17:14:49.463" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-91468 2&gt;&amp;1'.</msg>
<msg timestamp="20211015 17:14:54.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20211015 17:14:54.267" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211015 17:14:49.459" endtime="20211015 17:14:54.267"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211015 17:14:54.269" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211015 17:14:54.268" endtime="20211015 17:14:54.269"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211015 17:14:54.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211015 17:14:54.269" endtime="20211015 17:14:54.269"/>
</kw>
<status status="PASS" starttime="20211015 17:14:49.458" endtime="20211015 17:14:54.270"/>
</kw>
<msg timestamp="20211015 17:14:54.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211015 17:14:49.457" endtime="20211015 17:14:54.270"/>
</kw>
<msg timestamp="20211015 17:14:54.270" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211015 17:14:49.456" endtime="20211015 17:14:54.270"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211015 17:14:54.270" endtime="20211015 17:14:54.271"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211015 17:14:49.453" endtime="20211015 17:14:54.271"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211015 17:14:49.390" endtime="20211015 17:14:54.272"/>
</suite>
<suite id="s1-s27" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s27-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211015 17:14:58.073" level="INFO">Running command 'ozone sh volume create new1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20211015 17:15:00.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20211015 17:15:00.789" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211015 17:14:58.069" endtime="20211015 17:15:00.789"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211015 17:15:00.790" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211015 17:15:00.790" endtime="20211015 17:15:00.790"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211015 17:15:00.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211015 17:15:00.791" endtime="20211015 17:15:00.791"/>
</kw>
<status status="PASS" starttime="20211015 17:14:58.068" endtime="20211015 17:15:00.791"/>
</kw>
<msg timestamp="20211015 17:15:00.792" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211015 17:14:58.068" endtime="20211015 17:15:00.792"/>
</kw>
<msg timestamp="20211015 17:15:00.792" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211015 17:14:58.067" endtime="20211015 17:15:00.792"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211015 17:15:00.792" endtime="20211015 17:15:00.793"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211015 17:15:00.804" level="INFO">Running command 'ozone sh bucket create /new1-volume/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211015 17:15:03.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20211015 17:15:03.640" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211015 17:15:00.799" endtime="20211015 17:15:03.640"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211015 17:15:03.641" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211015 17:15:03.640" endtime="20211015 17:15:03.641"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211015 17:15:03.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211015 17:15:03.641" endtime="20211015 17:15:03.642"/>
</kw>
<status status="PASS" starttime="20211015 17:15:00.794" endtime="20211015 17:15:03.642"/>
</kw>
<msg timestamp="20211015 17:15:03.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211015 17:15:00.793" endtime="20211015 17:15:03.642"/>
</kw>
<msg timestamp="20211015 17:15:03.642" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211015 17:15:00.793" endtime="20211015 17:15:03.642"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211015 17:15:03.643" endtime="20211015 17:15:03.643"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211015 17:15:03.647" level="INFO">Running command 'ozone sh key put /new1-volume/new1-bucket/new1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211015 17:15:08.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20211015 17:15:08.625" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211015 17:15:03.645" endtime="20211015 17:15:08.625"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211015 17:15:08.627" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211015 17:15:08.626" endtime="20211015 17:15:08.627"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211015 17:15:08.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211015 17:15:08.627" endtime="20211015 17:15:08.628"/>
</kw>
<status status="PASS" starttime="20211015 17:15:03.644" endtime="20211015 17:15:08.628"/>
</kw>
<msg timestamp="20211015 17:15:08.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211015 17:15:03.644" endtime="20211015 17:15:08.628"/>
</kw>
<msg timestamp="20211015 17:15:08.628" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211015 17:15:03.643" endtime="20211015 17:15:08.629"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211015 17:15:08.629" endtime="20211015 17:15:08.629"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211015 17:14:58.066" endtime="20211015 17:15:08.629"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20211015 17:14:58.015" endtime="20211015 17:15:08.631"/>
</suite>
<suite id="s1-s28" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s28-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211015 17:15:12.363" level="INFO">${random} = 30949</msg>
<status status="PASS" starttime="20211015 17:15:12.362" endtime="20211015 17:15:12.363"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211015 17:15:12.369" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-30949 2&gt;&amp;1'.</msg>
<msg timestamp="20211015 17:15:16.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20211015 17:15:16.960" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211015 17:15:12.365" endtime="20211015 17:15:16.960"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211015 17:15:16.961" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211015 17:15:16.961" endtime="20211015 17:15:16.961"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211015 17:15:16.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211015 17:15:16.962" endtime="20211015 17:15:16.962"/>
</kw>
<status status="PASS" starttime="20211015 17:15:12.364" endtime="20211015 17:15:16.963"/>
</kw>
<msg timestamp="20211015 17:15:16.963" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211015 17:15:12.364" endtime="20211015 17:15:16.963"/>
</kw>
<msg timestamp="20211015 17:15:16.963" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211015 17:15:12.363" endtime="20211015 17:15:16.963"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211015 17:15:16.963" endtime="20211015 17:15:16.964"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211015 17:15:12.361" endtime="20211015 17:15:16.964"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211015 17:15:12.309" endtime="20211015 17:15:16.965"/>
</suite>
<suite id="s1-s29" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s29-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211015 17:14:22.359" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20211015 17:14:22.359" endtime="20211015 17:14:22.359"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211015 17:14:22.360" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211015 17:14:22.359" endtime="20211015 17:14:22.360"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211015 17:14:22.360" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211015 17:14:22.360" endtime="20211015 17:14:22.361"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211015 17:14:22.361" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20211015 17:14:22.361" endtime="20211015 17:14:22.361"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211015 17:14:22.362" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211015 17:14:22.363" level="INFO">${version_file_contents} = #Fri Oct 15 17:11:16 UTC 2021
cTime=1634317876870
clusterID=CID-ddd3f8e7-eadf-4e46-9948-74d070907dab
nodeType=SCM
scmUuid=5c5f1605-edb9-4eff-8e7e-2eeb5dbd9308
layoutVersion=0
</msg>
<status status="PASS" starttime="20211015 17:14:22.362" endtime="20211015 17:14:22.363"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211015 17:14:22.363" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211015 17:14:22.363" endtime="20211015 17:14:22.363"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211015 17:14:22.364" endtime="20211015 17:14:22.364"/>
</kw>
<status status="PASS" starttime="20211015 17:14:22.362" endtime="20211015 17:14:22.364"/>
</kw>
<status status="PASS" starttime="20211015 17:14:22.361" endtime="20211015 17:14:22.364"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211015 17:14:22.358" endtime="20211015 17:14:22.364"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211015 17:14:22.304" endtime="20211015 17:14:22.366"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="174932"/>
</suite>
<statistics>
<total>
<stat pass="30" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="30" fail="0" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s8" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s9" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s10" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s11" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s12" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s13" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s14" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s15" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s16" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s17" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s18" name="Validate">upgrade.Validate</stat>
<stat pass="2" fail="0" skip="0" id="s1-s19" name="Finalize">upgrade.Finalize</stat>
<stat pass="1" fail="0" skip="0" id="s1-s20" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s21" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s22" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s23" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s24" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s25" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s26" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s27" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s28" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s29" name="Check-Mlv">upgrade.Check-Mlv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
