<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1.1 (Python 3.6.9 on linux)" generated="20211003 13:32:39.828" rpa="false" schemaversion="2">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211003 13:23:45.725" level="INFO">${random} = 88566</msg>
<status status="PASS" starttime="20211003 13:23:45.724" endtime="20211003 13:23:45.725"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 13:23:45.731" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-88566 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 13:23:50.192" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 13:23:50.192" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 13:23:45.727" endtime="20211003 13:23:50.192"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 13:23:50.194" level="INFO"/>
<status status="PASS" starttime="20211003 13:23:50.193" endtime="20211003 13:23:50.194"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 13:23:50.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 13:23:50.194" endtime="20211003 13:23:50.195"/>
</kw>
<status status="PASS" starttime="20211003 13:23:45.726" endtime="20211003 13:23:50.195"/>
</kw>
<msg timestamp="20211003 13:23:50.195" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 13:23:45.726" endtime="20211003 13:23:50.195"/>
</kw>
<msg timestamp="20211003 13:23:50.196" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 13:23:45.725" endtime="20211003 13:23:50.196"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 13:23:50.196" endtime="20211003 13:23:50.196"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211003 13:23:45.723" endtime="20211003 13:23:50.197"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211003 13:23:45.656" endtime="20211003 13:23:50.198"/>
</suite>
<suite id="s1-s2" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s2-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211003 13:27:48.225" level="INFO">${random} = 36279</msg>
<status status="PASS" starttime="20211003 13:27:48.225" endtime="20211003 13:27:48.225"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 13:27:48.231" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-36279 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 13:27:52.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 13:27:52.538" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 13:27:48.228" endtime="20211003 13:27:52.538"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 13:27:52.540" level="INFO"/>
<status status="PASS" starttime="20211003 13:27:52.539" endtime="20211003 13:27:52.540"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 13:27:52.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 13:27:52.540" endtime="20211003 13:27:52.541"/>
</kw>
<status status="PASS" starttime="20211003 13:27:48.227" endtime="20211003 13:27:52.541"/>
</kw>
<msg timestamp="20211003 13:27:52.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 13:27:48.227" endtime="20211003 13:27:52.542"/>
</kw>
<msg timestamp="20211003 13:27:52.542" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 13:27:48.226" endtime="20211003 13:27:52.542"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 13:27:52.542" endtime="20211003 13:27:52.543"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211003 13:27:48.224" endtime="20211003 13:27:52.543"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211003 13:27:48.155" endtime="20211003 13:27:52.544"/>
</suite>
<suite id="s1-s3" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 13:27:56.490" level="INFO">Running command 'ozone sh volume create old2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 13:27:59.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 13:27:59.016" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 13:27:56.487" endtime="20211003 13:27:59.017"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 13:27:59.019" level="INFO"/>
<status status="PASS" starttime="20211003 13:27:59.018" endtime="20211003 13:27:59.019"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 13:27:59.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 13:27:59.019" endtime="20211003 13:27:59.020"/>
</kw>
<status status="PASS" starttime="20211003 13:27:56.486" endtime="20211003 13:27:59.022"/>
</kw>
<msg timestamp="20211003 13:27:59.022" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 13:27:56.486" endtime="20211003 13:27:59.023"/>
</kw>
<msg timestamp="20211003 13:27:59.023" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 13:27:56.485" endtime="20211003 13:27:59.023"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 13:27:59.024" endtime="20211003 13:27:59.024"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 13:27:59.038" level="INFO">Running command 'ozone sh bucket create /old2-volume/old2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 13:28:01.820" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 13:28:01.821" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 13:27:59.030" endtime="20211003 13:28:01.821"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 13:28:01.822" level="INFO"/>
<status status="PASS" starttime="20211003 13:28:01.821" endtime="20211003 13:28:01.822"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 13:28:01.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 13:28:01.822" endtime="20211003 13:28:01.823"/>
</kw>
<status status="PASS" starttime="20211003 13:27:59.026" endtime="20211003 13:28:01.824"/>
</kw>
<msg timestamp="20211003 13:28:01.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 13:27:59.025" endtime="20211003 13:28:01.824"/>
</kw>
<msg timestamp="20211003 13:28:01.824" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 13:27:59.025" endtime="20211003 13:28:01.824"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 13:28:01.824" endtime="20211003 13:28:01.825"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 13:28:01.829" level="INFO">Running command 'ozone sh key put /old2-volume/old2-bucket/old2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 13:28:07.160" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 13:28:07.160" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 13:28:01.827" endtime="20211003 13:28:07.160"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 13:28:07.162" level="INFO"/>
<status status="PASS" starttime="20211003 13:28:07.161" endtime="20211003 13:28:07.162"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 13:28:07.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 13:28:07.162" endtime="20211003 13:28:07.163"/>
</kw>
<status status="PASS" starttime="20211003 13:28:01.826" endtime="20211003 13:28:07.163"/>
</kw>
<msg timestamp="20211003 13:28:07.163" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 13:28:01.826" endtime="20211003 13:28:07.163"/>
</kw>
<msg timestamp="20211003 13:28:07.163" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 13:28:01.825" endtime="20211003 13:28:07.163"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 13:28:07.164" endtime="20211003 13:28:07.164"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211003 13:27:56.484" endtime="20211003 13:28:07.164"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20211003 13:27:56.419" endtime="20211003 13:28:07.167"/>
</suite>
<suite id="s1-s4" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211003 13:28:11.074" level="INFO">${random} = 85674</msg>
<status status="PASS" starttime="20211003 13:28:11.073" endtime="20211003 13:28:11.074"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 13:28:11.079" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-85674 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 13:28:15.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 13:28:15.309" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 13:28:11.076" endtime="20211003 13:28:15.309"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 13:28:15.310" level="INFO"/>
<status status="PASS" starttime="20211003 13:28:15.309" endtime="20211003 13:28:15.310"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 13:28:15.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 13:28:15.310" endtime="20211003 13:28:15.311"/>
</kw>
<status status="PASS" starttime="20211003 13:28:11.075" endtime="20211003 13:28:15.311"/>
</kw>
<msg timestamp="20211003 13:28:15.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 13:28:11.075" endtime="20211003 13:28:15.312"/>
</kw>
<msg timestamp="20211003 13:28:15.312" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 13:28:11.074" endtime="20211003 13:28:15.312"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 13:28:15.312" endtime="20211003 13:28:15.313"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211003 13:28:11.072" endtime="20211003 13:28:15.313"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211003 13:28:11.007" endtime="20211003 13:28:15.315"/>
</suite>
<suite id="s1-s5" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211003 13:27:39.470" level="INFO">${random} = 93696</msg>
<status status="PASS" starttime="20211003 13:27:39.470" endtime="20211003 13:27:39.470"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 13:27:39.476" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-93696 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 13:27:44.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 13:27:44.191" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 13:27:39.473" endtime="20211003 13:27:44.191"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 13:27:44.192" level="INFO"/>
<status status="PASS" starttime="20211003 13:27:44.191" endtime="20211003 13:27:44.192"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 13:27:44.193" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 13:27:44.192" endtime="20211003 13:27:44.193"/>
</kw>
<status status="PASS" starttime="20211003 13:27:39.472" endtime="20211003 13:27:44.194"/>
</kw>
<msg timestamp="20211003 13:27:44.194" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 13:27:39.472" endtime="20211003 13:27:44.194"/>
</kw>
<msg timestamp="20211003 13:27:44.194" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 13:27:39.470" endtime="20211003 13:27:44.194"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 13:27:44.194" endtime="20211003 13:27:44.195"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211003 13:27:39.469" endtime="20211003 13:27:44.195"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211003 13:27:39.393" endtime="20211003 13:27:44.197"/>
</suite>
<suite id="s1-s6" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s6-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 13:23:30.141" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 13:23:33.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 13:23:33.011" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 13:23:30.137" endtime="20211003 13:23:33.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 13:23:33.013" level="INFO"/>
<status status="PASS" starttime="20211003 13:23:33.012" endtime="20211003 13:23:33.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 13:23:33.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 13:23:33.015" endtime="20211003 13:23:33.016"/>
</kw>
<status status="PASS" starttime="20211003 13:23:30.137" endtime="20211003 13:23:33.017"/>
</kw>
<msg timestamp="20211003 13:23:33.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 13:23:30.137" endtime="20211003 13:23:33.017"/>
</kw>
<msg timestamp="20211003 13:23:33.017" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 13:23:30.136" endtime="20211003 13:23:33.017"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 13:23:33.017" endtime="20211003 13:23:33.018"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 13:23:33.028" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 13:23:35.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 13:23:35.806" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 13:23:33.020" endtime="20211003 13:23:35.806"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 13:23:35.808" level="INFO"/>
<status status="PASS" starttime="20211003 13:23:35.807" endtime="20211003 13:23:35.808"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 13:23:35.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 13:23:35.808" endtime="20211003 13:23:35.811"/>
</kw>
<status status="PASS" starttime="20211003 13:23:33.019" endtime="20211003 13:23:35.811"/>
</kw>
<msg timestamp="20211003 13:23:35.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 13:23:33.019" endtime="20211003 13:23:35.812"/>
</kw>
<msg timestamp="20211003 13:23:35.812" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 13:23:33.018" endtime="20211003 13:23:35.812"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 13:23:35.812" endtime="20211003 13:23:35.813"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 13:23:35.817" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 13:23:41.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 13:23:41.747" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 13:23:35.815" endtime="20211003 13:23:41.747"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 13:23:41.748" level="INFO"/>
<status status="PASS" starttime="20211003 13:23:41.747" endtime="20211003 13:23:41.748"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 13:23:41.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 13:23:41.748" endtime="20211003 13:23:41.749"/>
</kw>
<status status="PASS" starttime="20211003 13:23:35.814" endtime="20211003 13:23:41.749"/>
</kw>
<msg timestamp="20211003 13:23:41.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 13:23:35.814" endtime="20211003 13:23:41.750"/>
</kw>
<msg timestamp="20211003 13:23:41.750" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 13:23:35.813" endtime="20211003 13:23:41.750"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 13:23:41.750" endtime="20211003 13:23:41.751"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211003 13:23:30.135" endtime="20211003 13:23:41.751"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20211003 13:23:30.067" endtime="20211003 13:23:41.753"/>
</suite>
<suite id="s1-s7" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s7-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211003 13:31:11.174" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20211003 13:31:11.173" endtime="20211003 13:31:11.174"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211003 13:31:11.174" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211003 13:31:11.174" endtime="20211003 13:31:11.174"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211003 13:31:11.175" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211003 13:31:11.175" endtime="20211003 13:31:11.175"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211003 13:31:11.176" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20211003 13:31:11.175" endtime="20211003 13:31:11.176"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211003 13:31:11.177" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211003 13:31:11.178" level="INFO">${version_file_contents} = #Sun Oct 03 13:29:48 UTC 2021
cTime=1633267337711
clusterID=CID-1ab1884d-154f-472c-9a88-14f9c80745ed
nodeType=SCM
scmUuid=8f10ca68-496c-4b6f-9628-25d4b671216f
layoutVersion=2
</msg>
<status status="PASS" starttime="20211003 13:31:11.177" endtime="20211003 13:31:11.178"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211003 13:31:11.178" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20211003 13:31:11.178" endtime="20211003 13:31:11.179"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 13:31:11.179" endtime="20211003 13:31:11.179"/>
</kw>
<status status="PASS" starttime="20211003 13:31:11.177" endtime="20211003 13:31:11.179"/>
</kw>
<status status="PASS" starttime="20211003 13:31:11.176" endtime="20211003 13:31:11.180"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211003 13:31:11.172" endtime="20211003 13:31:11.180"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211003 13:31:11.109" endtime="20211003 13:31:11.181"/>
</suite>
<suite id="s1-s8" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s8-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211003 13:31:56.179" level="INFO">${random} = 77952</msg>
<status status="PASS" starttime="20211003 13:31:56.178" endtime="20211003 13:31:56.179"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 13:31:56.185" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-77952 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 13:32:00.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 13:32:00.710" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211003 13:31:56.181" endtime="20211003 13:32:00.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 13:32:00.711" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211003 13:32:00.711" endtime="20211003 13:32:00.711"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 13:32:00.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 13:32:00.712" endtime="20211003 13:32:00.712"/>
</kw>
<status status="PASS" starttime="20211003 13:31:56.181" endtime="20211003 13:32:00.713"/>
</kw>
<msg timestamp="20211003 13:32:00.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 13:31:56.180" endtime="20211003 13:32:00.713"/>
</kw>
<msg timestamp="20211003 13:32:00.713" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211003 13:31:56.179" endtime="20211003 13:32:00.713"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 13:32:00.713" endtime="20211003 13:32:00.714"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211003 13:31:56.177" endtime="20211003 13:32:00.714"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211003 13:31:56.112" endtime="20211003 13:32:00.715"/>
</suite>
<suite id="s1-s9" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s9-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 13:32:04.610" level="INFO">Running command 'ozone sh volume create new2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 13:32:07.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 13:32:07.409" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211003 13:32:04.606" endtime="20211003 13:32:07.409"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 13:32:07.410" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211003 13:32:07.409" endtime="20211003 13:32:07.410"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 13:32:07.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 13:32:07.411" endtime="20211003 13:32:07.411"/>
</kw>
<status status="PASS" starttime="20211003 13:32:04.606" endtime="20211003 13:32:07.412"/>
</kw>
<msg timestamp="20211003 13:32:07.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 13:32:04.605" endtime="20211003 13:32:07.412"/>
</kw>
<msg timestamp="20211003 13:32:07.412" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211003 13:32:04.604" endtime="20211003 13:32:07.412"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 13:32:07.413" endtime="20211003 13:32:07.413"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 13:32:07.419" level="INFO">Running command 'ozone sh bucket create /new2-volume/new2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 13:32:10.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 13:32:10.332" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211003 13:32:07.416" endtime="20211003 13:32:10.332"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 13:32:10.333" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211003 13:32:10.333" endtime="20211003 13:32:10.334"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 13:32:10.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 13:32:10.334" endtime="20211003 13:32:10.334"/>
</kw>
<status status="PASS" starttime="20211003 13:32:07.414" endtime="20211003 13:32:10.335"/>
</kw>
<msg timestamp="20211003 13:32:10.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 13:32:07.414" endtime="20211003 13:32:10.335"/>
</kw>
<msg timestamp="20211003 13:32:10.335" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211003 13:32:07.413" endtime="20211003 13:32:10.335"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 13:32:10.336" endtime="20211003 13:32:10.336"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 13:32:10.341" level="INFO">Running command 'ozone sh key put /new2-volume/new2-bucket/new2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 13:32:16.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 13:32:16.497" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211003 13:32:10.338" endtime="20211003 13:32:16.497"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 13:32:16.499" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211003 13:32:16.498" endtime="20211003 13:32:16.499"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 13:32:16.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 13:32:16.499" endtime="20211003 13:32:16.500"/>
</kw>
<status status="PASS" starttime="20211003 13:32:10.337" endtime="20211003 13:32:16.500"/>
</kw>
<msg timestamp="20211003 13:32:16.500" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 13:32:10.337" endtime="20211003 13:32:16.500"/>
</kw>
<msg timestamp="20211003 13:32:16.501" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211003 13:32:10.336" endtime="20211003 13:32:16.501"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 13:32:16.501" endtime="20211003 13:32:16.502"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211003 13:32:04.604" endtime="20211003 13:32:16.502"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20211003 13:32:04.540" endtime="20211003 13:32:16.503"/>
</suite>
<suite id="s1-s10" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s10-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211003 13:32:20.393" level="INFO">${random} = 04281</msg>
<status status="PASS" starttime="20211003 13:32:20.393" endtime="20211003 13:32:20.393"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 13:32:20.400" level="INFO">Running command 'ozone sh key get /new2-volume/new2-bucket/new2-key /tmp/key-04281 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 13:32:25.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 13:32:25.270" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211003 13:32:20.395" endtime="20211003 13:32:25.270"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 13:32:25.271" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211003 13:32:25.270" endtime="20211003 13:32:25.271"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 13:32:25.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 13:32:25.272" endtime="20211003 13:32:25.273"/>
</kw>
<status status="PASS" starttime="20211003 13:32:20.395" endtime="20211003 13:32:25.273"/>
</kw>
<msg timestamp="20211003 13:32:25.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 13:32:20.394" endtime="20211003 13:32:25.273"/>
</kw>
<msg timestamp="20211003 13:32:25.274" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211003 13:32:20.393" endtime="20211003 13:32:25.274"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 13:32:25.274" endtime="20211003 13:32:25.275"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211003 13:32:20.392" endtime="20211003 13:32:25.275"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211003 13:32:20.327" endtime="20211003 13:32:25.276"/>
</suite>
<suite id="s1-s11" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s11-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211003 13:31:15.191" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211003 13:31:15.190" endtime="20211003 13:31:15.191"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211003 13:31:15.192" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211003 13:31:15.191" endtime="20211003 13:31:15.192"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211003 13:31:15.192" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211003 13:31:15.192" endtime="20211003 13:31:15.192"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211003 13:31:15.193" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211003 13:31:15.193" endtime="20211003 13:31:15.193"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211003 13:31:15.195" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211003 13:31:15.195" level="INFO">${version_file_contents} = #Sun Oct 03 13:29:50 UTC 2021
cTime=1633267459820
clusterID=5813a293-7e75-4ba4-af40-8a35a9f4c12c
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20211003 13:31:15.194" endtime="20211003 13:31:15.195"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211003 13:31:15.196" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20211003 13:31:15.195" endtime="20211003 13:31:15.196"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 13:31:15.196" endtime="20211003 13:31:15.197"/>
</kw>
<status status="PASS" starttime="20211003 13:31:15.194" endtime="20211003 13:31:15.197"/>
</kw>
<status status="PASS" starttime="20211003 13:31:15.193" endtime="20211003 13:31:15.197"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211003 13:31:15.189" endtime="20211003 13:31:15.197"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211003 13:31:15.126" endtime="20211003 13:31:15.199"/>
</suite>
<suite id="s1-s12" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s12-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211003 13:31:19.146" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211003 13:31:19.146" endtime="20211003 13:31:19.146"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211003 13:31:19.147" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211003 13:31:19.147" endtime="20211003 13:31:19.147"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211003 13:31:19.148" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211003 13:31:19.147" endtime="20211003 13:31:19.148"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211003 13:31:19.149" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211003 13:31:19.148" endtime="20211003 13:31:19.149"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211003 13:31:19.150" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211003 13:31:19.150" level="INFO">${version_file_contents} = #Sun Oct 03 13:30:05 UTC 2021
cTime=1633267457376
clusterID=95d6806e-994e-4dd1-9cbe-0cf2af2aa74a
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20211003 13:31:19.150" endtime="20211003 13:31:19.150"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211003 13:31:19.151" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20211003 13:31:19.151" endtime="20211003 13:31:19.151"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 13:31:19.151" endtime="20211003 13:31:19.152"/>
</kw>
<status status="PASS" starttime="20211003 13:31:19.149" endtime="20211003 13:31:19.152"/>
</kw>
<status status="PASS" starttime="20211003 13:31:19.149" endtime="20211003 13:31:19.152"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211003 13:31:19.145" endtime="20211003 13:31:19.152"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211003 13:31:19.077" endtime="20211003 13:31:19.153"/>
</suite>
<suite id="s1-s13" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s13-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211003 13:31:23.132" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211003 13:31:23.131" endtime="20211003 13:31:23.132"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211003 13:31:23.132" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211003 13:31:23.132" endtime="20211003 13:31:23.132"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211003 13:31:23.133" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211003 13:31:23.133" endtime="20211003 13:31:23.133"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211003 13:31:23.134" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211003 13:31:23.133" endtime="20211003 13:31:23.134"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211003 13:31:23.135" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211003 13:31:23.136" level="INFO">${version_file_contents} = #Sun Oct 03 13:30:14 UTC 2021
cTime=1633267455226
clusterID=69f49f50-d80f-4b93-8f24-e7e2af75b011
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20211003 13:31:23.135" endtime="20211003 13:31:23.136"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211003 13:31:23.136" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20211003 13:31:23.136" endtime="20211003 13:31:23.136"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 13:31:23.137" endtime="20211003 13:31:23.137"/>
</kw>
<status status="PASS" starttime="20211003 13:31:23.134" endtime="20211003 13:31:23.137"/>
</kw>
<status status="PASS" starttime="20211003 13:31:23.134" endtime="20211003 13:31:23.137"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211003 13:31:23.130" endtime="20211003 13:31:23.138"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211003 13:31:23.067" endtime="20211003 13:31:23.138"/>
</suite>
<suite id="s1-s14" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s14-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211003 13:31:27.090" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211003 13:31:27.089" endtime="20211003 13:31:27.090"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211003 13:31:27.090" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211003 13:31:27.090" endtime="20211003 13:31:27.090"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211003 13:31:27.091" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211003 13:31:27.090" endtime="20211003 13:31:27.091"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211003 13:31:27.092" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211003 13:31:27.091" endtime="20211003 13:31:27.092"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211003 13:31:27.094" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211003 13:31:27.094" level="INFO">${version_file_contents} = #Sun Oct 03 13:22:49 UTC 2021
cTime=1633267347741
clusterID=CID-1ab1884d-154f-472c-9a88-14f9c80745ed
omUuid=407eaab1-8ff1-4d9c-b00e-52e4361ba7fa
nodeType=OM
scmUuid=8f10ca68-496c-4b6f-9628-25d4b671216...</msg>
<status status="PASS" starttime="20211003 13:31:27.093" endtime="20211003 13:31:27.094"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211003 13:31:27.095" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211003 13:31:27.094" endtime="20211003 13:31:27.095"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 13:31:27.095" endtime="20211003 13:31:27.096"/>
</kw>
<status status="PASS" starttime="20211003 13:31:27.093" endtime="20211003 13:31:27.096"/>
</kw>
<status status="PASS" starttime="20211003 13:31:27.092" endtime="20211003 13:31:27.096"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211003 13:31:27.088" endtime="20211003 13:31:27.096"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211003 13:31:27.019" endtime="20211003 13:31:27.097"/>
</suite>
<suite id="s1-s15" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s15-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211003 13:31:31.041" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211003 13:31:31.041" endtime="20211003 13:31:31.041"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211003 13:31:31.042" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211003 13:31:31.042" endtime="20211003 13:31:31.042"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211003 13:31:31.043" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211003 13:31:31.042" endtime="20211003 13:31:31.043"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211003 13:31:31.043" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211003 13:31:31.043" endtime="20211003 13:31:31.044"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211003 13:31:31.045" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211003 13:31:31.045" level="INFO">${version_file_contents} = #Sun Oct 03 13:22:49 UTC 2021
cTime=1633267348361
clusterID=CID-1ab1884d-154f-472c-9a88-14f9c80745ed
omUuid=37842faf-53a1-4ac1-888a-cf6e3b01f7c9
nodeType=OM
scmUuid=8f10ca68-496c-4b6f-9628-25d4b671216...</msg>
<status status="PASS" starttime="20211003 13:31:31.045" endtime="20211003 13:31:31.045"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211003 13:31:31.046" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211003 13:31:31.045" endtime="20211003 13:31:31.046"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 13:31:31.046" endtime="20211003 13:31:31.047"/>
</kw>
<status status="PASS" starttime="20211003 13:31:31.044" endtime="20211003 13:31:31.047"/>
</kw>
<status status="PASS" starttime="20211003 13:31:31.044" endtime="20211003 13:31:31.047"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211003 13:31:31.040" endtime="20211003 13:31:31.047"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211003 13:31:30.966" endtime="20211003 13:31:31.048"/>
</suite>
<suite id="s1-s16" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s16-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211003 13:31:35.046" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211003 13:31:35.045" endtime="20211003 13:31:35.046"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211003 13:31:35.046" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211003 13:31:35.046" endtime="20211003 13:31:35.047"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211003 13:31:35.047" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211003 13:31:35.047" endtime="20211003 13:31:35.047"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211003 13:31:35.048" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211003 13:31:35.047" endtime="20211003 13:31:35.048"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211003 13:31:35.049" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211003 13:31:35.050" level="INFO">${version_file_contents} = #Sun Oct 03 13:22:49 UTC 2021
cTime=1633267349207
clusterID=CID-1ab1884d-154f-472c-9a88-14f9c80745ed
omUuid=0e09ef12-82c1-45ec-9c5d-61f567e8b8ef
nodeType=OM
scmUuid=8f10ca68-496c-4b6f-9628-25d4b671216...</msg>
<status status="PASS" starttime="20211003 13:31:35.049" endtime="20211003 13:31:35.050"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211003 13:31:35.050" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211003 13:31:35.050" endtime="20211003 13:31:35.051"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 13:31:35.051" endtime="20211003 13:31:35.051"/>
</kw>
<status status="PASS" starttime="20211003 13:31:35.049" endtime="20211003 13:31:35.051"/>
</kw>
<status status="PASS" starttime="20211003 13:31:35.048" endtime="20211003 13:31:35.052"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211003 13:31:35.044" endtime="20211003 13:31:35.052"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211003 13:31:34.979" endtime="20211003 13:31:35.053"/>
</suite>
<suite id="s1-s17" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s17-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211003 13:31:38.940" level="INFO">${random} = 02747</msg>
<status status="PASS" starttime="20211003 13:31:38.939" endtime="20211003 13:31:38.940"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 13:31:38.946" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-02747 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 13:31:43.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 13:31:43.837" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211003 13:31:38.942" endtime="20211003 13:31:43.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 13:31:43.839" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211003 13:31:43.838" endtime="20211003 13:31:43.839"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 13:31:43.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 13:31:43.839" endtime="20211003 13:31:43.840"/>
</kw>
<status status="PASS" starttime="20211003 13:31:38.941" endtime="20211003 13:31:43.840"/>
</kw>
<msg timestamp="20211003 13:31:43.840" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 13:31:38.941" endtime="20211003 13:31:43.840"/>
</kw>
<msg timestamp="20211003 13:31:43.841" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211003 13:31:38.940" endtime="20211003 13:31:43.841"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 13:31:43.841" endtime="20211003 13:31:43.841"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211003 13:31:38.938" endtime="20211003 13:31:43.842"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211003 13:31:38.873" endtime="20211003 13:31:43.843"/>
</suite>
<suite id="s1-s18" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s18-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211003 13:31:47.733" level="INFO">${random} = 93042</msg>
<status status="PASS" starttime="20211003 13:31:47.732" endtime="20211003 13:31:47.733"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 13:31:47.739" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-93042 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 13:31:52.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 13:31:52.215" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211003 13:31:47.735" endtime="20211003 13:31:52.215"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 13:31:52.216" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211003 13:31:52.215" endtime="20211003 13:31:52.216"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 13:31:52.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 13:31:52.216" endtime="20211003 13:31:52.217"/>
</kw>
<status status="PASS" starttime="20211003 13:31:47.734" endtime="20211003 13:31:52.217"/>
</kw>
<msg timestamp="20211003 13:31:52.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 13:31:47.734" endtime="20211003 13:31:52.218"/>
</kw>
<msg timestamp="20211003 13:31:52.218" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211003 13:31:47.733" endtime="20211003 13:31:52.218"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 13:31:52.218" endtime="20211003 13:31:52.219"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211003 13:31:47.731" endtime="20211003 13:31:52.219"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211003 13:31:47.658" endtime="20211003 13:31:52.220"/>
</suite>
<suite id="s1-s19" name="Finalize" source="/opt/hadoop/smoketest/upgrade/finalize.robot">
<test id="s1-s19-t1" name="Finalize SCM">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20211003 13:29:40.132" endtime="20211003 13:29:40.133"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizeupgrade</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 13:29:40.138" level="INFO">Running command 'ozone admin scm finalizeupgrade 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 13:31:03.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 13:31:03.701" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20211003 13:29:40.135" endtime="20211003 13:31:03.701"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 13:31:03.703" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20211003 13:31:03.702" endtime="20211003 13:31:03.703"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 13:31:03.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 13:31:03.703" endtime="20211003 13:31:03.704"/>
</kw>
<status status="PASS" starttime="20211003 13:29:40.134" endtime="20211003 13:31:03.704"/>
</kw>
<msg timestamp="20211003 13:31:03.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 13:29:40.134" endtime="20211003 13:31:03.704"/>
</kw>
<msg timestamp="20211003 13:31:03.705" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20211003 13:29:40.133" endtime="20211003 13:31:03.705"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 13:31:03.705" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20211003 13:31:03.705" endtime="20211003 13:31:03.705"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211003 13:29:40.131" endtime="20211003 13:31:03.706"/>
</test>
<test id="s1-s19-t2" name="Finalize OMs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20211003 13:31:03.708" endtime="20211003 13:31:03.708"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizeupgrade -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 13:31:03.713" level="INFO">Running command 'ozone admin om finalizeupgrade -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 13:31:07.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 13:31:07.183" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20211003 13:31:03.710" endtime="20211003 13:31:07.183"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 13:31:07.185" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20211003 13:31:07.184" endtime="20211003 13:31:07.185"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 13:31:07.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 13:31:07.185" endtime="20211003 13:31:07.186"/>
</kw>
<status status="PASS" starttime="20211003 13:31:03.709" endtime="20211003 13:31:07.186"/>
</kw>
<msg timestamp="20211003 13:31:07.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 13:31:03.709" endtime="20211003 13:31:07.186"/>
</kw>
<msg timestamp="20211003 13:31:07.186" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20211003 13:31:03.708" endtime="20211003 13:31:07.187"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 13:31:07.189" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20211003 13:31:07.187" endtime="20211003 13:31:07.189"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211003 13:31:03.707" endtime="20211003 13:31:07.189"/>
</test>
<doc>Finalize Upgrade of OMs and SCM</doc>
<status status="PASS" starttime="20211003 13:29:40.068" endtime="20211003 13:31:07.192"/>
</suite>
<suite id="s1-s20" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s20-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211003 13:25:20.852" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211003 13:25:20.851" endtime="20211003 13:25:20.852"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211003 13:25:20.853" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211003 13:25:20.852" endtime="20211003 13:25:20.853"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211003 13:25:20.854" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211003 13:25:20.853" endtime="20211003 13:25:20.854"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211003 13:25:20.855" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211003 13:25:20.854" endtime="20211003 13:25:20.855"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211003 13:25:20.856" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211003 13:25:20.856" level="INFO">${version_file_contents} = #Sun Oct 03 13:24:19 UTC 2021
cTime=1633267459820
clusterID=5813a293-7e75-4ba4-af40-8a35a9f4c12c
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20211003 13:25:20.856" endtime="20211003 13:25:20.857"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211003 13:25:20.857" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211003 13:25:20.857" endtime="20211003 13:25:20.857"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 13:25:20.857" endtime="20211003 13:25:20.858"/>
</kw>
<status status="PASS" starttime="20211003 13:25:20.855" endtime="20211003 13:25:20.858"/>
</kw>
<status status="PASS" starttime="20211003 13:25:20.855" endtime="20211003 13:25:20.858"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211003 13:25:20.850" endtime="20211003 13:25:20.858"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211003 13:25:20.786" endtime="20211003 13:25:20.860"/>
</suite>
<suite id="s1-s21" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s21-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211003 13:25:24.979" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211003 13:25:24.978" endtime="20211003 13:25:24.979"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211003 13:25:24.980" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211003 13:25:24.980" endtime="20211003 13:25:24.980"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211003 13:25:24.981" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211003 13:25:24.980" endtime="20211003 13:25:24.981"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211003 13:25:24.982" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211003 13:25:24.981" endtime="20211003 13:25:24.982"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211003 13:25:24.984" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211003 13:25:24.984" level="INFO">${version_file_contents} = #Sun Oct 03 13:24:17 UTC 2021
cTime=1633267457376
clusterID=95d6806e-994e-4dd1-9cbe-0cf2af2aa74a
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20211003 13:25:24.983" endtime="20211003 13:25:24.984"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211003 13:25:24.985" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211003 13:25:24.984" endtime="20211003 13:25:24.985"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 13:25:24.985" endtime="20211003 13:25:24.985"/>
</kw>
<status status="PASS" starttime="20211003 13:25:24.983" endtime="20211003 13:25:24.986"/>
</kw>
<status status="PASS" starttime="20211003 13:25:24.982" endtime="20211003 13:25:24.986"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211003 13:25:24.978" endtime="20211003 13:25:24.986"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211003 13:25:24.912" endtime="20211003 13:25:24.988"/>
</suite>
<suite id="s1-s22" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s22-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211003 13:25:28.969" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211003 13:25:28.968" endtime="20211003 13:25:28.970"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211003 13:25:28.970" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211003 13:25:28.970" endtime="20211003 13:25:28.970"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211003 13:25:28.971" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211003 13:25:28.970" endtime="20211003 13:25:28.971"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211003 13:25:28.972" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211003 13:25:28.971" endtime="20211003 13:25:28.972"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211003 13:25:28.974" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211003 13:25:28.974" level="INFO">${version_file_contents} = #Sun Oct 03 13:24:15 UTC 2021
cTime=1633267455226
clusterID=69f49f50-d80f-4b93-8f24-e7e2af75b011
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20211003 13:25:28.973" endtime="20211003 13:25:28.974"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211003 13:25:28.975" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211003 13:25:28.974" endtime="20211003 13:25:28.975"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 13:25:28.975" endtime="20211003 13:25:28.975"/>
</kw>
<status status="PASS" starttime="20211003 13:25:28.972" endtime="20211003 13:25:28.976"/>
</kw>
<status status="PASS" starttime="20211003 13:25:28.972" endtime="20211003 13:25:28.976"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211003 13:25:28.967" endtime="20211003 13:25:28.976"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211003 13:25:28.903" endtime="20211003 13:25:28.977"/>
</suite>
<suite id="s1-s23" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s23-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211003 13:25:32.947" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211003 13:25:32.946" endtime="20211003 13:25:32.947"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211003 13:25:32.948" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211003 13:25:32.947" endtime="20211003 13:25:32.948"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211003 13:25:32.949" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211003 13:25:32.948" endtime="20211003 13:25:32.949"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211003 13:25:32.949" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211003 13:25:32.949" endtime="20211003 13:25:32.949"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211003 13:25:32.951" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211003 13:25:32.951" level="INFO">${version_file_contents} = #Sun Oct 03 13:22:49 UTC 2021
cTime=1633267347741
clusterID=CID-1ab1884d-154f-472c-9a88-14f9c80745ed
omUuid=407eaab1-8ff1-4d9c-b00e-52e4361ba7fa
nodeType=OM
scmUuid=8f10ca68-496c-4b6f-9628-25d4b671216...</msg>
<status status="PASS" starttime="20211003 13:25:32.950" endtime="20211003 13:25:32.951"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211003 13:25:32.952" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211003 13:25:32.951" endtime="20211003 13:25:32.952"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 13:25:32.952" endtime="20211003 13:25:32.953"/>
</kw>
<status status="PASS" starttime="20211003 13:25:32.950" endtime="20211003 13:25:32.953"/>
</kw>
<status status="PASS" starttime="20211003 13:25:32.950" endtime="20211003 13:25:32.953"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211003 13:25:32.945" endtime="20211003 13:25:32.953"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211003 13:25:32.880" endtime="20211003 13:25:32.954"/>
</suite>
<suite id="s1-s24" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s24-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211003 13:25:37.011" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211003 13:25:37.011" endtime="20211003 13:25:37.012"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211003 13:25:37.012" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211003 13:25:37.012" endtime="20211003 13:25:37.012"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211003 13:25:37.013" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211003 13:25:37.012" endtime="20211003 13:25:37.013"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211003 13:25:37.014" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211003 13:25:37.013" endtime="20211003 13:25:37.014"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211003 13:25:37.015" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211003 13:25:37.016" level="INFO">${version_file_contents} = #Sun Oct 03 13:22:49 UTC 2021
cTime=1633267348361
clusterID=CID-1ab1884d-154f-472c-9a88-14f9c80745ed
omUuid=37842faf-53a1-4ac1-888a-cf6e3b01f7c9
nodeType=OM
scmUuid=8f10ca68-496c-4b6f-9628-25d4b671216...</msg>
<status status="PASS" starttime="20211003 13:25:37.015" endtime="20211003 13:25:37.016"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211003 13:25:37.017" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211003 13:25:37.016" endtime="20211003 13:25:37.017"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 13:25:37.017" endtime="20211003 13:25:37.018"/>
</kw>
<status status="PASS" starttime="20211003 13:25:37.014" endtime="20211003 13:25:37.018"/>
</kw>
<status status="PASS" starttime="20211003 13:25:37.014" endtime="20211003 13:25:37.018"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211003 13:25:37.009" endtime="20211003 13:25:37.018"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211003 13:25:36.941" endtime="20211003 13:25:37.019"/>
</suite>
<suite id="s1-s25" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s25-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211003 13:25:40.945" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211003 13:25:40.944" endtime="20211003 13:25:40.945"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211003 13:25:40.946" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211003 13:25:40.946" endtime="20211003 13:25:40.946"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211003 13:25:40.947" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211003 13:25:40.946" endtime="20211003 13:25:40.947"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211003 13:25:40.948" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211003 13:25:40.947" endtime="20211003 13:25:40.948"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211003 13:25:40.950" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211003 13:25:40.950" level="INFO">${version_file_contents} = #Sun Oct 03 13:22:49 UTC 2021
cTime=1633267349207
clusterID=CID-1ab1884d-154f-472c-9a88-14f9c80745ed
omUuid=0e09ef12-82c1-45ec-9c5d-61f567e8b8ef
nodeType=OM
scmUuid=8f10ca68-496c-4b6f-9628-25d4b671216...</msg>
<status status="PASS" starttime="20211003 13:25:40.949" endtime="20211003 13:25:40.950"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211003 13:25:40.951" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211003 13:25:40.950" endtime="20211003 13:25:40.951"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 13:25:40.951" endtime="20211003 13:25:40.952"/>
</kw>
<status status="PASS" starttime="20211003 13:25:40.948" endtime="20211003 13:25:40.953"/>
</kw>
<status status="PASS" starttime="20211003 13:25:40.948" endtime="20211003 13:25:40.953"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211003 13:25:40.944" endtime="20211003 13:25:40.954"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211003 13:25:40.877" endtime="20211003 13:25:40.955"/>
</suite>
<suite id="s1-s26" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s26-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211003 13:25:44.836" level="INFO">${random} = 51670</msg>
<status status="PASS" starttime="20211003 13:25:44.835" endtime="20211003 13:25:44.836"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 13:25:44.842" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-51670 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 13:25:49.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 13:25:49.554" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211003 13:25:44.838" endtime="20211003 13:25:49.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 13:25:49.555" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211003 13:25:49.555" endtime="20211003 13:25:49.556"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 13:25:49.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 13:25:49.556" endtime="20211003 13:25:49.556"/>
</kw>
<status status="PASS" starttime="20211003 13:25:44.838" endtime="20211003 13:25:49.557"/>
</kw>
<msg timestamp="20211003 13:25:49.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 13:25:44.837" endtime="20211003 13:25:49.557"/>
</kw>
<msg timestamp="20211003 13:25:49.557" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211003 13:25:44.836" endtime="20211003 13:25:49.557"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 13:25:49.557" endtime="20211003 13:25:49.558"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211003 13:25:44.835" endtime="20211003 13:25:49.558"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211003 13:25:44.771" endtime="20211003 13:25:49.560"/>
</suite>
<suite id="s1-s27" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s27-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 13:25:53.566" level="INFO">Running command 'ozone sh volume create new1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 13:25:56.879" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 13:25:56.879" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211003 13:25:53.557" endtime="20211003 13:25:56.879"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 13:25:56.880" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211003 13:25:56.880" endtime="20211003 13:25:56.881"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 13:25:56.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 13:25:56.881" endtime="20211003 13:25:56.881"/>
</kw>
<status status="PASS" starttime="20211003 13:25:53.557" endtime="20211003 13:25:56.882"/>
</kw>
<msg timestamp="20211003 13:25:56.882" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 13:25:53.556" endtime="20211003 13:25:56.882"/>
</kw>
<msg timestamp="20211003 13:25:56.882" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211003 13:25:53.555" endtime="20211003 13:25:56.882"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 13:25:56.883" endtime="20211003 13:25:56.883"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 13:25:56.890" level="INFO">Running command 'ozone sh bucket create /new1-volume/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 13:25:59.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 13:25:59.834" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211003 13:25:56.885" endtime="20211003 13:25:59.834"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 13:25:59.835" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211003 13:25:59.835" endtime="20211003 13:25:59.836"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 13:25:59.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 13:25:59.836" endtime="20211003 13:25:59.836"/>
</kw>
<status status="PASS" starttime="20211003 13:25:56.884" endtime="20211003 13:25:59.837"/>
</kw>
<msg timestamp="20211003 13:25:59.837" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 13:25:56.884" endtime="20211003 13:25:59.837"/>
</kw>
<msg timestamp="20211003 13:25:59.838" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211003 13:25:56.883" endtime="20211003 13:25:59.838"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 13:25:59.838" endtime="20211003 13:25:59.839"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 13:25:59.847" level="INFO">Running command 'ozone sh key put /new1-volume/new1-bucket/new1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 13:26:05.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 13:26:05.636" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211003 13:25:59.840" endtime="20211003 13:26:05.637"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 13:26:05.638" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211003 13:26:05.637" endtime="20211003 13:26:05.638"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 13:26:05.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 13:26:05.638" endtime="20211003 13:26:05.639"/>
</kw>
<status status="PASS" starttime="20211003 13:25:59.840" endtime="20211003 13:26:05.639"/>
</kw>
<msg timestamp="20211003 13:26:05.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 13:25:59.840" endtime="20211003 13:26:05.639"/>
</kw>
<msg timestamp="20211003 13:26:05.640" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211003 13:25:59.839" endtime="20211003 13:26:05.640"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 13:26:05.640" endtime="20211003 13:26:05.640"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211003 13:25:53.554" endtime="20211003 13:26:05.641"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20211003 13:25:53.482" endtime="20211003 13:26:05.642"/>
</suite>
<suite id="s1-s28" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s28-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211003 13:26:09.622" level="INFO">${random} = 42436</msg>
<status status="PASS" starttime="20211003 13:26:09.621" endtime="20211003 13:26:09.622"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 13:26:09.628" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-42436 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 13:26:14.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 13:26:14.336" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211003 13:26:09.624" endtime="20211003 13:26:14.337"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 13:26:14.338" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211003 13:26:14.337" endtime="20211003 13:26:14.338"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 13:26:14.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 13:26:14.338" endtime="20211003 13:26:14.339"/>
</kw>
<status status="PASS" starttime="20211003 13:26:09.624" endtime="20211003 13:26:14.340"/>
</kw>
<msg timestamp="20211003 13:26:14.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 13:26:09.623" endtime="20211003 13:26:14.340"/>
</kw>
<msg timestamp="20211003 13:26:14.340" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211003 13:26:09.622" endtime="20211003 13:26:14.340"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 13:26:14.340" endtime="20211003 13:26:14.341"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211003 13:26:09.620" endtime="20211003 13:26:14.341"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211003 13:26:09.555" endtime="20211003 13:26:14.343"/>
</suite>
<suite id="s1-s29" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s29-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211003 13:25:16.824" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20211003 13:25:16.823" endtime="20211003 13:25:16.824"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211003 13:25:16.825" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211003 13:25:16.824" endtime="20211003 13:25:16.825"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211003 13:25:16.825" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211003 13:25:16.825" endtime="20211003 13:25:16.825"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211003 13:25:16.826" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20211003 13:25:16.826" endtime="20211003 13:25:16.826"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211003 13:25:16.828" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211003 13:25:16.828" level="INFO">${version_file_contents} = #Sun Oct 03 13:22:17 UTC 2021
cTime=1633267337711
clusterID=CID-1ab1884d-154f-472c-9a88-14f9c80745ed
nodeType=SCM
scmUuid=8f10ca68-496c-4b6f-9628-25d4b671216f
layoutVersion=0
</msg>
<status status="PASS" starttime="20211003 13:25:16.827" endtime="20211003 13:25:16.828"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211003 13:25:16.829" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211003 13:25:16.828" endtime="20211003 13:25:16.829"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 13:25:16.829" endtime="20211003 13:25:16.830"/>
</kw>
<status status="PASS" starttime="20211003 13:25:16.827" endtime="20211003 13:25:16.830"/>
</kw>
<status status="PASS" starttime="20211003 13:25:16.826" endtime="20211003 13:25:16.830"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211003 13:25:16.822" endtime="20211003 13:25:16.830"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211003 13:25:16.747" endtime="20211003 13:25:16.831"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="181449"/>
</suite>
<statistics>
<total>
<stat pass="30" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="30" fail="0" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s8" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s9" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s10" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s11" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s12" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s13" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s14" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s15" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s16" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s17" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s18" name="Validate">upgrade.Validate</stat>
<stat pass="2" fail="0" skip="0" id="s1-s19" name="Finalize">upgrade.Finalize</stat>
<stat pass="1" fail="0" skip="0" id="s1-s20" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s21" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s22" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s23" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s24" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s25" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s26" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s27" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s28" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s29" name="Check-Mlv">upgrade.Check-Mlv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
