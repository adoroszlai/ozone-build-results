<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1.1 (Python 3.6.9 on linux)" generated="20211003 01:56:12.287" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:05:34.236" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:05:34.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:05:34.241" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211003 01:05:34.233" endtime="20211003 01:05:34.241"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:05:34.242" level="INFO">scm</msg>
<status status="PASS" starttime="20211003 01:05:34.242" endtime="20211003 01:05:34.242"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:05:34.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:05:34.243" endtime="20211003 01:05:34.243"/>
</kw>
<status status="PASS" starttime="20211003 01:05:34.232" endtime="20211003 01:05:34.244"/>
</kw>
<msg timestamp="20211003 01:05:34.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:05:34.231" endtime="20211003 01:05:34.244"/>
</kw>
<msg timestamp="20211003 01:05:34.244" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20211003 01:05:34.231" endtime="20211003 01:05:34.244"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:05:34.248" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:05:34.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:05:34.257" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:05:34.246" endtime="20211003 01:05:34.257"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:05:34.258" level="INFO"/>
<status status="PASS" starttime="20211003 01:05:34.257" endtime="20211003 01:05:34.258"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:05:34.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:05:34.258" endtime="20211003 01:05:34.258"/>
</kw>
<status status="PASS" starttime="20211003 01:05:34.246" endtime="20211003 01:05:34.259"/>
</kw>
<msg timestamp="20211003 01:05:34.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:05:34.245" endtime="20211003 01:05:34.259"/>
</kw>
<status status="PASS" starttime="20211003 01:05:34.245" endtime="20211003 01:05:34.260"/>
</kw>
<status status="PASS" starttime="20211003 01:05:34.244" endtime="20211003 01:05:34.260"/>
</kw>
<status status="PASS" starttime="20211003 01:05:34.230" endtime="20211003 01:05:34.260"/>
</kw>
<status status="PASS" starttime="20211003 01:05:34.230" endtime="20211003 01:05:34.260"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:05:34.266" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:05:34.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:05:34.413" level="INFO">${output} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20211003 01:05:34.262" endtime="20211003 01:05:34.413"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:05:34.414" level="INFO">HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 484

HTTP/1.1 200 OK
Date: Sun, 03 Oct 2021 01:05:34 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCH2jYgnyfpchFCZRGn3unUO0j+PFXZYs3IMwehMjt+knzHWJtvIbTlk+QKyB5HXiOJiTH2xAeSItce+ryAQM4t8aH
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1633259134397&amp;s=3MBVDzpV41oZlgwt70CYiJa10Cv4ERtVA8UrbvUQZFQ="; Path=/; HttpOnly
Last-Modified: Sun, 03 Oct 2021 00:51:56 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20211003 01:05:34.414" endtime="20211003 01:05:34.415"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:05:34.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:05:34.415" endtime="20211003 01:05:34.415"/>
</kw>
<status status="PASS" starttime="20211003 01:05:34.261" endtime="20211003 01:05:34.416"/>
</kw>
<msg timestamp="20211003 01:05:34.416" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:05:34.261" endtime="20211003 01:05:34.417"/>
</kw>
<msg timestamp="20211003 01:05:34.417" level="INFO">${result} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20211003 01:05:34.260" endtime="20211003 01:05:34.417"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 01:05:34.417" endtime="20211003 01:05:34.418"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211003 01:05:34.229" endtime="20211003 01:05:34.418"/>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:05:34.425" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:05:34.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:05:34.431" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211003 01:05:34.423" endtime="20211003 01:05:34.431"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:05:34.432" level="INFO">scm</msg>
<status status="PASS" starttime="20211003 01:05:34.431" endtime="20211003 01:05:34.432"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:05:34.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:05:34.433" endtime="20211003 01:05:34.433"/>
</kw>
<status status="PASS" starttime="20211003 01:05:34.422" endtime="20211003 01:05:34.434"/>
</kw>
<msg timestamp="20211003 01:05:34.434" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:05:34.422" endtime="20211003 01:05:34.434"/>
</kw>
<msg timestamp="20211003 01:05:34.434" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211003 01:05:34.421" endtime="20211003 01:05:34.434"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211003 01:05:34.436" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211003 01:05:34.434" endtime="20211003 01:05:34.437"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:05:34.441" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:05:34.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:05:34.450" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:05:34.439" endtime="20211003 01:05:34.450"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:05:34.452" level="INFO"/>
<status status="PASS" starttime="20211003 01:05:34.451" endtime="20211003 01:05:34.452"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:05:34.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:05:34.452" endtime="20211003 01:05:34.452"/>
</kw>
<status status="PASS" starttime="20211003 01:05:34.438" endtime="20211003 01:05:34.453"/>
</kw>
<msg timestamp="20211003 01:05:34.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:05:34.438" endtime="20211003 01:05:34.453"/>
</kw>
<status status="PASS" starttime="20211003 01:05:34.437" endtime="20211003 01:05:34.453"/>
</kw>
<status status="PASS" starttime="20211003 01:05:34.437" endtime="20211003 01:05:34.454"/>
</kw>
<status status="PASS" starttime="20211003 01:05:34.420" endtime="20211003 01:05:34.454"/>
</kw>
<status status="PASS" starttime="20211003 01:05:34.420" endtime="20211003 01:05:34.454"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:05:34.458" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:10:34.420" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211003 01:05:34.456" endtime="20211003 01:10:34.420"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211003 01:10:34.421" endtime="20211003 01:10:34.421"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211003 01:10:34.421" endtime="20211003 01:10:34.421"/>
</kw>
<status status="FAIL" starttime="20211003 01:05:34.455" endtime="20211003 01:10:34.422"/>
</kw>
<msg timestamp="20211003 01:10:34.422" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211003 01:05:34.455" endtime="20211003 01:10:34.422"/>
</kw>
<status status="FAIL" starttime="20211003 01:05:34.454" endtime="20211003 01:10:34.422"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20211003 01:10:34.423" endtime="20211003 01:10:34.423"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Status: Success</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211003 01:10:34.423" endtime="20211003 01:10:34.423"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211003 01:05:34.419" endtime="20211003 01:10:34.423">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" starttime="20211003 01:05:34.196" endtime="20211003 01:10:34.425"/>
</suite>
<suite id="s1-s1-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s1-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:10:34.437" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:10:37.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:10:37.705" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211003 01:10:34.434" endtime="20211003 01:10:37.705"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:10:37.706" level="INFO">om</msg>
<status status="PASS" starttime="20211003 01:10:37.706" endtime="20211003 01:10:37.707"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:10:37.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:10:37.707" endtime="20211003 01:10:37.709"/>
</kw>
<status status="PASS" starttime="20211003 01:10:34.433" endtime="20211003 01:10:37.709"/>
</kw>
<msg timestamp="20211003 01:10:37.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:10:34.433" endtime="20211003 01:10:37.710"/>
</kw>
<msg timestamp="20211003 01:10:37.710" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211003 01:10:34.433" endtime="20211003 01:10:37.710"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 01:10:37.710" endtime="20211003 01:10:37.711"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:10:37.718" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:10:40.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:10:40.997" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211003 01:10:37.715" endtime="20211003 01:10:40.997"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:10:40.998" level="INFO">om</msg>
<status status="PASS" starttime="20211003 01:10:40.997" endtime="20211003 01:10:40.998"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:10:40.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:10:40.998" endtime="20211003 01:10:40.999"/>
</kw>
<status status="PASS" starttime="20211003 01:10:37.714" endtime="20211003 01:10:41.000"/>
</kw>
<msg timestamp="20211003 01:10:41.000" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:10:37.713" endtime="20211003 01:10:41.000"/>
</kw>
<msg timestamp="20211003 01:10:41.000" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211003 01:10:37.712" endtime="20211003 01:10:41.000"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 01:10:41.000" endtime="20211003 01:10:41.001"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211003 01:10:34.432" endtime="20211003 01:10:41.002"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:10:41.011" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:10:44.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:10:44.365" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211003 01:10:41.008" endtime="20211003 01:10:44.365"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:10:44.367" level="INFO">scm</msg>
<status status="PASS" starttime="20211003 01:10:44.366" endtime="20211003 01:10:44.368"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:10:44.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:10:44.368" endtime="20211003 01:10:44.370"/>
</kw>
<status status="PASS" starttime="20211003 01:10:41.007" endtime="20211003 01:10:44.370"/>
</kw>
<msg timestamp="20211003 01:10:44.371" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:10:41.004" endtime="20211003 01:10:44.371"/>
</kw>
<msg timestamp="20211003 01:10:44.371" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20211003 01:10:41.004" endtime="20211003 01:10:44.371"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 01:10:44.372" endtime="20211003 01:10:44.373"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:10:44.380" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:10:47.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:10:47.646" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211003 01:10:44.376" endtime="20211003 01:10:47.646"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:10:47.647" level="INFO">scm</msg>
<status status="PASS" starttime="20211003 01:10:47.646" endtime="20211003 01:10:47.647"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:10:47.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:10:47.648" endtime="20211003 01:10:47.648"/>
</kw>
<status status="PASS" starttime="20211003 01:10:44.375" endtime="20211003 01:10:47.649"/>
</kw>
<msg timestamp="20211003 01:10:47.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:10:44.374" endtime="20211003 01:10:47.649"/>
</kw>
<msg timestamp="20211003 01:10:47.649" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20211003 01:10:44.373" endtime="20211003 01:10:47.649"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 01:10:47.649" endtime="20211003 01:10:47.650"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211003 01:10:41.002" endtime="20211003 01:10:47.650"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:10:47.657" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:10:50.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:10:50.286" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211003 01:10:47.655" endtime="20211003 01:10:50.286"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:10:50.287" level="INFO">om</msg>
<status status="PASS" starttime="20211003 01:10:50.286" endtime="20211003 01:10:50.287"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:10:50.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:10:50.287" endtime="20211003 01:10:50.288"/>
</kw>
<status status="PASS" starttime="20211003 01:10:47.654" endtime="20211003 01:10:50.289"/>
</kw>
<msg timestamp="20211003 01:10:50.289" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:10:47.653" endtime="20211003 01:10:50.289"/>
</kw>
<msg timestamp="20211003 01:10:50.289" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211003 01:10:47.653" endtime="20211003 01:10:50.289"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 01:10:50.290" endtime="20211003 01:10:50.290"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 01:10:50.290" endtime="20211003 01:10:50.291"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:10:50.296" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:10:52.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:10:52.334" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211003 01:10:50.293" endtime="20211003 01:10:52.334"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:10:52.335" level="INFO">om</msg>
<status status="PASS" starttime="20211003 01:10:52.334" endtime="20211003 01:10:52.335"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:10:52.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:10:52.336" endtime="20211003 01:10:52.336"/>
</kw>
<status status="PASS" starttime="20211003 01:10:50.292" endtime="20211003 01:10:52.337"/>
</kw>
<msg timestamp="20211003 01:10:52.337" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:10:50.292" endtime="20211003 01:10:52.337"/>
</kw>
<msg timestamp="20211003 01:10:52.337" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211003 01:10:50.291" endtime="20211003 01:10:52.337"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 01:10:52.338" endtime="20211003 01:10:52.338"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 01:10:52.338" endtime="20211003 01:10:52.339"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211003 01:10:47.651" endtime="20211003 01:10:52.339"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:10:52.343" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:10:53.778" level="INFO">${rc} = 255</msg>
<msg timestamp="20211003 01:10:53.778" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211003 01:10:52.341" endtime="20211003 01:10:53.779"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:10:53.780" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211003 01:10:53.779" endtime="20211003 01:10:53.780"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:10:53.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:10:53.780" endtime="20211003 01:10:53.781"/>
</kw>
<msg timestamp="20211003 01:10:53.782" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211003 01:10:52.340" endtime="20211003 01:10:53.782"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 01:10:53.782" endtime="20211003 01:10:53.783"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:10:53.785" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:10:56.433" level="INFO">${rc} = 255</msg>
<msg timestamp="20211003 01:10:56.433" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211003 01:10:53.783" endtime="20211003 01:10:56.433"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:10:56.435" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211003 01:10:56.434" endtime="20211003 01:10:56.435"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:10:56.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:10:56.436" endtime="20211003 01:10:56.437"/>
</kw>
<msg timestamp="20211003 01:10:56.437" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211003 01:10:53.783" endtime="20211003 01:10:56.438"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 01:10:56.438" endtime="20211003 01:10:56.438"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211003 01:10:52.339" endtime="20211003 01:10:56.439"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20211003 01:10:34.428" endtime="20211003 01:10:56.440"/>
</suite>
<suite id="s1-s1-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211003 01:10:56.465" level="INFO">${random} = 10737</msg>
<status status="PASS" starttime="20211003 01:10:56.464" endtime="20211003 01:10:56.465"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211003 01:10:56.468" level="INFO">${source} = 10737-source</msg>
<status status="PASS" starttime="20211003 01:10:56.465" endtime="20211003 01:10:56.468"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211003 01:10:56.471" level="INFO">${target} = 10737-target</msg>
<status status="PASS" starttime="20211003 01:10:56.468" endtime="20211003 01:10:56.471"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:10:56.475" level="INFO">Running command 'ozone sh volume create 10737-source 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:11:02.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:11:02.996" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:10:56.473" endtime="20211003 01:11:02.996"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:11:02.997" level="INFO"/>
<status status="PASS" starttime="20211003 01:11:02.997" endtime="20211003 01:11:02.998"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:11:02.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:11:02.998" endtime="20211003 01:11:02.998"/>
</kw>
<status status="PASS" starttime="20211003 01:10:56.472" endtime="20211003 01:11:02.999"/>
</kw>
<msg timestamp="20211003 01:11:02.999" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:10:56.472" endtime="20211003 01:11:02.999"/>
</kw>
<status status="PASS" starttime="20211003 01:10:56.471" endtime="20211003 01:11:03.000"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:11:03.004" level="INFO">Running command 'ozone sh volume create 10737-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:11:10.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:11:10.828" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:11:03.001" endtime="20211003 01:11:10.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:11:10.830" level="INFO"/>
<status status="PASS" starttime="20211003 01:11:10.829" endtime="20211003 01:11:10.830"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:11:10.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:11:10.830" endtime="20211003 01:11:10.831"/>
</kw>
<status status="PASS" starttime="20211003 01:11:03.001" endtime="20211003 01:11:10.831"/>
</kw>
<msg timestamp="20211003 01:11:10.831" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:11:03.000" endtime="20211003 01:11:10.831"/>
</kw>
<status status="PASS" starttime="20211003 01:11:03.000" endtime="20211003 01:11:10.832"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:11:10.842" level="INFO">Running command 'ozone sh bucket create 10737-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:11:15.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:11:15.781" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:11:10.838" endtime="20211003 01:11:15.781"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:11:15.783" level="INFO"/>
<status status="PASS" starttime="20211003 01:11:15.782" endtime="20211003 01:11:15.783"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:11:15.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:11:15.783" endtime="20211003 01:11:15.784"/>
</kw>
<status status="PASS" starttime="20211003 01:11:10.837" endtime="20211003 01:11:15.785"/>
</kw>
<msg timestamp="20211003 01:11:15.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:11:10.834" endtime="20211003 01:11:15.785"/>
</kw>
<status status="PASS" starttime="20211003 01:11:10.833" endtime="20211003 01:11:15.785"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:11:15.789" level="INFO">Running command 'ozone sh key put 10737-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:14:28.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:14:28.052" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:11:15.787" endtime="20211003 01:14:28.054"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:14:28.055" level="INFO"/>
<status status="PASS" starttime="20211003 01:14:28.054" endtime="20211003 01:14:28.055"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:14:28.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:14:28.055" endtime="20211003 01:14:28.057"/>
</kw>
<status status="PASS" starttime="20211003 01:11:15.786" endtime="20211003 01:14:28.057"/>
</kw>
<msg timestamp="20211003 01:14:28.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:11:15.786" endtime="20211003 01:14:28.058"/>
</kw>
<status status="PASS" starttime="20211003 01:11:15.785" endtime="20211003 01:14:28.059"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:14:28.068" level="INFO">Running command 'ozone sh bucket create 10737-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:14:36.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:14:36.630" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:14:28.060" endtime="20211003 01:14:36.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:14:36.632" level="INFO"/>
<status status="PASS" starttime="20211003 01:14:36.631" endtime="20211003 01:14:36.632"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:14:36.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:14:36.633" endtime="20211003 01:14:36.634"/>
</kw>
<status status="PASS" starttime="20211003 01:14:28.060" endtime="20211003 01:14:36.636"/>
</kw>
<msg timestamp="20211003 01:14:36.636" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:14:28.060" endtime="20211003 01:14:36.636"/>
</kw>
<status status="PASS" starttime="20211003 01:14:28.059" endtime="20211003 01:14:36.637"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:14:36.647" level="INFO">Running command 'ozone sh bucket link 10737-source/readable-bucket 10737-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:14:44.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:14:44.558" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:14:36.642" endtime="20211003 01:14:44.558"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:14:44.559" level="INFO"/>
<status status="PASS" starttime="20211003 01:14:44.558" endtime="20211003 01:14:44.559"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:14:44.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:14:44.560" endtime="20211003 01:14:44.560"/>
</kw>
<status status="PASS" starttime="20211003 01:14:36.640" endtime="20211003 01:14:44.561"/>
</kw>
<msg timestamp="20211003 01:14:44.561" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:14:36.639" endtime="20211003 01:14:44.561"/>
</kw>
<status status="PASS" starttime="20211003 01:14:36.638" endtime="20211003 01:14:44.561"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:14:44.566" level="INFO">Running command 'ozone sh bucket link 10737-source/readable-bucket 10737-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:14:52.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:14:52.250" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:14:44.563" endtime="20211003 01:14:52.250"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:14:52.252" level="INFO"/>
<status status="PASS" starttime="20211003 01:14:52.251" endtime="20211003 01:14:52.252"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:14:52.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:14:52.252" endtime="20211003 01:14:52.252"/>
</kw>
<status status="PASS" starttime="20211003 01:14:44.562" endtime="20211003 01:14:52.253"/>
</kw>
<msg timestamp="20211003 01:14:52.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:14:44.562" endtime="20211003 01:14:52.254"/>
</kw>
<status status="PASS" starttime="20211003 01:14:44.561" endtime="20211003 01:14:52.254"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:14:52.260" level="INFO">Running command 'ozone sh bucket link 10737-source/unreadable-bucket 10737-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:14:59.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:14:59.401" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:14:52.257" endtime="20211003 01:14:59.401"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:14:59.403" level="INFO"/>
<status status="PASS" starttime="20211003 01:14:59.402" endtime="20211003 01:14:59.403"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:14:59.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:14:59.403" endtime="20211003 01:14:59.403"/>
</kw>
<status status="PASS" starttime="20211003 01:14:52.256" endtime="20211003 01:14:59.404"/>
</kw>
<msg timestamp="20211003 01:14:59.409" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:14:52.256" endtime="20211003 01:14:59.409"/>
</kw>
<status status="PASS" starttime="20211003 01:14:52.255" endtime="20211003 01:14:59.409"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:14:59.415" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 10737-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:15:06.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:15:06.967" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211003 01:14:59.411" endtime="20211003 01:15:06.967"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:15:06.969" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211003 01:15:06.968" endtime="20211003 01:15:06.969"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:15:06.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:15:06.969" endtime="20211003 01:15:06.970"/>
</kw>
<status status="PASS" starttime="20211003 01:14:59.411" endtime="20211003 01:15:06.970"/>
</kw>
<msg timestamp="20211003 01:15:06.971" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:14:59.410" endtime="20211003 01:15:06.971"/>
</kw>
<status status="PASS" starttime="20211003 01:14:59.410" endtime="20211003 01:15:06.971"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:15:06.977" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 10737-source 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:15:15.118" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:15:15.118" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211003 01:15:06.974" endtime="20211003 01:15:15.118"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:15:15.120" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211003 01:15:15.119" endtime="20211003 01:15:15.120"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:15:15.121" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:15:15.121" endtime="20211003 01:15:15.122"/>
</kw>
<status status="PASS" starttime="20211003 01:15:06.973" endtime="20211003 01:15:15.122"/>
</kw>
<msg timestamp="20211003 01:15:15.122" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:15:06.972" endtime="20211003 01:15:15.123"/>
</kw>
<status status="PASS" starttime="20211003 01:15:06.972" endtime="20211003 01:15:15.123"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:15:15.130" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 10737-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:15:23.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:15:23.602" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211003 01:15:15.126" endtime="20211003 01:15:23.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:15:23.604" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211003 01:15:23.603" endtime="20211003 01:15:23.605"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:15:23.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:15:23.605" endtime="20211003 01:15:23.606"/>
</kw>
<status status="PASS" starttime="20211003 01:15:15.125" endtime="20211003 01:15:23.607"/>
</kw>
<msg timestamp="20211003 01:15:23.607" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:15:15.125" endtime="20211003 01:15:23.607"/>
</kw>
<status status="PASS" starttime="20211003 01:15:15.123" endtime="20211003 01:15:23.607"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:15:23.612" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 10737-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:15:31.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:15:31.710" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211003 01:15:23.610" endtime="20211003 01:15:31.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:15:31.711" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211003 01:15:31.711" endtime="20211003 01:15:31.711"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:15:31.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:15:31.712" endtime="20211003 01:15:31.712"/>
</kw>
<status status="PASS" starttime="20211003 01:15:23.609" endtime="20211003 01:15:31.713"/>
</kw>
<msg timestamp="20211003 01:15:31.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:15:23.608" endtime="20211003 01:15:31.713"/>
</kw>
<status status="PASS" starttime="20211003 01:15:23.608" endtime="20211003 01:15:31.713"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:15:31.717" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 10737-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:15:39.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:15:39.182" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211003 01:15:31.715" endtime="20211003 01:15:39.182"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:15:39.183" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211003 01:15:39.182" endtime="20211003 01:15:39.183"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:15:39.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:15:39.183" endtime="20211003 01:15:39.184"/>
</kw>
<status status="PASS" starttime="20211003 01:15:31.714" endtime="20211003 01:15:39.185"/>
</kw>
<msg timestamp="20211003 01:15:39.185" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:15:31.714" endtime="20211003 01:15:39.185"/>
</kw>
<status status="PASS" starttime="20211003 01:15:31.713" endtime="20211003 01:15:39.185"/>
</kw>
<status status="PASS" starttime="20211003 01:11:10.832" endtime="20211003 01:15:39.186"/>
</kw>
<status status="PASS" starttime="20211003 01:11:10.832" endtime="20211003 01:15:39.186"/>
</kw>
<status status="PASS" starttime="20211003 01:10:56.464" endtime="20211003 01:15:39.186"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:15:39.193" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:15:39.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:15:39.198" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211003 01:15:39.190" endtime="20211003 01:15:39.199"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:15:39.202" level="INFO">scm</msg>
<status status="PASS" starttime="20211003 01:15:39.200" endtime="20211003 01:15:39.202"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:15:39.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:15:39.202" endtime="20211003 01:15:39.204"/>
</kw>
<status status="PASS" starttime="20211003 01:15:39.189" endtime="20211003 01:15:39.227"/>
</kw>
<msg timestamp="20211003 01:15:39.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:15:39.189" endtime="20211003 01:15:39.229"/>
</kw>
<msg timestamp="20211003 01:15:39.229" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211003 01:15:39.189" endtime="20211003 01:15:39.229"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211003 01:15:39.231" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211003 01:15:39.229" endtime="20211003 01:15:39.231"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:15:39.239" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:15:39.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:15:39.423" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:15:39.236" endtime="20211003 01:15:39.423"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:15:39.424" level="INFO"/>
<status status="PASS" starttime="20211003 01:15:39.424" endtime="20211003 01:15:39.425"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:15:39.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:15:39.425" endtime="20211003 01:15:39.426"/>
</kw>
<status status="PASS" starttime="20211003 01:15:39.235" endtime="20211003 01:15:39.426"/>
</kw>
<msg timestamp="20211003 01:15:39.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:15:39.234" endtime="20211003 01:15:39.427"/>
</kw>
<status status="PASS" starttime="20211003 01:15:39.232" endtime="20211003 01:15:39.427"/>
</kw>
<status status="PASS" starttime="20211003 01:15:39.231" endtime="20211003 01:15:39.428"/>
</kw>
<status status="PASS" starttime="20211003 01:15:39.188" endtime="20211003 01:15:39.428"/>
</kw>
<status status="PASS" starttime="20211003 01:15:39.187" endtime="20211003 01:15:39.428"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:15:39.432" level="INFO">Running command 'ozone sh bucket link 10737-source/no-such-bucket 10737-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:15:47.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:15:47.210" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:15:39.430" endtime="20211003 01:15:47.210"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:15:47.213" level="INFO"/>
<status status="PASS" starttime="20211003 01:15:47.211" endtime="20211003 01:15:47.213"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:15:47.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:15:47.214" endtime="20211003 01:15:47.215"/>
</kw>
<status status="PASS" starttime="20211003 01:15:39.429" endtime="20211003 01:15:47.216"/>
</kw>
<msg timestamp="20211003 01:15:47.216" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:15:39.429" endtime="20211003 01:15:47.217"/>
</kw>
<status status="PASS" starttime="20211003 01:15:39.428" endtime="20211003 01:15:47.217"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:15:47.221" level="INFO">Running command 'ozone sh key list 10737-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:15:55.689" level="INFO">${rc} = 255</msg>
<msg timestamp="20211003 01:15:55.689" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20211003 01:15:47.218" endtime="20211003 01:15:55.689"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:15:55.691" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20211003 01:15:55.690" endtime="20211003 01:15:55.691"/>
</kw>
<msg timestamp="20211003 01:15:55.692" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20211003 01:15:47.218" endtime="20211003 01:15:55.692"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 01:15:55.692" endtime="20211003 01:15:55.692"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211003 01:15:39.186" endtime="20211003 01:15:55.693"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:15:55.711" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:15:55.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:15:55.718" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211003 01:15:55.707" endtime="20211003 01:15:55.718"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:15:55.721" level="INFO">scm</msg>
<status status="PASS" starttime="20211003 01:15:55.719" endtime="20211003 01:15:55.721"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:15:55.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:15:55.721" endtime="20211003 01:15:55.722"/>
</kw>
<status status="PASS" starttime="20211003 01:15:55.705" endtime="20211003 01:15:55.724"/>
</kw>
<msg timestamp="20211003 01:15:55.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:15:55.704" endtime="20211003 01:15:55.724"/>
</kw>
<msg timestamp="20211003 01:15:55.725" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211003 01:15:55.702" endtime="20211003 01:15:55.725"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211003 01:15:55.727" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211003 01:15:55.726" endtime="20211003 01:15:55.727"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:15:55.737" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:15:55.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:15:55.751" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:15:55.734" endtime="20211003 01:15:55.751"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:15:55.753" level="INFO"/>
<status status="PASS" starttime="20211003 01:15:55.752" endtime="20211003 01:15:55.753"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:15:55.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:15:55.754" endtime="20211003 01:15:55.754"/>
</kw>
<status status="PASS" starttime="20211003 01:15:55.732" endtime="20211003 01:15:55.755"/>
</kw>
<msg timestamp="20211003 01:15:55.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:15:55.731" endtime="20211003 01:15:55.755"/>
</kw>
<status status="PASS" starttime="20211003 01:15:55.729" endtime="20211003 01:15:55.755"/>
</kw>
<status status="PASS" starttime="20211003 01:15:55.728" endtime="20211003 01:15:55.756"/>
</kw>
<status status="PASS" starttime="20211003 01:15:55.701" endtime="20211003 01:15:55.756"/>
</kw>
<status status="PASS" starttime="20211003 01:15:55.699" endtime="20211003 01:15:55.757"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:15:55.762" level="INFO">Running command 'ozone sh bucket link 10737-source/bucket1 10737-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:16:03.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:16:03.598" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:15:55.760" endtime="20211003 01:16:03.598"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:16:03.601" level="INFO"/>
<status status="PASS" starttime="20211003 01:16:03.600" endtime="20211003 01:16:03.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:16:03.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:16:03.602" endtime="20211003 01:16:03.603"/>
</kw>
<status status="PASS" starttime="20211003 01:15:55.759" endtime="20211003 01:16:03.604"/>
</kw>
<msg timestamp="20211003 01:16:03.604" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:15:55.758" endtime="20211003 01:16:03.605"/>
</kw>
<status status="PASS" starttime="20211003 01:15:55.757" endtime="20211003 01:16:03.605"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:16:03.611" level="INFO">Running command 'ozone sh bucket create 10737-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:16:11.805" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:16:11.806" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:16:03.608" endtime="20211003 01:16:11.806"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:16:11.809" level="INFO"/>
<status status="PASS" starttime="20211003 01:16:11.807" endtime="20211003 01:16:11.809"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:16:11.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:16:11.810" endtime="20211003 01:16:11.811"/>
</kw>
<status status="PASS" starttime="20211003 01:16:03.607" endtime="20211003 01:16:11.812"/>
</kw>
<msg timestamp="20211003 01:16:11.812" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:16:03.607" endtime="20211003 01:16:11.812"/>
</kw>
<status status="PASS" starttime="20211003 01:16:03.606" endtime="20211003 01:16:11.813"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:16:11.819" level="INFO">Running command 'ozone sh key put 10737-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:17:55.699" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20211003 01:16:11.816" endtime="20211003 01:17:55.699"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211003 01:17:55.700" endtime="20211003 01:17:55.700"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211003 01:17:55.701" endtime="20211003 01:17:55.701"/>
</kw>
<status status="FAIL" starttime="20211003 01:16:11.815" endtime="20211003 01:17:55.701"/>
</kw>
<msg timestamp="20211003 01:17:55.701" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211003 01:16:11.814" endtime="20211003 01:17:55.701"/>
</kw>
<status status="FAIL" starttime="20211003 01:16:11.813" endtime="20211003 01:17:55.702"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<status status="NOT RUN" starttime="20211003 01:17:55.702" endtime="20211003 01:17:55.702"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211003 01:15:55.697" endtime="20211003 01:17:55.702">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:17:55.713" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:17:55.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:17:55.719" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211003 01:17:55.710" endtime="20211003 01:17:55.719"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:17:55.720" level="INFO">scm</msg>
<status status="PASS" starttime="20211003 01:17:55.720" endtime="20211003 01:17:55.720"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:17:55.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:17:55.721" endtime="20211003 01:17:55.721"/>
</kw>
<status status="PASS" starttime="20211003 01:17:55.710" endtime="20211003 01:17:55.722"/>
</kw>
<msg timestamp="20211003 01:17:55.722" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:17:55.709" endtime="20211003 01:17:55.723"/>
</kw>
<msg timestamp="20211003 01:17:55.723" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211003 01:17:55.708" endtime="20211003 01:17:55.723"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211003 01:17:55.725" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211003 01:17:55.724" endtime="20211003 01:17:55.725"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:17:55.732" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:17:55.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:17:55.740" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:17:55.728" endtime="20211003 01:17:55.740"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:17:55.743" level="INFO"/>
<status status="PASS" starttime="20211003 01:17:55.741" endtime="20211003 01:17:55.743"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:17:55.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:17:55.743" endtime="20211003 01:17:55.745"/>
</kw>
<status status="PASS" starttime="20211003 01:17:55.727" endtime="20211003 01:17:55.745"/>
</kw>
<msg timestamp="20211003 01:17:55.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:17:55.727" endtime="20211003 01:17:55.746"/>
</kw>
<status status="PASS" starttime="20211003 01:17:55.726" endtime="20211003 01:17:55.746"/>
</kw>
<status status="PASS" starttime="20211003 01:17:55.726" endtime="20211003 01:17:55.746"/>
</kw>
<status status="PASS" starttime="20211003 01:17:55.708" endtime="20211003 01:17:55.747"/>
</kw>
<status status="PASS" starttime="20211003 01:17:55.707" endtime="20211003 01:17:55.747"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:17:55.752" level="INFO">Running command 'ozone sh key put 10737-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:19:55.708" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20211003 01:17:55.749" endtime="20211003 01:19:55.708"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211003 01:19:55.709" endtime="20211003 01:19:55.709"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211003 01:19:55.709" endtime="20211003 01:19:55.709"/>
</kw>
<status status="FAIL" starttime="20211003 01:17:55.748" endtime="20211003 01:19:55.710"/>
</kw>
<msg timestamp="20211003 01:19:55.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211003 01:17:55.748" endtime="20211003 01:19:55.710"/>
</kw>
<status status="FAIL" starttime="20211003 01:17:55.747" endtime="20211003 01:19:55.710"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211003 01:19:55.710" endtime="20211003 01:19:55.710"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211003 01:17:55.706" endtime="20211003 01:19:55.711">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:19:55.722" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:19:55.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:19:55.727" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211003 01:19:55.719" endtime="20211003 01:19:55.727"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:19:55.729" level="INFO">scm</msg>
<status status="PASS" starttime="20211003 01:19:55.728" endtime="20211003 01:19:55.730"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:19:55.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:19:55.730" endtime="20211003 01:19:55.732"/>
</kw>
<status status="PASS" starttime="20211003 01:19:55.717" endtime="20211003 01:19:55.733"/>
</kw>
<msg timestamp="20211003 01:19:55.733" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:19:55.717" endtime="20211003 01:19:55.733"/>
</kw>
<msg timestamp="20211003 01:19:55.734" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211003 01:19:55.714" endtime="20211003 01:19:55.734"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211003 01:19:55.735" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211003 01:19:55.734" endtime="20211003 01:19:55.735"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:19:55.742" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:19:55.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:19:55.753" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:19:55.739" endtime="20211003 01:19:55.753"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:19:55.755" level="INFO"/>
<status status="PASS" starttime="20211003 01:19:55.754" endtime="20211003 01:19:55.755"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:19:55.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:19:55.755" endtime="20211003 01:19:55.756"/>
</kw>
<status status="PASS" starttime="20211003 01:19:55.738" endtime="20211003 01:19:55.757"/>
</kw>
<msg timestamp="20211003 01:19:55.757" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:19:55.737" endtime="20211003 01:19:55.757"/>
</kw>
<status status="PASS" starttime="20211003 01:19:55.736" endtime="20211003 01:19:55.758"/>
</kw>
<status status="PASS" starttime="20211003 01:19:55.735" endtime="20211003 01:19:55.758"/>
</kw>
<status status="PASS" starttime="20211003 01:19:55.714" endtime="20211003 01:19:55.758"/>
</kw>
<status status="PASS" starttime="20211003 01:19:55.713" endtime="20211003 01:19:55.758"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:19:55.764" level="INFO">Running command 'ozone sh key list 10737-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:20:04.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:20:04.885" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20211003 01:19:55.761" endtime="20211003 01:20:04.885"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:20:04.887" level="INFO">key1</msg>
<status status="PASS" starttime="20211003 01:20:04.885" endtime="20211003 01:20:04.887"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:20:04.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:20:04.888" endtime="20211003 01:20:04.889"/>
</kw>
<status status="PASS" starttime="20211003 01:19:55.760" endtime="20211003 01:20:04.890"/>
</kw>
<msg timestamp="20211003 01:20:04.890" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:19:55.760" endtime="20211003 01:20:04.890"/>
</kw>
<msg timestamp="20211003 01:20:04.891" level="INFO">${target_list} = key1</msg>
<status status="PASS" starttime="20211003 01:19:55.759" endtime="20211003 01:20:04.891"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:20:04.901" level="INFO">Running command 'ozone sh key list 10737-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:20:13.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:20:13.787" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20211003 01:20:04.897" endtime="20211003 01:20:13.787"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:20:13.788" level="INFO">key1</msg>
<status status="PASS" starttime="20211003 01:20:13.787" endtime="20211003 01:20:13.788"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:20:13.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:20:13.788" endtime="20211003 01:20:13.789"/>
</kw>
<status status="PASS" starttime="20211003 01:20:04.896" endtime="20211003 01:20:13.789"/>
</kw>
<msg timestamp="20211003 01:20:13.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:20:04.895" endtime="20211003 01:20:13.790"/>
</kw>
<msg timestamp="20211003 01:20:13.790" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20211003 01:20:04.894" endtime="20211003 01:20:13.790"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211003 01:20:13.790" endtime="20211003 01:20:13.791"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 01:20:13.791" endtime="20211003 01:20:13.791"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20211003 01:20:13.792" level="FAIL">'key1' does not contain 'key2'</msg>
<status status="FAIL" starttime="20211003 01:20:13.792" endtime="20211003 01:20:13.792"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211003 01:19:55.712" endtime="20211003 01:20:13.793">'key1' does not contain 'key2'</status>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:20:13.808" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:20:13.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:20:13.813" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211003 01:20:13.804" endtime="20211003 01:20:13.814"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:20:13.816" level="INFO">scm</msg>
<status status="PASS" starttime="20211003 01:20:13.814" endtime="20211003 01:20:13.816"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:20:13.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:20:13.817" endtime="20211003 01:20:13.818"/>
</kw>
<status status="PASS" starttime="20211003 01:20:13.803" endtime="20211003 01:20:13.819"/>
</kw>
<msg timestamp="20211003 01:20:13.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:20:13.802" endtime="20211003 01:20:13.820"/>
</kw>
<msg timestamp="20211003 01:20:13.820" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211003 01:20:13.801" endtime="20211003 01:20:13.820"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211003 01:20:13.822" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211003 01:20:13.821" endtime="20211003 01:20:13.822"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:20:13.832" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:20:13.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:20:13.840" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:20:13.828" endtime="20211003 01:20:13.840"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:20:13.844" level="INFO"/>
<status status="PASS" starttime="20211003 01:20:13.842" endtime="20211003 01:20:13.844"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:20:13.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:20:13.845" endtime="20211003 01:20:13.847"/>
</kw>
<status status="PASS" starttime="20211003 01:20:13.827" endtime="20211003 01:20:13.848"/>
</kw>
<msg timestamp="20211003 01:20:13.848" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:20:13.826" endtime="20211003 01:20:13.848"/>
</kw>
<status status="PASS" starttime="20211003 01:20:13.824" endtime="20211003 01:20:13.849"/>
</kw>
<status status="PASS" starttime="20211003 01:20:13.823" endtime="20211003 01:20:13.849"/>
</kw>
<status status="PASS" starttime="20211003 01:20:13.799" endtime="20211003 01:20:13.849"/>
</kw>
<status status="PASS" starttime="20211003 01:20:13.798" endtime="20211003 01:20:13.850"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:20:13.858" level="INFO">Running command 'ozone sh key delete 10737-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:20:21.346" level="INFO">${rc} = 255</msg>
<msg timestamp="20211003 01:20:21.346" level="INFO">${output} = KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20211003 01:20:13.854" endtime="20211003 01:20:21.346"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:20:21.348" level="INFO">KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20211003 01:20:21.347" endtime="20211003 01:20:21.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:20:21.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20211003 01:20:21.349" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20211003 01:20:21.348" endtime="20211003 01:20:21.349"/>
</kw>
<status status="FAIL" starttime="20211003 01:20:13.853" endtime="20211003 01:20:21.350"/>
</kw>
<msg timestamp="20211003 01:20:21.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211003 01:20:13.852" endtime="20211003 01:20:21.350"/>
</kw>
<status status="FAIL" starttime="20211003 01:20:13.851" endtime="20211003 01:20:21.350"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20211003 01:20:21.350" endtime="20211003 01:20:21.350"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211003 01:20:21.351" endtime="20211003 01:20:21.351"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211003 01:20:13.796" endtime="20211003 01:20:21.351">255 != 0</status>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:20:21.361" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:20:21.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:20:21.365" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211003 01:20:21.357" endtime="20211003 01:20:21.365"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:20:21.368" level="INFO">scm</msg>
<status status="PASS" starttime="20211003 01:20:21.367" endtime="20211003 01:20:21.369"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:20:21.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:20:21.369" endtime="20211003 01:20:21.370"/>
</kw>
<status status="PASS" starttime="20211003 01:20:21.356" endtime="20211003 01:20:21.370"/>
</kw>
<msg timestamp="20211003 01:20:21.370" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:20:21.356" endtime="20211003 01:20:21.371"/>
</kw>
<msg timestamp="20211003 01:20:21.371" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211003 01:20:21.355" endtime="20211003 01:20:21.371"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211003 01:20:21.373" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211003 01:20:21.372" endtime="20211003 01:20:21.373"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:20:21.380" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:20:21.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:20:21.392" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:20:21.378" endtime="20211003 01:20:21.392"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:20:21.393" level="INFO"/>
<status status="PASS" starttime="20211003 01:20:21.393" endtime="20211003 01:20:21.393"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:20:21.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:20:21.394" endtime="20211003 01:20:21.394"/>
</kw>
<status status="PASS" starttime="20211003 01:20:21.376" endtime="20211003 01:20:21.395"/>
</kw>
<msg timestamp="20211003 01:20:21.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:20:21.376" endtime="20211003 01:20:21.395"/>
</kw>
<status status="PASS" starttime="20211003 01:20:21.374" endtime="20211003 01:20:21.395"/>
</kw>
<status status="PASS" starttime="20211003 01:20:21.373" endtime="20211003 01:20:21.395"/>
</kw>
<status status="PASS" starttime="20211003 01:20:21.355" endtime="20211003 01:20:21.396"/>
</kw>
<status status="PASS" starttime="20211003 01:20:21.353" endtime="20211003 01:20:21.396"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:20:21.406" level="INFO">Running command 'ozone sh bucket list 10737-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:20:29.841" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:20:29.842" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "10737-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" starttime="20211003 01:20:21.398" endtime="20211003 01:20:29.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:20:29.843" level="INFO">{
  "metadata" : { },
  "volumeName" : "10737-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-03T01:15:47.109Z",
  "modificationTime" : "2021-10-03T01:15:47.109Z",
  "sourceVolume" : "10737-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "10737-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-03T01:14:59.204Z",
  "modificationTime" : "2021-10-03T01:15:39.079Z",
  "sourceVolume" : "10737-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "10737-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-03T01:16:03.505Z",
  "modificationTime" : "2021-10-03T01:16:03.505Z",
  "sourceVolume" : "10737-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "10737-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-03T01:14:44.114Z",
  "modificationTime" : "2021-10-03T01:15:31.639Z",
  "sourceVolume" : "10737-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "10737-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-03T01:14:52.108Z",
  "modificationTime" : "2021-10-03T01:14:52.108Z",
  "sourceVolume" : "10737-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}</msg>
<status status="PASS" starttime="20211003 01:20:29.842" endtime="20211003 01:20:29.843"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:20:29.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:20:29.843" endtime="20211003 01:20:29.844"/>
</kw>
<status status="PASS" starttime="20211003 01:20:21.397" endtime="20211003 01:20:29.844"/>
</kw>
<msg timestamp="20211003 01:20:29.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:20:21.397" endtime="20211003 01:20:29.845"/>
</kw>
<msg timestamp="20211003 01:20:29.845" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "10737-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" starttime="20211003 01:20:21.396" endtime="20211003 01:20:29.845"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 01:20:29.845" endtime="20211003 01:20:29.846"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 01:20:29.846" endtime="20211003 01:20:29.847"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211003 01:20:21.352" endtime="20211003 01:20:29.847"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:20:29.854" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:20:29.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:20:29.864" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211003 01:20:29.852" endtime="20211003 01:20:29.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:20:29.866" level="INFO">scm</msg>
<status status="PASS" starttime="20211003 01:20:29.865" endtime="20211003 01:20:29.866"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:20:29.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:20:29.867" endtime="20211003 01:20:29.867"/>
</kw>
<status status="PASS" starttime="20211003 01:20:29.851" endtime="20211003 01:20:29.868"/>
</kw>
<msg timestamp="20211003 01:20:29.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:20:29.851" endtime="20211003 01:20:29.868"/>
</kw>
<msg timestamp="20211003 01:20:29.868" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211003 01:20:29.850" endtime="20211003 01:20:29.868"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211003 01:20:29.871" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211003 01:20:29.869" endtime="20211003 01:20:29.871"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:20:29.877" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:20:29.889" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:20:29.889" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:20:29.875" endtime="20211003 01:20:29.890"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:20:29.891" level="INFO"/>
<status status="PASS" starttime="20211003 01:20:29.890" endtime="20211003 01:20:29.891"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:20:29.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:20:29.892" endtime="20211003 01:20:29.892"/>
</kw>
<status status="PASS" starttime="20211003 01:20:29.874" endtime="20211003 01:20:29.893"/>
</kw>
<msg timestamp="20211003 01:20:29.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:20:29.873" endtime="20211003 01:20:29.893"/>
</kw>
<status status="PASS" starttime="20211003 01:20:29.872" endtime="20211003 01:20:29.894"/>
</kw>
<status status="PASS" starttime="20211003 01:20:29.871" endtime="20211003 01:20:29.894"/>
</kw>
<status status="PASS" starttime="20211003 01:20:29.850" endtime="20211003 01:20:29.894"/>
</kw>
<status status="PASS" starttime="20211003 01:20:29.849" endtime="20211003 01:20:29.894"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:20:29.899" level="INFO">Running command 'ozone sh bucket info 10737-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:20:38.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:20:38.042" level="INFO">${output} = {
  "volumeName" : "10737-target",
  "bucketName" : "link1",
  "sourceVolume" : "10737-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-10-03T01:16:03.505Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20211003 01:20:29.897" endtime="20211003 01:20:38.042"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:20:38.045" level="INFO">{
  "volumeName" : "10737-target",
  "bucketName" : "link1",
  "sourceVolume" : "10737-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-10-03T01:16:03.505Z",
  "modificationTime" : "2021-10-03T01:16:03.505Z"
}</msg>
<status status="PASS" starttime="20211003 01:20:38.043" endtime="20211003 01:20:38.045"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:20:38.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:20:38.046" endtime="20211003 01:20:38.047"/>
</kw>
<status status="PASS" starttime="20211003 01:20:29.896" endtime="20211003 01:20:38.048"/>
</kw>
<msg timestamp="20211003 01:20:38.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:20:29.895" endtime="20211003 01:20:38.048"/>
</kw>
<msg timestamp="20211003 01:20:38.049" level="INFO">${result} = {
  "volumeName" : "10737-target",
  "bucketName" : "link1",
  "sourceVolume" : "10737-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-10-03T01:16:03.505Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20211003 01:20:29.895" endtime="20211003 01:20:38.049"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${source}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 01:20:38.049" endtime="20211003 01:20:38.051"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bucket1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 01:20:38.051" endtime="20211003 01:20:38.052"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${target}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 01:20:38.053" endtime="20211003 01:20:38.054"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 01:20:38.054" endtime="20211003 01:20:38.055"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>modificationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 01:20:38.055" endtime="20211003 01:20:38.056"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 01:20:38.056" endtime="20211003 01:20:38.056"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>metadata</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 01:20:38.057" endtime="20211003 01:20:38.057"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211003 01:20:29.848" endtime="20211003 01:20:38.058"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:20:38.068" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:20:38.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:20:38.072" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211003 01:20:38.065" endtime="20211003 01:20:38.072"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:20:38.074" level="INFO">scm</msg>
<status status="PASS" starttime="20211003 01:20:38.073" endtime="20211003 01:20:38.074"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:20:38.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:20:38.074" endtime="20211003 01:20:38.075"/>
</kw>
<status status="PASS" starttime="20211003 01:20:38.064" endtime="20211003 01:20:38.076"/>
</kw>
<msg timestamp="20211003 01:20:38.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:20:38.063" endtime="20211003 01:20:38.076"/>
</kw>
<msg timestamp="20211003 01:20:38.076" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211003 01:20:38.062" endtime="20211003 01:20:38.076"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211003 01:20:38.077" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211003 01:20:38.077" endtime="20211003 01:20:38.077"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:20:38.082" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:20:38.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:20:38.093" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:20:38.081" endtime="20211003 01:20:38.093"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:20:38.094" level="INFO"/>
<status status="PASS" starttime="20211003 01:20:38.094" endtime="20211003 01:20:38.094"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:20:38.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:20:38.095" endtime="20211003 01:20:38.096"/>
</kw>
<status status="PASS" starttime="20211003 01:20:38.080" endtime="20211003 01:20:38.097"/>
</kw>
<msg timestamp="20211003 01:20:38.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:20:38.079" endtime="20211003 01:20:38.097"/>
</kw>
<status status="PASS" starttime="20211003 01:20:38.078" endtime="20211003 01:20:38.097"/>
</kw>
<status status="PASS" starttime="20211003 01:20:38.078" endtime="20211003 01:20:38.098"/>
</kw>
<status status="PASS" starttime="20211003 01:20:38.061" endtime="20211003 01:20:38.098"/>
</kw>
<status status="PASS" starttime="20211003 01:20:38.060" endtime="20211003 01:20:38.098"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:20:38.105" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 10737-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:20:46.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:20:46.528" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211003 01:20:38.102" endtime="20211003 01:20:46.528"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:20:46.531" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211003 01:20:46.529" endtime="20211003 01:20:46.531"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:20:46.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:20:46.531" endtime="20211003 01:20:46.533"/>
</kw>
<status status="PASS" starttime="20211003 01:20:38.101" endtime="20211003 01:20:46.535"/>
</kw>
<msg timestamp="20211003 01:20:46.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:20:38.101" endtime="20211003 01:20:46.535"/>
</kw>
<status status="PASS" starttime="20211003 01:20:38.098" endtime="20211003 01:20:46.536"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:20:46.545" level="INFO">Running command 'ozone sh bucket getacl 10737-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:20:55.199" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:20:55.199" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20211003 01:20:46.542" endtime="20211003 01:20:55.199"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:20:55.202" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20211003 01:20:55.200" endtime="20211003 01:20:55.202"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:20:55.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:20:55.202" endtime="20211003 01:20:55.204"/>
</kw>
<status status="PASS" starttime="20211003 01:20:46.541" endtime="20211003 01:20:55.205"/>
</kw>
<msg timestamp="20211003 01:20:55.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:20:46.540" endtime="20211003 01:20:55.205"/>
</kw>
<msg timestamp="20211003 01:20:55.206" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20211003 01:20:46.539" endtime="20211003 01:20:55.206"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211003 01:20:55.206" endtime="20211003 01:20:55.207"/>
</kw>
<status status="PASS" starttime="20211003 01:20:46.537" endtime="20211003 01:20:55.208"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:20:55.220" level="INFO">Running command 'ozone sh bucket getacl 10737-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:21:03.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:21:03.053" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:20:55.216" endtime="20211003 01:21:03.054"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:21:03.058" level="INFO"/>
<status status="PASS" starttime="20211003 01:21:03.054" endtime="20211003 01:21:03.058"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:21:03.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:21:03.059" endtime="20211003 01:21:03.060"/>
</kw>
<status status="PASS" starttime="20211003 01:20:55.215" endtime="20211003 01:21:03.061"/>
</kw>
<msg timestamp="20211003 01:21:03.061" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:20:55.214" endtime="20211003 01:21:03.062"/>
</kw>
<msg timestamp="20211003 01:21:03.062" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20211003 01:20:55.212" endtime="20211003 01:21:03.062"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211003 01:21:03.063" endtime="20211003 01:21:03.064"/>
</kw>
<status status="PASS" starttime="20211003 01:20:55.209" endtime="20211003 01:21:03.065"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:21:03.071" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 10737-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:21:11.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:21:11.521" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211003 01:21:03.069" endtime="20211003 01:21:11.522"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:21:11.524" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211003 01:21:11.523" endtime="20211003 01:21:11.525"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:21:11.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:21:11.525" endtime="20211003 01:21:11.526"/>
</kw>
<status status="PASS" starttime="20211003 01:21:03.067" endtime="20211003 01:21:11.527"/>
</kw>
<msg timestamp="20211003 01:21:11.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:21:03.067" endtime="20211003 01:21:11.527"/>
</kw>
<status status="PASS" starttime="20211003 01:21:03.065" endtime="20211003 01:21:11.528"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:21:11.539" level="INFO">Running command 'ozone sh bucket getacl 10737-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:21:20.122" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:21:20.122" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:21:11.536" endtime="20211003 01:21:20.122"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:21:20.123" level="INFO"/>
<status status="PASS" starttime="20211003 01:21:20.122" endtime="20211003 01:21:20.123"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:21:20.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:21:20.123" endtime="20211003 01:21:20.124"/>
</kw>
<status status="PASS" starttime="20211003 01:21:11.535" endtime="20211003 01:21:20.125"/>
</kw>
<msg timestamp="20211003 01:21:20.125" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:21:11.534" endtime="20211003 01:21:20.125"/>
</kw>
<msg timestamp="20211003 01:21:20.126" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20211003 01:21:11.531" endtime="20211003 01:21:20.126"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211003 01:21:20.127" endtime="20211003 01:21:20.128"/>
</kw>
<status status="PASS" starttime="20211003 01:21:11.528" endtime="20211003 01:21:20.128"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:21:20.140" level="INFO">Running command 'ozone sh bucket getacl 10737-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:21:29.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:21:29.018" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20211003 01:21:20.136" endtime="20211003 01:21:29.018"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:21:29.021" level="INFO">READ</msg>
<status status="PASS" starttime="20211003 01:21:29.019" endtime="20211003 01:21:29.021"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:21:29.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:21:29.021" endtime="20211003 01:21:29.023"/>
</kw>
<status status="PASS" starttime="20211003 01:21:20.134" endtime="20211003 01:21:29.024"/>
</kw>
<msg timestamp="20211003 01:21:29.024" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:21:20.134" endtime="20211003 01:21:29.024"/>
</kw>
<msg timestamp="20211003 01:21:29.025" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20211003 01:21:20.131" endtime="20211003 01:21:29.025"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211003 01:21:29.025" endtime="20211003 01:21:29.027"/>
</kw>
<status status="PASS" starttime="20211003 01:21:20.129" endtime="20211003 01:21:29.027"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211003 01:20:38.059" endtime="20211003 01:21:29.028"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:21:29.039" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:21:29.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:21:29.043" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211003 01:21:29.035" endtime="20211003 01:21:29.043"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:21:29.044" level="INFO">scm</msg>
<status status="PASS" starttime="20211003 01:21:29.043" endtime="20211003 01:21:29.045"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:21:29.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:21:29.045" endtime="20211003 01:21:29.046"/>
</kw>
<status status="PASS" starttime="20211003 01:21:29.034" endtime="20211003 01:21:29.046"/>
</kw>
<msg timestamp="20211003 01:21:29.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:21:29.033" endtime="20211003 01:21:29.047"/>
</kw>
<msg timestamp="20211003 01:21:29.047" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211003 01:21:29.033" endtime="20211003 01:21:29.047"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211003 01:21:29.048" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211003 01:21:29.048" endtime="20211003 01:21:29.048"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:21:29.054" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:21:29.235" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:21:29.236" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:21:29.051" endtime="20211003 01:21:29.236"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:21:29.237" level="INFO"/>
<status status="PASS" starttime="20211003 01:21:29.236" endtime="20211003 01:21:29.237"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:21:29.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:21:29.237" endtime="20211003 01:21:29.238"/>
</kw>
<status status="PASS" starttime="20211003 01:21:29.050" endtime="20211003 01:21:29.238"/>
</kw>
<msg timestamp="20211003 01:21:29.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:21:29.050" endtime="20211003 01:21:29.238"/>
</kw>
<status status="PASS" starttime="20211003 01:21:29.049" endtime="20211003 01:21:29.239"/>
</kw>
<status status="PASS" starttime="20211003 01:21:29.049" endtime="20211003 01:21:29.239"/>
</kw>
<status status="PASS" starttime="20211003 01:21:29.032" endtime="20211003 01:21:29.239"/>
</kw>
<status status="PASS" starttime="20211003 01:21:29.031" endtime="20211003 01:21:29.239"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:21:29.244" level="INFO">Running command 'ozone sh bucket link 10737-source/bucket2 10737-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:21:36.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:21:36.797" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:21:29.241" endtime="20211003 01:21:36.797"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:21:36.800" level="INFO"/>
<status status="PASS" starttime="20211003 01:21:36.798" endtime="20211003 01:21:36.800"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:21:36.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:21:36.800" endtime="20211003 01:21:36.803"/>
</kw>
<status status="PASS" starttime="20211003 01:21:29.241" endtime="20211003 01:21:36.803"/>
</kw>
<msg timestamp="20211003 01:21:36.804" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:21:29.240" endtime="20211003 01:21:36.804"/>
</kw>
<status status="PASS" starttime="20211003 01:21:29.240" endtime="20211003 01:21:36.804"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:21:36.810" level="INFO">Running command 'ozone sh bucket create 10737-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:21:44.985" level="INFO">${rc} = 255</msg>
<msg timestamp="20211003 01:21:44.985" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211003 01:21:36.806" endtime="20211003 01:21:44.985"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:21:44.987" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211003 01:21:44.986" endtime="20211003 01:21:44.987"/>
</kw>
<msg timestamp="20211003 01:21:44.988" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211003 01:21:36.805" endtime="20211003 01:21:44.988"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 01:21:44.988" endtime="20211003 01:21:44.989"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:21:44.994" level="INFO">Running command 'ozone sh bucket create 10737-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:21:52.949" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:21:52.949" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:21:44.991" endtime="20211003 01:21:52.949"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:21:52.951" level="INFO"/>
<status status="PASS" starttime="20211003 01:21:52.950" endtime="20211003 01:21:52.951"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:21:52.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:21:52.951" endtime="20211003 01:21:52.952"/>
</kw>
<status status="PASS" starttime="20211003 01:21:44.990" endtime="20211003 01:21:52.952"/>
</kw>
<msg timestamp="20211003 01:21:52.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:21:44.989" endtime="20211003 01:21:52.953"/>
</kw>
<status status="PASS" starttime="20211003 01:21:44.989" endtime="20211003 01:21:52.954"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:21:52.957" level="INFO">Running command 'ozone sh bucket link 10737-source/bucket1 10737-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:22:01.007" level="INFO">${rc} = 255</msg>
<msg timestamp="20211003 01:22:01.007" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211003 01:21:52.954" endtime="20211003 01:22:01.008"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:22:01.009" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211003 01:22:01.008" endtime="20211003 01:22:01.009"/>
</kw>
<msg timestamp="20211003 01:22:01.010" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211003 01:21:52.954" endtime="20211003 01:22:01.010"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 01:22:01.010" endtime="20211003 01:22:01.011"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211003 01:21:29.029" endtime="20211003 01:22:01.011"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:22:01.020" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:22:01.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:22:01.029" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211003 01:22:01.017" endtime="20211003 01:22:01.030"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:22:01.032" level="INFO">scm</msg>
<status status="PASS" starttime="20211003 01:22:01.031" endtime="20211003 01:22:01.032"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:22:01.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:22:01.032" endtime="20211003 01:22:01.033"/>
</kw>
<status status="PASS" starttime="20211003 01:22:01.017" endtime="20211003 01:22:01.033"/>
</kw>
<msg timestamp="20211003 01:22:01.033" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:22:01.016" endtime="20211003 01:22:01.034"/>
</kw>
<msg timestamp="20211003 01:22:01.034" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211003 01:22:01.016" endtime="20211003 01:22:01.034"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211003 01:22:01.035" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211003 01:22:01.034" endtime="20211003 01:22:01.035"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:22:01.041" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:22:01.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:22:01.053" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:22:01.038" endtime="20211003 01:22:01.053"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:22:01.055" level="INFO"/>
<status status="PASS" starttime="20211003 01:22:01.054" endtime="20211003 01:22:01.055"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:22:01.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:22:01.055" endtime="20211003 01:22:01.057"/>
</kw>
<status status="PASS" starttime="20211003 01:22:01.037" endtime="20211003 01:22:01.057"/>
</kw>
<msg timestamp="20211003 01:22:01.058" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:22:01.036" endtime="20211003 01:22:01.058"/>
</kw>
<status status="PASS" starttime="20211003 01:22:01.035" endtime="20211003 01:22:01.058"/>
</kw>
<status status="PASS" starttime="20211003 01:22:01.035" endtime="20211003 01:22:01.058"/>
</kw>
<status status="PASS" starttime="20211003 01:22:01.015" endtime="20211003 01:22:01.059"/>
</kw>
<status status="PASS" starttime="20211003 01:22:01.014" endtime="20211003 01:22:01.059"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:22:01.065" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:22:01.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:22:01.070" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:22:01.063" endtime="20211003 01:22:01.071"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:22:01.074" level="INFO"/>
<status status="PASS" starttime="20211003 01:22:01.072" endtime="20211003 01:22:01.074"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:22:01.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:22:01.075" endtime="20211003 01:22:01.076"/>
</kw>
<status status="PASS" starttime="20211003 01:22:01.062" endtime="20211003 01:22:01.077"/>
</kw>
<msg timestamp="20211003 01:22:01.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:22:01.061" endtime="20211003 01:22:01.078"/>
</kw>
<status status="PASS" starttime="20211003 01:22:01.061" endtime="20211003 01:22:01.078"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:22:01.088" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:22:01.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:22:01.094" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211003 01:22:01.084" endtime="20211003 01:22:01.094"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:22:01.096" level="INFO">scm</msg>
<status status="PASS" starttime="20211003 01:22:01.095" endtime="20211003 01:22:01.097"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:22:01.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:22:01.097" endtime="20211003 01:22:01.098"/>
</kw>
<status status="PASS" starttime="20211003 01:22:01.082" endtime="20211003 01:22:01.099"/>
</kw>
<msg timestamp="20211003 01:22:01.099" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:22:01.082" endtime="20211003 01:22:01.099"/>
</kw>
<msg timestamp="20211003 01:22:01.099" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211003 01:22:01.080" endtime="20211003 01:22:01.100"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211003 01:22:01.101" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211003 01:22:01.100" endtime="20211003 01:22:01.101"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:22:01.107" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:22:01.119" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:22:01.119" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:22:01.104" endtime="20211003 01:22:01.120"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:22:01.122" level="INFO"/>
<status status="PASS" starttime="20211003 01:22:01.120" endtime="20211003 01:22:01.122"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:22:01.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:22:01.122" endtime="20211003 01:22:01.123"/>
</kw>
<status status="PASS" starttime="20211003 01:22:01.103" endtime="20211003 01:22:01.123"/>
</kw>
<msg timestamp="20211003 01:22:01.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:22:01.103" endtime="20211003 01:22:01.124"/>
</kw>
<status status="PASS" starttime="20211003 01:22:01.102" endtime="20211003 01:22:01.124"/>
</kw>
<status status="PASS" starttime="20211003 01:22:01.101" endtime="20211003 01:22:01.124"/>
</kw>
<status status="PASS" starttime="20211003 01:22:01.079" endtime="20211003 01:22:01.124"/>
</kw>
<status status="PASS" starttime="20211003 01:22:01.078" endtime="20211003 01:22:01.125"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:22:01.129" level="INFO">Running command 'ozone sh key list 10737-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:22:08.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:22:08.824" level="INFO">${output} = {
  "volumeName" : "10737-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-10-03T01:11:23.017Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20211003 01:22:01.126" endtime="20211003 01:22:08.824"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:22:08.826" level="INFO">{
  "volumeName" : "10737-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-10-03T01:11:23.017Z",
  "modificationTime" : "2021-10-03T01:14:26.974Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "replicationFactor" : 3,
  "replicationType" : "RATIS"
}</msg>
<status status="PASS" starttime="20211003 01:22:08.825" endtime="20211003 01:22:08.826"/>
</kw>
<msg timestamp="20211003 01:22:08.826" level="INFO">${result} = {
  "volumeName" : "10737-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-10-03T01:11:23.017Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20211003 01:22:01.125" endtime="20211003 01:22:08.826"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 01:22:08.827" endtime="20211003 01:22:08.827"/>
</kw>
<status status="PASS" starttime="20211003 01:22:01.060" endtime="20211003 01:22:08.827"/>
</kw>
<status status="PASS" starttime="20211003 01:22:01.059" endtime="20211003 01:22:08.828"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211003 01:22:01.012" endtime="20211003 01:22:08.828"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:22:08.835" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:22:08.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:22:08.839" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211003 01:22:08.833" endtime="20211003 01:22:08.839"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:22:08.840" level="INFO">scm</msg>
<status status="PASS" starttime="20211003 01:22:08.839" endtime="20211003 01:22:08.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:22:08.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:22:08.840" endtime="20211003 01:22:08.841"/>
</kw>
<status status="PASS" starttime="20211003 01:22:08.832" endtime="20211003 01:22:08.842"/>
</kw>
<msg timestamp="20211003 01:22:08.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:22:08.832" endtime="20211003 01:22:08.842"/>
</kw>
<msg timestamp="20211003 01:22:08.842" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211003 01:22:08.831" endtime="20211003 01:22:08.842"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211003 01:22:08.843" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211003 01:22:08.843" endtime="20211003 01:22:08.843"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:22:08.848" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:22:08.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:22:08.855" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:22:08.846" endtime="20211003 01:22:08.855"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:22:08.856" level="INFO"/>
<status status="PASS" starttime="20211003 01:22:08.856" endtime="20211003 01:22:08.857"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:22:08.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:22:08.857" endtime="20211003 01:22:08.857"/>
</kw>
<status status="PASS" starttime="20211003 01:22:08.845" endtime="20211003 01:22:08.858"/>
</kw>
<msg timestamp="20211003 01:22:08.858" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:22:08.845" endtime="20211003 01:22:08.858"/>
</kw>
<status status="PASS" starttime="20211003 01:22:08.844" endtime="20211003 01:22:08.858"/>
</kw>
<status status="PASS" starttime="20211003 01:22:08.843" endtime="20211003 01:22:08.858"/>
</kw>
<status status="PASS" starttime="20211003 01:22:08.830" endtime="20211003 01:22:08.859"/>
</kw>
<status status="PASS" starttime="20211003 01:22:08.830" endtime="20211003 01:22:08.859"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:22:08.864" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:22:08.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:22:08.867" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:22:08.862" endtime="20211003 01:22:08.867"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:22:08.868" level="INFO"/>
<status status="PASS" starttime="20211003 01:22:08.868" endtime="20211003 01:22:08.868"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:22:08.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:22:08.868" endtime="20211003 01:22:08.869"/>
</kw>
<status status="PASS" starttime="20211003 01:22:08.861" endtime="20211003 01:22:08.870"/>
</kw>
<msg timestamp="20211003 01:22:08.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:22:08.861" endtime="20211003 01:22:08.870"/>
</kw>
<status status="PASS" starttime="20211003 01:22:08.860" endtime="20211003 01:22:08.870"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:22:08.875" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:22:08.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:22:08.878" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211003 01:22:08.873" endtime="20211003 01:22:08.878"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:22:08.879" level="INFO">scm</msg>
<status status="PASS" starttime="20211003 01:22:08.879" endtime="20211003 01:22:08.880"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:22:08.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:22:08.880" endtime="20211003 01:22:08.881"/>
</kw>
<status status="PASS" starttime="20211003 01:22:08.872" endtime="20211003 01:22:08.881"/>
</kw>
<msg timestamp="20211003 01:22:08.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:22:08.872" endtime="20211003 01:22:08.882"/>
</kw>
<msg timestamp="20211003 01:22:08.882" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211003 01:22:08.871" endtime="20211003 01:22:08.882"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211003 01:22:08.883" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211003 01:22:08.882" endtime="20211003 01:22:08.883"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:22:08.887" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:22:08.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:22:08.895" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:22:08.885" endtime="20211003 01:22:08.895"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:22:08.896" level="INFO"/>
<status status="PASS" starttime="20211003 01:22:08.895" endtime="20211003 01:22:08.896"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:22:08.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:22:08.896" endtime="20211003 01:22:08.897"/>
</kw>
<status status="PASS" starttime="20211003 01:22:08.885" endtime="20211003 01:22:08.898"/>
</kw>
<msg timestamp="20211003 01:22:08.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:22:08.884" endtime="20211003 01:22:08.898"/>
</kw>
<status status="PASS" starttime="20211003 01:22:08.884" endtime="20211003 01:22:08.898"/>
</kw>
<status status="PASS" starttime="20211003 01:22:08.883" endtime="20211003 01:22:08.898"/>
</kw>
<status status="PASS" starttime="20211003 01:22:08.871" endtime="20211003 01:22:08.899"/>
</kw>
<status status="PASS" starttime="20211003 01:22:08.870" endtime="20211003 01:22:08.899"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:22:08.902" level="INFO">Running command 'ozone sh key list 10737-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:22:16.469" level="INFO">${rc} = 255</msg>
<msg timestamp="20211003 01:22:16.469" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 10737-target unreadable-link null</msg>
<status status="PASS" starttime="20211003 01:22:08.899" endtime="20211003 01:22:16.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:22:16.470" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 10737-target unreadable-link null</msg>
<status status="PASS" starttime="20211003 01:22:16.469" endtime="20211003 01:22:16.470"/>
</kw>
<msg timestamp="20211003 01:22:16.471" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 10737-target unreadable-link null</msg>
<status status="PASS" starttime="20211003 01:22:08.899" endtime="20211003 01:22:16.471"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 01:22:16.471" endtime="20211003 01:22:16.472"/>
</kw>
<status status="PASS" starttime="20211003 01:22:08.859" endtime="20211003 01:22:16.472"/>
</kw>
<status status="PASS" starttime="20211003 01:22:08.859" endtime="20211003 01:22:16.472"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211003 01:22:08.829" endtime="20211003 01:22:16.472"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:22:16.482" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:22:16.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:22:16.488" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211003 01:22:16.478" endtime="20211003 01:22:16.488"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:22:16.493" level="INFO">scm</msg>
<status status="PASS" starttime="20211003 01:22:16.490" endtime="20211003 01:22:16.493"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:22:16.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:22:16.493" endtime="20211003 01:22:16.494"/>
</kw>
<status status="PASS" starttime="20211003 01:22:16.478" endtime="20211003 01:22:16.494"/>
</kw>
<msg timestamp="20211003 01:22:16.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:22:16.477" endtime="20211003 01:22:16.495"/>
</kw>
<msg timestamp="20211003 01:22:16.495" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211003 01:22:16.476" endtime="20211003 01:22:16.495"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211003 01:22:16.496" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211003 01:22:16.495" endtime="20211003 01:22:16.496"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:22:16.502" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:22:16.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:22:16.511" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:22:16.499" endtime="20211003 01:22:16.511"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:22:16.512" level="INFO"/>
<status status="PASS" starttime="20211003 01:22:16.512" endtime="20211003 01:22:16.512"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:22:16.513" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:22:16.513" endtime="20211003 01:22:16.514"/>
</kw>
<status status="PASS" starttime="20211003 01:22:16.498" endtime="20211003 01:22:16.514"/>
</kw>
<msg timestamp="20211003 01:22:16.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:22:16.498" endtime="20211003 01:22:16.515"/>
</kw>
<status status="PASS" starttime="20211003 01:22:16.497" endtime="20211003 01:22:16.515"/>
</kw>
<status status="PASS" starttime="20211003 01:22:16.496" endtime="20211003 01:22:16.515"/>
</kw>
<status status="PASS" starttime="20211003 01:22:16.476" endtime="20211003 01:22:16.515"/>
</kw>
<status status="PASS" starttime="20211003 01:22:16.475" endtime="20211003 01:22:16.515"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:22:16.522" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:22:16.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:22:16.527" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:22:16.519" endtime="20211003 01:22:16.527"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:22:16.529" level="INFO"/>
<status status="PASS" starttime="20211003 01:22:16.528" endtime="20211003 01:22:16.529"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:22:16.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:22:16.529" endtime="20211003 01:22:16.530"/>
</kw>
<status status="PASS" starttime="20211003 01:22:16.518" endtime="20211003 01:22:16.531"/>
</kw>
<msg timestamp="20211003 01:22:16.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:22:16.518" endtime="20211003 01:22:16.531"/>
</kw>
<status status="PASS" starttime="20211003 01:22:16.517" endtime="20211003 01:22:16.531"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:22:16.540" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:22:16.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:22:16.545" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211003 01:22:16.537" endtime="20211003 01:22:16.545"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:22:16.546" level="INFO">scm</msg>
<status status="PASS" starttime="20211003 01:22:16.545" endtime="20211003 01:22:16.546"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:22:16.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:22:16.547" endtime="20211003 01:22:16.547"/>
</kw>
<status status="PASS" starttime="20211003 01:22:16.536" endtime="20211003 01:22:16.548"/>
</kw>
<msg timestamp="20211003 01:22:16.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:22:16.535" endtime="20211003 01:22:16.548"/>
</kw>
<msg timestamp="20211003 01:22:16.548" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211003 01:22:16.533" endtime="20211003 01:22:16.548"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211003 01:22:16.549" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211003 01:22:16.548" endtime="20211003 01:22:16.549"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:22:16.554" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:22:16.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:22:16.566" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:22:16.552" endtime="20211003 01:22:16.566"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:22:16.567" level="INFO"/>
<status status="PASS" starttime="20211003 01:22:16.567" endtime="20211003 01:22:16.567"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:22:16.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:22:16.568" endtime="20211003 01:22:16.568"/>
</kw>
<status status="PASS" starttime="20211003 01:22:16.551" endtime="20211003 01:22:16.569"/>
</kw>
<msg timestamp="20211003 01:22:16.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:22:16.551" endtime="20211003 01:22:16.569"/>
</kw>
<status status="PASS" starttime="20211003 01:22:16.550" endtime="20211003 01:22:16.570"/>
</kw>
<status status="PASS" starttime="20211003 01:22:16.549" endtime="20211003 01:22:16.570"/>
</kw>
<status status="PASS" starttime="20211003 01:22:16.532" endtime="20211003 01:22:16.570"/>
</kw>
<status status="PASS" starttime="20211003 01:22:16.532" endtime="20211003 01:22:16.570"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:22:16.574" level="INFO">Running command 'ozone sh bucket info 10737-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:22:24.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:22:24.964" level="INFO">${output} = {
  "volumeName" : "10737-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "10737-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-10-03T01:14:59.204Z...</msg>
<status status="PASS" starttime="20211003 01:22:16.572" endtime="20211003 01:22:24.964"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:22:24.968" level="INFO">{
  "volumeName" : "10737-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "10737-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-10-03T01:14:59.204Z",
  "modificationTime" : "2021-10-03T01:15:39.079Z"
}</msg>
<status status="PASS" starttime="20211003 01:22:24.966" endtime="20211003 01:22:24.968"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:22:24.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:22:24.969" endtime="20211003 01:22:24.971"/>
</kw>
<status status="PASS" starttime="20211003 01:22:16.572" endtime="20211003 01:22:24.972"/>
</kw>
<msg timestamp="20211003 01:22:24.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:22:16.571" endtime="20211003 01:22:24.973"/>
</kw>
<msg timestamp="20211003 01:22:24.973" level="INFO">${result} = {
  "volumeName" : "10737-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "10737-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-10-03T01:14:59.204Z...</msg>
<status status="PASS" starttime="20211003 01:22:16.570" endtime="20211003 01:22:24.974"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 01:22:24.974" endtime="20211003 01:22:24.975"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 01:22:24.976" endtime="20211003 01:22:24.977"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:22:24.983" level="INFO">Running command 'ozone sh key list 10737-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:22:30.800" level="INFO">${rc} = 255</msg>
<msg timestamp="20211003 01:22:30.800" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 10737-source unreadable-bucket </msg>
<status status="PASS" starttime="20211003 01:22:24.979" endtime="20211003 01:22:30.801"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:22:30.802" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 10737-source unreadable-bucket </msg>
<status status="PASS" starttime="20211003 01:22:30.801" endtime="20211003 01:22:30.802"/>
</kw>
<msg timestamp="20211003 01:22:30.803" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 10737-source unreadable-bucket </msg>
<status status="PASS" starttime="20211003 01:22:24.977" endtime="20211003 01:22:30.803"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 01:22:30.803" endtime="20211003 01:22:30.804"/>
</kw>
<status status="PASS" starttime="20211003 01:22:16.516" endtime="20211003 01:22:30.804"/>
</kw>
<status status="PASS" starttime="20211003 01:22:16.516" endtime="20211003 01:22:30.804"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211003 01:22:16.474" endtime="20211003 01:22:30.804"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:22:30.817" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:22:30.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:22:30.821" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211003 01:22:30.813" endtime="20211003 01:22:30.822"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:22:30.823" level="INFO">scm</msg>
<status status="PASS" starttime="20211003 01:22:30.822" endtime="20211003 01:22:30.823"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:22:30.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:22:30.823" endtime="20211003 01:22:30.824"/>
</kw>
<status status="PASS" starttime="20211003 01:22:30.812" endtime="20211003 01:22:30.825"/>
</kw>
<msg timestamp="20211003 01:22:30.825" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:22:30.811" endtime="20211003 01:22:30.825"/>
</kw>
<msg timestamp="20211003 01:22:30.826" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211003 01:22:30.810" endtime="20211003 01:22:30.826"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211003 01:22:30.827" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211003 01:22:30.826" endtime="20211003 01:22:30.827"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:22:30.832" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:22:30.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:22:30.843" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:22:30.830" endtime="20211003 01:22:30.843"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:22:30.844" level="INFO"/>
<status status="PASS" starttime="20211003 01:22:30.843" endtime="20211003 01:22:30.844"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:22:30.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:22:30.845" endtime="20211003 01:22:30.846"/>
</kw>
<status status="PASS" starttime="20211003 01:22:30.830" endtime="20211003 01:22:30.847"/>
</kw>
<msg timestamp="20211003 01:22:30.847" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:22:30.829" endtime="20211003 01:22:30.847"/>
</kw>
<status status="PASS" starttime="20211003 01:22:30.828" endtime="20211003 01:22:30.847"/>
</kw>
<status status="PASS" starttime="20211003 01:22:30.827" endtime="20211003 01:22:30.847"/>
</kw>
<status status="PASS" starttime="20211003 01:22:30.809" endtime="20211003 01:22:30.848"/>
</kw>
<status status="PASS" starttime="20211003 01:22:30.808" endtime="20211003 01:22:30.848"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:22:30.853" level="INFO">Running command 'ozone sh bucket link 10737-target/loop1 10737-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:22:37.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:22:37.584" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:22:30.851" endtime="20211003 01:22:37.584"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:22:37.585" level="INFO"/>
<status status="PASS" starttime="20211003 01:22:37.585" endtime="20211003 01:22:37.586"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:22:37.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:22:37.586" endtime="20211003 01:22:37.587"/>
</kw>
<status status="PASS" starttime="20211003 01:22:30.850" endtime="20211003 01:22:37.587"/>
</kw>
<msg timestamp="20211003 01:22:37.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:22:30.849" endtime="20211003 01:22:37.587"/>
</kw>
<status status="PASS" starttime="20211003 01:22:30.848" endtime="20211003 01:22:37.587"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:22:37.592" level="INFO">Running command 'ozone sh bucket link 10737-target/loop2 10737-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:22:45.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:22:45.410" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:22:37.589" endtime="20211003 01:22:45.410"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:22:45.411" level="INFO"/>
<status status="PASS" starttime="20211003 01:22:45.410" endtime="20211003 01:22:45.411"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:22:45.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:22:45.411" endtime="20211003 01:22:45.412"/>
</kw>
<status status="PASS" starttime="20211003 01:22:37.589" endtime="20211003 01:22:45.412"/>
</kw>
<msg timestamp="20211003 01:22:45.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:22:37.588" endtime="20211003 01:22:45.413"/>
</kw>
<status status="PASS" starttime="20211003 01:22:37.588" endtime="20211003 01:22:45.413"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:22:45.418" level="INFO">Running command 'ozone sh bucket link 10737-target/loop3 10737-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:22:53.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:22:53.451" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:22:45.415" endtime="20211003 01:22:53.452"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:22:53.453" level="INFO"/>
<status status="PASS" starttime="20211003 01:22:53.452" endtime="20211003 01:22:53.453"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:22:53.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:22:53.453" endtime="20211003 01:22:53.454"/>
</kw>
<status status="PASS" starttime="20211003 01:22:45.414" endtime="20211003 01:22:53.454"/>
</kw>
<msg timestamp="20211003 01:22:53.454" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:22:45.414" endtime="20211003 01:22:53.454"/>
</kw>
<status status="PASS" starttime="20211003 01:22:45.413" endtime="20211003 01:22:53.455"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:22:53.458" level="INFO">Running command 'ozone sh key list 10737-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:23:01.507" level="INFO">${rc} = 255</msg>
<msg timestamp="20211003 01:23:01.508" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20211003 01:22:53.456" endtime="20211003 01:23:01.508"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:23:01.510" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20211003 01:23:01.509" endtime="20211003 01:23:01.511"/>
</kw>
<msg timestamp="20211003 01:23:01.512" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20211003 01:22:53.455" endtime="20211003 01:23:01.512"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 01:23:01.513" endtime="20211003 01:23:01.514"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211003 01:22:30.806" endtime="20211003 01:23:01.514"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:23:01.527" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:23:01.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:23:01.538" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211003 01:23:01.524" endtime="20211003 01:23:01.538"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:23:01.541" level="INFO">scm</msg>
<status status="PASS" starttime="20211003 01:23:01.540" endtime="20211003 01:23:01.541"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:23:01.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:23:01.542" endtime="20211003 01:23:01.543"/>
</kw>
<status status="PASS" starttime="20211003 01:23:01.522" endtime="20211003 01:23:01.543"/>
</kw>
<msg timestamp="20211003 01:23:01.543" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:23:01.522" endtime="20211003 01:23:01.544"/>
</kw>
<msg timestamp="20211003 01:23:01.544" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211003 01:23:01.521" endtime="20211003 01:23:01.544"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211003 01:23:01.545" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211003 01:23:01.545" endtime="20211003 01:23:01.546"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:23:01.553" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:23:01.565" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:23:01.565" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:23:01.550" endtime="20211003 01:23:01.565"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:23:01.567" level="INFO"/>
<status status="PASS" starttime="20211003 01:23:01.566" endtime="20211003 01:23:01.567"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:23:01.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:23:01.568" endtime="20211003 01:23:01.569"/>
</kw>
<status status="PASS" starttime="20211003 01:23:01.549" endtime="20211003 01:23:01.570"/>
</kw>
<msg timestamp="20211003 01:23:01.570" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:23:01.548" endtime="20211003 01:23:01.570"/>
</kw>
<status status="PASS" starttime="20211003 01:23:01.547" endtime="20211003 01:23:01.570"/>
</kw>
<status status="PASS" starttime="20211003 01:23:01.546" endtime="20211003 01:23:01.570"/>
</kw>
<status status="PASS" starttime="20211003 01:23:01.520" endtime="20211003 01:23:01.570"/>
</kw>
<status status="PASS" starttime="20211003 01:23:01.519" endtime="20211003 01:23:01.571"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:23:01.577" level="INFO">Running command 'ozone sh bucket link 10737-source/bucket1 10737-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:23:09.006" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:23:09.007" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:23:01.573" endtime="20211003 01:23:09.007"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:23:09.013" level="INFO"/>
<status status="PASS" starttime="20211003 01:23:09.008" endtime="20211003 01:23:09.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:23:09.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:23:09.013" endtime="20211003 01:23:09.015"/>
</kw>
<status status="PASS" starttime="20211003 01:23:01.573" endtime="20211003 01:23:09.016"/>
</kw>
<msg timestamp="20211003 01:23:09.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:23:01.572" endtime="20211003 01:23:09.016"/>
</kw>
<status status="PASS" starttime="20211003 01:23:01.571" endtime="20211003 01:23:09.016"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:23:09.024" level="INFO">Running command 'ozone sh key put 10737-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:25:01.518" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20211003 01:23:09.021" endtime="20211003 01:25:01.518"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211003 01:25:01.519" endtime="20211003 01:25:01.519"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211003 01:25:01.519" endtime="20211003 01:25:01.519"/>
</kw>
<status status="FAIL" starttime="20211003 01:23:09.019" endtime="20211003 01:25:01.520"/>
</kw>
<msg timestamp="20211003 01:25:01.520" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211003 01:23:09.018" endtime="20211003 01:25:01.520"/>
</kw>
<status status="FAIL" starttime="20211003 01:23:09.017" endtime="20211003 01:25:01.520"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<status status="NOT RUN" starttime="20211003 01:25:01.521" endtime="20211003 01:25:01.521"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211003 01:23:01.517" endtime="20211003 01:25:01.521">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:25:01.530" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:25:01.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:25:01.535" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211003 01:25:01.528" endtime="20211003 01:25:01.535"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:25:01.536" level="INFO">scm</msg>
<status status="PASS" starttime="20211003 01:25:01.535" endtime="20211003 01:25:01.536"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:25:01.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:25:01.537" endtime="20211003 01:25:01.539"/>
</kw>
<status status="PASS" starttime="20211003 01:25:01.527" endtime="20211003 01:25:01.539"/>
</kw>
<msg timestamp="20211003 01:25:01.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:25:01.527" endtime="20211003 01:25:01.540"/>
</kw>
<msg timestamp="20211003 01:25:01.540" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211003 01:25:01.526" endtime="20211003 01:25:01.541"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211003 01:25:01.542" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211003 01:25:01.541" endtime="20211003 01:25:01.542"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:25:01.546" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:25:01.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:25:01.557" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:25:01.544" endtime="20211003 01:25:01.557"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:25:01.559" level="INFO"/>
<status status="PASS" starttime="20211003 01:25:01.558" endtime="20211003 01:25:01.559"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:25:01.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:25:01.559" endtime="20211003 01:25:01.559"/>
</kw>
<status status="PASS" starttime="20211003 01:25:01.543" endtime="20211003 01:25:01.560"/>
</kw>
<msg timestamp="20211003 01:25:01.560" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:25:01.543" endtime="20211003 01:25:01.560"/>
</kw>
<status status="PASS" starttime="20211003 01:25:01.542" endtime="20211003 01:25:01.560"/>
</kw>
<status status="PASS" starttime="20211003 01:25:01.542" endtime="20211003 01:25:01.560"/>
</kw>
<status status="PASS" starttime="20211003 01:25:01.525" endtime="20211003 01:25:01.561"/>
</kw>
<status status="PASS" starttime="20211003 01:25:01.524" endtime="20211003 01:25:01.561"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:25:01.566" level="INFO">Running command 'ozone sh bucket delete 10737-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:25:07.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:25:07.397" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:25:01.563" endtime="20211003 01:25:07.397"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:25:07.399" level="INFO"/>
<status status="PASS" starttime="20211003 01:25:07.398" endtime="20211003 01:25:07.399"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:25:07.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:25:07.399" endtime="20211003 01:25:07.400"/>
</kw>
<status status="PASS" starttime="20211003 01:25:01.562" endtime="20211003 01:25:07.400"/>
</kw>
<msg timestamp="20211003 01:25:07.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:25:01.562" endtime="20211003 01:25:07.401"/>
</kw>
<status status="PASS" starttime="20211003 01:25:01.561" endtime="20211003 01:25:07.401"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:25:07.406" level="INFO">Running command 'ozone sh bucket list 10737-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:25:17.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:25:17.502" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "10737-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-03T...</msg>
<status status="PASS" starttime="20211003 01:25:07.403" endtime="20211003 01:25:17.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:25:17.504" level="INFO">{
  "metadata" : { },
  "volumeName" : "10737-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-03T01:21:52.636Z",
  "modificationTime" : "2021-10-03T01:21:52.636Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "10737-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-03T01:15:47.109Z",
  "modificationTime" : "2021-10-03T01:15:47.109Z",
  "sourceVolume" : "10737-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "10737-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-03T01:14:59.204Z",
  "modificationTime" : "2021-10-03T01:15:39.079Z",
  "sourceVolume" : "10737-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "10737-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-03T01:21:36.682Z",
  "modificationTime" : "2021-10-03T01:21:36.682Z",
  "sourceVolume" : "10737-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "10737-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-03T01:23:08.904Z",
  "modificationTime" : "2021-10-03T01:23:08.904Z",
  "sourceVolume" : "10737-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "10737-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-03T01:22:53.346Z",
  "modificationTime" : "2021-10-03T01:22:53.346Z",
  "sourceVolume" : "10737-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "10737-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-03T01:22:37.370Z",
  "modificationTime" : "2021-10-03T01:22:37.370Z",
  "sourceVolume" : "10737-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "10737-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-03T01:22:45.281Z",
  "modificationTime" : "2021-10-03T01:22:45.281Z",
  "sourceVolume" : "10737-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "10737-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-03T01:14:44.114Z",
  "modificationTime" : "2021-10-03T01:15:31.639Z",
  "sourceVolume" : "10737-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "10737-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-03T01:14:52.108Z",
  "modificationTime" : "2021-10-03T01:14:52.108Z",
  "sourceVolume" : "10737-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}</msg>
<status status="PASS" starttime="20211003 01:25:17.503" endtime="20211003 01:25:17.504"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:25:17.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:25:17.504" endtime="20211003 01:25:17.505"/>
</kw>
<status status="PASS" starttime="20211003 01:25:07.403" endtime="20211003 01:25:17.506"/>
</kw>
<msg timestamp="20211003 01:25:17.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:25:07.402" endtime="20211003 01:25:17.507"/>
</kw>
<msg timestamp="20211003 01:25:17.508" level="INFO">${bucket_list} = {
  "metadata" : { },
  "volumeName" : "10737-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-03T...</msg>
<status status="PASS" starttime="20211003 01:25:07.402" endtime="20211003 01:25:17.508"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 01:25:17.508" endtime="20211003 01:25:17.510"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:25:17.519" level="INFO">Running command 'ozone sh key list 10737-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:25:26.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:25:26.262" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20211003 01:25:17.516" endtime="20211003 01:25:26.262"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:25:26.264" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20211003 01:25:26.263" endtime="20211003 01:25:26.264"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:25:26.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:25:26.264" endtime="20211003 01:25:26.265"/>
</kw>
<status status="PASS" starttime="20211003 01:25:17.514" endtime="20211003 01:25:26.265"/>
</kw>
<msg timestamp="20211003 01:25:26.266" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:25:17.513" endtime="20211003 01:25:26.266"/>
</kw>
<msg timestamp="20211003 01:25:26.266" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20211003 01:25:17.511" endtime="20211003 01:25:26.266"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 01:25:26.266" endtime="20211003 01:25:26.267"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211003 01:25:01.523" endtime="20211003 01:25:26.267"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="FAIL" starttime="20211003 01:10:56.445" endtime="20211003 01:25:26.270"/>
</suite>
<suite id="s1-s1-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211003 01:25:26.314" level="INFO">${random} = 43160</msg>
<status status="PASS" starttime="20211003 01:25:26.314" endtime="20211003 01:25:26.314"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211003 01:25:26.315" level="INFO">${prefix} = 43160</msg>
<status status="PASS" starttime="20211003 01:25:26.315" endtime="20211003 01:25:26.315"/>
</kw>
<status status="PASS" starttime="20211003 01:25:26.313" endtime="20211003 01:25:26.315"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:25:26.323" level="INFO">Running command 'ozone sh volume info /43160-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:25:34.758" level="INFO">${rc} = 255</msg>
<msg timestamp="20211003 01:25:34.758" level="INFO">${output} = VOLUME_NOT_FOUND Volume 43160-rpcbasic is not found</msg>
<status status="PASS" starttime="20211003 01:25:26.321" endtime="20211003 01:25:34.758"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:25:34.760" level="INFO">VOLUME_NOT_FOUND Volume 43160-rpcbasic is not found</msg>
<status status="PASS" starttime="20211003 01:25:34.759" endtime="20211003 01:25:34.760"/>
</kw>
<msg timestamp="20211003 01:25:34.762" level="INFO">${result} = VOLUME_NOT_FOUND Volume 43160-rpcbasic is not found</msg>
<status status="PASS" starttime="20211003 01:25:26.320" endtime="20211003 01:25:34.762"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 01:25:34.762" endtime="20211003 01:25:34.763"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:25:34.769" level="INFO">Running command 'ozone sh volume create /43160-rpcbasic --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:25:42.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:25:42.814" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:25:34.766" endtime="20211003 01:25:42.814"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:25:42.815" level="INFO"/>
<status status="PASS" starttime="20211003 01:25:42.814" endtime="20211003 01:25:42.815"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:25:42.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:25:42.816" endtime="20211003 01:25:42.817"/>
</kw>
<status status="PASS" starttime="20211003 01:25:34.765" endtime="20211003 01:25:42.817"/>
</kw>
<msg timestamp="20211003 01:25:42.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:25:34.764" endtime="20211003 01:25:42.818"/>
</kw>
<msg timestamp="20211003 01:25:42.819" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211003 01:25:34.763" endtime="20211003 01:25:42.819"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 01:25:42.819" endtime="20211003 01:25:42.820"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:25:42.825" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="43160-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:25:51.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:25:51.430" level="INFO">${output} = {
  "metadata": {},
  "name": "43160-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211003 01:25:42.822" endtime="20211003 01:25:51.430"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:25:51.433" level="INFO">{
  "metadata": {},
  "name": "43160-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-03T01:25:42.416Z",
  "modificationTime": "2021-10-03T01:25:42.416Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211003 01:25:51.431" endtime="20211003 01:25:51.433"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:25:51.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:25:51.433" endtime="20211003 01:25:51.434"/>
</kw>
<status status="PASS" starttime="20211003 01:25:42.821" endtime="20211003 01:25:51.435"/>
</kw>
<msg timestamp="20211003 01:25:51.435" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:25:42.821" endtime="20211003 01:25:51.435"/>
</kw>
<msg timestamp="20211003 01:25:51.436" level="INFO">${result} = {
  "metadata": {},
  "name": "43160-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211003 01:25:42.820" endtime="20211003 01:25:51.436"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 01:25:51.437" endtime="20211003 01:25:51.437"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:25:51.443" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="43160-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:25:58.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:25:58.325" level="INFO">${output} = {
  "metadata": {},
  "name": "43160-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211003 01:25:51.439" endtime="20211003 01:25:58.325"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:25:58.330" level="INFO">{
  "metadata": {},
  "name": "43160-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-03T01:25:42.416Z",
  "modificationTime": "2021-10-03T01:25:42.416Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211003 01:25:58.327" endtime="20211003 01:25:58.331"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:25:58.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:25:58.331" endtime="20211003 01:25:58.334"/>
</kw>
<status status="PASS" starttime="20211003 01:25:51.439" endtime="20211003 01:25:58.335"/>
</kw>
<msg timestamp="20211003 01:25:58.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:25:51.438" endtime="20211003 01:25:58.336"/>
</kw>
<msg timestamp="20211003 01:25:58.337" level="INFO">${result} = {
  "metadata": {},
  "name": "43160-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211003 01:25:51.437" endtime="20211003 01:25:58.338"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 01:25:58.338" endtime="20211003 01:25:58.340"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:25:58.348" level="INFO">Running command 'ozone sh volume setquota /43160-rpcbasic --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:26:06.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:26:06.003" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:25:58.344" endtime="20211003 01:26:06.004"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:26:06.008" level="INFO"/>
<status status="PASS" starttime="20211003 01:26:06.006" endtime="20211003 01:26:06.008"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:26:06.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:26:06.008" endtime="20211003 01:26:06.010"/>
</kw>
<status status="PASS" starttime="20211003 01:25:58.344" endtime="20211003 01:26:06.011"/>
</kw>
<msg timestamp="20211003 01:26:06.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:25:58.343" endtime="20211003 01:26:06.012"/>
</kw>
<status status="PASS" starttime="20211003 01:25:58.340" endtime="20211003 01:26:06.013"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:26:06.023" level="INFO">Running command 'ozone sh volume info /43160-rpcbasic | jq -r '. | select(.name=="43160-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:26:11.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:26:11.982" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211003 01:26:06.019" endtime="20211003 01:26:11.982"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:26:11.984" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211003 01:26:11.983" endtime="20211003 01:26:11.984"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:26:11.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:26:11.984" endtime="20211003 01:26:11.985"/>
</kw>
<status status="PASS" starttime="20211003 01:26:06.017" endtime="20211003 01:26:11.986"/>
</kw>
<msg timestamp="20211003 01:26:11.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:26:06.016" endtime="20211003 01:26:11.986"/>
</kw>
<msg timestamp="20211003 01:26:11.986" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211003 01:26:06.013" endtime="20211003 01:26:11.987"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211003 01:26:11.988" endtime="20211003 01:26:11.989"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:26:11.994" level="INFO">Running command 'ozone sh bucket create /43160-rpcbasic/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:26:20.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:26:20.201" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:26:11.991" endtime="20211003 01:26:20.201"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:26:20.203" level="INFO"/>
<status status="PASS" starttime="20211003 01:26:20.202" endtime="20211003 01:26:20.203"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:26:20.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:26:20.204" endtime="20211003 01:26:20.205"/>
</kw>
<status status="PASS" starttime="20211003 01:26:11.990" endtime="20211003 01:26:20.205"/>
</kw>
<msg timestamp="20211003 01:26:20.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:26:11.990" endtime="20211003 01:26:20.206"/>
</kw>
<status status="PASS" starttime="20211003 01:26:11.989" endtime="20211003 01:26:20.206"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:26:20.213" level="INFO">Running command 'ozone sh bucket info /43160-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:26:29.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:26:29.285" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211003 01:26:20.208" endtime="20211003 01:26:29.285"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:26:29.288" level="INFO">DISK</msg>
<status status="PASS" starttime="20211003 01:26:29.286" endtime="20211003 01:26:29.288"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:26:29.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:26:29.288" endtime="20211003 01:26:29.290"/>
</kw>
<status status="PASS" starttime="20211003 01:26:20.208" endtime="20211003 01:26:29.291"/>
</kw>
<msg timestamp="20211003 01:26:29.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:26:20.207" endtime="20211003 01:26:29.291"/>
</kw>
<msg timestamp="20211003 01:26:29.292" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211003 01:26:20.206" endtime="20211003 01:26:29.292"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211003 01:26:29.292" endtime="20211003 01:26:29.293"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:26:29.301" level="INFO">Running command 'ozone sh bucket info /43160-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:26:37.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:26:37.354" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211003 01:26:29.298" endtime="20211003 01:26:37.354"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:26:37.357" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211003 01:26:37.355" endtime="20211003 01:26:37.357"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:26:37.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:26:37.357" endtime="20211003 01:26:37.358"/>
</kw>
<status status="PASS" starttime="20211003 01:26:29.296" endtime="20211003 01:26:37.359"/>
</kw>
<msg timestamp="20211003 01:26:37.359" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:26:29.295" endtime="20211003 01:26:37.360"/>
</kw>
<msg timestamp="20211003 01:26:37.360" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211003 01:26:29.293" endtime="20211003 01:26:37.360"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211003 01:26:37.361" endtime="20211003 01:26:37.362"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:26:37.369" level="INFO">Running command 'ozone sh bucket info /43160-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:26:46.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:26:46.250" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211003 01:26:37.366" endtime="20211003 01:26:46.250"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:26:46.253" level="INFO">100</msg>
<status status="PASS" starttime="20211003 01:26:46.251" endtime="20211003 01:26:46.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:26:46.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:26:46.253" endtime="20211003 01:26:46.254"/>
</kw>
<status status="PASS" starttime="20211003 01:26:37.365" endtime="20211003 01:26:46.255"/>
</kw>
<msg timestamp="20211003 01:26:46.255" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:26:37.364" endtime="20211003 01:26:46.255"/>
</kw>
<msg timestamp="20211003 01:26:46.255" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211003 01:26:37.362" endtime="20211003 01:26:46.255"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211003 01:26:46.255" endtime="20211003 01:26:46.256"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:26:46.265" level="INFO">Running command 'ozone sh bucket setquota /43160-rpcbasic/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:26:54.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:26:54.210" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:26:46.262" endtime="20211003 01:26:54.210"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:26:54.212" level="INFO"/>
<status status="PASS" starttime="20211003 01:26:54.210" endtime="20211003 01:26:54.212"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:26:54.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:26:54.212" endtime="20211003 01:26:54.213"/>
</kw>
<status status="PASS" starttime="20211003 01:26:46.260" endtime="20211003 01:26:54.213"/>
</kw>
<msg timestamp="20211003 01:26:54.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:26:46.259" endtime="20211003 01:26:54.213"/>
</kw>
<status status="PASS" starttime="20211003 01:26:46.256" endtime="20211003 01:26:54.214"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:26:54.219" level="INFO">Running command 'ozone sh bucket info /43160-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:27:02.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:27:02.417" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211003 01:26:54.216" endtime="20211003 01:27:02.417"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:27:02.420" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211003 01:27:02.418" endtime="20211003 01:27:02.421"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:27:02.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:27:02.421" endtime="20211003 01:27:02.423"/>
</kw>
<status status="PASS" starttime="20211003 01:26:54.215" endtime="20211003 01:27:02.424"/>
</kw>
<msg timestamp="20211003 01:27:02.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:26:54.215" endtime="20211003 01:27:02.424"/>
</kw>
<msg timestamp="20211003 01:27:02.426" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211003 01:26:54.214" endtime="20211003 01:27:02.426"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211003 01:27:02.426" endtime="20211003 01:27:02.428"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:27:02.437" level="INFO">Running command 'ozone sh bucket info /43160-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:27:10.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:27:10.953" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211003 01:27:02.434" endtime="20211003 01:27:10.953"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:27:10.956" level="INFO">1000</msg>
<status status="PASS" starttime="20211003 01:27:10.954" endtime="20211003 01:27:10.956"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:27:10.957" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:27:10.956" endtime="20211003 01:27:10.957"/>
</kw>
<status status="PASS" starttime="20211003 01:27:02.432" endtime="20211003 01:27:10.958"/>
</kw>
<msg timestamp="20211003 01:27:10.958" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:27:02.431" endtime="20211003 01:27:10.958"/>
</kw>
<msg timestamp="20211003 01:27:10.959" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211003 01:27:02.428" endtime="20211003 01:27:10.959"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211003 01:27:10.960" endtime="20211003 01:27:10.960"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:27:10.967" level="INFO">Running command 'ozone sh bucket list /43160-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:27:17.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:27:17.795" level="INFO">${output} = 43160-rpcbasic</msg>
<status status="PASS" starttime="20211003 01:27:10.965" endtime="20211003 01:27:17.795"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:27:17.796" level="INFO">43160-rpcbasic</msg>
<status status="PASS" starttime="20211003 01:27:17.795" endtime="20211003 01:27:17.797"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:27:17.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:27:17.797" endtime="20211003 01:27:17.797"/>
</kw>
<status status="PASS" starttime="20211003 01:27:10.964" endtime="20211003 01:27:17.798"/>
</kw>
<msg timestamp="20211003 01:27:17.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:27:10.963" endtime="20211003 01:27:17.798"/>
</kw>
<msg timestamp="20211003 01:27:17.798" level="INFO">${result} = 43160-rpcbasic</msg>
<status status="PASS" starttime="20211003 01:27:10.961" endtime="20211003 01:27:17.799"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211003 01:27:17.799" endtime="20211003 01:27:17.799"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:27:17.807" level="INFO">Running command 'ozone sh key put /43160-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:30:26.317" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211003 01:27:17.804" endtime="20211003 01:30:26.317"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211003 01:30:26.318" endtime="20211003 01:30:26.318"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211003 01:30:26.318" endtime="20211003 01:30:26.318"/>
</kw>
<status status="FAIL" starttime="20211003 01:27:17.803" endtime="20211003 01:30:26.319"/>
</kw>
<msg timestamp="20211003 01:30:26.319" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211003 01:27:17.802" endtime="20211003 01:30:26.319"/>
</kw>
<status status="FAIL" starttime="20211003 01:27:17.801" endtime="20211003 01:30:26.319"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211003 01:30:26.319" endtime="20211003 01:30:26.320"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211003 01:30:26.320" endtime="20211003 01:30:26.320"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211003 01:30:26.320" endtime="20211003 01:30:26.320"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211003 01:30:26.320" endtime="20211003 01:30:26.320"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211003 01:30:26.320" endtime="20211003 01:30:26.320"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211003 01:30:26.321" endtime="20211003 01:30:26.321"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211003 01:30:26.321" endtime="20211003 01:30:26.321"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211003 01:30:26.321" endtime="20211003 01:30:26.321"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211003 01:30:26.321" endtime="20211003 01:30:26.322"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211003 01:30:26.322" endtime="20211003 01:30:26.322"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211003 01:30:26.322" endtime="20211003 01:30:26.322"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211003 01:30:26.322" endtime="20211003 01:30:26.322"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211003 01:30:26.322" endtime="20211003 01:30:26.322"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211003 01:30:26.323" endtime="20211003 01:30:26.323"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211003 01:30:26.323" endtime="20211003 01:30:26.323"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211003 01:30:26.323" endtime="20211003 01:30:26.323"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211003 01:30:26.323" endtime="20211003 01:30:26.323"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211003 01:30:26.323" endtime="20211003 01:30:26.323"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211003 01:30:26.324" endtime="20211003 01:30:26.324"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211003 01:30:26.324" endtime="20211003 01:30:26.324"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211003 01:30:26.324" endtime="20211003 01:30:26.324"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211003 01:30:26.325" endtime="20211003 01:30:26.325"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211003 01:30:26.325" endtime="20211003 01:30:26.325"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211003 01:30:26.325" endtime="20211003 01:30:26.325"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20211003 01:30:26.325" endtime="20211003 01:30:26.325"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211003 01:30:26.325" endtime="20211003 01:30:26.325"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211003 01:30:26.326" endtime="20211003 01:30:26.326"/>
</kw>
<status status="FAIL" starttime="20211003 01:27:17.800" endtime="20211003 01:30:26.326"/>
</kw>
<status status="FAIL" starttime="20211003 01:27:17.800" endtime="20211003 01:30:26.326"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211003 01:30:26.326" endtime="20211003 01:30:26.326"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211003 01:30:26.326" endtime="20211003 01:30:26.326"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211003 01:30:26.327" endtime="20211003 01:30:26.327"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211003 01:30:26.327" endtime="20211003 01:30:26.327"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211003 01:30:26.327" endtime="20211003 01:30:26.327"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211003 01:30:26.327" endtime="20211003 01:30:26.327"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211003 01:30:26.328" endtime="20211003 01:30:26.328"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211003 01:30:26.328" endtime="20211003 01:30:26.328"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211003 01:30:26.328" endtime="20211003 01:30:26.328"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211003 01:30:26.328" endtime="20211003 01:30:26.328"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211003 01:30:26.329" endtime="20211003 01:30:26.329"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211003 01:30:26.329" endtime="20211003 01:30:26.329"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211003 01:30:26.329" endtime="20211003 01:30:26.329"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211003 01:30:26.329" endtime="20211003 01:30:26.329"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211003 01:30:26.329" endtime="20211003 01:30:26.330"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211003 01:30:26.330" endtime="20211003 01:30:26.330"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211003 01:30:26.330" endtime="20211003 01:30:26.330"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211003 01:30:26.330" endtime="20211003 01:30:26.330"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211003 01:30:26.330" endtime="20211003 01:30:26.330"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211003 01:30:26.331" endtime="20211003 01:30:26.331"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211003 01:30:26.331" endtime="20211003 01:30:26.331"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211003 01:30:26.331" endtime="20211003 01:30:26.331"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211003 01:30:26.331" endtime="20211003 01:30:26.331"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211003 01:30:26.331" endtime="20211003 01:30:26.331"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211003 01:30:26.332" endtime="20211003 01:30:26.332"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211003 01:30:26.332" endtime="20211003 01:30:26.332"/>
</kw>
<status status="FAIL" starttime="20211003 01:25:26.317" endtime="20211003 01:30:26.332"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211003 01:25:26.316" endtime="20211003 01:30:26.332">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20211003 01:25:26.276" endtime="20211003 01:30:26.335"/>
</suite>
<suite id="s1-s1-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211003 01:30:26.352" level="INFO">${random} = 48018</msg>
<status status="PASS" starttime="20211003 01:30:26.351" endtime="20211003 01:30:26.352"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211003 01:30:26.352" level="INFO">${prefix} = 48018</msg>
<status status="PASS" starttime="20211003 01:30:26.352" endtime="20211003 01:30:26.352"/>
</kw>
<status status="PASS" starttime="20211003 01:30:26.351" endtime="20211003 01:30:26.353"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:30:26.361" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:30:26.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:30:26.363" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211003 01:30:26.357" endtime="20211003 01:30:26.363"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:30:26.364" level="INFO">scm</msg>
<status status="PASS" starttime="20211003 01:30:26.364" endtime="20211003 01:30:26.365"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:30:26.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:30:26.365" endtime="20211003 01:30:26.366"/>
</kw>
<status status="PASS" starttime="20211003 01:30:26.356" endtime="20211003 01:30:26.366"/>
</kw>
<msg timestamp="20211003 01:30:26.366" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:30:26.356" endtime="20211003 01:30:26.366"/>
</kw>
<msg timestamp="20211003 01:30:26.366" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211003 01:30:26.356" endtime="20211003 01:30:26.366"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211003 01:30:26.368" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211003 01:30:26.367" endtime="20211003 01:30:26.368"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:30:26.375" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:30:26.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:30:26.522" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:30:26.371" endtime="20211003 01:30:26.522"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:30:26.523" level="INFO"/>
<status status="PASS" starttime="20211003 01:30:26.522" endtime="20211003 01:30:26.523"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:30:26.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:30:26.524" endtime="20211003 01:30:26.524"/>
</kw>
<status status="PASS" starttime="20211003 01:30:26.370" endtime="20211003 01:30:26.525"/>
</kw>
<msg timestamp="20211003 01:30:26.525" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:30:26.370" endtime="20211003 01:30:26.525"/>
</kw>
<status status="PASS" starttime="20211003 01:30:26.369" endtime="20211003 01:30:26.526"/>
</kw>
<status status="PASS" starttime="20211003 01:30:26.368" endtime="20211003 01:30:26.526"/>
</kw>
<status status="PASS" starttime="20211003 01:30:26.355" endtime="20211003 01:30:26.526"/>
</kw>
<status status="PASS" starttime="20211003 01:30:26.354" endtime="20211003 01:30:26.526"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:30:26.531" level="INFO">Running command 'ozone sh volume info o3://om:9862/48018-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:30:33.655" level="INFO">${rc} = 255</msg>
<msg timestamp="20211003 01:30:33.655" level="INFO">${output} = VOLUME_NOT_FOUND Volume 48018-rpcwoport is not found</msg>
<status status="PASS" starttime="20211003 01:30:26.528" endtime="20211003 01:30:33.655"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:30:33.658" level="INFO">VOLUME_NOT_FOUND Volume 48018-rpcwoport is not found</msg>
<status status="PASS" starttime="20211003 01:30:33.656" endtime="20211003 01:30:33.658"/>
</kw>
<msg timestamp="20211003 01:30:33.659" level="INFO">${result} = VOLUME_NOT_FOUND Volume 48018-rpcwoport is not found</msg>
<status status="PASS" starttime="20211003 01:30:26.527" endtime="20211003 01:30:33.659"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 01:30:33.659" endtime="20211003 01:30:33.660"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:30:33.666" level="INFO">Running command 'ozone sh volume create o3://om:9862/48018-rpcwoport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:30:41.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:30:41.486" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:30:33.663" endtime="20211003 01:30:41.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:30:41.488" level="INFO"/>
<status status="PASS" starttime="20211003 01:30:41.487" endtime="20211003 01:30:41.488"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:30:41.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:30:41.489" endtime="20211003 01:30:41.490"/>
</kw>
<status status="PASS" starttime="20211003 01:30:33.662" endtime="20211003 01:30:41.491"/>
</kw>
<msg timestamp="20211003 01:30:41.491" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:30:33.662" endtime="20211003 01:30:41.491"/>
</kw>
<msg timestamp="20211003 01:30:41.491" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211003 01:30:33.660" endtime="20211003 01:30:41.491"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 01:30:41.492" endtime="20211003 01:30:41.493"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:30:41.501" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="48018-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:30:50.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:30:50.250" level="INFO">${output} = {
  "metadata": {},
  "name": "48018-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211003 01:30:41.497" endtime="20211003 01:30:50.250"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:30:50.252" level="INFO">{
  "metadata": {},
  "name": "48018-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-03T01:30:41.381Z",
  "modificationTime": "2021-10-03T01:30:41.381Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211003 01:30:50.251" endtime="20211003 01:30:50.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:30:50.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:30:50.253" endtime="20211003 01:30:50.254"/>
</kw>
<status status="PASS" starttime="20211003 01:30:41.496" endtime="20211003 01:30:50.255"/>
</kw>
<msg timestamp="20211003 01:30:50.255" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:30:41.495" endtime="20211003 01:30:50.256"/>
</kw>
<msg timestamp="20211003 01:30:50.256" level="INFO">${result} = {
  "metadata": {},
  "name": "48018-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211003 01:30:41.494" endtime="20211003 01:30:50.256"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 01:30:50.257" endtime="20211003 01:30:50.258"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:30:50.265" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="48018-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:30:58.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:30:58.533" level="INFO">${output} = {
  "metadata": {},
  "name": "48018-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211003 01:30:50.261" endtime="20211003 01:30:58.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:30:58.535" level="INFO">{
  "metadata": {},
  "name": "48018-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-03T01:30:41.381Z",
  "modificationTime": "2021-10-03T01:30:41.381Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211003 01:30:58.533" endtime="20211003 01:30:58.535"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:30:58.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:30:58.535" endtime="20211003 01:30:58.536"/>
</kw>
<status status="PASS" starttime="20211003 01:30:50.260" endtime="20211003 01:30:58.537"/>
</kw>
<msg timestamp="20211003 01:30:58.537" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:30:50.259" endtime="20211003 01:30:58.537"/>
</kw>
<msg timestamp="20211003 01:30:58.538" level="INFO">${result} = {
  "metadata": {},
  "name": "48018-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211003 01:30:50.258" endtime="20211003 01:30:58.538"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 01:30:58.538" endtime="20211003 01:30:58.540"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:30:58.546" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/48018-rpcwoport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:31:04.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:31:04.371" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:30:58.543" endtime="20211003 01:31:04.371"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:31:04.372" level="INFO"/>
<status status="PASS" starttime="20211003 01:31:04.371" endtime="20211003 01:31:04.373"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:31:04.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:31:04.373" endtime="20211003 01:31:04.374"/>
</kw>
<status status="PASS" starttime="20211003 01:30:58.542" endtime="20211003 01:31:04.375"/>
</kw>
<msg timestamp="20211003 01:31:04.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:30:58.542" endtime="20211003 01:31:04.375"/>
</kw>
<status status="PASS" starttime="20211003 01:30:58.541" endtime="20211003 01:31:04.376"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:31:04.383" level="INFO">Running command 'ozone sh volume info o3://om:9862/48018-rpcwoport | jq -r '. | select(.name=="48018-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:31:12.729" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:31:12.731" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211003 01:31:04.380" endtime="20211003 01:31:12.731"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:31:12.733" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211003 01:31:12.732" endtime="20211003 01:31:12.733"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:31:12.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:31:12.733" endtime="20211003 01:31:12.734"/>
</kw>
<status status="PASS" starttime="20211003 01:31:04.378" endtime="20211003 01:31:12.735"/>
</kw>
<msg timestamp="20211003 01:31:12.735" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:31:04.378" endtime="20211003 01:31:12.735"/>
</kw>
<msg timestamp="20211003 01:31:12.736" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211003 01:31:04.376" endtime="20211003 01:31:12.736"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211003 01:31:12.736" endtime="20211003 01:31:12.737"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:31:12.745" level="INFO">Running command 'ozone sh bucket create o3://om:9862/48018-rpcwoport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:31:21.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:31:21.140" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:31:12.742" endtime="20211003 01:31:21.141"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:31:21.144" level="INFO"/>
<status status="PASS" starttime="20211003 01:31:21.142" endtime="20211003 01:31:21.144"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:31:21.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:31:21.145" endtime="20211003 01:31:21.147"/>
</kw>
<status status="PASS" starttime="20211003 01:31:12.740" endtime="20211003 01:31:21.148"/>
</kw>
<msg timestamp="20211003 01:31:21.148" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:31:12.739" endtime="20211003 01:31:21.149"/>
</kw>
<status status="PASS" starttime="20211003 01:31:12.738" endtime="20211003 01:31:21.149"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:31:21.159" level="INFO">Running command 'ozone sh bucket info o3://om:9862/48018-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:31:29.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:31:29.138" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211003 01:31:21.154" endtime="20211003 01:31:29.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:31:29.140" level="INFO">DISK</msg>
<status status="PASS" starttime="20211003 01:31:29.138" endtime="20211003 01:31:29.141"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:31:29.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:31:29.141" endtime="20211003 01:31:29.142"/>
</kw>
<status status="PASS" starttime="20211003 01:31:21.153" endtime="20211003 01:31:29.142"/>
</kw>
<msg timestamp="20211003 01:31:29.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:31:21.152" endtime="20211003 01:31:29.143"/>
</kw>
<msg timestamp="20211003 01:31:29.143" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211003 01:31:21.149" endtime="20211003 01:31:29.143"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211003 01:31:29.143" endtime="20211003 01:31:29.144"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:31:29.150" level="INFO">Running command 'ozone sh bucket info o3://om:9862/48018-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:31:35.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:31:35.536" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211003 01:31:29.147" endtime="20211003 01:31:35.536"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:31:35.537" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211003 01:31:35.536" endtime="20211003 01:31:35.537"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:31:35.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:31:35.537" endtime="20211003 01:31:35.538"/>
</kw>
<status status="PASS" starttime="20211003 01:31:29.146" endtime="20211003 01:31:35.538"/>
</kw>
<msg timestamp="20211003 01:31:35.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:31:29.146" endtime="20211003 01:31:35.539"/>
</kw>
<msg timestamp="20211003 01:31:35.539" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211003 01:31:29.144" endtime="20211003 01:31:35.539"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211003 01:31:35.539" endtime="20211003 01:31:35.540"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:31:35.546" level="INFO">Running command 'ozone sh bucket info o3://om:9862/48018-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:31:42.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:31:42.413" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211003 01:31:35.543" endtime="20211003 01:31:42.413"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:31:42.414" level="INFO">100</msg>
<status status="PASS" starttime="20211003 01:31:42.414" endtime="20211003 01:31:42.414"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:31:42.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:31:42.415" endtime="20211003 01:31:42.415"/>
</kw>
<status status="PASS" starttime="20211003 01:31:35.542" endtime="20211003 01:31:42.416"/>
</kw>
<msg timestamp="20211003 01:31:42.416" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:31:35.542" endtime="20211003 01:31:42.416"/>
</kw>
<msg timestamp="20211003 01:31:42.416" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211003 01:31:35.540" endtime="20211003 01:31:42.416"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211003 01:31:42.416" endtime="20211003 01:31:42.417"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:31:42.421" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/48018-rpcwoport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:31:49.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:31:49.646" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:31:42.419" endtime="20211003 01:31:49.646"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:31:49.647" level="INFO"/>
<status status="PASS" starttime="20211003 01:31:49.646" endtime="20211003 01:31:49.647"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:31:49.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:31:49.647" endtime="20211003 01:31:49.648"/>
</kw>
<status status="PASS" starttime="20211003 01:31:42.418" endtime="20211003 01:31:49.648"/>
</kw>
<msg timestamp="20211003 01:31:49.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:31:42.418" endtime="20211003 01:31:49.649"/>
</kw>
<status status="PASS" starttime="20211003 01:31:42.417" endtime="20211003 01:31:49.649"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:31:49.656" level="INFO">Running command 'ozone sh bucket info o3://om:9862/48018-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:31:57.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:31:57.837" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211003 01:31:49.653" endtime="20211003 01:31:57.837"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:31:57.839" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211003 01:31:57.837" endtime="20211003 01:31:57.839"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:31:57.839" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:31:57.839" endtime="20211003 01:31:57.840"/>
</kw>
<status status="PASS" starttime="20211003 01:31:49.652" endtime="20211003 01:31:57.840"/>
</kw>
<msg timestamp="20211003 01:31:57.840" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:31:49.651" endtime="20211003 01:31:57.840"/>
</kw>
<msg timestamp="20211003 01:31:57.841" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211003 01:31:49.650" endtime="20211003 01:31:57.841"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211003 01:31:57.841" endtime="20211003 01:31:57.842"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:31:57.850" level="INFO">Running command 'ozone sh bucket info o3://om:9862/48018-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:32:04.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:32:04.939" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211003 01:31:57.847" endtime="20211003 01:32:04.939"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:32:04.941" level="INFO">1000</msg>
<status status="PASS" starttime="20211003 01:32:04.940" endtime="20211003 01:32:04.941"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:32:04.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:32:04.941" endtime="20211003 01:32:04.942"/>
</kw>
<status status="PASS" starttime="20211003 01:31:57.846" endtime="20211003 01:32:04.942"/>
</kw>
<msg timestamp="20211003 01:32:04.942" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:31:57.845" endtime="20211003 01:32:04.942"/>
</kw>
<msg timestamp="20211003 01:32:04.943" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211003 01:31:57.843" endtime="20211003 01:32:04.943"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211003 01:32:04.943" endtime="20211003 01:32:04.944"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:32:04.949" level="INFO">Running command 'ozone sh bucket list o3://om:9862/48018-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:32:12.911" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:32:12.911" level="INFO">${output} = 48018-rpcwoport</msg>
<status status="PASS" starttime="20211003 01:32:04.946" endtime="20211003 01:32:12.911"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:32:12.913" level="INFO">48018-rpcwoport</msg>
<status status="PASS" starttime="20211003 01:32:12.912" endtime="20211003 01:32:12.913"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:32:12.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:32:12.914" endtime="20211003 01:32:12.915"/>
</kw>
<status status="PASS" starttime="20211003 01:32:04.945" endtime="20211003 01:32:12.915"/>
</kw>
<msg timestamp="20211003 01:32:12.915" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:32:04.945" endtime="20211003 01:32:12.915"/>
</kw>
<msg timestamp="20211003 01:32:12.916" level="INFO">${result} = 48018-rpcwoport</msg>
<status status="PASS" starttime="20211003 01:32:04.944" endtime="20211003 01:32:12.916"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211003 01:32:12.916" endtime="20211003 01:32:12.917"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:32:12.942" level="INFO">Running command 'ozone sh key put o3://om:9862/48018-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:35:24.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:35:24.983" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:32:12.937" endtime="20211003 01:35:24.983"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:35:24.985" level="INFO"/>
<status status="PASS" starttime="20211003 01:35:24.984" endtime="20211003 01:35:24.985"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:35:24.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:35:24.985" endtime="20211003 01:35:24.986"/>
</kw>
<status status="PASS" starttime="20211003 01:32:12.933" endtime="20211003 01:35:24.987"/>
</kw>
<msg timestamp="20211003 01:35:24.987" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:32:12.932" endtime="20211003 01:35:24.987"/>
</kw>
<status status="PASS" starttime="20211003 01:32:12.930" endtime="20211003 01:35:24.987"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:35:24.994" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:35:24.998" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:35:24.998" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:35:24.991" endtime="20211003 01:35:24.998"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:35:25.000" level="INFO"/>
<status status="PASS" starttime="20211003 01:35:24.999" endtime="20211003 01:35:25.000"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:35:25.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:35:25.000" endtime="20211003 01:35:25.001"/>
</kw>
<status status="PASS" starttime="20211003 01:35:24.989" endtime="20211003 01:35:25.002"/>
</kw>
<msg timestamp="20211003 01:35:25.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:35:24.988" endtime="20211003 01:35:25.002"/>
</kw>
<status status="PASS" starttime="20211003 01:35:24.988" endtime="20211003 01:35:25.002"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:35:25.008" level="INFO">Running command 'ozone sh key get o3://om:9862/48018-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:35:26.355" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211003 01:35:25.005" endtime="20211003 01:35:26.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211003 01:35:26.356" endtime="20211003 01:35:26.356"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211003 01:35:26.356" endtime="20211003 01:35:26.356"/>
</kw>
<status status="FAIL" starttime="20211003 01:35:25.004" endtime="20211003 01:35:26.357"/>
</kw>
<msg timestamp="20211003 01:35:26.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211003 01:35:25.004" endtime="20211003 01:35:26.357"/>
</kw>
<status status="FAIL" starttime="20211003 01:35:25.003" endtime="20211003 01:35:26.357"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211003 01:35:26.357" endtime="20211003 01:35:26.358"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211003 01:35:26.358" endtime="20211003 01:35:26.358"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211003 01:35:26.358" endtime="20211003 01:35:26.358"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211003 01:35:26.358" endtime="20211003 01:35:26.358"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211003 01:35:26.358" endtime="20211003 01:35:26.359"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211003 01:35:26.359" endtime="20211003 01:35:26.359"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211003 01:35:26.359" endtime="20211003 01:35:26.359"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211003 01:35:26.359" endtime="20211003 01:35:26.359"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211003 01:35:26.360" endtime="20211003 01:35:26.360"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211003 01:35:26.360" endtime="20211003 01:35:26.360"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211003 01:35:26.360" endtime="20211003 01:35:26.360"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211003 01:35:26.361" endtime="20211003 01:35:26.361"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211003 01:35:26.362" endtime="20211003 01:35:26.362"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211003 01:35:26.362" endtime="20211003 01:35:26.363"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211003 01:35:26.363" endtime="20211003 01:35:26.363"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211003 01:35:26.364" endtime="20211003 01:35:26.364"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211003 01:35:26.365" endtime="20211003 01:35:26.365"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211003 01:35:26.366" endtime="20211003 01:35:26.366"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211003 01:35:26.366" endtime="20211003 01:35:26.367"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211003 01:35:26.367" endtime="20211003 01:35:26.367"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211003 01:35:26.368" endtime="20211003 01:35:26.368"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211003 01:35:26.368" endtime="20211003 01:35:26.369"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20211003 01:35:26.370" endtime="20211003 01:35:26.370"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211003 01:35:26.372" endtime="20211003 01:35:26.373"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211003 01:35:26.375" endtime="20211003 01:35:26.376"/>
</kw>
<status status="FAIL" starttime="20211003 01:32:12.918" endtime="20211003 01:35:26.377"/>
</kw>
<status status="FAIL" starttime="20211003 01:32:12.917" endtime="20211003 01:35:26.377"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211003 01:35:26.379" endtime="20211003 01:35:26.380"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211003 01:35:26.380" endtime="20211003 01:35:26.380"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211003 01:35:26.380" endtime="20211003 01:35:26.380"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211003 01:35:26.380" endtime="20211003 01:35:26.380"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211003 01:35:26.381" endtime="20211003 01:35:26.381"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211003 01:35:26.381" endtime="20211003 01:35:26.381"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211003 01:35:26.381" endtime="20211003 01:35:26.381"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211003 01:35:26.382" endtime="20211003 01:35:26.382"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211003 01:35:26.382" endtime="20211003 01:35:26.382"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211003 01:35:26.382" endtime="20211003 01:35:26.382"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211003 01:35:26.382" endtime="20211003 01:35:26.382"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211003 01:35:26.382" endtime="20211003 01:35:26.383"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211003 01:35:26.383" endtime="20211003 01:35:26.383"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211003 01:35:26.383" endtime="20211003 01:35:26.383"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211003 01:35:26.383" endtime="20211003 01:35:26.383"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211003 01:35:26.383" endtime="20211003 01:35:26.383"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211003 01:35:26.384" endtime="20211003 01:35:26.384"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211003 01:35:26.384" endtime="20211003 01:35:26.384"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211003 01:35:26.384" endtime="20211003 01:35:26.384"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211003 01:35:26.384" endtime="20211003 01:35:26.384"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211003 01:35:26.385" endtime="20211003 01:35:26.385"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211003 01:35:26.385" endtime="20211003 01:35:26.385"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211003 01:35:26.385" endtime="20211003 01:35:26.385"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211003 01:35:26.385" endtime="20211003 01:35:26.385"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211003 01:35:26.386" endtime="20211003 01:35:26.386"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211003 01:35:26.386" endtime="20211003 01:35:26.386"/>
</kw>
<status status="FAIL" starttime="20211003 01:30:26.527" endtime="20211003 01:35:26.386"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211003 01:30:26.353" endtime="20211003 01:35:26.387">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:35:26.410" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:35:26.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:35:26.415" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211003 01:35:26.407" endtime="20211003 01:35:26.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:35:26.417" level="INFO">scm</msg>
<status status="PASS" starttime="20211003 01:35:26.416" endtime="20211003 01:35:26.418"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:35:26.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:35:26.418" endtime="20211003 01:35:26.418"/>
</kw>
<status status="PASS" starttime="20211003 01:35:26.407" endtime="20211003 01:35:26.419"/>
</kw>
<msg timestamp="20211003 01:35:26.419" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:35:26.392" endtime="20211003 01:35:26.419"/>
</kw>
<msg timestamp="20211003 01:35:26.419" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211003 01:35:26.392" endtime="20211003 01:35:26.419"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211003 01:35:26.420" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211003 01:35:26.420" endtime="20211003 01:35:26.421"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:35:26.426" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:35:26.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:35:26.434" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:35:26.424" endtime="20211003 01:35:26.434"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:35:26.436" level="INFO"/>
<status status="PASS" starttime="20211003 01:35:26.435" endtime="20211003 01:35:26.436"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:35:26.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:35:26.436" endtime="20211003 01:35:26.437"/>
</kw>
<status status="PASS" starttime="20211003 01:35:26.423" endtime="20211003 01:35:26.437"/>
</kw>
<msg timestamp="20211003 01:35:26.437" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:35:26.423" endtime="20211003 01:35:26.437"/>
</kw>
<status status="PASS" starttime="20211003 01:35:26.422" endtime="20211003 01:35:26.438"/>
</kw>
<status status="PASS" starttime="20211003 01:35:26.421" endtime="20211003 01:35:26.438"/>
</kw>
<status status="PASS" starttime="20211003 01:35:26.391" endtime="20211003 01:35:26.438"/>
</kw>
<status status="PASS" starttime="20211003 01:35:26.390" endtime="20211003 01:35:26.438"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:35:26.456" level="INFO">Running command 'ozone sh volume create o3://om:9862/48018-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:35:41.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:35:41.875" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:35:26.441" endtime="20211003 01:35:41.875"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:35:41.877" level="INFO"/>
<status status="PASS" starttime="20211003 01:35:41.876" endtime="20211003 01:35:41.877"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:35:41.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:35:41.878" endtime="20211003 01:35:41.880"/>
</kw>
<status status="PASS" starttime="20211003 01:35:26.440" endtime="20211003 01:35:41.880"/>
</kw>
<msg timestamp="20211003 01:35:41.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:35:26.440" endtime="20211003 01:35:41.880"/>
</kw>
<status status="PASS" starttime="20211003 01:35:26.439" endtime="20211003 01:35:41.881"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:35:41.897" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/48018-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:35:52.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:35:52.003" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211003 01:35:41.886" endtime="20211003 01:35:52.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:35:52.006" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211003 01:35:52.005" endtime="20211003 01:35:52.006"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:35:52.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:35:52.007" endtime="20211003 01:35:52.008"/>
</kw>
<status status="PASS" starttime="20211003 01:35:41.884" endtime="20211003 01:35:52.008"/>
</kw>
<msg timestamp="20211003 01:35:52.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:35:41.883" endtime="20211003 01:35:52.009"/>
</kw>
<msg timestamp="20211003 01:35:52.009" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211003 01:35:41.881" endtime="20211003 01:35:52.010"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211003 01:35:52.010" endtime="20211003 01:35:52.011"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:35:52.018" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/48018-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:36:00.263" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:36:00.263" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211003 01:35:52.014" endtime="20211003 01:36:00.263"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:36:00.265" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211003 01:36:00.264" endtime="20211003 01:36:00.265"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:36:00.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:36:00.265" endtime="20211003 01:36:00.266"/>
</kw>
<status status="PASS" starttime="20211003 01:35:52.014" endtime="20211003 01:36:00.267"/>
</kw>
<msg timestamp="20211003 01:36:00.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:35:52.013" endtime="20211003 01:36:00.267"/>
</kw>
<msg timestamp="20211003 01:36:00.267" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211003 01:35:52.012" endtime="20211003 01:36:00.267"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:36:00.274" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/48018-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:36:09.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:36:09.094" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211003 01:36:00.271" endtime="20211003 01:36:09.094"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:36:09.096" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211003 01:36:09.095" endtime="20211003 01:36:09.096"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:36:09.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:36:09.097" endtime="20211003 01:36:09.098"/>
</kw>
<status status="PASS" starttime="20211003 01:36:00.270" endtime="20211003 01:36:09.099"/>
</kw>
<msg timestamp="20211003 01:36:09.099" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:36:00.269" endtime="20211003 01:36:09.100"/>
</kw>
<msg timestamp="20211003 01:36:09.100" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211003 01:36:00.268" endtime="20211003 01:36:09.100"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211003 01:36:09.100" endtime="20211003 01:36:09.103"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:36:09.111" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/48018-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:36:16.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:36:16.868" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211003 01:36:09.107" endtime="20211003 01:36:16.868"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:36:16.869" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211003 01:36:16.869" endtime="20211003 01:36:16.870"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:36:16.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:36:16.870" endtime="20211003 01:36:16.871"/>
</kw>
<status status="PASS" starttime="20211003 01:36:09.106" endtime="20211003 01:36:16.871"/>
</kw>
<msg timestamp="20211003 01:36:16.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:36:09.105" endtime="20211003 01:36:16.871"/>
</kw>
<msg timestamp="20211003 01:36:16.871" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211003 01:36:09.103" endtime="20211003 01:36:16.871"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:36:16.878" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/48018-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:36:25.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:36:25.305" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211003 01:36:16.874" endtime="20211003 01:36:25.305"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:36:25.307" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211003 01:36:25.306" endtime="20211003 01:36:25.307"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:36:25.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:36:25.307" endtime="20211003 01:36:25.308"/>
</kw>
<status status="PASS" starttime="20211003 01:36:16.873" endtime="20211003 01:36:25.309"/>
</kw>
<msg timestamp="20211003 01:36:25.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:36:16.872" endtime="20211003 01:36:25.309"/>
</kw>
<msg timestamp="20211003 01:36:25.310" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211003 01:36:16.872" endtime="20211003 01:36:25.310"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211003 01:36:25.310" endtime="20211003 01:36:25.311"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:36:25.317" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/48018-rpcwoport2 -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:36:32.301" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:36:32.301" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211003 01:36:25.315" endtime="20211003 01:36:32.301"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:36:32.305" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211003 01:36:32.304" endtime="20211003 01:36:32.305"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:36:32.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:36:32.305" endtime="20211003 01:36:32.306"/>
</kw>
<status status="PASS" starttime="20211003 01:36:25.314" endtime="20211003 01:36:32.306"/>
</kw>
<msg timestamp="20211003 01:36:32.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:36:25.313" endtime="20211003 01:36:32.306"/>
</kw>
<msg timestamp="20211003 01:36:32.307" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211003 01:36:25.312" endtime="20211003 01:36:32.307"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:36:32.311" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/48018-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:36:38.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:36:38.876" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211003 01:36:32.309" endtime="20211003 01:36:38.876"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:36:38.878" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211003 01:36:38.877" endtime="20211003 01:36:38.878"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:36:38.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:36:38.878" endtime="20211003 01:36:38.880"/>
</kw>
<status status="PASS" starttime="20211003 01:36:32.308" endtime="20211003 01:36:38.880"/>
</kw>
<msg timestamp="20211003 01:36:38.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:36:32.308" endtime="20211003 01:36:38.880"/>
</kw>
<msg timestamp="20211003 01:36:38.883" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211003 01:36:32.307" endtime="20211003 01:36:38.883"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211003 01:36:38.883" endtime="20211003 01:36:38.884"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211003 01:36:38.884" endtime="20211003 01:36:38.885"/>
</kw>
<status status="PASS" starttime="20211003 01:35:26.438" endtime="20211003 01:36:38.886"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211003 01:35:26.389" endtime="20211003 01:36:38.886"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:36:38.894" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:36:38.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:36:38.899" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211003 01:36:38.891" endtime="20211003 01:36:38.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:36:38.901" level="INFO">scm</msg>
<status status="PASS" starttime="20211003 01:36:38.900" endtime="20211003 01:36:38.901"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:36:38.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:36:38.901" endtime="20211003 01:36:38.903"/>
</kw>
<status status="PASS" starttime="20211003 01:36:38.890" endtime="20211003 01:36:38.903"/>
</kw>
<msg timestamp="20211003 01:36:38.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:36:38.890" endtime="20211003 01:36:38.904"/>
</kw>
<msg timestamp="20211003 01:36:38.904" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211003 01:36:38.889" endtime="20211003 01:36:38.904"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211003 01:36:38.905" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211003 01:36:38.904" endtime="20211003 01:36:38.905"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:36:38.911" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:36:39.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:36:39.103" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:36:38.908" endtime="20211003 01:36:39.103"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:36:39.105" level="INFO"/>
<status status="PASS" starttime="20211003 01:36:39.104" endtime="20211003 01:36:39.105"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:36:39.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:36:39.105" endtime="20211003 01:36:39.106"/>
</kw>
<status status="PASS" starttime="20211003 01:36:38.908" endtime="20211003 01:36:39.106"/>
</kw>
<msg timestamp="20211003 01:36:39.107" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:36:38.907" endtime="20211003 01:36:39.107"/>
</kw>
<status status="PASS" starttime="20211003 01:36:38.906" endtime="20211003 01:36:39.107"/>
</kw>
<status status="PASS" starttime="20211003 01:36:38.906" endtime="20211003 01:36:39.107"/>
</kw>
<status status="PASS" starttime="20211003 01:36:38.888" endtime="20211003 01:36:39.107"/>
</kw>
<status status="PASS" starttime="20211003 01:36:38.887" endtime="20211003 01:36:39.107"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:36:39.115" level="INFO">Running command 'ozone sh bucket create o3://om:9862/48018-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:36:46.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:36:46.339" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:36:39.110" endtime="20211003 01:36:46.339"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:36:46.341" level="INFO"/>
<status status="PASS" starttime="20211003 01:36:46.340" endtime="20211003 01:36:46.341"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:36:46.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:36:46.341" endtime="20211003 01:36:46.342"/>
</kw>
<status status="PASS" starttime="20211003 01:36:39.110" endtime="20211003 01:36:46.342"/>
</kw>
<msg timestamp="20211003 01:36:46.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:36:39.109" endtime="20211003 01:36:46.342"/>
</kw>
<status status="PASS" starttime="20211003 01:36:39.108" endtime="20211003 01:36:46.342"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:36:46.348" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/48018-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:36:53.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:36:53.854" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211003 01:36:46.345" endtime="20211003 01:36:53.854"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:36:53.856" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211003 01:36:53.855" endtime="20211003 01:36:53.856"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:36:53.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:36:53.856" endtime="20211003 01:36:53.857"/>
</kw>
<status status="PASS" starttime="20211003 01:36:46.344" endtime="20211003 01:36:53.857"/>
</kw>
<msg timestamp="20211003 01:36:53.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:36:46.343" endtime="20211003 01:36:53.858"/>
</kw>
<msg timestamp="20211003 01:36:53.858" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211003 01:36:46.343" endtime="20211003 01:36:53.858"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211003 01:36:53.858" endtime="20211003 01:36:53.859"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:36:53.862" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/48018-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:37:01.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:37:01.613" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20211003 01:36:53.860" endtime="20211003 01:37:01.613"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:37:01.615" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20211003 01:37:01.614" endtime="20211003 01:37:01.615"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:37:01.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:37:01.615" endtime="20211003 01:37:01.616"/>
</kw>
<status status="PASS" starttime="20211003 01:36:53.860" endtime="20211003 01:37:01.616"/>
</kw>
<msg timestamp="20211003 01:37:01.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:36:53.860" endtime="20211003 01:37:01.616"/>
</kw>
<msg timestamp="20211003 01:37:01.617" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20211003 01:36:53.859" endtime="20211003 01:37:01.617"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:37:01.622" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/48018-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:37:10.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:37:10.062" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211003 01:37:01.620" endtime="20211003 01:37:10.062"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:37:10.063" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211003 01:37:10.062" endtime="20211003 01:37:10.063"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:37:10.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:37:10.064" endtime="20211003 01:37:10.064"/>
</kw>
<status status="PASS" starttime="20211003 01:37:01.619" endtime="20211003 01:37:10.065"/>
</kw>
<msg timestamp="20211003 01:37:10.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:37:01.618" endtime="20211003 01:37:10.065"/>
</kw>
<msg timestamp="20211003 01:37:10.066" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211003 01:37:01.617" endtime="20211003 01:37:10.066"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211003 01:37:10.066" endtime="20211003 01:37:10.068"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:37:10.073" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/48018-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:37:18.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:37:18.264" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211003 01:37:10.070" endtime="20211003 01:37:18.264"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:37:18.265" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211003 01:37:18.265" endtime="20211003 01:37:18.265"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:37:18.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:37:18.266" endtime="20211003 01:37:18.266"/>
</kw>
<status status="PASS" starttime="20211003 01:37:10.070" endtime="20211003 01:37:18.267"/>
</kw>
<msg timestamp="20211003 01:37:18.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:37:10.069" endtime="20211003 01:37:18.267"/>
</kw>
<msg timestamp="20211003 01:37:18.267" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211003 01:37:10.068" endtime="20211003 01:37:18.267"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:37:18.276" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/48018-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:37:26.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:37:26.512" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211003 01:37:18.272" endtime="20211003 01:37:26.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:37:26.514" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211003 01:37:26.513" endtime="20211003 01:37:26.515"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:37:26.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:37:26.515" endtime="20211003 01:37:26.517"/>
</kw>
<status status="PASS" starttime="20211003 01:37:18.270" endtime="20211003 01:37:26.517"/>
</kw>
<msg timestamp="20211003 01:37:26.517" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:37:18.269" endtime="20211003 01:37:26.518"/>
</kw>
<msg timestamp="20211003 01:37:26.518" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211003 01:37:18.268" endtime="20211003 01:37:26.518"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211003 01:37:26.518" endtime="20211003 01:37:26.520"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:37:26.526" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/48018-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:37:34.235" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:37:34.235" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211003 01:37:26.523" endtime="20211003 01:37:34.235"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:37:34.237" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211003 01:37:34.236" endtime="20211003 01:37:34.237"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:37:34.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:37:34.237" endtime="20211003 01:37:34.238"/>
</kw>
<status status="PASS" starttime="20211003 01:37:26.522" endtime="20211003 01:37:34.238"/>
</kw>
<msg timestamp="20211003 01:37:34.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:37:26.522" endtime="20211003 01:37:34.239"/>
</kw>
<msg timestamp="20211003 01:37:34.239" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211003 01:37:26.520" endtime="20211003 01:37:34.239"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:37:34.246" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/48018-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:37:42.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:37:42.020" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211003 01:37:34.242" endtime="20211003 01:37:42.021"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:37:42.023" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211003 01:37:42.022" endtime="20211003 01:37:42.023"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:37:42.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:37:42.023" endtime="20211003 01:37:42.025"/>
</kw>
<status status="PASS" starttime="20211003 01:37:34.241" endtime="20211003 01:37:42.026"/>
</kw>
<msg timestamp="20211003 01:37:42.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:37:34.241" endtime="20211003 01:37:42.026"/>
</kw>
<msg timestamp="20211003 01:37:42.027" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211003 01:37:34.239" endtime="20211003 01:37:42.027"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211003 01:37:42.027" endtime="20211003 01:37:42.028"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211003 01:37:42.029" endtime="20211003 01:37:42.029"/>
</kw>
<status status="PASS" starttime="20211003 01:36:39.108" endtime="20211003 01:37:42.029"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211003 01:36:38.886" endtime="20211003 01:37:42.030"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:37:42.042" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:37:42.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:37:42.046" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211003 01:37:42.038" endtime="20211003 01:37:42.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:37:42.049" level="INFO">scm</msg>
<status status="PASS" starttime="20211003 01:37:42.047" endtime="20211003 01:37:42.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:37:42.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:37:42.050" endtime="20211003 01:37:42.051"/>
</kw>
<status status="PASS" starttime="20211003 01:37:42.038" endtime="20211003 01:37:42.051"/>
</kw>
<msg timestamp="20211003 01:37:42.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:37:42.037" endtime="20211003 01:37:42.052"/>
</kw>
<msg timestamp="20211003 01:37:42.052" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211003 01:37:42.036" endtime="20211003 01:37:42.052"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211003 01:37:42.053" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211003 01:37:42.053" endtime="20211003 01:37:42.053"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:37:42.062" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:37:42.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:37:42.071" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:37:42.059" endtime="20211003 01:37:42.072"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:37:42.073" level="INFO"/>
<status status="PASS" starttime="20211003 01:37:42.072" endtime="20211003 01:37:42.073"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:37:42.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:37:42.074" endtime="20211003 01:37:42.075"/>
</kw>
<status status="PASS" starttime="20211003 01:37:42.058" endtime="20211003 01:37:42.075"/>
</kw>
<msg timestamp="20211003 01:37:42.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:37:42.058" endtime="20211003 01:37:42.075"/>
</kw>
<status status="PASS" starttime="20211003 01:37:42.056" endtime="20211003 01:37:42.076"/>
</kw>
<status status="PASS" starttime="20211003 01:37:42.054" endtime="20211003 01:37:42.076"/>
</kw>
<status status="PASS" starttime="20211003 01:37:42.035" endtime="20211003 01:37:42.077"/>
</kw>
<status status="PASS" starttime="20211003 01:37:42.034" endtime="20211003 01:37:42.077"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:37:42.083" level="INFO">Running command 'ozone sh key put o3://om:9862/48018-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:40:52.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:40:52.206" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:37:42.080" endtime="20211003 01:40:52.206"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:40:52.207" level="INFO"/>
<status status="PASS" starttime="20211003 01:40:52.206" endtime="20211003 01:40:52.207"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:40:52.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:40:52.208" endtime="20211003 01:40:52.208"/>
</kw>
<status status="PASS" starttime="20211003 01:37:42.080" endtime="20211003 01:40:52.209"/>
</kw>
<msg timestamp="20211003 01:40:52.210" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:37:42.079" endtime="20211003 01:40:52.210"/>
</kw>
<status status="PASS" starttime="20211003 01:37:42.078" endtime="20211003 01:40:52.210"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:40:52.215" level="INFO">Running command 'ozone sh key getacl o3://om:9862/48018-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:41:00.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:41:00.915" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211003 01:40:52.212" endtime="20211003 01:41:00.915"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:41:00.916" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211003 01:41:00.915" endtime="20211003 01:41:00.917"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:41:00.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:41:00.917" endtime="20211003 01:41:00.918"/>
</kw>
<status status="PASS" starttime="20211003 01:40:52.212" endtime="20211003 01:41:00.918"/>
</kw>
<msg timestamp="20211003 01:41:00.918" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:40:52.211" endtime="20211003 01:41:00.918"/>
</kw>
<msg timestamp="20211003 01:41:00.919" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211003 01:40:52.210" endtime="20211003 01:41:00.919"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211003 01:41:00.919" endtime="20211003 01:41:00.919"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:41:00.927" level="INFO">Running command 'ozone sh key addacl o3://om:9862/48018-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:41:08.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:41:08.342" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211003 01:41:00.924" endtime="20211003 01:41:08.342"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:41:08.344" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211003 01:41:08.343" endtime="20211003 01:41:08.344"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:41:08.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:41:08.344" endtime="20211003 01:41:08.345"/>
</kw>
<status status="PASS" starttime="20211003 01:41:00.923" endtime="20211003 01:41:08.345"/>
</kw>
<msg timestamp="20211003 01:41:08.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:41:00.922" endtime="20211003 01:41:08.345"/>
</kw>
<msg timestamp="20211003 01:41:08.346" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211003 01:41:00.920" endtime="20211003 01:41:08.346"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:41:08.354" level="INFO">Running command 'ozone sh key getacl o3://om:9862/48018-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:41:17.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:41:17.313" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211003 01:41:08.351" endtime="20211003 01:41:17.313"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:41:17.315" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211003 01:41:17.314" endtime="20211003 01:41:17.315"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:41:17.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:41:17.315" endtime="20211003 01:41:17.316"/>
</kw>
<status status="PASS" starttime="20211003 01:41:08.348" endtime="20211003 01:41:17.316"/>
</kw>
<msg timestamp="20211003 01:41:17.316" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:41:08.347" endtime="20211003 01:41:17.316"/>
</kw>
<msg timestamp="20211003 01:41:17.317" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211003 01:41:08.346" endtime="20211003 01:41:17.317"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211003 01:41:17.317" endtime="20211003 01:41:17.321"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:41:17.326" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/48018-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:41:25.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:41:25.343" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211003 01:41:17.324" endtime="20211003 01:41:25.343"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:41:25.349" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211003 01:41:25.348" endtime="20211003 01:41:25.349"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:41:25.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:41:25.349" endtime="20211003 01:41:25.350"/>
</kw>
<status status="PASS" starttime="20211003 01:41:17.323" endtime="20211003 01:41:25.350"/>
</kw>
<msg timestamp="20211003 01:41:25.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:41:17.323" endtime="20211003 01:41:25.351"/>
</kw>
<msg timestamp="20211003 01:41:25.351" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211003 01:41:17.321" endtime="20211003 01:41:25.351"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:41:25.358" level="INFO">Running command 'ozone sh key getacl o3://om:9862/48018-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:41:33.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:41:33.237" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211003 01:41:25.354" endtime="20211003 01:41:33.237"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:41:33.238" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20211003 01:41:33.237" endtime="20211003 01:41:33.238"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:41:33.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:41:33.238" endtime="20211003 01:41:33.239"/>
</kw>
<status status="PASS" starttime="20211003 01:41:25.352" endtime="20211003 01:41:33.239"/>
</kw>
<msg timestamp="20211003 01:41:33.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:41:25.352" endtime="20211003 01:41:33.240"/>
</kw>
<msg timestamp="20211003 01:41:33.240" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211003 01:41:25.351" endtime="20211003 01:41:33.240"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211003 01:41:33.240" endtime="20211003 01:41:33.241"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:41:33.246" level="INFO">Running command 'ozone sh key setacl o3://om:9862/48018-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:41:41.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:41:41.483" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211003 01:41:33.242" endtime="20211003 01:41:41.483"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:41:41.485" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211003 01:41:41.484" endtime="20211003 01:41:41.485"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:41:41.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:41:41.486" endtime="20211003 01:41:41.487"/>
</kw>
<status status="PASS" starttime="20211003 01:41:33.242" endtime="20211003 01:41:41.488"/>
</kw>
<msg timestamp="20211003 01:41:41.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:41:33.242" endtime="20211003 01:41:41.489"/>
</kw>
<msg timestamp="20211003 01:41:41.490" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211003 01:41:33.241" endtime="20211003 01:41:41.490"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:41:41.497" level="INFO">Running command 'ozone sh key getacl o3://om:9862/48018-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:41:49.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:41:49.099" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211003 01:41:41.494" endtime="20211003 01:41:49.099"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:41:49.101" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211003 01:41:49.100" endtime="20211003 01:41:49.101"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:41:49.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:41:49.101" endtime="20211003 01:41:49.102"/>
</kw>
<status status="PASS" starttime="20211003 01:41:41.492" endtime="20211003 01:41:49.102"/>
</kw>
<msg timestamp="20211003 01:41:49.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:41:41.491" endtime="20211003 01:41:49.103"/>
</kw>
<msg timestamp="20211003 01:41:49.103" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211003 01:41:41.490" endtime="20211003 01:41:49.103"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211003 01:41:49.103" endtime="20211003 01:41:49.104"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211003 01:41:49.104" endtime="20211003 01:41:49.105"/>
</kw>
<status status="PASS" starttime="20211003 01:37:42.077" endtime="20211003 01:41:49.105"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211003 01:37:42.032" endtime="20211003 01:41:49.105"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient prefix acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:41:49.113" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:41:49.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:41:49.116" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211003 01:41:49.110" endtime="20211003 01:41:49.116"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:41:49.117" level="INFO">scm</msg>
<status status="PASS" starttime="20211003 01:41:49.116" endtime="20211003 01:41:49.117"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:41:49.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:41:49.117" endtime="20211003 01:41:49.118"/>
</kw>
<status status="PASS" starttime="20211003 01:41:49.109" endtime="20211003 01:41:49.118"/>
</kw>
<msg timestamp="20211003 01:41:49.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:41:49.109" endtime="20211003 01:41:49.118"/>
</kw>
<msg timestamp="20211003 01:41:49.119" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211003 01:41:49.108" endtime="20211003 01:41:49.119"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211003 01:41:49.119" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211003 01:41:49.119" endtime="20211003 01:41:49.119"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:41:49.125" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:41:49.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:41:49.339" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:41:49.123" endtime="20211003 01:41:49.339"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:41:49.341" level="INFO"/>
<status status="PASS" starttime="20211003 01:41:49.340" endtime="20211003 01:41:49.341"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:41:49.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:41:49.341" endtime="20211003 01:41:49.342"/>
</kw>
<status status="PASS" starttime="20211003 01:41:49.122" endtime="20211003 01:41:49.342"/>
</kw>
<msg timestamp="20211003 01:41:49.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:41:49.122" endtime="20211003 01:41:49.342"/>
</kw>
<status status="PASS" starttime="20211003 01:41:49.121" endtime="20211003 01:41:49.342"/>
</kw>
<status status="PASS" starttime="20211003 01:41:49.120" endtime="20211003 01:41:49.342"/>
</kw>
<status status="PASS" starttime="20211003 01:41:49.108" endtime="20211003 01:41:49.343"/>
</kw>
<status status="PASS" starttime="20211003 01:41:49.107" endtime="20211003 01:41:49.343"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:41:49.348" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/48018-rpcwoport2/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:41:55.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:41:55.485" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211003 01:41:49.346" endtime="20211003 01:41:55.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:41:55.489" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211003 01:41:55.487" endtime="20211003 01:41:55.490"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:41:55.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:41:55.490" endtime="20211003 01:41:55.492"/>
</kw>
<status status="PASS" starttime="20211003 01:41:49.345" endtime="20211003 01:41:55.493"/>
</kw>
<msg timestamp="20211003 01:41:55.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:41:49.345" endtime="20211003 01:41:55.494"/>
</kw>
<status status="PASS" starttime="20211003 01:41:49.344" endtime="20211003 01:41:55.494"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:41:55.501" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/48018-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:42:03.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:42:03.576" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211003 01:41:55.498" endtime="20211003 01:42:03.576"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:42:03.579" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211003 01:42:03.577" endtime="20211003 01:42:03.579"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:42:03.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:42:03.580" endtime="20211003 01:42:03.581"/>
</kw>
<status status="PASS" starttime="20211003 01:41:55.497" endtime="20211003 01:42:03.582"/>
</kw>
<msg timestamp="20211003 01:42:03.582" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:41:55.497" endtime="20211003 01:42:03.582"/>
</kw>
<msg timestamp="20211003 01:42:03.583" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211003 01:41:55.495" endtime="20211003 01:42:03.583"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211003 01:42:03.583" endtime="20211003 01:42:03.585"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:42:03.590" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/48018-rpcwoport2/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:42:11.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:42:11.214" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20211003 01:42:03.587" endtime="20211003 01:42:11.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:42:11.216" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20211003 01:42:11.215" endtime="20211003 01:42:11.216"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:42:11.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:42:11.216" endtime="20211003 01:42:11.217"/>
</kw>
<status status="PASS" starttime="20211003 01:42:03.586" endtime="20211003 01:42:11.217"/>
</kw>
<msg timestamp="20211003 01:42:11.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:42:03.586" endtime="20211003 01:42:11.217"/>
</kw>
<msg timestamp="20211003 01:42:11.218" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20211003 01:42:03.585" endtime="20211003 01:42:11.218"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:42:11.224" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/48018-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:42:19.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:42:19.683" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211003 01:42:11.220" endtime="20211003 01:42:19.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:42:19.686" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211003 01:42:19.684" endtime="20211003 01:42:19.686"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:42:19.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:42:19.687" endtime="20211003 01:42:19.688"/>
</kw>
<status status="PASS" starttime="20211003 01:42:11.220" endtime="20211003 01:42:19.689"/>
</kw>
<msg timestamp="20211003 01:42:19.689" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:42:11.219" endtime="20211003 01:42:19.690"/>
</kw>
<msg timestamp="20211003 01:42:19.691" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211003 01:42:11.218" endtime="20211003 01:42:19.691"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211003 01:42:19.691" endtime="20211003 01:42:19.694"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:42:19.703" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/48018-rpcwoport2/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:42:27.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:42:27.205" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211003 01:42:19.698" endtime="20211003 01:42:27.205"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:42:27.209" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211003 01:42:27.206" endtime="20211003 01:42:27.209"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:42:27.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:42:27.210" endtime="20211003 01:42:27.211"/>
</kw>
<status status="PASS" starttime="20211003 01:42:19.697" endtime="20211003 01:42:27.212"/>
</kw>
<msg timestamp="20211003 01:42:27.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:42:19.696" endtime="20211003 01:42:27.213"/>
</kw>
<msg timestamp="20211003 01:42:27.214" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211003 01:42:19.694" endtime="20211003 01:42:27.214"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:42:27.223" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/48018-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:42:35.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:42:35.535" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20211003 01:42:27.220" endtime="20211003 01:42:35.535"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:42:35.538" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211003 01:42:35.536" endtime="20211003 01:42:35.538"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:42:35.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:42:35.539" endtime="20211003 01:42:35.540"/>
</kw>
<status status="PASS" starttime="20211003 01:42:27.218" endtime="20211003 01:42:35.541"/>
</kw>
<msg timestamp="20211003 01:42:35.542" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:42:27.218" endtime="20211003 01:42:35.542"/>
</kw>
<msg timestamp="20211003 01:42:35.543" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20211003 01:42:27.214" endtime="20211003 01:42:35.543"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211003 01:42:35.544" endtime="20211003 01:42:35.544"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211003 01:42:35.544" endtime="20211003 01:42:35.546"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:42:35.553" level="INFO">Running command 'ozone sh key put o3://om:9862/48018-rpcwoport2/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:45:47.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:45:47.019" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:42:35.550" endtime="20211003 01:45:47.019"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:45:47.023" level="INFO"/>
<status status="PASS" starttime="20211003 01:45:47.020" endtime="20211003 01:45:47.023"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:45:47.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:45:47.024" endtime="20211003 01:45:47.025"/>
</kw>
<status status="PASS" starttime="20211003 01:42:35.548" endtime="20211003 01:45:47.026"/>
</kw>
<msg timestamp="20211003 01:45:47.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:42:35.548" endtime="20211003 01:45:47.027"/>
</kw>
<status status="PASS" starttime="20211003 01:42:35.546" endtime="20211003 01:45:47.027"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:45:47.037" level="INFO">Running command 'ozone sh key getacl o3://om:9862/48018-rpcwoport2/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:45:53.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:45:53.538" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211003 01:45:47.033" endtime="20211003 01:45:53.539"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:45:53.541" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211003 01:45:53.540" endtime="20211003 01:45:53.542"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:45:53.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:45:53.542" endtime="20211003 01:45:53.544"/>
</kw>
<status status="PASS" starttime="20211003 01:45:47.031" endtime="20211003 01:45:53.544"/>
</kw>
<msg timestamp="20211003 01:45:53.544" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:45:47.030" endtime="20211003 01:45:53.545"/>
</kw>
<msg timestamp="20211003 01:45:53.546" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211003 01:45:47.028" endtime="20211003 01:45:53.546"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211003 01:45:53.546" endtime="20211003 01:45:53.547"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211003 01:45:53.547" endtime="20211003 01:45:53.548"/>
</kw>
<status status="PASS" starttime="20211003 01:41:49.343" endtime="20211003 01:45:53.549"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211003 01:41:49.106" endtime="20211003 01:45:53.549"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:45:53.562" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:45:53.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:45:53.568" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211003 01:45:53.559" endtime="20211003 01:45:53.569"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:45:53.570" level="INFO">scm</msg>
<status status="PASS" starttime="20211003 01:45:53.569" endtime="20211003 01:45:53.571"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:45:53.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:45:53.571" endtime="20211003 01:45:53.572"/>
</kw>
<status status="PASS" starttime="20211003 01:45:53.558" endtime="20211003 01:45:53.573"/>
</kw>
<msg timestamp="20211003 01:45:53.573" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:45:53.557" endtime="20211003 01:45:53.573"/>
</kw>
<msg timestamp="20211003 01:45:53.574" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211003 01:45:53.555" endtime="20211003 01:45:53.574"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211003 01:45:53.575" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211003 01:45:53.574" endtime="20211003 01:45:53.575"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:45:53.581" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:45:53.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:45:53.591" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:45:53.578" endtime="20211003 01:45:53.591"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:45:53.592" level="INFO"/>
<status status="PASS" starttime="20211003 01:45:53.591" endtime="20211003 01:45:53.592"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:45:53.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:45:53.592" endtime="20211003 01:45:53.594"/>
</kw>
<status status="PASS" starttime="20211003 01:45:53.577" endtime="20211003 01:45:53.594"/>
</kw>
<msg timestamp="20211003 01:45:53.594" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:45:53.577" endtime="20211003 01:45:53.594"/>
</kw>
<status status="PASS" starttime="20211003 01:45:53.576" endtime="20211003 01:45:53.595"/>
</kw>
<status status="PASS" starttime="20211003 01:45:53.575" endtime="20211003 01:45:53.595"/>
</kw>
<status status="PASS" starttime="20211003 01:45:53.555" endtime="20211003 01:45:53.595"/>
</kw>
<status status="PASS" starttime="20211003 01:45:53.554" endtime="20211003 01:45:53.595"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:45:53.601" level="INFO">Running command 'ozone sh volume info o3:///48018-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:46:01.303" level="INFO">${rc} = 255</msg>
<msg timestamp="20211003 01:46:01.304" level="INFO">${output} = VOLUME_NOT_FOUND Volume 48018-rpcwport is not found</msg>
<status status="PASS" starttime="20211003 01:45:53.598" endtime="20211003 01:46:01.304"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:46:01.306" level="INFO">VOLUME_NOT_FOUND Volume 48018-rpcwport is not found</msg>
<status status="PASS" starttime="20211003 01:46:01.304" endtime="20211003 01:46:01.306"/>
</kw>
<msg timestamp="20211003 01:46:01.307" level="INFO">${result} = VOLUME_NOT_FOUND Volume 48018-rpcwport is not found</msg>
<status status="PASS" starttime="20211003 01:45:53.598" endtime="20211003 01:46:01.307"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 01:46:01.307" endtime="20211003 01:46:01.308"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:46:01.314" level="INFO">Running command 'ozone sh volume create o3:///48018-rpcwport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:46:08.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:46:08.281" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:46:01.311" endtime="20211003 01:46:08.281"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:46:08.282" level="INFO"/>
<status status="PASS" starttime="20211003 01:46:08.282" endtime="20211003 01:46:08.282"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:46:08.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:46:08.283" endtime="20211003 01:46:08.283"/>
</kw>
<status status="PASS" starttime="20211003 01:46:01.310" endtime="20211003 01:46:08.284"/>
</kw>
<msg timestamp="20211003 01:46:08.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:46:01.309" endtime="20211003 01:46:08.284"/>
</kw>
<msg timestamp="20211003 01:46:08.284" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211003 01:46:01.308" endtime="20211003 01:46:08.284"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 01:46:08.285" endtime="20211003 01:46:08.285"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:46:08.292" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="48018-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:46:15.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:46:15.793" level="INFO">${output} = {
  "metadata": {},
  "name": "48018-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211003 01:46:08.288" endtime="20211003 01:46:15.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:46:15.795" level="INFO">{
  "metadata": {},
  "name": "48018-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-03T01:46:08.212Z",
  "modificationTime": "2021-10-03T01:46:08.212Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211003 01:46:15.794" endtime="20211003 01:46:15.795"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:46:15.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:46:15.795" endtime="20211003 01:46:15.796"/>
</kw>
<status status="PASS" starttime="20211003 01:46:08.287" endtime="20211003 01:46:15.796"/>
</kw>
<msg timestamp="20211003 01:46:15.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:46:08.286" endtime="20211003 01:46:15.796"/>
</kw>
<msg timestamp="20211003 01:46:15.797" level="INFO">${result} = {
  "metadata": {},
  "name": "48018-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211003 01:46:08.285" endtime="20211003 01:46:15.797"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 01:46:15.797" endtime="20211003 01:46:15.798"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:46:15.802" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="48018-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:46:24.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:46:24.762" level="INFO">${output} = {
  "metadata": {},
  "name": "48018-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211003 01:46:15.800" endtime="20211003 01:46:24.762"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:46:24.764" level="INFO">{
  "metadata": {},
  "name": "48018-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-03T01:46:08.212Z",
  "modificationTime": "2021-10-03T01:46:08.212Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211003 01:46:24.763" endtime="20211003 01:46:24.764"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:46:24.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:46:24.764" endtime="20211003 01:46:24.765"/>
</kw>
<status status="PASS" starttime="20211003 01:46:15.799" endtime="20211003 01:46:24.765"/>
</kw>
<msg timestamp="20211003 01:46:24.766" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:46:15.798" endtime="20211003 01:46:24.766"/>
</kw>
<msg timestamp="20211003 01:46:24.767" level="INFO">${result} = {
  "metadata": {},
  "name": "48018-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211003 01:46:15.798" endtime="20211003 01:46:24.767"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 01:46:24.767" endtime="20211003 01:46:24.768"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:46:24.776" level="INFO">Running command 'ozone sh volume setquota o3:///48018-rpcwport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:46:31.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:46:31.299" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:46:24.772" endtime="20211003 01:46:31.299"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:46:31.301" level="INFO"/>
<status status="PASS" starttime="20211003 01:46:31.300" endtime="20211003 01:46:31.301"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:46:31.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:46:31.301" endtime="20211003 01:46:31.302"/>
</kw>
<status status="PASS" starttime="20211003 01:46:24.771" endtime="20211003 01:46:31.302"/>
</kw>
<msg timestamp="20211003 01:46:31.302" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:46:24.770" endtime="20211003 01:46:31.302"/>
</kw>
<status status="PASS" starttime="20211003 01:46:24.769" endtime="20211003 01:46:31.303"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:46:31.307" level="INFO">Running command 'ozone sh volume info o3:///48018-rpcwport | jq -r '. | select(.name=="48018-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:46:39.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:46:39.226" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211003 01:46:31.305" endtime="20211003 01:46:39.227"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:46:39.230" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211003 01:46:39.228" endtime="20211003 01:46:39.230"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:46:39.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:46:39.231" endtime="20211003 01:46:39.232"/>
</kw>
<status status="PASS" starttime="20211003 01:46:31.304" endtime="20211003 01:46:39.233"/>
</kw>
<msg timestamp="20211003 01:46:39.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:46:31.304" endtime="20211003 01:46:39.234"/>
</kw>
<msg timestamp="20211003 01:46:39.235" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211003 01:46:31.303" endtime="20211003 01:46:39.235"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211003 01:46:39.238" endtime="20211003 01:46:39.240"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:46:39.245" level="INFO">Running command 'ozone sh bucket create o3:///48018-rpcwport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:46:47.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:46:47.799" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:46:39.242" endtime="20211003 01:46:47.799"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:46:47.802" level="INFO"/>
<status status="PASS" starttime="20211003 01:46:47.800" endtime="20211003 01:46:47.802"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:46:47.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:46:47.802" endtime="20211003 01:46:47.803"/>
</kw>
<status status="PASS" starttime="20211003 01:46:39.242" endtime="20211003 01:46:47.805"/>
</kw>
<msg timestamp="20211003 01:46:47.805" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:46:39.241" endtime="20211003 01:46:47.805"/>
</kw>
<status status="PASS" starttime="20211003 01:46:39.240" endtime="20211003 01:46:47.806"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:46:47.816" level="INFO">Running command 'ozone sh bucket info o3:///48018-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:46:56.853" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:46:56.853" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211003 01:46:47.812" endtime="20211003 01:46:56.853"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:46:56.854" level="INFO">DISK</msg>
<status status="PASS" starttime="20211003 01:46:56.853" endtime="20211003 01:46:56.855"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:46:56.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:46:56.855" endtime="20211003 01:46:56.856"/>
</kw>
<status status="PASS" starttime="20211003 01:46:47.810" endtime="20211003 01:46:56.856"/>
</kw>
<msg timestamp="20211003 01:46:56.856" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:46:47.809" endtime="20211003 01:46:56.856"/>
</kw>
<msg timestamp="20211003 01:46:56.857" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211003 01:46:47.806" endtime="20211003 01:46:56.857"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211003 01:46:56.857" endtime="20211003 01:46:56.857"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:46:56.863" level="INFO">Running command 'ozone sh bucket info o3:///48018-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:47:04.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:47:04.809" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211003 01:46:56.860" endtime="20211003 01:47:04.809"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:47:04.810" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211003 01:47:04.809" endtime="20211003 01:47:04.810"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:47:04.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:47:04.811" endtime="20211003 01:47:04.811"/>
</kw>
<status status="PASS" starttime="20211003 01:46:56.859" endtime="20211003 01:47:04.812"/>
</kw>
<msg timestamp="20211003 01:47:04.812" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:46:56.859" endtime="20211003 01:47:04.812"/>
</kw>
<msg timestamp="20211003 01:47:04.812" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211003 01:46:56.857" endtime="20211003 01:47:04.812"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211003 01:47:04.812" endtime="20211003 01:47:04.813"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:47:04.818" level="INFO">Running command 'ozone sh bucket info o3:///48018-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:47:11.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:47:11.774" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211003 01:47:04.816" endtime="20211003 01:47:11.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:47:11.776" level="INFO">100</msg>
<status status="PASS" starttime="20211003 01:47:11.775" endtime="20211003 01:47:11.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:47:11.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:47:11.776" endtime="20211003 01:47:11.777"/>
</kw>
<status status="PASS" starttime="20211003 01:47:04.815" endtime="20211003 01:47:11.777"/>
</kw>
<msg timestamp="20211003 01:47:11.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:47:04.815" endtime="20211003 01:47:11.778"/>
</kw>
<msg timestamp="20211003 01:47:11.778" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211003 01:47:04.813" endtime="20211003 01:47:11.778"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211003 01:47:11.779" endtime="20211003 01:47:11.779"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:47:11.784" level="INFO">Running command 'ozone sh bucket setquota o3:///48018-rpcwport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:47:19.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:47:19.799" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:47:11.781" endtime="20211003 01:47:19.799"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:47:19.800" level="INFO"/>
<status status="PASS" starttime="20211003 01:47:19.799" endtime="20211003 01:47:19.800"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:47:19.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:47:19.800" endtime="20211003 01:47:19.803"/>
</kw>
<status status="PASS" starttime="20211003 01:47:11.780" endtime="20211003 01:47:19.805"/>
</kw>
<msg timestamp="20211003 01:47:19.806" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:47:11.780" endtime="20211003 01:47:19.806"/>
</kw>
<status status="PASS" starttime="20211003 01:47:11.779" endtime="20211003 01:47:19.807"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:47:19.816" level="INFO">Running command 'ozone sh bucket info o3:///48018-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:47:28.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:47:28.148" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211003 01:47:19.813" endtime="20211003 01:47:28.148"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:47:28.151" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211003 01:47:28.149" endtime="20211003 01:47:28.151"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:47:28.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:47:28.152" endtime="20211003 01:47:28.154"/>
</kw>
<status status="PASS" starttime="20211003 01:47:19.809" endtime="20211003 01:47:28.155"/>
</kw>
<msg timestamp="20211003 01:47:28.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:47:19.809" endtime="20211003 01:47:28.155"/>
</kw>
<msg timestamp="20211003 01:47:28.156" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211003 01:47:19.808" endtime="20211003 01:47:28.156"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211003 01:47:28.157" endtime="20211003 01:47:28.158"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:47:28.166" level="INFO">Running command 'ozone sh bucket info o3:///48018-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:47:36.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:47:36.131" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211003 01:47:28.163" endtime="20211003 01:47:36.131"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:47:36.133" level="INFO">1000</msg>
<status status="PASS" starttime="20211003 01:47:36.132" endtime="20211003 01:47:36.133"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:47:36.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:47:36.133" endtime="20211003 01:47:36.134"/>
</kw>
<status status="PASS" starttime="20211003 01:47:28.161" endtime="20211003 01:47:36.134"/>
</kw>
<msg timestamp="20211003 01:47:36.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:47:28.161" endtime="20211003 01:47:36.134"/>
</kw>
<msg timestamp="20211003 01:47:36.135" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211003 01:47:28.158" endtime="20211003 01:47:36.135"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211003 01:47:36.135" endtime="20211003 01:47:36.136"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:47:36.142" level="INFO">Running command 'ozone sh bucket list o3:///48018-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:47:44.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:47:44.593" level="INFO">${output} = 48018-rpcwport</msg>
<status status="PASS" starttime="20211003 01:47:36.138" endtime="20211003 01:47:44.593"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:47:44.596" level="INFO">48018-rpcwport</msg>
<status status="PASS" starttime="20211003 01:47:44.594" endtime="20211003 01:47:44.596"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:47:44.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:47:44.597" endtime="20211003 01:47:44.598"/>
</kw>
<status status="PASS" starttime="20211003 01:47:36.138" endtime="20211003 01:47:44.599"/>
</kw>
<msg timestamp="20211003 01:47:44.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:47:36.137" endtime="20211003 01:47:44.600"/>
</kw>
<msg timestamp="20211003 01:47:44.600" level="INFO">${result} = 48018-rpcwport</msg>
<status status="PASS" starttime="20211003 01:47:36.136" endtime="20211003 01:47:44.600"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211003 01:47:44.601" endtime="20211003 01:47:44.602"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:47:44.610" level="INFO">Running command 'ozone sh key put o3:///48018-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:50:53.553" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211003 01:47:44.607" endtime="20211003 01:50:53.553"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211003 01:50:53.554" endtime="20211003 01:50:53.554"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211003 01:50:53.554" endtime="20211003 01:50:53.554"/>
</kw>
<status status="FAIL" starttime="20211003 01:47:44.606" endtime="20211003 01:50:53.554"/>
</kw>
<msg timestamp="20211003 01:50:53.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211003 01:47:44.606" endtime="20211003 01:50:53.555"/>
</kw>
<status status="FAIL" starttime="20211003 01:47:44.604" endtime="20211003 01:50:53.555"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211003 01:50:53.555" endtime="20211003 01:50:53.555"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211003 01:50:53.555" endtime="20211003 01:50:53.555"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211003 01:50:53.556" endtime="20211003 01:50:53.556"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211003 01:50:53.556" endtime="20211003 01:50:53.556"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211003 01:50:53.556" endtime="20211003 01:50:53.556"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211003 01:50:53.556" endtime="20211003 01:50:53.556"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211003 01:50:53.556" endtime="20211003 01:50:53.556"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211003 01:50:53.557" endtime="20211003 01:50:53.557"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211003 01:50:53.557" endtime="20211003 01:50:53.557"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211003 01:50:53.557" endtime="20211003 01:50:53.558"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211003 01:50:53.558" endtime="20211003 01:50:53.558"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211003 01:50:53.558" endtime="20211003 01:50:53.558"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211003 01:50:53.558" endtime="20211003 01:50:53.558"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211003 01:50:53.558" endtime="20211003 01:50:53.558"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211003 01:50:53.558" endtime="20211003 01:50:53.558"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211003 01:50:53.559" endtime="20211003 01:50:53.559"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211003 01:50:53.559" endtime="20211003 01:50:53.559"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211003 01:50:53.559" endtime="20211003 01:50:53.560"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211003 01:50:53.560" endtime="20211003 01:50:53.560"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211003 01:50:53.560" endtime="20211003 01:50:53.560"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211003 01:50:53.560" endtime="20211003 01:50:53.561"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211003 01:50:53.561" endtime="20211003 01:50:53.561"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211003 01:50:53.561" endtime="20211003 01:50:53.561"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211003 01:50:53.561" endtime="20211003 01:50:53.561"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20211003 01:50:53.561" endtime="20211003 01:50:53.561"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211003 01:50:53.562" endtime="20211003 01:50:53.562"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211003 01:50:53.562" endtime="20211003 01:50:53.562"/>
</kw>
<status status="FAIL" starttime="20211003 01:47:44.603" endtime="20211003 01:50:53.562"/>
</kw>
<status status="FAIL" starttime="20211003 01:47:44.602" endtime="20211003 01:50:53.562"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211003 01:50:53.562" endtime="20211003 01:50:53.563"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211003 01:50:53.563" endtime="20211003 01:50:53.563"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211003 01:50:53.563" endtime="20211003 01:50:53.563"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211003 01:50:53.563" endtime="20211003 01:50:53.563"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211003 01:50:53.563" endtime="20211003 01:50:53.564"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211003 01:50:53.564" endtime="20211003 01:50:53.564"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211003 01:50:53.564" endtime="20211003 01:50:53.564"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211003 01:50:53.564" endtime="20211003 01:50:53.564"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211003 01:50:53.564" endtime="20211003 01:50:53.565"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211003 01:50:53.565" endtime="20211003 01:50:53.565"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211003 01:50:53.566" endtime="20211003 01:50:53.566"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211003 01:50:53.566" endtime="20211003 01:50:53.566"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211003 01:50:53.567" endtime="20211003 01:50:53.567"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211003 01:50:53.567" endtime="20211003 01:50:53.567"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211003 01:50:53.567" endtime="20211003 01:50:53.567"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211003 01:50:53.567" endtime="20211003 01:50:53.567"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211003 01:50:53.567" endtime="20211003 01:50:53.568"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211003 01:50:53.568" endtime="20211003 01:50:53.568"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211003 01:50:53.568" endtime="20211003 01:50:53.568"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211003 01:50:53.568" endtime="20211003 01:50:53.568"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211003 01:50:53.568" endtime="20211003 01:50:53.569"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211003 01:50:53.569" endtime="20211003 01:50:53.569"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211003 01:50:53.569" endtime="20211003 01:50:53.569"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211003 01:50:53.570" endtime="20211003 01:50:53.570"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211003 01:50:53.570" endtime="20211003 01:50:53.570"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211003 01:50:53.571" endtime="20211003 01:50:53.571"/>
</kw>
<status status="FAIL" starttime="20211003 01:45:53.596" endtime="20211003 01:50:53.571"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211003 01:45:53.552" endtime="20211003 01:50:53.571">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t7" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:50:53.579" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:50:53.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:50:53.584" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211003 01:50:53.577" endtime="20211003 01:50:53.584"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:50:53.586" level="INFO">scm</msg>
<status status="PASS" starttime="20211003 01:50:53.585" endtime="20211003 01:50:53.586"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:50:53.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:50:53.586" endtime="20211003 01:50:53.586"/>
</kw>
<status status="PASS" starttime="20211003 01:50:53.576" endtime="20211003 01:50:53.587"/>
</kw>
<msg timestamp="20211003 01:50:53.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:50:53.576" endtime="20211003 01:50:53.587"/>
</kw>
<msg timestamp="20211003 01:50:53.587" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211003 01:50:53.576" endtime="20211003 01:50:53.587"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211003 01:50:53.588" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211003 01:50:53.588" endtime="20211003 01:50:53.588"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:50:53.594" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:50:53.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:50:53.783" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:50:53.591" endtime="20211003 01:50:53.783"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:50:53.785" level="INFO"/>
<status status="PASS" starttime="20211003 01:50:53.783" endtime="20211003 01:50:53.785"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:50:53.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:50:53.785" endtime="20211003 01:50:53.786"/>
</kw>
<status status="PASS" starttime="20211003 01:50:53.591" endtime="20211003 01:50:53.786"/>
</kw>
<msg timestamp="20211003 01:50:53.786" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:50:53.590" endtime="20211003 01:50:53.786"/>
</kw>
<status status="PASS" starttime="20211003 01:50:53.589" endtime="20211003 01:50:53.787"/>
</kw>
<status status="PASS" starttime="20211003 01:50:53.588" endtime="20211003 01:50:53.787"/>
</kw>
<status status="PASS" starttime="20211003 01:50:53.575" endtime="20211003 01:50:53.787"/>
</kw>
<status status="PASS" starttime="20211003 01:50:53.574" endtime="20211003 01:50:53.787"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:50:53.801" level="INFO">Running command 'ozone sh volume info /48018-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:51:02.470" level="INFO">${rc} = 255</msg>
<msg timestamp="20211003 01:51:02.470" level="INFO">${output} = VOLUME_NOT_FOUND Volume 48018-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20211003 01:50:53.795" endtime="20211003 01:51:02.470"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:51:02.472" level="INFO">VOLUME_NOT_FOUND Volume 48018-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20211003 01:51:02.471" endtime="20211003 01:51:02.472"/>
</kw>
<msg timestamp="20211003 01:51:02.472" level="INFO">${result} = VOLUME_NOT_FOUND Volume 48018-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20211003 01:50:53.794" endtime="20211003 01:51:02.472"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 01:51:02.473" endtime="20211003 01:51:02.473"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:51:02.479" level="INFO">Running command 'ozone sh volume create /48018-rpcwoscheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:51:10.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:51:10.095" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:51:02.475" endtime="20211003 01:51:10.096"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:51:10.098" level="INFO"/>
<status status="PASS" starttime="20211003 01:51:10.097" endtime="20211003 01:51:10.098"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:51:10.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:51:10.098" endtime="20211003 01:51:10.100"/>
</kw>
<status status="PASS" starttime="20211003 01:51:02.475" endtime="20211003 01:51:10.100"/>
</kw>
<msg timestamp="20211003 01:51:10.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:51:02.474" endtime="20211003 01:51:10.100"/>
</kw>
<msg timestamp="20211003 01:51:10.101" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211003 01:51:02.473" endtime="20211003 01:51:10.101"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 01:51:10.102" endtime="20211003 01:51:10.102"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:51:10.109" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="48018-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:51:18.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:51:18.821" level="INFO">${output} = {
  "metadata": {},
  "name": "48018-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211003 01:51:10.106" endtime="20211003 01:51:18.821"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:51:18.822" level="INFO">{
  "metadata": {},
  "name": "48018-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-03T01:51:10.009Z",
  "modificationTime": "2021-10-03T01:51:10.009Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211003 01:51:18.821" endtime="20211003 01:51:18.822"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:51:18.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:51:18.823" endtime="20211003 01:51:18.823"/>
</kw>
<status status="PASS" starttime="20211003 01:51:10.105" endtime="20211003 01:51:18.824"/>
</kw>
<msg timestamp="20211003 01:51:18.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:51:10.104" endtime="20211003 01:51:18.824"/>
</kw>
<msg timestamp="20211003 01:51:18.824" level="INFO">${result} = {
  "metadata": {},
  "name": "48018-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211003 01:51:10.103" endtime="20211003 01:51:18.824"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 01:51:18.825" endtime="20211003 01:51:18.825"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:51:18.829" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="48018-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:51:25.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:51:25.749" level="INFO">${output} = {
  "metadata": {},
  "name": "48018-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211003 01:51:18.827" endtime="20211003 01:51:25.749"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:51:25.752" level="INFO">{
  "metadata": {},
  "name": "48018-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-03T01:51:10.009Z",
  "modificationTime": "2021-10-03T01:51:10.009Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211003 01:51:25.751" endtime="20211003 01:51:25.752"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:51:25.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:51:25.752" endtime="20211003 01:51:25.753"/>
</kw>
<status status="PASS" starttime="20211003 01:51:18.827" endtime="20211003 01:51:25.753"/>
</kw>
<msg timestamp="20211003 01:51:25.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:51:18.826" endtime="20211003 01:51:25.754"/>
</kw>
<msg timestamp="20211003 01:51:25.754" level="INFO">${result} = {
  "metadata": {},
  "name": "48018-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211003 01:51:18.825" endtime="20211003 01:51:25.754"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211003 01:51:25.755" endtime="20211003 01:51:25.755"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:51:25.764" level="INFO">Running command 'ozone sh volume setquota /48018-rpcwoscheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:51:33.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:51:33.730" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:51:25.760" endtime="20211003 01:51:33.731"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:51:33.733" level="INFO"/>
<status status="PASS" starttime="20211003 01:51:33.731" endtime="20211003 01:51:33.734"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:51:33.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:51:33.734" endtime="20211003 01:51:33.736"/>
</kw>
<status status="PASS" starttime="20211003 01:51:25.759" endtime="20211003 01:51:33.737"/>
</kw>
<msg timestamp="20211003 01:51:33.737" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:51:25.757" endtime="20211003 01:51:33.737"/>
</kw>
<status status="PASS" starttime="20211003 01:51:25.755" endtime="20211003 01:51:33.738"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:51:33.747" level="INFO">Running command 'ozone sh volume info /48018-rpcwoscheme | jq -r '. | select(.name=="48018-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:51:42.118" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:51:42.118" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211003 01:51:33.743" endtime="20211003 01:51:42.118"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:51:42.119" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211003 01:51:42.119" endtime="20211003 01:51:42.120"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:51:42.121" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:51:42.120" endtime="20211003 01:51:42.121"/>
</kw>
<status status="PASS" starttime="20211003 01:51:33.742" endtime="20211003 01:51:42.121"/>
</kw>
<msg timestamp="20211003 01:51:42.121" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:51:33.741" endtime="20211003 01:51:42.121"/>
</kw>
<msg timestamp="20211003 01:51:42.122" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211003 01:51:33.739" endtime="20211003 01:51:42.122"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211003 01:51:42.122" endtime="20211003 01:51:42.122"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:51:42.130" level="INFO">Running command 'ozone sh bucket create /48018-rpcwoscheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:51:50.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:51:50.864" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:51:42.124" endtime="20211003 01:51:50.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:51:50.866" level="INFO"/>
<status status="PASS" starttime="20211003 01:51:50.865" endtime="20211003 01:51:50.866"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:51:50.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:51:50.866" endtime="20211003 01:51:50.867"/>
</kw>
<status status="PASS" starttime="20211003 01:51:42.124" endtime="20211003 01:51:50.867"/>
</kw>
<msg timestamp="20211003 01:51:50.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:51:42.123" endtime="20211003 01:51:50.867"/>
</kw>
<status status="PASS" starttime="20211003 01:51:42.123" endtime="20211003 01:51:50.868"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:51:50.874" level="INFO">Running command 'ozone sh bucket info /48018-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:51:58.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:51:58.887" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211003 01:51:50.870" endtime="20211003 01:51:58.887"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:51:58.888" level="INFO">DISK</msg>
<status status="PASS" starttime="20211003 01:51:58.887" endtime="20211003 01:51:58.888"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:51:58.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:51:58.889" endtime="20211003 01:51:58.890"/>
</kw>
<status status="PASS" starttime="20211003 01:51:50.869" endtime="20211003 01:51:58.891"/>
</kw>
<msg timestamp="20211003 01:51:58.891" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:51:50.869" endtime="20211003 01:51:58.891"/>
</kw>
<msg timestamp="20211003 01:51:58.892" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211003 01:51:50.868" endtime="20211003 01:51:58.892"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211003 01:51:58.892" endtime="20211003 01:51:58.893"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:51:58.902" level="INFO">Running command 'ozone sh bucket info /48018-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:52:07.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:52:07.570" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211003 01:51:58.897" endtime="20211003 01:52:07.570"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:52:07.573" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211003 01:52:07.571" endtime="20211003 01:52:07.573"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:52:07.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:52:07.573" endtime="20211003 01:52:07.575"/>
</kw>
<status status="PASS" starttime="20211003 01:51:58.896" endtime="20211003 01:52:07.575"/>
</kw>
<msg timestamp="20211003 01:52:07.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:51:58.896" endtime="20211003 01:52:07.576"/>
</kw>
<msg timestamp="20211003 01:52:07.576" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211003 01:51:58.894" endtime="20211003 01:52:07.577"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211003 01:52:07.577" endtime="20211003 01:52:07.578"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:52:07.585" level="INFO">Running command 'ozone sh bucket info /48018-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:52:16.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:52:16.065" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211003 01:52:07.582" endtime="20211003 01:52:16.065"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:52:16.066" level="INFO">100</msg>
<status status="PASS" starttime="20211003 01:52:16.066" endtime="20211003 01:52:16.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:52:16.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:52:16.067" endtime="20211003 01:52:16.068"/>
</kw>
<status status="PASS" starttime="20211003 01:52:07.581" endtime="20211003 01:52:16.068"/>
</kw>
<msg timestamp="20211003 01:52:16.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:52:07.580" endtime="20211003 01:52:16.069"/>
</kw>
<msg timestamp="20211003 01:52:16.069" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211003 01:52:07.578" endtime="20211003 01:52:16.069"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211003 01:52:16.069" endtime="20211003 01:52:16.070"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:52:16.075" level="INFO">Running command 'ozone sh bucket setquota /48018-rpcwoscheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:52:21.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:52:21.747" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:52:16.072" endtime="20211003 01:52:21.747"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:52:21.749" level="INFO"/>
<status status="PASS" starttime="20211003 01:52:21.748" endtime="20211003 01:52:21.749"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:52:21.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:52:21.749" endtime="20211003 01:52:21.750"/>
</kw>
<status status="PASS" starttime="20211003 01:52:16.071" endtime="20211003 01:52:21.750"/>
</kw>
<msg timestamp="20211003 01:52:21.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:52:16.071" endtime="20211003 01:52:21.751"/>
</kw>
<status status="PASS" starttime="20211003 01:52:16.070" endtime="20211003 01:52:21.751"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:52:21.758" level="INFO">Running command 'ozone sh bucket info /48018-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:52:30.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:52:30.165" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211003 01:52:21.755" endtime="20211003 01:52:30.165"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:52:30.166" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211003 01:52:30.166" endtime="20211003 01:52:30.167"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:52:30.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:52:30.167" endtime="20211003 01:52:30.167"/>
</kw>
<status status="PASS" starttime="20211003 01:52:21.754" endtime="20211003 01:52:30.168"/>
</kw>
<msg timestamp="20211003 01:52:30.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:52:21.753" endtime="20211003 01:52:30.168"/>
</kw>
<msg timestamp="20211003 01:52:30.168" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211003 01:52:21.751" endtime="20211003 01:52:30.169"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211003 01:52:30.169" endtime="20211003 01:52:30.170"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:52:30.179" level="INFO">Running command 'ozone sh bucket info /48018-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:52:38.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:52:38.600" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211003 01:52:30.175" endtime="20211003 01:52:38.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:52:38.603" level="INFO">1000</msg>
<status status="PASS" starttime="20211003 01:52:38.601" endtime="20211003 01:52:38.603"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:52:38.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:52:38.603" endtime="20211003 01:52:38.605"/>
</kw>
<status status="PASS" starttime="20211003 01:52:30.174" endtime="20211003 01:52:38.605"/>
</kw>
<msg timestamp="20211003 01:52:38.606" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:52:30.173" endtime="20211003 01:52:38.606"/>
</kw>
<msg timestamp="20211003 01:52:38.606" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211003 01:52:30.171" endtime="20211003 01:52:38.606"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211003 01:52:38.607" endtime="20211003 01:52:38.608"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:52:38.615" level="INFO">Running command 'ozone sh bucket list /48018-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:52:46.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:52:46.960" level="INFO">${output} = 48018-rpcwoscheme</msg>
<status status="PASS" starttime="20211003 01:52:38.612" endtime="20211003 01:52:46.960"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:52:46.962" level="INFO">48018-rpcwoscheme</msg>
<status status="PASS" starttime="20211003 01:52:46.961" endtime="20211003 01:52:46.962"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:52:46.963" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:52:46.962" endtime="20211003 01:52:46.963"/>
</kw>
<status status="PASS" starttime="20211003 01:52:38.611" endtime="20211003 01:52:46.963"/>
</kw>
<msg timestamp="20211003 01:52:46.963" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:52:38.610" endtime="20211003 01:52:46.964"/>
</kw>
<msg timestamp="20211003 01:52:46.964" level="INFO">${result} = 48018-rpcwoscheme</msg>
<status status="PASS" starttime="20211003 01:52:38.608" endtime="20211003 01:52:46.964"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211003 01:52:46.964" endtime="20211003 01:52:46.965"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:52:46.971" level="INFO">Running command 'ozone sh key put /48018-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:55:53.574" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211003 01:52:46.968" endtime="20211003 01:55:53.574"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211003 01:55:53.575" endtime="20211003 01:55:53.575"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211003 01:55:53.575" endtime="20211003 01:55:53.576"/>
</kw>
<status status="FAIL" starttime="20211003 01:52:46.967" endtime="20211003 01:55:53.576"/>
</kw>
<msg timestamp="20211003 01:55:53.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211003 01:52:46.967" endtime="20211003 01:55:53.576"/>
</kw>
<status status="FAIL" starttime="20211003 01:52:46.966" endtime="20211003 01:55:53.577"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211003 01:55:53.577" endtime="20211003 01:55:53.577"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211003 01:55:53.577" endtime="20211003 01:55:53.577"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211003 01:55:53.578" endtime="20211003 01:55:53.578"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211003 01:55:53.578" endtime="20211003 01:55:53.578"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211003 01:55:53.578" endtime="20211003 01:55:53.578"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211003 01:55:53.578" endtime="20211003 01:55:53.578"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211003 01:55:53.579" endtime="20211003 01:55:53.579"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211003 01:55:53.579" endtime="20211003 01:55:53.579"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211003 01:55:53.579" endtime="20211003 01:55:53.579"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211003 01:55:53.579" endtime="20211003 01:55:53.579"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211003 01:55:53.580" endtime="20211003 01:55:53.580"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211003 01:55:53.580" endtime="20211003 01:55:53.580"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211003 01:55:53.580" endtime="20211003 01:55:53.580"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211003 01:55:53.580" endtime="20211003 01:55:53.580"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211003 01:55:53.580" endtime="20211003 01:55:53.581"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211003 01:55:53.581" endtime="20211003 01:55:53.581"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211003 01:55:53.581" endtime="20211003 01:55:53.581"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211003 01:55:53.581" endtime="20211003 01:55:53.581"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211003 01:55:53.581" endtime="20211003 01:55:53.581"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211003 01:55:53.582" endtime="20211003 01:55:53.582"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211003 01:55:53.582" endtime="20211003 01:55:53.582"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211003 01:55:53.583" endtime="20211003 01:55:53.583"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211003 01:55:53.583" endtime="20211003 01:55:53.583"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211003 01:55:53.583" endtime="20211003 01:55:53.583"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20211003 01:55:53.583" endtime="20211003 01:55:53.583"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211003 01:55:53.583" endtime="20211003 01:55:53.583"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211003 01:55:53.584" endtime="20211003 01:55:53.584"/>
</kw>
<status status="FAIL" starttime="20211003 01:52:46.965" endtime="20211003 01:55:53.584"/>
</kw>
<status status="FAIL" starttime="20211003 01:52:46.965" endtime="20211003 01:55:53.584"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211003 01:55:53.584" endtime="20211003 01:55:53.584"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211003 01:55:53.584" endtime="20211003 01:55:53.585"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211003 01:55:53.585" endtime="20211003 01:55:53.585"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211003 01:55:53.585" endtime="20211003 01:55:53.585"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211003 01:55:53.586" endtime="20211003 01:55:53.586"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211003 01:55:53.586" endtime="20211003 01:55:53.586"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211003 01:55:53.587" endtime="20211003 01:55:53.587"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211003 01:55:53.587" endtime="20211003 01:55:53.587"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211003 01:55:53.587" endtime="20211003 01:55:53.588"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211003 01:55:53.588" endtime="20211003 01:55:53.588"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211003 01:55:53.588" endtime="20211003 01:55:53.588"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211003 01:55:53.589" endtime="20211003 01:55:53.589"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211003 01:55:53.590" endtime="20211003 01:55:53.590"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211003 01:55:53.591" endtime="20211003 01:55:53.591"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211003 01:55:53.591" endtime="20211003 01:55:53.591"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211003 01:55:53.591" endtime="20211003 01:55:53.592"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211003 01:55:53.592" endtime="20211003 01:55:53.592"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211003 01:55:53.592" endtime="20211003 01:55:53.593"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211003 01:55:53.593" endtime="20211003 01:55:53.593"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211003 01:55:53.593" endtime="20211003 01:55:53.593"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211003 01:55:53.594" endtime="20211003 01:55:53.594"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211003 01:55:53.594" endtime="20211003 01:55:53.594"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211003 01:55:53.594" endtime="20211003 01:55:53.594"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211003 01:55:53.594" endtime="20211003 01:55:53.594"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211003 01:55:53.595" endtime="20211003 01:55:53.595"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211003 01:55:53.595" endtime="20211003 01:55:53.595"/>
</kw>
<status status="FAIL" starttime="20211003 01:50:53.787" endtime="20211003 01:55:53.595"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211003 01:50:53.573" endtime="20211003 01:55:53.596">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20211003 01:30:26.338" endtime="20211003 01:55:53.597"/>
</suite>
<status status="FAIL" starttime="20211003 01:05:34.163" endtime="20211003 01:55:53.605"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:05:28.802" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:05:28.808" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:05:28.808" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211003 01:05:28.797" endtime="20211003 01:05:28.808"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:05:28.809" level="INFO">scm</msg>
<status status="PASS" starttime="20211003 01:05:28.809" endtime="20211003 01:05:28.809"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:05:28.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:05:28.809" endtime="20211003 01:05:28.810"/>
</kw>
<status status="PASS" starttime="20211003 01:05:28.796" endtime="20211003 01:05:28.811"/>
</kw>
<msg timestamp="20211003 01:05:28.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:05:28.795" endtime="20211003 01:05:28.811"/>
</kw>
<msg timestamp="20211003 01:05:28.811" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211003 01:05:28.795" endtime="20211003 01:05:28.811"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211003 01:05:28.812" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211003 01:05:28.811" endtime="20211003 01:05:28.812"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211003 01:05:28.817" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211003 01:05:28.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20211003 01:05:28.826" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211003 01:05:28.815" endtime="20211003 01:05:28.826"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211003 01:05:28.827" level="INFO"/>
<status status="PASS" starttime="20211003 01:05:28.826" endtime="20211003 01:05:28.827"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211003 01:05:28.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211003 01:05:28.827" endtime="20211003 01:05:28.828"/>
</kw>
<status status="PASS" starttime="20211003 01:05:28.814" endtime="20211003 01:05:28.828"/>
</kw>
<msg timestamp="20211003 01:05:28.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211003 01:05:28.814" endtime="20211003 01:05:28.828"/>
</kw>
<status status="PASS" starttime="20211003 01:05:28.813" endtime="20211003 01:05:28.828"/>
</kw>
<status status="PASS" starttime="20211003 01:05:28.812" endtime="20211003 01:05:28.828"/>
</kw>
<status status="PASS" starttime="20211003 01:05:28.794" endtime="20211003 01:05:28.829"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211003 01:05:28.793" endtime="20211003 01:05:28.829"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20211003 01:05:28.726" endtime="20211003 01:05:28.830"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="3019546"/>
</suite>
<statistics>
<total>
<stat pass="20" fail="10" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="20" fail="10" skip="0" id="s1" name="ozonesecure">ozonesecure</stat>
<stat pass="19" fail="10" skip="0" id="s1-s1" name="Basic">ozonesecure.Basic</stat>
<stat pass="1" fail="1" skip="0" id="s1-s1-s1" name="Basic">ozonesecure.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Getconf">ozonesecure.Basic.Getconf</stat>
<stat pass="10" fail="5" skip="0" id="s1-s1-s3" name="Links">ozonesecure.Basic.Links</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat pass="4" fail="3" skip="0" id="s1-s1-s5" name="Ozone-Shell">ozonesecure.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
