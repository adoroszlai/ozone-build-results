<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1.1 (Python 3.6.9 on linux)" generated="20211012 01:53:43.890" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:03:22.891" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:03:22.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:03:22.895" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211012 01:03:22.887" endtime="20211012 01:03:22.895"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:03:22.896" level="INFO">scm</msg>
<status status="PASS" starttime="20211012 01:03:22.895" endtime="20211012 01:03:22.896"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:03:22.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:03:22.897" endtime="20211012 01:03:22.897"/>
</kw>
<status status="PASS" starttime="20211012 01:03:22.886" endtime="20211012 01:03:22.898"/>
</kw>
<msg timestamp="20211012 01:03:22.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:03:22.886" endtime="20211012 01:03:22.898"/>
</kw>
<msg timestamp="20211012 01:03:22.898" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20211012 01:03:22.885" endtime="20211012 01:03:22.898"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:03:22.902" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:03:22.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:03:22.914" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:03:22.900" endtime="20211012 01:03:22.914"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:03:22.915" level="INFO"/>
<status status="PASS" starttime="20211012 01:03:22.914" endtime="20211012 01:03:22.915"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:03:22.916" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:03:22.915" endtime="20211012 01:03:22.917"/>
</kw>
<status status="PASS" starttime="20211012 01:03:22.900" endtime="20211012 01:03:22.917"/>
</kw>
<msg timestamp="20211012 01:03:22.917" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:03:22.899" endtime="20211012 01:03:22.917"/>
</kw>
<status status="PASS" starttime="20211012 01:03:22.899" endtime="20211012 01:03:22.918"/>
</kw>
<status status="PASS" starttime="20211012 01:03:22.898" endtime="20211012 01:03:22.918"/>
</kw>
<status status="PASS" starttime="20211012 01:03:22.885" endtime="20211012 01:03:22.918"/>
</kw>
<status status="PASS" starttime="20211012 01:03:22.884" endtime="20211012 01:03:22.918"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:03:22.923" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:03:23.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:03:23.067" level="INFO">${output} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20211012 01:03:22.920" endtime="20211012 01:03:23.067"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:03:23.069" level="INFO">HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 484

HTTP/1.1 200 OK
Date: Tue, 12 Oct 2021 01:03:23 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC4EyelQ54wUUwJKfVdNMhFkW1xhNoXZdI8vBkWUTrnHn95eSl4IrZ3EOAgStlbqwexheWfRls8LKD2ep3XTUZWvQf
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1634036603054&amp;s=rtUHOpsKzafBoAH22DI8XrtRuCnwDdend4QMc5+u/TM="; Path=/; HttpOnly
Last-Modified: Tue, 12 Oct 2021 00:50:14 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20211012 01:03:23.068" endtime="20211012 01:03:23.069"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:03:23.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:03:23.069" endtime="20211012 01:03:23.070"/>
</kw>
<status status="PASS" starttime="20211012 01:03:22.920" endtime="20211012 01:03:23.070"/>
</kw>
<msg timestamp="20211012 01:03:23.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:03:22.919" endtime="20211012 01:03:23.070"/>
</kw>
<msg timestamp="20211012 01:03:23.071" level="INFO">${result} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20211012 01:03:22.918" endtime="20211012 01:03:23.071"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211012 01:03:23.071" endtime="20211012 01:03:23.071"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211012 01:03:22.883" endtime="20211012 01:03:23.072"/>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:03:23.083" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:03:23.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:03:23.091" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211012 01:03:23.077" endtime="20211012 01:03:23.091"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:03:23.092" level="INFO">scm</msg>
<status status="PASS" starttime="20211012 01:03:23.091" endtime="20211012 01:03:23.092"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:03:23.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:03:23.092" endtime="20211012 01:03:23.093"/>
</kw>
<status status="PASS" starttime="20211012 01:03:23.077" endtime="20211012 01:03:23.093"/>
</kw>
<msg timestamp="20211012 01:03:23.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:03:23.076" endtime="20211012 01:03:23.094"/>
</kw>
<msg timestamp="20211012 01:03:23.094" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211012 01:03:23.076" endtime="20211012 01:03:23.094"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211012 01:03:23.096" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211012 01:03:23.094" endtime="20211012 01:03:23.096"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:03:23.101" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:03:23.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:03:23.110" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:03:23.099" endtime="20211012 01:03:23.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:03:23.111" level="INFO"/>
<status status="PASS" starttime="20211012 01:03:23.110" endtime="20211012 01:03:23.111"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:03:23.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:03:23.111" endtime="20211012 01:03:23.112"/>
</kw>
<status status="PASS" starttime="20211012 01:03:23.098" endtime="20211012 01:03:23.112"/>
</kw>
<msg timestamp="20211012 01:03:23.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:03:23.098" endtime="20211012 01:03:23.112"/>
</kw>
<status status="PASS" starttime="20211012 01:03:23.097" endtime="20211012 01:03:23.113"/>
</kw>
<status status="PASS" starttime="20211012 01:03:23.096" endtime="20211012 01:03:23.113"/>
</kw>
<status status="PASS" starttime="20211012 01:03:23.075" endtime="20211012 01:03:23.113"/>
</kw>
<status status="PASS" starttime="20211012 01:03:23.075" endtime="20211012 01:03:23.113"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:03:23.117" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:08:23.075" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211012 01:03:23.115" endtime="20211012 01:08:23.075"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211012 01:08:23.075" endtime="20211012 01:08:23.075"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211012 01:08:23.075" endtime="20211012 01:08:23.075"/>
</kw>
<status status="FAIL" starttime="20211012 01:03:23.114" endtime="20211012 01:08:23.076"/>
</kw>
<msg timestamp="20211012 01:08:23.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211012 01:03:23.114" endtime="20211012 01:08:23.076"/>
</kw>
<status status="FAIL" starttime="20211012 01:03:23.113" endtime="20211012 01:08:23.077"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20211012 01:08:23.077" endtime="20211012 01:08:23.077"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Status: Success</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211012 01:08:23.077" endtime="20211012 01:08:23.077"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211012 01:03:23.073" endtime="20211012 01:08:23.078">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" starttime="20211012 01:03:22.851" endtime="20211012 01:08:23.079"/>
</suite>
<suite id="s1-s1-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s1-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:08:23.091" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:08:25.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:08:25.794" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211012 01:08:23.089" endtime="20211012 01:08:25.794"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:08:25.795" level="INFO">om</msg>
<status status="PASS" starttime="20211012 01:08:25.795" endtime="20211012 01:08:25.795"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:08:25.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:08:25.796" endtime="20211012 01:08:25.797"/>
</kw>
<status status="PASS" starttime="20211012 01:08:23.087" endtime="20211012 01:08:25.797"/>
</kw>
<msg timestamp="20211012 01:08:25.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:08:23.087" endtime="20211012 01:08:25.798"/>
</kw>
<msg timestamp="20211012 01:08:25.798" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211012 01:08:23.086" endtime="20211012 01:08:25.799"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211012 01:08:25.799" endtime="20211012 01:08:25.800"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:08:25.806" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:08:28.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:08:28.941" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211012 01:08:25.803" endtime="20211012 01:08:28.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:08:28.943" level="INFO">om</msg>
<status status="PASS" starttime="20211012 01:08:28.942" endtime="20211012 01:08:28.944"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:08:28.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:08:28.944" endtime="20211012 01:08:28.946"/>
</kw>
<status status="PASS" starttime="20211012 01:08:25.802" endtime="20211012 01:08:28.946"/>
</kw>
<msg timestamp="20211012 01:08:28.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:08:25.801" endtime="20211012 01:08:28.947"/>
</kw>
<msg timestamp="20211012 01:08:28.948" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211012 01:08:25.800" endtime="20211012 01:08:28.948"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211012 01:08:28.948" endtime="20211012 01:08:28.949"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211012 01:08:23.085" endtime="20211012 01:08:28.950"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:08:28.959" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:08:32.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:08:32.090" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211012 01:08:28.956" endtime="20211012 01:08:32.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:08:32.092" level="INFO">scm</msg>
<status status="PASS" starttime="20211012 01:08:32.092" endtime="20211012 01:08:32.093"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:08:32.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:08:32.093" endtime="20211012 01:08:32.094"/>
</kw>
<status status="PASS" starttime="20211012 01:08:28.955" endtime="20211012 01:08:32.094"/>
</kw>
<msg timestamp="20211012 01:08:32.095" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:08:28.954" endtime="20211012 01:08:32.095"/>
</kw>
<msg timestamp="20211012 01:08:32.095" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20211012 01:08:28.953" endtime="20211012 01:08:32.095"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211012 01:08:32.095" endtime="20211012 01:08:32.096"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:08:32.102" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:08:35.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:08:35.224" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211012 01:08:32.099" endtime="20211012 01:08:35.224"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:08:35.225" level="INFO">scm</msg>
<status status="PASS" starttime="20211012 01:08:35.224" endtime="20211012 01:08:35.225"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:08:35.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:08:35.225" endtime="20211012 01:08:35.226"/>
</kw>
<status status="PASS" starttime="20211012 01:08:32.098" endtime="20211012 01:08:35.227"/>
</kw>
<msg timestamp="20211012 01:08:35.227" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:08:32.098" endtime="20211012 01:08:35.227"/>
</kw>
<msg timestamp="20211012 01:08:35.228" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20211012 01:08:32.097" endtime="20211012 01:08:35.228"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211012 01:08:35.228" endtime="20211012 01:08:35.229"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211012 01:08:28.952" endtime="20211012 01:08:35.229"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:08:35.241" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:08:37.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:08:37.164" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211012 01:08:35.236" endtime="20211012 01:08:37.164"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:08:37.166" level="INFO">om</msg>
<status status="PASS" starttime="20211012 01:08:37.165" endtime="20211012 01:08:37.166"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:08:37.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:08:37.166" endtime="20211012 01:08:37.167"/>
</kw>
<status status="PASS" starttime="20211012 01:08:35.235" endtime="20211012 01:08:37.167"/>
</kw>
<msg timestamp="20211012 01:08:37.167" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:08:35.234" endtime="20211012 01:08:37.168"/>
</kw>
<msg timestamp="20211012 01:08:37.168" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211012 01:08:35.232" endtime="20211012 01:08:37.168"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211012 01:08:37.168" endtime="20211012 01:08:37.169"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211012 01:08:37.169" endtime="20211012 01:08:37.170"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:08:37.174" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:08:38.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:08:38.702" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211012 01:08:37.171" endtime="20211012 01:08:38.702"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:08:38.703" level="INFO">om</msg>
<status status="PASS" starttime="20211012 01:08:38.702" endtime="20211012 01:08:38.703"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:08:38.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:08:38.703" endtime="20211012 01:08:38.704"/>
</kw>
<status status="PASS" starttime="20211012 01:08:37.171" endtime="20211012 01:08:38.704"/>
</kw>
<msg timestamp="20211012 01:08:38.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:08:37.171" endtime="20211012 01:08:38.705"/>
</kw>
<msg timestamp="20211012 01:08:38.705" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211012 01:08:37.170" endtime="20211012 01:08:38.706"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211012 01:08:38.706" endtime="20211012 01:08:38.706"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211012 01:08:38.706" endtime="20211012 01:08:38.707"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211012 01:08:35.230" endtime="20211012 01:08:38.707"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:08:38.718" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:08:41.514" level="INFO">${rc} = 255</msg>
<msg timestamp="20211012 01:08:41.514" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211012 01:08:38.714" endtime="20211012 01:08:41.514"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:08:41.517" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211012 01:08:41.515" endtime="20211012 01:08:41.517"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:08:41.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:08:41.517" endtime="20211012 01:08:41.518"/>
</kw>
<msg timestamp="20211012 01:08:41.519" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211012 01:08:38.712" endtime="20211012 01:08:41.519"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211012 01:08:41.519" endtime="20211012 01:08:41.521"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:08:41.527" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:08:44.931" level="INFO">${rc} = 255</msg>
<msg timestamp="20211012 01:08:44.931" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211012 01:08:41.523" endtime="20211012 01:08:44.931"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:08:44.932" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211012 01:08:44.931" endtime="20211012 01:08:44.932"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:08:44.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:08:44.933" endtime="20211012 01:08:44.933"/>
</kw>
<msg timestamp="20211012 01:08:44.936" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211012 01:08:41.521" endtime="20211012 01:08:44.936"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211012 01:08:44.936" endtime="20211012 01:08:44.936"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211012 01:08:38.709" endtime="20211012 01:08:44.937"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20211012 01:08:23.080" endtime="20211012 01:08:44.941"/>
</suite>
<suite id="s1-s1-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211012 01:08:44.978" level="INFO">${random} = 39646</msg>
<status status="PASS" starttime="20211012 01:08:44.977" endtime="20211012 01:08:44.978"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211012 01:08:44.981" level="INFO">${source} = 39646-source</msg>
<status status="PASS" starttime="20211012 01:08:44.978" endtime="20211012 01:08:44.981"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211012 01:08:44.983" level="INFO">${target} = 39646-target</msg>
<status status="PASS" starttime="20211012 01:08:44.981" endtime="20211012 01:08:44.983"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:08:44.989" level="INFO">Running command 'ozone sh volume create 39646-source 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:08:53.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:08:53.302" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:08:44.985" endtime="20211012 01:08:53.302"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:08:53.303" level="INFO"/>
<status status="PASS" starttime="20211012 01:08:53.303" endtime="20211012 01:08:53.303"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:08:53.304" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:08:53.304" endtime="20211012 01:08:53.304"/>
</kw>
<status status="PASS" starttime="20211012 01:08:44.985" endtime="20211012 01:08:53.305"/>
</kw>
<msg timestamp="20211012 01:08:53.305" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:08:44.984" endtime="20211012 01:08:53.305"/>
</kw>
<status status="PASS" starttime="20211012 01:08:44.984" endtime="20211012 01:08:53.305"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:08:53.310" level="INFO">Running command 'ozone sh volume create 39646-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:09:02.994" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:09:02.994" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:08:53.307" endtime="20211012 01:09:02.994"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:09:02.996" level="INFO"/>
<status status="PASS" starttime="20211012 01:09:02.995" endtime="20211012 01:09:02.996"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:09:02.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:09:02.996" endtime="20211012 01:09:02.997"/>
</kw>
<status status="PASS" starttime="20211012 01:08:53.307" endtime="20211012 01:09:02.997"/>
</kw>
<msg timestamp="20211012 01:09:02.997" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:08:53.306" endtime="20211012 01:09:02.998"/>
</kw>
<status status="PASS" starttime="20211012 01:08:53.306" endtime="20211012 01:09:02.998"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:09:03.005" level="INFO">Running command 'ozone sh bucket create 39646-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:09:11.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:09:11.448" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:09:03.002" endtime="20211012 01:09:11.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:09:11.450" level="INFO"/>
<status status="PASS" starttime="20211012 01:09:11.449" endtime="20211012 01:09:11.450"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:09:11.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:09:11.451" endtime="20211012 01:09:11.452"/>
</kw>
<status status="PASS" starttime="20211012 01:09:03.001" endtime="20211012 01:09:11.452"/>
</kw>
<msg timestamp="20211012 01:09:11.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:09:03.000" endtime="20211012 01:09:11.453"/>
</kw>
<status status="PASS" starttime="20211012 01:09:02.999" endtime="20211012 01:09:11.454"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:09:11.461" level="INFO">Running command 'ozone sh key put 39646-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:12:24.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:12:24.861" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:09:11.458" endtime="20211012 01:12:24.861"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:12:24.863" level="INFO"/>
<status status="PASS" starttime="20211012 01:12:24.862" endtime="20211012 01:12:24.863"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:12:24.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:12:24.863" endtime="20211012 01:12:24.864"/>
</kw>
<status status="PASS" starttime="20211012 01:09:11.457" endtime="20211012 01:12:24.865"/>
</kw>
<msg timestamp="20211012 01:12:24.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:09:11.456" endtime="20211012 01:12:24.865"/>
</kw>
<status status="PASS" starttime="20211012 01:09:11.454" endtime="20211012 01:12:24.865"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:12:24.871" level="INFO">Running command 'ozone sh bucket create 39646-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:12:31.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:12:31.011" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:12:24.867" endtime="20211012 01:12:31.011"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:12:31.013" level="INFO"/>
<status status="PASS" starttime="20211012 01:12:31.012" endtime="20211012 01:12:31.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:12:31.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:12:31.013" endtime="20211012 01:12:31.013"/>
</kw>
<status status="PASS" starttime="20211012 01:12:24.867" endtime="20211012 01:12:31.014"/>
</kw>
<msg timestamp="20211012 01:12:31.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:12:24.866" endtime="20211012 01:12:31.014"/>
</kw>
<status status="PASS" starttime="20211012 01:12:24.866" endtime="20211012 01:12:31.014"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:12:31.019" level="INFO">Running command 'ozone sh bucket link 39646-source/readable-bucket 39646-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:12:39.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:12:39.214" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:12:31.017" endtime="20211012 01:12:39.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:12:39.215" level="INFO"/>
<status status="PASS" starttime="20211012 01:12:39.215" endtime="20211012 01:12:39.215"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:12:39.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:12:39.216" endtime="20211012 01:12:39.216"/>
</kw>
<status status="PASS" starttime="20211012 01:12:31.016" endtime="20211012 01:12:39.216"/>
</kw>
<msg timestamp="20211012 01:12:39.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:12:31.016" endtime="20211012 01:12:39.217"/>
</kw>
<status status="PASS" starttime="20211012 01:12:31.015" endtime="20211012 01:12:39.217"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:12:39.221" level="INFO">Running command 'ozone sh bucket link 39646-source/readable-bucket 39646-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:12:47.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:12:47.343" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:12:39.219" endtime="20211012 01:12:47.343"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:12:47.353" level="INFO"/>
<status status="PASS" starttime="20211012 01:12:47.344" endtime="20211012 01:12:47.353"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:12:47.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:12:47.353" endtime="20211012 01:12:47.354"/>
</kw>
<status status="PASS" starttime="20211012 01:12:39.218" endtime="20211012 01:12:47.354"/>
</kw>
<msg timestamp="20211012 01:12:47.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:12:39.218" endtime="20211012 01:12:47.355"/>
</kw>
<status status="PASS" starttime="20211012 01:12:39.217" endtime="20211012 01:12:47.355"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:12:47.370" level="INFO">Running command 'ozone sh bucket link 39646-source/unreadable-bucket 39646-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:12:56.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:12:56.084" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:12:47.364" endtime="20211012 01:12:56.084"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:12:56.085" level="INFO"/>
<status status="PASS" starttime="20211012 01:12:56.084" endtime="20211012 01:12:56.085"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:12:56.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:12:56.085" endtime="20211012 01:12:56.086"/>
</kw>
<status status="PASS" starttime="20211012 01:12:47.363" endtime="20211012 01:12:56.087"/>
</kw>
<msg timestamp="20211012 01:12:56.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:12:47.363" endtime="20211012 01:12:56.087"/>
</kw>
<status status="PASS" starttime="20211012 01:12:47.355" endtime="20211012 01:12:56.087"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:12:56.092" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 39646-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:13:03.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:13:03.287" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211012 01:12:56.089" endtime="20211012 01:13:03.287"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:13:03.288" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211012 01:13:03.288" endtime="20211012 01:13:03.288"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:13:03.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:13:03.289" endtime="20211012 01:13:03.289"/>
</kw>
<status status="PASS" starttime="20211012 01:12:56.088" endtime="20211012 01:13:03.290"/>
</kw>
<msg timestamp="20211012 01:13:03.290" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:12:56.088" endtime="20211012 01:13:03.290"/>
</kw>
<status status="PASS" starttime="20211012 01:12:56.087" endtime="20211012 01:13:03.290"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:13:03.294" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 39646-source 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:13:08.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:13:08.904" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211012 01:13:03.292" endtime="20211012 01:13:08.904"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:13:08.905" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211012 01:13:08.904" endtime="20211012 01:13:08.905"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:13:08.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:13:08.906" endtime="20211012 01:13:08.906"/>
</kw>
<status status="PASS" starttime="20211012 01:13:03.291" endtime="20211012 01:13:08.906"/>
</kw>
<msg timestamp="20211012 01:13:08.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:13:03.291" endtime="20211012 01:13:08.907"/>
</kw>
<status status="PASS" starttime="20211012 01:13:03.290" endtime="20211012 01:13:08.907"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:13:08.913" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 39646-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:13:14.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:13:14.947" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211012 01:13:08.909" endtime="20211012 01:13:14.947"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:13:14.949" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211012 01:13:14.948" endtime="20211012 01:13:14.949"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:13:14.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:13:14.949" endtime="20211012 01:13:14.951"/>
</kw>
<status status="PASS" starttime="20211012 01:13:08.908" endtime="20211012 01:13:14.951"/>
</kw>
<msg timestamp="20211012 01:13:14.951" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:13:08.908" endtime="20211012 01:13:14.952"/>
</kw>
<status status="PASS" starttime="20211012 01:13:08.907" endtime="20211012 01:13:14.952"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:13:14.959" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 39646-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:13:23.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:13:23.208" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211012 01:13:14.956" endtime="20211012 01:13:23.208"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:13:23.209" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211012 01:13:23.208" endtime="20211012 01:13:23.209"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:13:23.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:13:23.210" endtime="20211012 01:13:23.210"/>
</kw>
<status status="PASS" starttime="20211012 01:13:14.955" endtime="20211012 01:13:23.210"/>
</kw>
<msg timestamp="20211012 01:13:23.210" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:13:14.954" endtime="20211012 01:13:23.211"/>
</kw>
<status status="PASS" starttime="20211012 01:13:14.953" endtime="20211012 01:13:23.211"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:13:23.215" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 39646-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:13:31.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:13:31.448" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211012 01:13:23.212" endtime="20211012 01:13:31.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:13:31.450" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211012 01:13:31.448" endtime="20211012 01:13:31.450"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:13:31.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:13:31.450" endtime="20211012 01:13:31.451"/>
</kw>
<status status="PASS" starttime="20211012 01:13:23.212" endtime="20211012 01:13:31.451"/>
</kw>
<msg timestamp="20211012 01:13:31.452" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:13:23.211" endtime="20211012 01:13:31.452"/>
</kw>
<status status="PASS" starttime="20211012 01:13:23.211" endtime="20211012 01:13:31.452"/>
</kw>
<status status="PASS" starttime="20211012 01:09:02.999" endtime="20211012 01:13:31.452"/>
</kw>
<status status="PASS" starttime="20211012 01:09:02.998" endtime="20211012 01:13:31.452"/>
</kw>
<status status="PASS" starttime="20211012 01:08:44.976" endtime="20211012 01:13:31.453"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:13:31.459" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:13:31.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:13:31.465" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211012 01:13:31.456" endtime="20211012 01:13:31.465"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:13:31.467" level="INFO">scm</msg>
<status status="PASS" starttime="20211012 01:13:31.466" endtime="20211012 01:13:31.467"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:13:31.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:13:31.467" endtime="20211012 01:13:31.470"/>
</kw>
<status status="PASS" starttime="20211012 01:13:31.456" endtime="20211012 01:13:31.471"/>
</kw>
<msg timestamp="20211012 01:13:31.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:13:31.455" endtime="20211012 01:13:31.471"/>
</kw>
<msg timestamp="20211012 01:13:31.474" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211012 01:13:31.455" endtime="20211012 01:13:31.474"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211012 01:13:31.476" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211012 01:13:31.474" endtime="20211012 01:13:31.476"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:13:31.484" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:13:31.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:13:31.525" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:13:31.482" endtime="20211012 01:13:31.525"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:13:31.526" level="INFO"/>
<status status="PASS" starttime="20211012 01:13:31.526" endtime="20211012 01:13:31.527"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:13:31.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:13:31.527" endtime="20211012 01:13:31.527"/>
</kw>
<status status="PASS" starttime="20211012 01:13:31.480" endtime="20211012 01:13:31.528"/>
</kw>
<msg timestamp="20211012 01:13:31.528" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:13:31.479" endtime="20211012 01:13:31.528"/>
</kw>
<status status="PASS" starttime="20211012 01:13:31.477" endtime="20211012 01:13:31.528"/>
</kw>
<status status="PASS" starttime="20211012 01:13:31.476" endtime="20211012 01:13:31.528"/>
</kw>
<status status="PASS" starttime="20211012 01:13:31.454" endtime="20211012 01:13:31.529"/>
</kw>
<status status="PASS" starttime="20211012 01:13:31.454" endtime="20211012 01:13:31.529"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:13:31.534" level="INFO">Running command 'ozone sh bucket link 39646-source/no-such-bucket 39646-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:13:38.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:13:38.268" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:13:31.531" endtime="20211012 01:13:38.268"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:13:38.270" level="INFO"/>
<status status="PASS" starttime="20211012 01:13:38.269" endtime="20211012 01:13:38.270"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:13:38.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:13:38.270" endtime="20211012 01:13:38.271"/>
</kw>
<status status="PASS" starttime="20211012 01:13:31.530" endtime="20211012 01:13:38.271"/>
</kw>
<msg timestamp="20211012 01:13:38.271" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:13:31.530" endtime="20211012 01:13:38.272"/>
</kw>
<status status="PASS" starttime="20211012 01:13:31.529" endtime="20211012 01:13:38.272"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:13:38.276" level="INFO">Running command 'ozone sh key list 39646-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:13:45.805" level="INFO">${rc} = 255</msg>
<msg timestamp="20211012 01:13:45.805" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20211012 01:13:38.273" endtime="20211012 01:13:45.805"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:13:45.807" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20211012 01:13:45.806" endtime="20211012 01:13:45.807"/>
</kw>
<msg timestamp="20211012 01:13:45.807" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20211012 01:13:38.272" endtime="20211012 01:13:45.807"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211012 01:13:45.808" endtime="20211012 01:13:45.808"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211012 01:13:31.453" endtime="20211012 01:13:45.809"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:13:45.819" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:13:45.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:13:45.824" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211012 01:13:45.816" endtime="20211012 01:13:45.824"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:13:45.827" level="INFO">scm</msg>
<status status="PASS" starttime="20211012 01:13:45.825" endtime="20211012 01:13:45.827"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:13:45.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:13:45.827" endtime="20211012 01:13:45.829"/>
</kw>
<status status="PASS" starttime="20211012 01:13:45.816" endtime="20211012 01:13:45.829"/>
</kw>
<msg timestamp="20211012 01:13:45.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:13:45.815" endtime="20211012 01:13:45.829"/>
</kw>
<msg timestamp="20211012 01:13:45.830" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211012 01:13:45.815" endtime="20211012 01:13:45.830"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211012 01:13:45.831" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211012 01:13:45.830" endtime="20211012 01:13:45.831"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:13:45.837" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:13:45.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:13:45.848" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:13:45.834" endtime="20211012 01:13:45.848"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:13:45.849" level="INFO"/>
<status status="PASS" starttime="20211012 01:13:45.848" endtime="20211012 01:13:45.849"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:13:45.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:13:45.850" endtime="20211012 01:13:45.851"/>
</kw>
<status status="PASS" starttime="20211012 01:13:45.833" endtime="20211012 01:13:45.851"/>
</kw>
<msg timestamp="20211012 01:13:45.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:13:45.833" endtime="20211012 01:13:45.851"/>
</kw>
<status status="PASS" starttime="20211012 01:13:45.832" endtime="20211012 01:13:45.852"/>
</kw>
<status status="PASS" starttime="20211012 01:13:45.831" endtime="20211012 01:13:45.852"/>
</kw>
<status status="PASS" starttime="20211012 01:13:45.814" endtime="20211012 01:13:45.852"/>
</kw>
<status status="PASS" starttime="20211012 01:13:45.813" endtime="20211012 01:13:45.852"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:13:45.857" level="INFO">Running command 'ozone sh bucket link 39646-source/bucket1 39646-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:13:54.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:13:54.027" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:13:45.855" endtime="20211012 01:13:54.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:13:54.029" level="INFO"/>
<status status="PASS" starttime="20211012 01:13:54.028" endtime="20211012 01:13:54.029"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:13:54.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:13:54.029" endtime="20211012 01:13:54.030"/>
</kw>
<status status="PASS" starttime="20211012 01:13:45.854" endtime="20211012 01:13:54.030"/>
</kw>
<msg timestamp="20211012 01:13:54.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:13:45.854" endtime="20211012 01:13:54.030"/>
</kw>
<status status="PASS" starttime="20211012 01:13:45.853" endtime="20211012 01:13:54.031"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:13:54.036" level="INFO">Running command 'ozone sh bucket create 39646-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:14:01.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:14:01.289" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:13:54.033" endtime="20211012 01:14:01.290"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:14:01.294" level="INFO"/>
<status status="PASS" starttime="20211012 01:14:01.291" endtime="20211012 01:14:01.294"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:14:01.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:14:01.294" endtime="20211012 01:14:01.295"/>
</kw>
<status status="PASS" starttime="20211012 01:13:54.032" endtime="20211012 01:14:01.295"/>
</kw>
<msg timestamp="20211012 01:14:01.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:13:54.032" endtime="20211012 01:14:01.296"/>
</kw>
<status status="PASS" starttime="20211012 01:13:54.031" endtime="20211012 01:14:01.296"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:14:01.303" level="INFO">Running command 'ozone sh key put 39646-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:15:45.812" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20211012 01:14:01.300" endtime="20211012 01:15:45.813"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211012 01:15:45.814" endtime="20211012 01:15:45.814"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211012 01:15:45.814" endtime="20211012 01:15:45.814"/>
</kw>
<status status="FAIL" starttime="20211012 01:14:01.299" endtime="20211012 01:15:45.814"/>
</kw>
<msg timestamp="20211012 01:15:45.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211012 01:14:01.299" endtime="20211012 01:15:45.815"/>
</kw>
<status status="FAIL" starttime="20211012 01:14:01.296" endtime="20211012 01:15:45.815"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<status status="NOT RUN" starttime="20211012 01:15:45.815" endtime="20211012 01:15:45.815"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211012 01:13:45.810" endtime="20211012 01:15:45.816">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:15:45.826" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:15:45.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:15:45.831" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211012 01:15:45.823" endtime="20211012 01:15:45.831"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:15:45.833" level="INFO">scm</msg>
<status status="PASS" starttime="20211012 01:15:45.832" endtime="20211012 01:15:45.834"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:15:45.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:15:45.834" endtime="20211012 01:15:45.836"/>
</kw>
<status status="PASS" starttime="20211012 01:15:45.822" endtime="20211012 01:15:45.836"/>
</kw>
<msg timestamp="20211012 01:15:45.837" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:15:45.822" endtime="20211012 01:15:45.837"/>
</kw>
<msg timestamp="20211012 01:15:45.838" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211012 01:15:45.821" endtime="20211012 01:15:45.838"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211012 01:15:45.841" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211012 01:15:45.840" endtime="20211012 01:15:45.841"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:15:45.851" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:15:45.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:15:45.865" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:15:45.848" endtime="20211012 01:15:45.865"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:15:45.868" level="INFO"/>
<status status="PASS" starttime="20211012 01:15:45.866" endtime="20211012 01:15:45.868"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:15:45.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:15:45.868" endtime="20211012 01:15:45.870"/>
</kw>
<status status="PASS" starttime="20211012 01:15:45.846" endtime="20211012 01:15:45.870"/>
</kw>
<msg timestamp="20211012 01:15:45.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:15:45.845" endtime="20211012 01:15:45.870"/>
</kw>
<status status="PASS" starttime="20211012 01:15:45.843" endtime="20211012 01:15:45.871"/>
</kw>
<status status="PASS" starttime="20211012 01:15:45.842" endtime="20211012 01:15:45.871"/>
</kw>
<status status="PASS" starttime="20211012 01:15:45.820" endtime="20211012 01:15:45.871"/>
</kw>
<status status="PASS" starttime="20211012 01:15:45.819" endtime="20211012 01:15:45.871"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:15:45.876" level="INFO">Running command 'ozone sh key put 39646-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:17:45.819" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20211012 01:15:45.874" endtime="20211012 01:17:45.819"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211012 01:17:45.821" endtime="20211012 01:17:45.821"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211012 01:17:45.821" endtime="20211012 01:17:45.821"/>
</kw>
<status status="FAIL" starttime="20211012 01:15:45.873" endtime="20211012 01:17:45.822"/>
</kw>
<msg timestamp="20211012 01:17:45.822" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211012 01:15:45.872" endtime="20211012 01:17:45.822"/>
</kw>
<status status="FAIL" starttime="20211012 01:15:45.872" endtime="20211012 01:17:45.822"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211012 01:17:45.823" endtime="20211012 01:17:45.823"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211012 01:15:45.818" endtime="20211012 01:17:45.823">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:17:45.832" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:17:45.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:17:45.838" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211012 01:17:45.830" endtime="20211012 01:17:45.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:17:45.840" level="INFO">scm</msg>
<status status="PASS" starttime="20211012 01:17:45.839" endtime="20211012 01:17:45.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:17:45.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:17:45.840" endtime="20211012 01:17:45.842"/>
</kw>
<status status="PASS" starttime="20211012 01:17:45.829" endtime="20211012 01:17:45.843"/>
</kw>
<msg timestamp="20211012 01:17:45.843" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:17:45.828" endtime="20211012 01:17:45.843"/>
</kw>
<msg timestamp="20211012 01:17:45.844" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211012 01:17:45.828" endtime="20211012 01:17:45.844"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211012 01:17:45.845" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211012 01:17:45.844" endtime="20211012 01:17:45.845"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:17:45.853" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:17:45.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:17:45.863" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:17:45.850" endtime="20211012 01:17:45.863"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:17:45.865" level="INFO"/>
<status status="PASS" starttime="20211012 01:17:45.864" endtime="20211012 01:17:45.865"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:17:45.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:17:45.866" endtime="20211012 01:17:45.867"/>
</kw>
<status status="PASS" starttime="20211012 01:17:45.848" endtime="20211012 01:17:45.867"/>
</kw>
<msg timestamp="20211012 01:17:45.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:17:45.848" endtime="20211012 01:17:45.867"/>
</kw>
<status status="PASS" starttime="20211012 01:17:45.847" endtime="20211012 01:17:45.868"/>
</kw>
<status status="PASS" starttime="20211012 01:17:45.846" endtime="20211012 01:17:45.868"/>
</kw>
<status status="PASS" starttime="20211012 01:17:45.827" endtime="20211012 01:17:45.868"/>
</kw>
<status status="PASS" starttime="20211012 01:17:45.827" endtime="20211012 01:17:45.868"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:17:45.873" level="INFO">Running command 'ozone sh key list 39646-target/link1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:17:56.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:17:56.247" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20211012 01:17:45.871" endtime="20211012 01:17:56.247"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:17:56.249" level="INFO">key1</msg>
<status status="PASS" starttime="20211012 01:17:56.247" endtime="20211012 01:17:56.249"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:17:56.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:17:56.249" endtime="20211012 01:17:56.251"/>
</kw>
<status status="PASS" starttime="20211012 01:17:45.870" endtime="20211012 01:17:56.252"/>
</kw>
<msg timestamp="20211012 01:17:56.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:17:45.869" endtime="20211012 01:17:56.252"/>
</kw>
<msg timestamp="20211012 01:17:56.253" level="INFO">${target_list} = key1</msg>
<status status="PASS" starttime="20211012 01:17:45.869" endtime="20211012 01:17:56.253"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:17:56.260" level="INFO">Running command 'ozone sh key list 39646-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:18:04.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:18:04.639" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20211012 01:17:56.256" endtime="20211012 01:18:04.639"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:18:04.641" level="INFO">key1</msg>
<status status="PASS" starttime="20211012 01:18:04.640" endtime="20211012 01:18:04.641"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:18:04.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:18:04.641" endtime="20211012 01:18:04.642"/>
</kw>
<status status="PASS" starttime="20211012 01:17:56.255" endtime="20211012 01:18:04.643"/>
</kw>
<msg timestamp="20211012 01:18:04.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:17:56.254" endtime="20211012 01:18:04.644"/>
</kw>
<msg timestamp="20211012 01:18:04.644" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20211012 01:17:56.253" endtime="20211012 01:18:04.644"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211012 01:18:04.644" endtime="20211012 01:18:04.645"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211012 01:18:04.646" endtime="20211012 01:18:04.646"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20211012 01:18:04.647" level="FAIL">'key1' does not contain 'key2'</msg>
<status status="FAIL" starttime="20211012 01:18:04.647" endtime="20211012 01:18:04.647"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211012 01:17:45.826" endtime="20211012 01:18:04.648">'key1' does not contain 'key2'</status>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:18:04.657" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:18:04.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:18:04.663" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211012 01:18:04.654" endtime="20211012 01:18:04.664"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:18:04.666" level="INFO">scm</msg>
<status status="PASS" starttime="20211012 01:18:04.664" endtime="20211012 01:18:04.666"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:18:04.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:18:04.666" endtime="20211012 01:18:04.668"/>
</kw>
<status status="PASS" starttime="20211012 01:18:04.653" endtime="20211012 01:18:04.668"/>
</kw>
<msg timestamp="20211012 01:18:04.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:18:04.652" endtime="20211012 01:18:04.669"/>
</kw>
<msg timestamp="20211012 01:18:04.669" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211012 01:18:04.651" endtime="20211012 01:18:04.669"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211012 01:18:04.671" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211012 01:18:04.670" endtime="20211012 01:18:04.671"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:18:04.678" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:18:04.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:18:04.688" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:18:04.676" endtime="20211012 01:18:04.688"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:18:04.690" level="INFO"/>
<status status="PASS" starttime="20211012 01:18:04.688" endtime="20211012 01:18:04.690"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:18:04.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:18:04.690" endtime="20211012 01:18:04.692"/>
</kw>
<status status="PASS" starttime="20211012 01:18:04.674" endtime="20211012 01:18:04.692"/>
</kw>
<msg timestamp="20211012 01:18:04.693" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:18:04.674" endtime="20211012 01:18:04.693"/>
</kw>
<status status="PASS" starttime="20211012 01:18:04.672" endtime="20211012 01:18:04.694"/>
</kw>
<status status="PASS" starttime="20211012 01:18:04.671" endtime="20211012 01:18:04.694"/>
</kw>
<status status="PASS" starttime="20211012 01:18:04.650" endtime="20211012 01:18:04.694"/>
</kw>
<status status="PASS" starttime="20211012 01:18:04.650" endtime="20211012 01:18:04.695"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:18:04.700" level="INFO">Running command 'ozone sh key delete 39646-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:18:13.509" level="INFO">${rc} = 255</msg>
<msg timestamp="20211012 01:18:13.509" level="INFO">${output} = KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20211012 01:18:04.698" endtime="20211012 01:18:13.509"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:18:13.511" level="INFO">KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20211012 01:18:13.510" endtime="20211012 01:18:13.511"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:18:13.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20211012 01:18:13.512" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20211012 01:18:13.511" endtime="20211012 01:18:13.512"/>
</kw>
<status status="FAIL" starttime="20211012 01:18:04.697" endtime="20211012 01:18:13.512"/>
</kw>
<msg timestamp="20211012 01:18:13.512" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211012 01:18:04.696" endtime="20211012 01:18:13.512"/>
</kw>
<status status="FAIL" starttime="20211012 01:18:04.695" endtime="20211012 01:18:13.513"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211012 01:18:13.513" endtime="20211012 01:18:13.513"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211012 01:18:13.513" endtime="20211012 01:18:13.514"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211012 01:18:04.649" endtime="20211012 01:18:13.514">255 != 0</status>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:18:13.524" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:18:13.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:18:13.529" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211012 01:18:13.520" endtime="20211012 01:18:13.529"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:18:13.530" level="INFO">scm</msg>
<status status="PASS" starttime="20211012 01:18:13.530" endtime="20211012 01:18:13.531"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:18:13.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:18:13.531" endtime="20211012 01:18:13.531"/>
</kw>
<status status="PASS" starttime="20211012 01:18:13.519" endtime="20211012 01:18:13.532"/>
</kw>
<msg timestamp="20211012 01:18:13.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:18:13.518" endtime="20211012 01:18:13.532"/>
</kw>
<msg timestamp="20211012 01:18:13.532" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211012 01:18:13.518" endtime="20211012 01:18:13.532"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211012 01:18:13.534" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211012 01:18:13.533" endtime="20211012 01:18:13.534"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:18:13.539" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:18:13.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:18:13.550" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:18:13.537" endtime="20211012 01:18:13.550"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:18:13.551" level="INFO"/>
<status status="PASS" starttime="20211012 01:18:13.550" endtime="20211012 01:18:13.551"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:18:13.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:18:13.551" endtime="20211012 01:18:13.552"/>
</kw>
<status status="PASS" starttime="20211012 01:18:13.536" endtime="20211012 01:18:13.552"/>
</kw>
<msg timestamp="20211012 01:18:13.553" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:18:13.535" endtime="20211012 01:18:13.553"/>
</kw>
<status status="PASS" starttime="20211012 01:18:13.535" endtime="20211012 01:18:13.553"/>
</kw>
<status status="PASS" starttime="20211012 01:18:13.534" endtime="20211012 01:18:13.553"/>
</kw>
<status status="PASS" starttime="20211012 01:18:13.517" endtime="20211012 01:18:13.555"/>
</kw>
<status status="PASS" starttime="20211012 01:18:13.516" endtime="20211012 01:18:13.556"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:18:13.561" level="INFO">Running command 'ozone sh bucket list 39646-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:18:21.764" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:18:21.764" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "39646-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "202...</msg>
<status status="PASS" starttime="20211012 01:18:13.558" endtime="20211012 01:18:21.764"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:18:21.765" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "39646-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-12T01:13:38.060Z",
  "modificationTime" : "2021-10-12T01:13:38.060Z",
  "sourceVolume" : "39646-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "39646-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-12T01:12:55.994Z",
  "modificationTime" : "2021-10-12T01:13:31.134Z",
  "sourceVolume" : "39646-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "39646-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-12T01:13:53.934Z",
  "modificationTime" : "2021-10-12T01:13:53.934Z",
  "sourceVolume" : "39646-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "39646-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-12T01:12:39.127Z",
  "modificationTime" : "2021-10-12T01:13:23.116Z",
  "sourceVolume" : "39646-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "39646-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-12T01:12:47.269Z",
  "modificationTime" : "2021-10-12T01:12:47.269Z",
  "sourceVolume" : "39646-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
} ]</msg>
<status status="PASS" starttime="20211012 01:18:21.764" endtime="20211012 01:18:21.766"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:18:21.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:18:21.766" endtime="20211012 01:18:21.767"/>
</kw>
<status status="PASS" starttime="20211012 01:18:13.557" endtime="20211012 01:18:21.767"/>
</kw>
<msg timestamp="20211012 01:18:21.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:18:13.557" endtime="20211012 01:18:21.767"/>
</kw>
<msg timestamp="20211012 01:18:21.768" level="INFO">${result} = [ {
  "metadata" : { },
  "volumeName" : "39646-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "202...</msg>
<status status="PASS" starttime="20211012 01:18:13.556" endtime="20211012 01:18:21.768"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211012 01:18:21.768" endtime="20211012 01:18:21.769"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211012 01:18:21.769" endtime="20211012 01:18:21.769"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211012 01:18:13.515" endtime="20211012 01:18:21.770"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:18:21.778" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:18:21.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:18:21.782" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211012 01:18:21.775" endtime="20211012 01:18:21.782"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:18:21.783" level="INFO">scm</msg>
<status status="PASS" starttime="20211012 01:18:21.782" endtime="20211012 01:18:21.783"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:18:21.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:18:21.783" endtime="20211012 01:18:21.784"/>
</kw>
<status status="PASS" starttime="20211012 01:18:21.774" endtime="20211012 01:18:21.785"/>
</kw>
<msg timestamp="20211012 01:18:21.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:18:21.774" endtime="20211012 01:18:21.785"/>
</kw>
<msg timestamp="20211012 01:18:21.785" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211012 01:18:21.774" endtime="20211012 01:18:21.785"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211012 01:18:21.786" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211012 01:18:21.785" endtime="20211012 01:18:21.786"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:18:21.791" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:18:21.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:18:21.800" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:18:21.789" endtime="20211012 01:18:21.800"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:18:21.802" level="INFO"/>
<status status="PASS" starttime="20211012 01:18:21.801" endtime="20211012 01:18:21.802"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:18:21.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:18:21.803" endtime="20211012 01:18:21.804"/>
</kw>
<status status="PASS" starttime="20211012 01:18:21.788" endtime="20211012 01:18:21.804"/>
</kw>
<msg timestamp="20211012 01:18:21.804" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:18:21.788" endtime="20211012 01:18:21.804"/>
</kw>
<status status="PASS" starttime="20211012 01:18:21.787" endtime="20211012 01:18:21.805"/>
</kw>
<status status="PASS" starttime="20211012 01:18:21.786" endtime="20211012 01:18:21.805"/>
</kw>
<status status="PASS" starttime="20211012 01:18:21.773" endtime="20211012 01:18:21.805"/>
</kw>
<status status="PASS" starttime="20211012 01:18:21.772" endtime="20211012 01:18:21.805"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:18:21.810" level="INFO">Running command 'ozone sh bucket info 39646-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:18:28.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:18:28.468" level="INFO">${output} = {
  "volumeName" : "39646-target",
  "bucketName" : "link1",
  "sourceVolume" : "39646-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-10-12T01:13:53.934Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20211012 01:18:21.808" endtime="20211012 01:18:28.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:18:28.470" level="INFO">{
  "volumeName" : "39646-target",
  "bucketName" : "link1",
  "sourceVolume" : "39646-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-10-12T01:13:53.934Z",
  "modificationTime" : "2021-10-12T01:13:53.934Z"
}</msg>
<status status="PASS" starttime="20211012 01:18:28.469" endtime="20211012 01:18:28.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:18:28.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:18:28.471" endtime="20211012 01:18:28.472"/>
</kw>
<status status="PASS" starttime="20211012 01:18:21.807" endtime="20211012 01:18:28.473"/>
</kw>
<msg timestamp="20211012 01:18:28.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:18:21.806" endtime="20211012 01:18:28.474"/>
</kw>
<msg timestamp="20211012 01:18:28.474" level="INFO">${result} = {
  "volumeName" : "39646-target",
  "bucketName" : "link1",
  "sourceVolume" : "39646-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-10-12T01:13:53.934Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20211012 01:18:21.806" endtime="20211012 01:18:28.475"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${source}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211012 01:18:28.475" endtime="20211012 01:18:28.476"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bucket1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211012 01:18:28.476" endtime="20211012 01:18:28.477"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${target}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211012 01:18:28.478" endtime="20211012 01:18:28.479"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211012 01:18:28.479" endtime="20211012 01:18:28.480"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>modificationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211012 01:18:28.480" endtime="20211012 01:18:28.481"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211012 01:18:28.482" endtime="20211012 01:18:28.482"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>metadata</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211012 01:18:28.483" endtime="20211012 01:18:28.484"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211012 01:18:21.771" endtime="20211012 01:18:28.484"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:18:28.499" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:18:28.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:18:28.504" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211012 01:18:28.494" endtime="20211012 01:18:28.504"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:18:28.506" level="INFO">scm</msg>
<status status="PASS" starttime="20211012 01:18:28.505" endtime="20211012 01:18:28.506"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:18:28.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:18:28.507" endtime="20211012 01:18:28.508"/>
</kw>
<status status="PASS" starttime="20211012 01:18:28.492" endtime="20211012 01:18:28.509"/>
</kw>
<msg timestamp="20211012 01:18:28.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:18:28.491" endtime="20211012 01:18:28.509"/>
</kw>
<msg timestamp="20211012 01:18:28.510" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211012 01:18:28.490" endtime="20211012 01:18:28.510"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211012 01:18:28.512" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211012 01:18:28.510" endtime="20211012 01:18:28.512"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:18:28.519" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:18:28.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:18:28.531" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:18:28.516" endtime="20211012 01:18:28.531"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:18:28.532" level="INFO"/>
<status status="PASS" starttime="20211012 01:18:28.531" endtime="20211012 01:18:28.532"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:18:28.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:18:28.532" endtime="20211012 01:18:28.533"/>
</kw>
<status status="PASS" starttime="20211012 01:18:28.515" endtime="20211012 01:18:28.534"/>
</kw>
<msg timestamp="20211012 01:18:28.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:18:28.514" endtime="20211012 01:18:28.534"/>
</kw>
<status status="PASS" starttime="20211012 01:18:28.513" endtime="20211012 01:18:28.535"/>
</kw>
<status status="PASS" starttime="20211012 01:18:28.512" endtime="20211012 01:18:28.535"/>
</kw>
<status status="PASS" starttime="20211012 01:18:28.489" endtime="20211012 01:18:28.536"/>
</kw>
<status status="PASS" starttime="20211012 01:18:28.488" endtime="20211012 01:18:28.536"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:18:28.544" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 39646-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:18:37.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:18:37.136" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211012 01:18:28.540" endtime="20211012 01:18:37.136"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:18:37.139" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211012 01:18:37.137" endtime="20211012 01:18:37.139"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:18:37.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:18:37.140" endtime="20211012 01:18:37.141"/>
</kw>
<status status="PASS" starttime="20211012 01:18:28.539" endtime="20211012 01:18:37.142"/>
</kw>
<msg timestamp="20211012 01:18:37.142" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:18:28.538" endtime="20211012 01:18:37.142"/>
</kw>
<status status="PASS" starttime="20211012 01:18:28.536" endtime="20211012 01:18:37.143"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:18:37.152" level="INFO">Running command 'ozone sh bucket getacl 39646-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:18:46.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:18:46.057" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20211012 01:18:37.149" endtime="20211012 01:18:46.057"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:18:46.060" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20211012 01:18:46.059" endtime="20211012 01:18:46.060"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:18:46.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:18:46.060" endtime="20211012 01:18:46.061"/>
</kw>
<status status="PASS" starttime="20211012 01:18:37.148" endtime="20211012 01:18:46.061"/>
</kw>
<msg timestamp="20211012 01:18:46.061" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:18:37.147" endtime="20211012 01:18:46.062"/>
</kw>
<msg timestamp="20211012 01:18:46.062" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20211012 01:18:37.145" endtime="20211012 01:18:46.062"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211012 01:18:46.062" endtime="20211012 01:18:46.063"/>
</kw>
<status status="PASS" starttime="20211012 01:18:37.143" endtime="20211012 01:18:46.063"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:18:46.071" level="INFO">Running command 'ozone sh bucket getacl 39646-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:18:54.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:18:54.351" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:18:46.068" endtime="20211012 01:18:54.351"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:18:54.356" level="INFO"/>
<status status="PASS" starttime="20211012 01:18:54.352" endtime="20211012 01:18:54.356"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:18:54.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:18:54.357" endtime="20211012 01:18:54.358"/>
</kw>
<status status="PASS" starttime="20211012 01:18:46.067" endtime="20211012 01:18:54.359"/>
</kw>
<msg timestamp="20211012 01:18:54.359" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:18:46.067" endtime="20211012 01:18:54.359"/>
</kw>
<msg timestamp="20211012 01:18:54.360" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20211012 01:18:46.065" endtime="20211012 01:18:54.360"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211012 01:18:54.360" endtime="20211012 01:18:54.361"/>
</kw>
<status status="PASS" starttime="20211012 01:18:46.063" endtime="20211012 01:18:54.361"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:18:54.368" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 39646-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:19:02.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:19:02.743" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211012 01:18:54.365" endtime="20211012 01:19:02.743"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:19:02.744" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211012 01:19:02.743" endtime="20211012 01:19:02.744"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:19:02.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:19:02.745" endtime="20211012 01:19:02.746"/>
</kw>
<status status="PASS" starttime="20211012 01:18:54.364" endtime="20211012 01:19:02.747"/>
</kw>
<msg timestamp="20211012 01:19:02.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:18:54.363" endtime="20211012 01:19:02.747"/>
</kw>
<status status="PASS" starttime="20211012 01:18:54.362" endtime="20211012 01:19:02.748"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:19:02.761" level="INFO">Running command 'ozone sh bucket getacl 39646-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:19:10.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:19:10.943" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:19:02.758" endtime="20211012 01:19:10.943"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:19:10.945" level="INFO"/>
<status status="PASS" starttime="20211012 01:19:10.944" endtime="20211012 01:19:10.945"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:19:10.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:19:10.946" endtime="20211012 01:19:10.947"/>
</kw>
<status status="PASS" starttime="20211012 01:19:02.756" endtime="20211012 01:19:10.948"/>
</kw>
<msg timestamp="20211012 01:19:10.948" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:19:02.755" endtime="20211012 01:19:10.948"/>
</kw>
<msg timestamp="20211012 01:19:10.949" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20211012 01:19:02.752" endtime="20211012 01:19:10.949"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211012 01:19:10.949" endtime="20211012 01:19:10.950"/>
</kw>
<status status="PASS" starttime="20211012 01:19:02.748" endtime="20211012 01:19:10.950"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:19:10.960" level="INFO">Running command 'ozone sh bucket getacl 39646-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:19:19.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:19:19.272" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20211012 01:19:10.956" endtime="20211012 01:19:19.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:19:19.275" level="INFO">READ</msg>
<status status="PASS" starttime="20211012 01:19:19.273" endtime="20211012 01:19:19.275"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:19:19.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:19:19.276" endtime="20211012 01:19:19.277"/>
</kw>
<status status="PASS" starttime="20211012 01:19:10.955" endtime="20211012 01:19:19.277"/>
</kw>
<msg timestamp="20211012 01:19:19.278" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:19:10.954" endtime="20211012 01:19:19.278"/>
</kw>
<msg timestamp="20211012 01:19:19.278" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20211012 01:19:10.952" endtime="20211012 01:19:19.278"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211012 01:19:19.279" endtime="20211012 01:19:19.280"/>
</kw>
<status status="PASS" starttime="20211012 01:19:10.951" endtime="20211012 01:19:19.280"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211012 01:18:28.486" endtime="20211012 01:19:19.282"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:19:19.293" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:19:19.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:19:19.297" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211012 01:19:19.290" endtime="20211012 01:19:19.298"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:19:19.300" level="INFO">scm</msg>
<status status="PASS" starttime="20211012 01:19:19.298" endtime="20211012 01:19:19.300"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:19:19.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:19:19.300" endtime="20211012 01:19:19.300"/>
</kw>
<status status="PASS" starttime="20211012 01:19:19.289" endtime="20211012 01:19:19.301"/>
</kw>
<msg timestamp="20211012 01:19:19.301" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:19:19.288" endtime="20211012 01:19:19.302"/>
</kw>
<msg timestamp="20211012 01:19:19.302" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211012 01:19:19.287" endtime="20211012 01:19:19.302"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211012 01:19:19.304" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211012 01:19:19.302" endtime="20211012 01:19:19.304"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:19:19.309" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:19:19.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:19:19.349" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:19:19.307" endtime="20211012 01:19:19.349"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:19:19.351" level="INFO"/>
<status status="PASS" starttime="20211012 01:19:19.350" endtime="20211012 01:19:19.351"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:19:19.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:19:19.351" endtime="20211012 01:19:19.352"/>
</kw>
<status status="PASS" starttime="20211012 01:19:19.307" endtime="20211012 01:19:19.352"/>
</kw>
<msg timestamp="20211012 01:19:19.352" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:19:19.306" endtime="20211012 01:19:19.353"/>
</kw>
<status status="PASS" starttime="20211012 01:19:19.305" endtime="20211012 01:19:19.353"/>
</kw>
<status status="PASS" starttime="20211012 01:19:19.304" endtime="20211012 01:19:19.353"/>
</kw>
<status status="PASS" starttime="20211012 01:19:19.286" endtime="20211012 01:19:19.353"/>
</kw>
<status status="PASS" starttime="20211012 01:19:19.285" endtime="20211012 01:19:19.353"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:19:19.359" level="INFO">Running command 'ozone sh bucket link 39646-source/bucket2 39646-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:19:25.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:19:25.955" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:19:19.356" endtime="20211012 01:19:25.956"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:19:25.958" level="INFO"/>
<status status="PASS" starttime="20211012 01:19:25.956" endtime="20211012 01:19:25.958"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:19:25.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:19:25.959" endtime="20211012 01:19:25.961"/>
</kw>
<status status="PASS" starttime="20211012 01:19:19.355" endtime="20211012 01:19:25.961"/>
</kw>
<msg timestamp="20211012 01:19:25.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:19:19.354" endtime="20211012 01:19:25.962"/>
</kw>
<status status="PASS" starttime="20211012 01:19:19.353" endtime="20211012 01:19:25.962"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:19:25.966" level="INFO">Running command 'ozone sh bucket create 39646-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:19:34.389" level="INFO">${rc} = 255</msg>
<msg timestamp="20211012 01:19:34.389" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211012 01:19:25.964" endtime="20211012 01:19:34.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:19:34.392" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211012 01:19:34.390" endtime="20211012 01:19:34.392"/>
</kw>
<msg timestamp="20211012 01:19:34.393" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211012 01:19:25.962" endtime="20211012 01:19:34.393"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211012 01:19:34.393" endtime="20211012 01:19:34.394"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:19:34.402" level="INFO">Running command 'ozone sh bucket create 39646-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:19:40.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:19:40.913" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:19:34.399" endtime="20211012 01:19:40.913"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:19:40.914" level="INFO"/>
<status status="PASS" starttime="20211012 01:19:40.914" endtime="20211012 01:19:40.915"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:19:40.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:19:40.915" endtime="20211012 01:19:40.915"/>
</kw>
<status status="PASS" starttime="20211012 01:19:34.397" endtime="20211012 01:19:40.916"/>
</kw>
<msg timestamp="20211012 01:19:40.916" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:19:34.397" endtime="20211012 01:19:40.916"/>
</kw>
<status status="PASS" starttime="20211012 01:19:34.395" endtime="20211012 01:19:40.916"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:19:40.920" level="INFO">Running command 'ozone sh bucket link 39646-source/bucket1 39646-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:19:47.776" level="INFO">${rc} = 255</msg>
<msg timestamp="20211012 01:19:47.776" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211012 01:19:40.917" endtime="20211012 01:19:47.776"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:19:47.779" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211012 01:19:47.777" endtime="20211012 01:19:47.779"/>
</kw>
<msg timestamp="20211012 01:19:47.780" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211012 01:19:40.916" endtime="20211012 01:19:47.780"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211012 01:19:47.781" endtime="20211012 01:19:47.782"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211012 01:19:19.283" endtime="20211012 01:19:47.783"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:19:47.791" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:19:47.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:19:47.799" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211012 01:19:47.788" endtime="20211012 01:19:47.799"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:19:47.804" level="INFO">scm</msg>
<status status="PASS" starttime="20211012 01:19:47.803" endtime="20211012 01:19:47.805"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:19:47.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:19:47.805" endtime="20211012 01:19:47.806"/>
</kw>
<status status="PASS" starttime="20211012 01:19:47.787" endtime="20211012 01:19:47.806"/>
</kw>
<msg timestamp="20211012 01:19:47.806" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:19:47.787" endtime="20211012 01:19:47.806"/>
</kw>
<msg timestamp="20211012 01:19:47.807" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211012 01:19:47.787" endtime="20211012 01:19:47.807"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211012 01:19:47.807" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211012 01:19:47.807" endtime="20211012 01:19:47.807"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:19:47.813" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:19:47.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:19:47.822" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:19:47.811" endtime="20211012 01:19:47.822"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:19:47.823" level="INFO"/>
<status status="PASS" starttime="20211012 01:19:47.822" endtime="20211012 01:19:47.823"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:19:47.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:19:47.824" endtime="20211012 01:19:47.824"/>
</kw>
<status status="PASS" starttime="20211012 01:19:47.810" endtime="20211012 01:19:47.825"/>
</kw>
<msg timestamp="20211012 01:19:47.825" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:19:47.809" endtime="20211012 01:19:47.825"/>
</kw>
<status status="PASS" starttime="20211012 01:19:47.808" endtime="20211012 01:19:47.826"/>
</kw>
<status status="PASS" starttime="20211012 01:19:47.808" endtime="20211012 01:19:47.826"/>
</kw>
<status status="PASS" starttime="20211012 01:19:47.786" endtime="20211012 01:19:47.826"/>
</kw>
<status status="PASS" starttime="20211012 01:19:47.785" endtime="20211012 01:19:47.827"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:19:47.834" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:19:47.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:19:47.840" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:19:47.831" endtime="20211012 01:19:47.840"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:19:47.842" level="INFO"/>
<status status="PASS" starttime="20211012 01:19:47.841" endtime="20211012 01:19:47.842"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:19:47.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:19:47.843" endtime="20211012 01:19:47.843"/>
</kw>
<status status="PASS" starttime="20211012 01:19:47.830" endtime="20211012 01:19:47.844"/>
</kw>
<msg timestamp="20211012 01:19:47.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:19:47.829" endtime="20211012 01:19:47.844"/>
</kw>
<status status="PASS" starttime="20211012 01:19:47.829" endtime="20211012 01:19:47.845"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:19:47.851" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:19:47.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:19:47.856" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211012 01:19:47.848" endtime="20211012 01:19:47.856"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:19:47.858" level="INFO">scm</msg>
<status status="PASS" starttime="20211012 01:19:47.857" endtime="20211012 01:19:47.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:19:47.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:19:47.859" endtime="20211012 01:19:47.860"/>
</kw>
<status status="PASS" starttime="20211012 01:19:47.847" endtime="20211012 01:19:47.861"/>
</kw>
<msg timestamp="20211012 01:19:47.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:19:47.847" endtime="20211012 01:19:47.861"/>
</kw>
<msg timestamp="20211012 01:19:47.862" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211012 01:19:47.846" endtime="20211012 01:19:47.862"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211012 01:19:47.863" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211012 01:19:47.862" endtime="20211012 01:19:47.863"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:19:47.874" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:19:47.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:19:47.890" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:19:47.867" endtime="20211012 01:19:47.890"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:19:47.892" level="INFO"/>
<status status="PASS" starttime="20211012 01:19:47.891" endtime="20211012 01:19:47.892"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:19:47.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:19:47.892" endtime="20211012 01:19:47.893"/>
</kw>
<status status="PASS" starttime="20211012 01:19:47.866" endtime="20211012 01:19:47.893"/>
</kw>
<msg timestamp="20211012 01:19:47.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:19:47.865" endtime="20211012 01:19:47.894"/>
</kw>
<status status="PASS" starttime="20211012 01:19:47.864" endtime="20211012 01:19:47.894"/>
</kw>
<status status="PASS" starttime="20211012 01:19:47.863" endtime="20211012 01:19:47.894"/>
</kw>
<status status="PASS" starttime="20211012 01:19:47.845" endtime="20211012 01:19:47.894"/>
</kw>
<status status="PASS" starttime="20211012 01:19:47.845" endtime="20211012 01:19:47.894"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:19:47.897" level="INFO">Running command 'ozone sh key list 39646-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:19:57.927" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:19:57.927" level="INFO">${output} = [ {
  "volumeName" : "39646-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-10-12T01:09:20.326Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20211012 01:19:47.895" endtime="20211012 01:19:57.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:19:57.931" level="INFO">[ {
  "volumeName" : "39646-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-10-12T01:09:20.326Z",
  "modificationTime" : "2021-10-12T01:12:23.987Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "replicationType" : "RATIS",
  "replicationFactor" : 3
} ]</msg>
<status status="PASS" starttime="20211012 01:19:57.929" endtime="20211012 01:19:57.931"/>
</kw>
<msg timestamp="20211012 01:19:57.932" level="INFO">${result} = [ {
  "volumeName" : "39646-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-10-12T01:09:20.326Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20211012 01:19:47.894" endtime="20211012 01:19:57.932"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211012 01:19:57.933" endtime="20211012 01:19:57.934"/>
</kw>
<status status="PASS" starttime="20211012 01:19:47.828" endtime="20211012 01:19:57.935"/>
</kw>
<status status="PASS" starttime="20211012 01:19:47.827" endtime="20211012 01:19:57.935"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211012 01:19:47.784" endtime="20211012 01:19:57.936"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:19:57.949" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:19:57.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:19:57.954" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211012 01:19:57.945" endtime="20211012 01:19:57.954"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:19:57.956" level="INFO">scm</msg>
<status status="PASS" starttime="20211012 01:19:57.955" endtime="20211012 01:19:57.956"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:19:57.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:19:57.957" endtime="20211012 01:19:57.959"/>
</kw>
<status status="PASS" starttime="20211012 01:19:57.944" endtime="20211012 01:19:57.960"/>
</kw>
<msg timestamp="20211012 01:19:57.960" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:19:57.943" endtime="20211012 01:19:57.960"/>
</kw>
<msg timestamp="20211012 01:19:57.961" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211012 01:19:57.942" endtime="20211012 01:19:57.961"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211012 01:19:57.963" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211012 01:19:57.962" endtime="20211012 01:19:57.964"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:19:57.973" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:19:57.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:19:57.984" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:19:57.970" endtime="20211012 01:19:57.984"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:19:57.986" level="INFO"/>
<status status="PASS" starttime="20211012 01:19:57.985" endtime="20211012 01:19:57.986"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:19:57.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:19:57.986" endtime="20211012 01:19:57.987"/>
</kw>
<status status="PASS" starttime="20211012 01:19:57.968" endtime="20211012 01:19:57.988"/>
</kw>
<msg timestamp="20211012 01:19:57.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:19:57.967" endtime="20211012 01:19:57.988"/>
</kw>
<status status="PASS" starttime="20211012 01:19:57.966" endtime="20211012 01:19:57.988"/>
</kw>
<status status="PASS" starttime="20211012 01:19:57.964" endtime="20211012 01:19:57.988"/>
</kw>
<status status="PASS" starttime="20211012 01:19:57.941" endtime="20211012 01:19:57.989"/>
</kw>
<status status="PASS" starttime="20211012 01:19:57.940" endtime="20211012 01:19:57.989"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:19:57.996" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:19:58.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:19:58.000" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:19:57.993" endtime="20211012 01:19:58.000"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:19:58.002" level="INFO"/>
<status status="PASS" starttime="20211012 01:19:58.001" endtime="20211012 01:19:58.003"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:19:58.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:19:58.003" endtime="20211012 01:19:58.005"/>
</kw>
<status status="PASS" starttime="20211012 01:19:57.992" endtime="20211012 01:19:58.006"/>
</kw>
<msg timestamp="20211012 01:19:58.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:19:57.992" endtime="20211012 01:19:58.006"/>
</kw>
<status status="PASS" starttime="20211012 01:19:57.991" endtime="20211012 01:19:58.007"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:19:58.013" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:19:58.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:19:58.015" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211012 01:19:58.010" endtime="20211012 01:19:58.015"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:19:58.017" level="INFO">scm</msg>
<status status="PASS" starttime="20211012 01:19:58.016" endtime="20211012 01:19:58.017"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:19:58.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:19:58.017" endtime="20211012 01:19:58.018"/>
</kw>
<status status="PASS" starttime="20211012 01:19:58.009" endtime="20211012 01:19:58.019"/>
</kw>
<msg timestamp="20211012 01:19:58.019" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:19:58.009" endtime="20211012 01:19:58.020"/>
</kw>
<msg timestamp="20211012 01:19:58.020" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211012 01:19:58.009" endtime="20211012 01:19:58.020"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211012 01:19:58.021" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211012 01:19:58.020" endtime="20211012 01:19:58.021"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:19:58.027" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:19:58.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:19:58.035" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:19:58.024" endtime="20211012 01:19:58.035"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:19:58.037" level="INFO"/>
<status status="PASS" starttime="20211012 01:19:58.036" endtime="20211012 01:19:58.037"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:19:58.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:19:58.037" endtime="20211012 01:19:58.039"/>
</kw>
<status status="PASS" starttime="20211012 01:19:58.023" endtime="20211012 01:19:58.039"/>
</kw>
<msg timestamp="20211012 01:19:58.039" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:19:58.023" endtime="20211012 01:19:58.039"/>
</kw>
<status status="PASS" starttime="20211012 01:19:58.022" endtime="20211012 01:19:58.040"/>
</kw>
<status status="PASS" starttime="20211012 01:19:58.021" endtime="20211012 01:19:58.040"/>
</kw>
<status status="PASS" starttime="20211012 01:19:58.008" endtime="20211012 01:19:58.040"/>
</kw>
<status status="PASS" starttime="20211012 01:19:58.007" endtime="20211012 01:19:58.040"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:19:58.045" level="INFO">Running command 'ozone sh key list 39646-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:20:06.206" level="INFO">${rc} = 255</msg>
<msg timestamp="20211012 01:20:06.207" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 39646-target unreadable-link null</msg>
<status status="PASS" starttime="20211012 01:19:58.041" endtime="20211012 01:20:06.207"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:20:06.208" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 39646-target unreadable-link null</msg>
<status status="PASS" starttime="20211012 01:20:06.207" endtime="20211012 01:20:06.208"/>
</kw>
<msg timestamp="20211012 01:20:06.208" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 39646-target unreadable-link null</msg>
<status status="PASS" starttime="20211012 01:19:58.040" endtime="20211012 01:20:06.208"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211012 01:20:06.209" endtime="20211012 01:20:06.209"/>
</kw>
<status status="PASS" starttime="20211012 01:19:57.991" endtime="20211012 01:20:06.209"/>
</kw>
<status status="PASS" starttime="20211012 01:19:57.990" endtime="20211012 01:20:06.209"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211012 01:19:57.938" endtime="20211012 01:20:06.210"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:20:06.218" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:20:06.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:20:06.222" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211012 01:20:06.215" endtime="20211012 01:20:06.222"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:20:06.223" level="INFO">scm</msg>
<status status="PASS" starttime="20211012 01:20:06.222" endtime="20211012 01:20:06.223"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:20:06.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:20:06.223" endtime="20211012 01:20:06.224"/>
</kw>
<status status="PASS" starttime="20211012 01:20:06.215" endtime="20211012 01:20:06.225"/>
</kw>
<msg timestamp="20211012 01:20:06.225" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:20:06.214" endtime="20211012 01:20:06.225"/>
</kw>
<msg timestamp="20211012 01:20:06.225" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211012 01:20:06.214" endtime="20211012 01:20:06.225"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211012 01:20:06.226" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211012 01:20:06.226" endtime="20211012 01:20:06.226"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:20:06.231" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:20:06.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:20:06.242" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:20:06.229" endtime="20211012 01:20:06.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:20:06.245" level="INFO"/>
<status status="PASS" starttime="20211012 01:20:06.243" endtime="20211012 01:20:06.245"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:20:06.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:20:06.245" endtime="20211012 01:20:06.246"/>
</kw>
<status status="PASS" starttime="20211012 01:20:06.229" endtime="20211012 01:20:06.246"/>
</kw>
<msg timestamp="20211012 01:20:06.246" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:20:06.228" endtime="20211012 01:20:06.246"/>
</kw>
<status status="PASS" starttime="20211012 01:20:06.227" endtime="20211012 01:20:06.247"/>
</kw>
<status status="PASS" starttime="20211012 01:20:06.227" endtime="20211012 01:20:06.247"/>
</kw>
<status status="PASS" starttime="20211012 01:20:06.213" endtime="20211012 01:20:06.247"/>
</kw>
<status status="PASS" starttime="20211012 01:20:06.212" endtime="20211012 01:20:06.247"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:20:06.255" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:20:06.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:20:06.260" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:20:06.252" endtime="20211012 01:20:06.260"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:20:06.261" level="INFO"/>
<status status="PASS" starttime="20211012 01:20:06.260" endtime="20211012 01:20:06.262"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:20:06.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:20:06.262" endtime="20211012 01:20:06.263"/>
</kw>
<status status="PASS" starttime="20211012 01:20:06.251" endtime="20211012 01:20:06.263"/>
</kw>
<msg timestamp="20211012 01:20:06.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:20:06.250" endtime="20211012 01:20:06.264"/>
</kw>
<status status="PASS" starttime="20211012 01:20:06.249" endtime="20211012 01:20:06.264"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:20:06.269" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:20:06.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:20:06.274" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211012 01:20:06.267" endtime="20211012 01:20:06.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:20:06.275" level="INFO">scm</msg>
<status status="PASS" starttime="20211012 01:20:06.274" endtime="20211012 01:20:06.275"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:20:06.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:20:06.275" endtime="20211012 01:20:06.276"/>
</kw>
<status status="PASS" starttime="20211012 01:20:06.267" endtime="20211012 01:20:06.277"/>
</kw>
<msg timestamp="20211012 01:20:06.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:20:06.266" endtime="20211012 01:20:06.277"/>
</kw>
<msg timestamp="20211012 01:20:06.277" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211012 01:20:06.265" endtime="20211012 01:20:06.277"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211012 01:20:06.278" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211012 01:20:06.278" endtime="20211012 01:20:06.279"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:20:06.284" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:20:06.293" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:20:06.293" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:20:06.282" endtime="20211012 01:20:06.293"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:20:06.295" level="INFO"/>
<status status="PASS" starttime="20211012 01:20:06.294" endtime="20211012 01:20:06.295"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:20:06.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:20:06.295" endtime="20211012 01:20:06.296"/>
</kw>
<status status="PASS" starttime="20211012 01:20:06.281" endtime="20211012 01:20:06.296"/>
</kw>
<msg timestamp="20211012 01:20:06.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:20:06.280" endtime="20211012 01:20:06.297"/>
</kw>
<status status="PASS" starttime="20211012 01:20:06.280" endtime="20211012 01:20:06.297"/>
</kw>
<status status="PASS" starttime="20211012 01:20:06.279" endtime="20211012 01:20:06.297"/>
</kw>
<status status="PASS" starttime="20211012 01:20:06.265" endtime="20211012 01:20:06.297"/>
</kw>
<status status="PASS" starttime="20211012 01:20:06.264" endtime="20211012 01:20:06.297"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:20:06.302" level="INFO">Running command 'ozone sh bucket info 39646-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:20:14.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:20:14.725" level="INFO">${output} = {
  "volumeName" : "39646-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "39646-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-10-12T01:12:55.994Z...</msg>
<status status="PASS" starttime="20211012 01:20:06.300" endtime="20211012 01:20:14.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:20:14.728" level="INFO">{
  "volumeName" : "39646-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "39646-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-10-12T01:12:55.994Z",
  "modificationTime" : "2021-10-12T01:13:31.134Z"
}</msg>
<status status="PASS" starttime="20211012 01:20:14.726" endtime="20211012 01:20:14.728"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:20:14.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:20:14.729" endtime="20211012 01:20:14.730"/>
</kw>
<status status="PASS" starttime="20211012 01:20:06.299" endtime="20211012 01:20:14.731"/>
</kw>
<msg timestamp="20211012 01:20:14.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:20:06.298" endtime="20211012 01:20:14.731"/>
</kw>
<msg timestamp="20211012 01:20:14.732" level="INFO">${result} = {
  "volumeName" : "39646-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "39646-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-10-12T01:12:55.994Z...</msg>
<status status="PASS" starttime="20211012 01:20:06.298" endtime="20211012 01:20:14.732"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211012 01:20:14.732" endtime="20211012 01:20:14.733"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211012 01:20:14.733" endtime="20211012 01:20:14.734"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:20:14.739" level="INFO">Running command 'ozone sh key list 39646-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:20:22.273" level="INFO">${rc} = 255</msg>
<msg timestamp="20211012 01:20:22.273" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 39646-source unreadable-bucket </msg>
<status status="PASS" starttime="20211012 01:20:14.736" endtime="20211012 01:20:22.273"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:20:22.274" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 39646-source unreadable-bucket </msg>
<status status="PASS" starttime="20211012 01:20:22.273" endtime="20211012 01:20:22.274"/>
</kw>
<msg timestamp="20211012 01:20:22.275" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 39646-source unreadable-bucket </msg>
<status status="PASS" starttime="20211012 01:20:14.735" endtime="20211012 01:20:22.275"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211012 01:20:22.275" endtime="20211012 01:20:22.275"/>
</kw>
<status status="PASS" starttime="20211012 01:20:06.248" endtime="20211012 01:20:22.275"/>
</kw>
<status status="PASS" starttime="20211012 01:20:06.248" endtime="20211012 01:20:22.276"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211012 01:20:06.210" endtime="20211012 01:20:22.276"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:20:22.290" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:20:22.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:20:22.296" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211012 01:20:22.287" endtime="20211012 01:20:22.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:20:22.298" level="INFO">scm</msg>
<status status="PASS" starttime="20211012 01:20:22.297" endtime="20211012 01:20:22.298"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:20:22.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:20:22.299" endtime="20211012 01:20:22.301"/>
</kw>
<status status="PASS" starttime="20211012 01:20:22.285" endtime="20211012 01:20:22.301"/>
</kw>
<msg timestamp="20211012 01:20:22.301" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:20:22.284" endtime="20211012 01:20:22.301"/>
</kw>
<msg timestamp="20211012 01:20:22.302" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211012 01:20:22.283" endtime="20211012 01:20:22.303"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211012 01:20:22.303" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211012 01:20:22.303" endtime="20211012 01:20:22.303"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:20:22.307" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:20:22.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:20:22.316" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:20:22.305" endtime="20211012 01:20:22.316"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:20:22.317" level="INFO"/>
<status status="PASS" starttime="20211012 01:20:22.316" endtime="20211012 01:20:22.317"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:20:22.318" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:20:22.318" endtime="20211012 01:20:22.318"/>
</kw>
<status status="PASS" starttime="20211012 01:20:22.305" endtime="20211012 01:20:22.319"/>
</kw>
<msg timestamp="20211012 01:20:22.319" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:20:22.305" endtime="20211012 01:20:22.319"/>
</kw>
<status status="PASS" starttime="20211012 01:20:22.304" endtime="20211012 01:20:22.319"/>
</kw>
<status status="PASS" starttime="20211012 01:20:22.304" endtime="20211012 01:20:22.319"/>
</kw>
<status status="PASS" starttime="20211012 01:20:22.281" endtime="20211012 01:20:22.320"/>
</kw>
<status status="PASS" starttime="20211012 01:20:22.279" endtime="20211012 01:20:22.320"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:20:22.325" level="INFO">Running command 'ozone sh bucket link 39646-target/loop1 39646-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:20:29.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:20:29.633" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:20:22.322" endtime="20211012 01:20:29.633"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:20:29.635" level="INFO"/>
<status status="PASS" starttime="20211012 01:20:29.634" endtime="20211012 01:20:29.635"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:20:29.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:20:29.635" endtime="20211012 01:20:29.636"/>
</kw>
<status status="PASS" starttime="20211012 01:20:22.321" endtime="20211012 01:20:29.637"/>
</kw>
<msg timestamp="20211012 01:20:29.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:20:22.321" endtime="20211012 01:20:29.637"/>
</kw>
<status status="PASS" starttime="20211012 01:20:22.320" endtime="20211012 01:20:29.637"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:20:29.643" level="INFO">Running command 'ozone sh bucket link 39646-target/loop2 39646-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:20:38.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:20:38.266" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:20:29.640" endtime="20211012 01:20:38.266"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:20:38.268" level="INFO"/>
<status status="PASS" starttime="20211012 01:20:38.267" endtime="20211012 01:20:38.268"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:20:38.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:20:38.268" endtime="20211012 01:20:38.269"/>
</kw>
<status status="PASS" starttime="20211012 01:20:29.639" endtime="20211012 01:20:38.269"/>
</kw>
<msg timestamp="20211012 01:20:38.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:20:29.639" endtime="20211012 01:20:38.270"/>
</kw>
<status status="PASS" starttime="20211012 01:20:29.638" endtime="20211012 01:20:38.271"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:20:38.277" level="INFO">Running command 'ozone sh bucket link 39646-target/loop3 39646-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:20:46.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:20:46.602" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:20:38.274" endtime="20211012 01:20:46.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:20:46.604" level="INFO"/>
<status status="PASS" starttime="20211012 01:20:46.603" endtime="20211012 01:20:46.604"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:20:46.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:20:46.604" endtime="20211012 01:20:46.605"/>
</kw>
<status status="PASS" starttime="20211012 01:20:38.273" endtime="20211012 01:20:46.606"/>
</kw>
<msg timestamp="20211012 01:20:46.606" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:20:38.273" endtime="20211012 01:20:46.606"/>
</kw>
<status status="PASS" starttime="20211012 01:20:38.271" endtime="20211012 01:20:46.606"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:20:46.612" level="INFO">Running command 'ozone sh key list 39646-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:20:54.599" level="INFO">${rc} = 255</msg>
<msg timestamp="20211012 01:20:54.599" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20211012 01:20:46.607" endtime="20211012 01:20:54.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:20:54.600" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20211012 01:20:54.600" endtime="20211012 01:20:54.601"/>
</kw>
<msg timestamp="20211012 01:20:54.601" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20211012 01:20:46.606" endtime="20211012 01:20:54.601"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211012 01:20:54.601" endtime="20211012 01:20:54.602"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211012 01:20:22.276" endtime="20211012 01:20:54.602"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:20:54.613" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:20:54.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:20:54.619" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211012 01:20:54.610" endtime="20211012 01:20:54.619"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:20:54.621" level="INFO">scm</msg>
<status status="PASS" starttime="20211012 01:20:54.620" endtime="20211012 01:20:54.622"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:20:54.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:20:54.622" endtime="20211012 01:20:54.623"/>
</kw>
<status status="PASS" starttime="20211012 01:20:54.609" endtime="20211012 01:20:54.623"/>
</kw>
<msg timestamp="20211012 01:20:54.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:20:54.608" endtime="20211012 01:20:54.625"/>
</kw>
<msg timestamp="20211012 01:20:54.625" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211012 01:20:54.607" endtime="20211012 01:20:54.626"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211012 01:20:54.627" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211012 01:20:54.626" endtime="20211012 01:20:54.627"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:20:54.635" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:20:54.643" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:20:54.643" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:20:54.631" endtime="20211012 01:20:54.643"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:20:54.644" level="INFO"/>
<status status="PASS" starttime="20211012 01:20:54.644" endtime="20211012 01:20:54.645"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:20:54.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:20:54.645" endtime="20211012 01:20:54.645"/>
</kw>
<status status="PASS" starttime="20211012 01:20:54.630" endtime="20211012 01:20:54.646"/>
</kw>
<msg timestamp="20211012 01:20:54.646" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:20:54.630" endtime="20211012 01:20:54.646"/>
</kw>
<status status="PASS" starttime="20211012 01:20:54.629" endtime="20211012 01:20:54.646"/>
</kw>
<status status="PASS" starttime="20211012 01:20:54.628" endtime="20211012 01:20:54.646"/>
</kw>
<status status="PASS" starttime="20211012 01:20:54.606" endtime="20211012 01:20:54.646"/>
</kw>
<status status="PASS" starttime="20211012 01:20:54.605" endtime="20211012 01:20:54.646"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:20:54.651" level="INFO">Running command 'ozone sh bucket link 39646-source/bucket1 39646-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:21:02.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:21:02.033" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:20:54.649" endtime="20211012 01:21:02.033"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:21:02.036" level="INFO"/>
<status status="PASS" starttime="20211012 01:21:02.034" endtime="20211012 01:21:02.036"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:21:02.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:21:02.036" endtime="20211012 01:21:02.038"/>
</kw>
<status status="PASS" starttime="20211012 01:20:54.648" endtime="20211012 01:21:02.038"/>
</kw>
<msg timestamp="20211012 01:21:02.039" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:20:54.647" endtime="20211012 01:21:02.039"/>
</kw>
<status status="PASS" starttime="20211012 01:20:54.647" endtime="20211012 01:21:02.039"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:21:02.049" level="INFO">Running command 'ozone sh key put 39646-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:22:54.604" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20211012 01:21:02.043" endtime="20211012 01:22:54.604"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211012 01:22:54.605" endtime="20211012 01:22:54.605"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211012 01:22:54.605" endtime="20211012 01:22:54.605"/>
</kw>
<status status="FAIL" starttime="20211012 01:21:02.042" endtime="20211012 01:22:54.606"/>
</kw>
<msg timestamp="20211012 01:22:54.606" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211012 01:21:02.041" endtime="20211012 01:22:54.606"/>
</kw>
<status status="FAIL" starttime="20211012 01:21:02.040" endtime="20211012 01:22:54.606"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<status status="NOT RUN" starttime="20211012 01:22:54.606" endtime="20211012 01:22:54.607"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211012 01:20:54.603" endtime="20211012 01:22:54.607">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:22:54.614" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:22:54.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:22:54.619" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211012 01:22:54.612" endtime="20211012 01:22:54.619"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:22:54.621" level="INFO">scm</msg>
<status status="PASS" starttime="20211012 01:22:54.620" endtime="20211012 01:22:54.622"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:22:54.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:22:54.622" endtime="20211012 01:22:54.623"/>
</kw>
<status status="PASS" starttime="20211012 01:22:54.611" endtime="20211012 01:22:54.624"/>
</kw>
<msg timestamp="20211012 01:22:54.624" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:22:54.611" endtime="20211012 01:22:54.624"/>
</kw>
<msg timestamp="20211012 01:22:54.624" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211012 01:22:54.611" endtime="20211012 01:22:54.624"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211012 01:22:54.626" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211012 01:22:54.625" endtime="20211012 01:22:54.626"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:22:54.632" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:22:54.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:22:54.641" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:22:54.629" endtime="20211012 01:22:54.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:22:54.644" level="INFO"/>
<status status="PASS" starttime="20211012 01:22:54.642" endtime="20211012 01:22:54.644"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:22:54.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:22:54.644" endtime="20211012 01:22:54.646"/>
</kw>
<status status="PASS" starttime="20211012 01:22:54.628" endtime="20211012 01:22:54.646"/>
</kw>
<msg timestamp="20211012 01:22:54.646" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:22:54.628" endtime="20211012 01:22:54.647"/>
</kw>
<status status="PASS" starttime="20211012 01:22:54.627" endtime="20211012 01:22:54.647"/>
</kw>
<status status="PASS" starttime="20211012 01:22:54.626" endtime="20211012 01:22:54.648"/>
</kw>
<status status="PASS" starttime="20211012 01:22:54.610" endtime="20211012 01:22:54.648"/>
</kw>
<status status="PASS" starttime="20211012 01:22:54.609" endtime="20211012 01:22:54.648"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:22:54.654" level="INFO">Running command 'ozone sh bucket delete 39646-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:23:02.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:23:02.947" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:22:54.651" endtime="20211012 01:23:02.947"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:23:02.949" level="INFO"/>
<status status="PASS" starttime="20211012 01:23:02.948" endtime="20211012 01:23:02.949"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:23:02.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:23:02.949" endtime="20211012 01:23:02.949"/>
</kw>
<status status="PASS" starttime="20211012 01:22:54.650" endtime="20211012 01:23:02.950"/>
</kw>
<msg timestamp="20211012 01:23:02.950" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:22:54.650" endtime="20211012 01:23:02.950"/>
</kw>
<status status="PASS" starttime="20211012 01:22:54.648" endtime="20211012 01:23:02.950"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:23:02.954" level="INFO">Running command 'ozone sh bucket list 39646-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:23:10.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:23:10.741" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "39646-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-1...</msg>
<status status="PASS" starttime="20211012 01:23:02.952" endtime="20211012 01:23:10.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:23:10.742" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "39646-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-12T01:19:40.779Z",
  "modificationTime" : "2021-10-12T01:19:40.779Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "39646-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-12T01:13:38.060Z",
  "modificationTime" : "2021-10-12T01:13:38.060Z",
  "sourceVolume" : "39646-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "39646-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-12T01:12:55.994Z",
  "modificationTime" : "2021-10-12T01:13:31.134Z",
  "sourceVolume" : "39646-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "39646-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-12T01:19:25.857Z",
  "modificationTime" : "2021-10-12T01:19:25.857Z",
  "sourceVolume" : "39646-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "39646-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-12T01:21:01.823Z",
  "modificationTime" : "2021-10-12T01:21:01.823Z",
  "sourceVolume" : "39646-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "39646-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-12T01:20:46.514Z",
  "modificationTime" : "2021-10-12T01:20:46.514Z",
  "sourceVolume" : "39646-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "39646-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-12T01:20:29.203Z",
  "modificationTime" : "2021-10-12T01:20:29.203Z",
  "sourceVolume" : "39646-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "39646-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-12T01:20:37.924Z",
  "modificationTime" : "2021-10-12T01:20:37.924Z",
  "sourceVolume" : "39646-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "39646-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-12T01:12:39.127Z",
  "modificationTime" : "2021-10-12T01:13:23.116Z",
  "sourceVolume" : "39646-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "39646-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-12T01:12:47.269Z",
  "modificationTime" : "2021-10-12T01:12:47.269Z",
  "sourceVolume" : "39646-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
} ]</msg>
<status status="PASS" starttime="20211012 01:23:10.742" endtime="20211012 01:23:10.743"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:23:10.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:23:10.743" endtime="20211012 01:23:10.743"/>
</kw>
<status status="PASS" starttime="20211012 01:23:02.951" endtime="20211012 01:23:10.744"/>
</kw>
<msg timestamp="20211012 01:23:10.744" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:23:02.951" endtime="20211012 01:23:10.744"/>
</kw>
<msg timestamp="20211012 01:23:10.744" level="INFO">${bucket_list} = [ {
  "metadata" : { },
  "volumeName" : "39646-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-1...</msg>
<status status="PASS" starttime="20211012 01:23:02.951" endtime="20211012 01:23:10.745"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211012 01:23:10.745" endtime="20211012 01:23:10.746"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:23:10.755" level="INFO">Running command 'ozone sh key list 39646-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:23:19.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:23:19.151" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20211012 01:23:10.751" endtime="20211012 01:23:19.151"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:23:19.153" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20211012 01:23:19.152" endtime="20211012 01:23:19.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:23:19.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:23:19.154" endtime="20211012 01:23:19.155"/>
</kw>
<status status="PASS" starttime="20211012 01:23:10.749" endtime="20211012 01:23:19.155"/>
</kw>
<msg timestamp="20211012 01:23:19.156" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:23:10.749" endtime="20211012 01:23:19.156"/>
</kw>
<msg timestamp="20211012 01:23:19.156" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20211012 01:23:10.747" endtime="20211012 01:23:19.156"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211012 01:23:19.157" endtime="20211012 01:23:19.157"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211012 01:22:54.608" endtime="20211012 01:23:19.158"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="FAIL" starttime="20211012 01:08:44.947" endtime="20211012 01:23:19.161"/>
</suite>
<suite id="s1-s1-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211012 01:23:19.196" level="INFO">${random} = 06803</msg>
<status status="PASS" starttime="20211012 01:23:19.196" endtime="20211012 01:23:19.196"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211012 01:23:19.197" level="INFO">${prefix} = 06803</msg>
<status status="PASS" starttime="20211012 01:23:19.197" endtime="20211012 01:23:19.197"/>
</kw>
<status status="PASS" starttime="20211012 01:23:19.194" endtime="20211012 01:23:19.197"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:23:19.207" level="INFO">Running command 'ozone sh volume info /06803-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:23:24.627" level="INFO">${rc} = 255</msg>
<msg timestamp="20211012 01:23:24.627" level="INFO">${output} = VOLUME_NOT_FOUND Volume 06803-rpcbasic is not found</msg>
<status status="PASS" starttime="20211012 01:23:19.204" endtime="20211012 01:23:24.627"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:23:24.628" level="INFO">VOLUME_NOT_FOUND Volume 06803-rpcbasic is not found</msg>
<status status="PASS" starttime="20211012 01:23:24.627" endtime="20211012 01:23:24.628"/>
</kw>
<msg timestamp="20211012 01:23:24.629" level="INFO">${result} = VOLUME_NOT_FOUND Volume 06803-rpcbasic is not found</msg>
<status status="PASS" starttime="20211012 01:23:19.200" endtime="20211012 01:23:24.629"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211012 01:23:24.629" endtime="20211012 01:23:24.630"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:23:24.635" level="INFO">Running command 'ozone sh volume create /06803-rpcbasic --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:23:31.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:23:31.923" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:23:24.632" endtime="20211012 01:23:31.923"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:23:31.931" level="INFO"/>
<status status="PASS" starttime="20211012 01:23:31.924" endtime="20211012 01:23:31.931"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:23:31.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:23:31.931" endtime="20211012 01:23:31.932"/>
</kw>
<status status="PASS" starttime="20211012 01:23:24.631" endtime="20211012 01:23:31.936"/>
</kw>
<msg timestamp="20211012 01:23:31.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:23:24.631" endtime="20211012 01:23:31.937"/>
</kw>
<msg timestamp="20211012 01:23:31.937" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211012 01:23:24.630" endtime="20211012 01:23:31.937"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211012 01:23:31.937" endtime="20211012 01:23:31.938"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:23:31.961" level="INFO">Running command 'ozone sh volume list / | jq -r '.[] | select(.name=="06803-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:23:39.386" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:23:39.386" level="INFO">${output} = {
  "metadata": {},
  "name": "06803-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211012 01:23:31.951" endtime="20211012 01:23:39.387"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:23:39.388" level="INFO">{
  "metadata": {},
  "name": "06803-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-12T01:23:31.837Z",
  "modificationTime": "2021-10-12T01:23:31.837Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211012 01:23:39.387" endtime="20211012 01:23:39.388"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:23:39.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:23:39.388" endtime="20211012 01:23:39.389"/>
</kw>
<status status="PASS" starttime="20211012 01:23:31.949" endtime="20211012 01:23:39.389"/>
</kw>
<msg timestamp="20211012 01:23:39.389" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:23:31.947" endtime="20211012 01:23:39.390"/>
</kw>
<msg timestamp="20211012 01:23:39.390" level="INFO">${result} = {
  "metadata": {},
  "name": "06803-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211012 01:23:31.938" endtime="20211012 01:23:39.390"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211012 01:23:39.390" endtime="20211012 01:23:39.391"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:23:39.400" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="06803-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:23:49.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:23:49.399" level="INFO">${output} = {
  "metadata": {},
  "name": "06803-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211012 01:23:39.393" endtime="20211012 01:23:49.399"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:23:49.402" level="INFO">{
  "metadata": {},
  "name": "06803-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-12T01:23:31.837Z",
  "modificationTime": "2021-10-12T01:23:31.837Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211012 01:23:49.400" endtime="20211012 01:23:49.402"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:23:49.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:23:49.402" endtime="20211012 01:23:49.403"/>
</kw>
<status status="PASS" starttime="20211012 01:23:39.392" endtime="20211012 01:23:49.404"/>
</kw>
<msg timestamp="20211012 01:23:49.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:23:39.392" endtime="20211012 01:23:49.404"/>
</kw>
<msg timestamp="20211012 01:23:49.404" level="INFO">${result} = {
  "metadata": {},
  "name": "06803-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211012 01:23:39.391" endtime="20211012 01:23:49.404"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211012 01:23:49.405" endtime="20211012 01:23:49.406"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:23:49.412" level="INFO">Running command 'ozone sh volume setquota /06803-rpcbasic --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:23:58.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:23:58.195" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:23:49.409" endtime="20211012 01:23:58.195"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:23:58.198" level="INFO"/>
<status status="PASS" starttime="20211012 01:23:58.196" endtime="20211012 01:23:58.198"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:23:58.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:23:58.198" endtime="20211012 01:23:58.200"/>
</kw>
<status status="PASS" starttime="20211012 01:23:49.408" endtime="20211012 01:23:58.201"/>
</kw>
<msg timestamp="20211012 01:23:58.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:23:49.407" endtime="20211012 01:23:58.202"/>
</kw>
<status status="PASS" starttime="20211012 01:23:49.406" endtime="20211012 01:23:58.203"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:23:58.211" level="INFO">Running command 'ozone sh volume info /06803-rpcbasic | jq -r '. | select(.name=="06803-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:24:04.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:24:04.144" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211012 01:23:58.208" endtime="20211012 01:24:04.144"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:24:04.145" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211012 01:24:04.144" endtime="20211012 01:24:04.145"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:24:04.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:24:04.145" endtime="20211012 01:24:04.147"/>
</kw>
<status status="PASS" starttime="20211012 01:23:58.207" endtime="20211012 01:24:04.147"/>
</kw>
<msg timestamp="20211012 01:24:04.148" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:23:58.206" endtime="20211012 01:24:04.148"/>
</kw>
<msg timestamp="20211012 01:24:04.149" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211012 01:23:58.203" endtime="20211012 01:24:04.149"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211012 01:24:04.149" endtime="20211012 01:24:04.151"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:24:04.161" level="INFO">Running command 'ozone sh bucket create /06803-rpcbasic/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:24:12.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:24:12.284" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:24:04.156" endtime="20211012 01:24:12.284"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:24:12.286" level="INFO"/>
<status status="PASS" starttime="20211012 01:24:12.285" endtime="20211012 01:24:12.287"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:24:12.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:24:12.287" endtime="20211012 01:24:12.288"/>
</kw>
<status status="PASS" starttime="20211012 01:24:04.155" endtime="20211012 01:24:12.289"/>
</kw>
<msg timestamp="20211012 01:24:12.289" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:24:04.154" endtime="20211012 01:24:12.289"/>
</kw>
<status status="PASS" starttime="20211012 01:24:04.152" endtime="20211012 01:24:12.289"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:24:12.295" level="INFO">Running command 'ozone sh bucket info /06803-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:24:20.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:24:20.763" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211012 01:24:12.292" endtime="20211012 01:24:20.763"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:24:20.766" level="INFO">DISK</msg>
<status status="PASS" starttime="20211012 01:24:20.764" endtime="20211012 01:24:20.766"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:24:20.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:24:20.766" endtime="20211012 01:24:20.768"/>
</kw>
<status status="PASS" starttime="20211012 01:24:12.291" endtime="20211012 01:24:20.769"/>
</kw>
<msg timestamp="20211012 01:24:20.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:24:12.291" endtime="20211012 01:24:20.770"/>
</kw>
<msg timestamp="20211012 01:24:20.771" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211012 01:24:12.289" endtime="20211012 01:24:20.771"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211012 01:24:20.771" endtime="20211012 01:24:20.772"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:24:20.779" level="INFO">Running command 'ozone sh bucket info /06803-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:24:28.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:24:28.139" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211012 01:24:20.776" endtime="20211012 01:24:28.139"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:24:28.140" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211012 01:24:28.139" endtime="20211012 01:24:28.140"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:24:28.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:24:28.141" endtime="20211012 01:24:28.141"/>
</kw>
<status status="PASS" starttime="20211012 01:24:20.775" endtime="20211012 01:24:28.142"/>
</kw>
<msg timestamp="20211012 01:24:28.142" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:24:20.774" endtime="20211012 01:24:28.143"/>
</kw>
<msg timestamp="20211012 01:24:28.143" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211012 01:24:20.772" endtime="20211012 01:24:28.143"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211012 01:24:28.143" endtime="20211012 01:24:28.144"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:24:28.151" level="INFO">Running command 'ozone sh bucket info /06803-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:24:36.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:24:36.158" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211012 01:24:28.148" endtime="20211012 01:24:36.158"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:24:36.159" level="INFO">100</msg>
<status status="PASS" starttime="20211012 01:24:36.159" endtime="20211012 01:24:36.159"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:24:36.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:24:36.160" endtime="20211012 01:24:36.160"/>
</kw>
<status status="PASS" starttime="20211012 01:24:28.147" endtime="20211012 01:24:36.161"/>
</kw>
<msg timestamp="20211012 01:24:36.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:24:28.146" endtime="20211012 01:24:36.161"/>
</kw>
<msg timestamp="20211012 01:24:36.162" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211012 01:24:28.145" endtime="20211012 01:24:36.162"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211012 01:24:36.162" endtime="20211012 01:24:36.163"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:24:36.169" level="INFO">Running command 'ozone sh bucket setquota /06803-rpcbasic/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:24:44.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:24:44.143" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:24:36.166" endtime="20211012 01:24:44.143"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:24:44.148" level="INFO"/>
<status status="PASS" starttime="20211012 01:24:44.145" endtime="20211012 01:24:44.148"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:24:44.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:24:44.149" endtime="20211012 01:24:44.151"/>
</kw>
<status status="PASS" starttime="20211012 01:24:36.166" endtime="20211012 01:24:44.152"/>
</kw>
<msg timestamp="20211012 01:24:44.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:24:36.165" endtime="20211012 01:24:44.152"/>
</kw>
<status status="PASS" starttime="20211012 01:24:36.164" endtime="20211012 01:24:44.153"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:24:44.164" level="INFO">Running command 'ozone sh bucket info /06803-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:24:51.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:24:51.618" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211012 01:24:44.159" endtime="20211012 01:24:51.618"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:24:51.620" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211012 01:24:51.619" endtime="20211012 01:24:51.620"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:24:51.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:24:51.620" endtime="20211012 01:24:51.620"/>
</kw>
<status status="PASS" starttime="20211012 01:24:44.158" endtime="20211012 01:24:51.621"/>
</kw>
<msg timestamp="20211012 01:24:51.621" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:24:44.157" endtime="20211012 01:24:51.621"/>
</kw>
<msg timestamp="20211012 01:24:51.621" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211012 01:24:44.154" endtime="20211012 01:24:51.621"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211012 01:24:51.622" endtime="20211012 01:24:51.624"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:24:51.629" level="INFO">Running command 'ozone sh bucket info /06803-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:24:59.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:24:59.531" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211012 01:24:51.627" endtime="20211012 01:24:59.531"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:24:59.532" level="INFO">1000</msg>
<status status="PASS" starttime="20211012 01:24:59.532" endtime="20211012 01:24:59.532"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:24:59.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:24:59.532" endtime="20211012 01:24:59.533"/>
</kw>
<status status="PASS" starttime="20211012 01:24:51.626" endtime="20211012 01:24:59.533"/>
</kw>
<msg timestamp="20211012 01:24:59.533" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:24:51.626" endtime="20211012 01:24:59.534"/>
</kw>
<msg timestamp="20211012 01:24:59.534" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211012 01:24:51.624" endtime="20211012 01:24:59.534"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211012 01:24:59.534" endtime="20211012 01:24:59.534"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:24:59.539" level="INFO">Running command 'ozone sh bucket list /06803-rpcbasic/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:25:06.657" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:25:06.657" level="INFO">${output} = 06803-rpcbasic</msg>
<status status="PASS" starttime="20211012 01:24:59.536" endtime="20211012 01:25:06.657"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:25:06.659" level="INFO">06803-rpcbasic</msg>
<status status="PASS" starttime="20211012 01:25:06.658" endtime="20211012 01:25:06.659"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:25:06.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:25:06.660" endtime="20211012 01:25:06.661"/>
</kw>
<status status="PASS" starttime="20211012 01:24:59.536" endtime="20211012 01:25:06.661"/>
</kw>
<msg timestamp="20211012 01:25:06.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:24:59.536" endtime="20211012 01:25:06.661"/>
</kw>
<msg timestamp="20211012 01:25:06.662" level="INFO">${result} = 06803-rpcbasic</msg>
<status status="PASS" starttime="20211012 01:24:59.535" endtime="20211012 01:25:06.662"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211012 01:25:06.662" endtime="20211012 01:25:06.663"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:25:06.669" level="INFO">Running command 'ozone sh key put /06803-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:28:19.199" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211012 01:25:06.667" endtime="20211012 01:28:19.199"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211012 01:28:19.200" endtime="20211012 01:28:19.200"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211012 01:28:19.200" endtime="20211012 01:28:19.200"/>
</kw>
<status status="FAIL" starttime="20211012 01:25:06.666" endtime="20211012 01:28:19.201"/>
</kw>
<msg timestamp="20211012 01:28:19.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211012 01:25:06.666" endtime="20211012 01:28:19.201"/>
</kw>
<status status="FAIL" starttime="20211012 01:25:06.665" endtime="20211012 01:28:19.201"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211012 01:28:19.201" endtime="20211012 01:28:19.201"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211012 01:28:19.201" endtime="20211012 01:28:19.202"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211012 01:28:19.202" endtime="20211012 01:28:19.202"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211012 01:28:19.202" endtime="20211012 01:28:19.202"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211012 01:28:19.202" endtime="20211012 01:28:19.202"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211012 01:28:19.203" endtime="20211012 01:28:19.203"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211012 01:28:19.203" endtime="20211012 01:28:19.203"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211012 01:28:19.203" endtime="20211012 01:28:19.203"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211012 01:28:19.203" endtime="20211012 01:28:19.204"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211012 01:28:19.204" endtime="20211012 01:28:19.204"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211012 01:28:19.204" endtime="20211012 01:28:19.204"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211012 01:28:19.204" endtime="20211012 01:28:19.204"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211012 01:28:19.204" endtime="20211012 01:28:19.204"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211012 01:28:19.205" endtime="20211012 01:28:19.205"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211012 01:28:19.205" endtime="20211012 01:28:19.205"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211012 01:28:19.205" endtime="20211012 01:28:19.205"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211012 01:28:19.205" endtime="20211012 01:28:19.205"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211012 01:28:19.206" endtime="20211012 01:28:19.206"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211012 01:28:19.206" endtime="20211012 01:28:19.206"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211012 01:28:19.206" endtime="20211012 01:28:19.206"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211012 01:28:19.206" endtime="20211012 01:28:19.206"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211012 01:28:19.207" endtime="20211012 01:28:19.207"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211012 01:28:19.207" endtime="20211012 01:28:19.207"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211012 01:28:19.207" endtime="20211012 01:28:19.207"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211012 01:28:19.208" endtime="20211012 01:28:19.208"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211012 01:28:19.208" endtime="20211012 01:28:19.208"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211012 01:28:19.208" endtime="20211012 01:28:19.208"/>
</kw>
<status status="FAIL" starttime="20211012 01:25:06.664" endtime="20211012 01:28:19.208"/>
</kw>
<status status="FAIL" starttime="20211012 01:25:06.663" endtime="20211012 01:28:19.208"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211012 01:28:19.208" endtime="20211012 01:28:19.209"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211012 01:28:19.209" endtime="20211012 01:28:19.209"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211012 01:28:19.209" endtime="20211012 01:28:19.210"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211012 01:28:19.210" endtime="20211012 01:28:19.210"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211012 01:28:19.210" endtime="20211012 01:28:19.210"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211012 01:28:19.211" endtime="20211012 01:28:19.211"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211012 01:28:19.211" endtime="20211012 01:28:19.213"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211012 01:28:19.213" endtime="20211012 01:28:19.213"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211012 01:28:19.214" endtime="20211012 01:28:19.214"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211012 01:28:19.214" endtime="20211012 01:28:19.214"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211012 01:28:19.214" endtime="20211012 01:28:19.214"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211012 01:28:19.215" endtime="20211012 01:28:19.215"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211012 01:28:19.215" endtime="20211012 01:28:19.215"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211012 01:28:19.215" endtime="20211012 01:28:19.215"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211012 01:28:19.216" endtime="20211012 01:28:19.216"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211012 01:28:19.216" endtime="20211012 01:28:19.216"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211012 01:28:19.216" endtime="20211012 01:28:19.216"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211012 01:28:19.216" endtime="20211012 01:28:19.216"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211012 01:28:19.216" endtime="20211012 01:28:19.216"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211012 01:28:19.216" endtime="20211012 01:28:19.217"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211012 01:28:19.217" endtime="20211012 01:28:19.217"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211012 01:28:19.217" endtime="20211012 01:28:19.217"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211012 01:28:19.217" endtime="20211012 01:28:19.217"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211012 01:28:19.218" endtime="20211012 01:28:19.218"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211012 01:28:19.218" endtime="20211012 01:28:19.218"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211012 01:28:19.218" endtime="20211012 01:28:19.218"/>
</kw>
<status status="FAIL" starttime="20211012 01:23:19.198" endtime="20211012 01:28:19.219"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211012 01:23:19.198" endtime="20211012 01:28:19.219">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20211012 01:23:19.169" endtime="20211012 01:28:19.221"/>
</suite>
<suite id="s1-s1-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211012 01:28:19.271" level="INFO">${random} = 95283</msg>
<status status="PASS" starttime="20211012 01:28:19.268" endtime="20211012 01:28:19.271"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211012 01:28:19.285" level="INFO">${prefix} = 95283</msg>
<status status="PASS" starttime="20211012 01:28:19.279" endtime="20211012 01:28:19.285"/>
</kw>
<status status="PASS" starttime="20211012 01:28:19.264" endtime="20211012 01:28:19.285"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:28:19.311" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:28:19.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:28:19.335" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211012 01:28:19.300" endtime="20211012 01:28:19.335"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:28:19.342" level="INFO">scm</msg>
<status status="PASS" starttime="20211012 01:28:19.335" endtime="20211012 01:28:19.342"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:28:19.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:28:19.342" endtime="20211012 01:28:19.343"/>
</kw>
<status status="PASS" starttime="20211012 01:28:19.300" endtime="20211012 01:28:19.343"/>
</kw>
<msg timestamp="20211012 01:28:19.344" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:28:19.299" endtime="20211012 01:28:19.344"/>
</kw>
<msg timestamp="20211012 01:28:19.344" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211012 01:28:19.294" endtime="20211012 01:28:19.344"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211012 01:28:19.359" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211012 01:28:19.344" endtime="20211012 01:28:19.359"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:28:19.384" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:28:19.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:28:19.439" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:28:19.371" endtime="20211012 01:28:19.440"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:28:19.453" level="INFO"/>
<status status="PASS" starttime="20211012 01:28:19.448" endtime="20211012 01:28:19.454"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:28:19.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:28:19.454" endtime="20211012 01:28:19.457"/>
</kw>
<status status="PASS" starttime="20211012 01:28:19.370" endtime="20211012 01:28:19.459"/>
</kw>
<msg timestamp="20211012 01:28:19.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:28:19.369" endtime="20211012 01:28:19.460"/>
</kw>
<status status="PASS" starttime="20211012 01:28:19.360" endtime="20211012 01:28:19.461"/>
</kw>
<status status="PASS" starttime="20211012 01:28:19.360" endtime="20211012 01:28:19.461"/>
</kw>
<status status="PASS" starttime="20211012 01:28:19.292" endtime="20211012 01:28:19.463"/>
</kw>
<status status="PASS" starttime="20211012 01:28:19.289" endtime="20211012 01:28:19.463"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:28:19.490" level="INFO">Running command 'ozone sh volume info o3://om:9862/95283-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:28:27.329" level="INFO">${rc} = 255</msg>
<msg timestamp="20211012 01:28:27.329" level="INFO">${output} = VOLUME_NOT_FOUND Volume 95283-rpcwoport is not found</msg>
<status status="PASS" starttime="20211012 01:28:19.470" endtime="20211012 01:28:27.329"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:28:27.331" level="INFO">VOLUME_NOT_FOUND Volume 95283-rpcwoport is not found</msg>
<status status="PASS" starttime="20211012 01:28:27.330" endtime="20211012 01:28:27.332"/>
</kw>
<msg timestamp="20211012 01:28:27.332" level="INFO">${result} = VOLUME_NOT_FOUND Volume 95283-rpcwoport is not found</msg>
<status status="PASS" starttime="20211012 01:28:19.467" endtime="20211012 01:28:27.332"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211012 01:28:27.333" endtime="20211012 01:28:27.334"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:28:27.340" level="INFO">Running command 'ozone sh volume create o3://om:9862/95283-rpcwoport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:28:34.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:28:34.763" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:28:27.337" endtime="20211012 01:28:34.763"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:28:34.764" level="INFO"/>
<status status="PASS" starttime="20211012 01:28:34.763" endtime="20211012 01:28:34.765"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:28:34.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:28:34.765" endtime="20211012 01:28:34.766"/>
</kw>
<status status="PASS" starttime="20211012 01:28:27.336" endtime="20211012 01:28:34.767"/>
</kw>
<msg timestamp="20211012 01:28:34.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:28:27.336" endtime="20211012 01:28:34.767"/>
</kw>
<msg timestamp="20211012 01:28:34.767" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211012 01:28:27.334" endtime="20211012 01:28:34.767"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211012 01:28:34.768" endtime="20211012 01:28:34.768"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:28:34.782" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '.[] | select(.name=="95283-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:28:42.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:28:42.017" level="INFO">${output} = {
  "metadata": {},
  "name": "95283-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211012 01:28:34.772" endtime="20211012 01:28:42.018"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:28:42.019" level="INFO">{
  "metadata": {},
  "name": "95283-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-12T01:28:34.513Z",
  "modificationTime": "2021-10-12T01:28:34.513Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211012 01:28:42.018" endtime="20211012 01:28:42.020"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:28:42.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:28:42.020" endtime="20211012 01:28:42.021"/>
</kw>
<status status="PASS" starttime="20211012 01:28:34.771" endtime="20211012 01:28:42.022"/>
</kw>
<msg timestamp="20211012 01:28:42.022" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:28:34.770" endtime="20211012 01:28:42.022"/>
</kw>
<msg timestamp="20211012 01:28:42.022" level="INFO">${result} = {
  "metadata": {},
  "name": "95283-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211012 01:28:34.768" endtime="20211012 01:28:42.022"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211012 01:28:42.022" endtime="20211012 01:28:42.023"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:28:42.028" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="95283-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:28:49.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:28:49.540" level="INFO">${output} = {
  "metadata": {},
  "name": "95283-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211012 01:28:42.024" endtime="20211012 01:28:49.540"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:28:49.541" level="INFO">{
  "metadata": {},
  "name": "95283-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-12T01:28:34.513Z",
  "modificationTime": "2021-10-12T01:28:34.513Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211012 01:28:49.541" endtime="20211012 01:28:49.542"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:28:49.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:28:49.542" endtime="20211012 01:28:49.543"/>
</kw>
<status status="PASS" starttime="20211012 01:28:42.024" endtime="20211012 01:28:49.543"/>
</kw>
<msg timestamp="20211012 01:28:49.543" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:28:42.024" endtime="20211012 01:28:49.543"/>
</kw>
<msg timestamp="20211012 01:28:49.544" level="INFO">${result} = {
  "metadata": {},
  "name": "95283-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211012 01:28:42.023" endtime="20211012 01:28:49.544"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211012 01:28:49.544" endtime="20211012 01:28:49.544"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:28:49.549" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/95283-rpcwoport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:28:57.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:28:57.731" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:28:49.547" endtime="20211012 01:28:57.731"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:28:57.732" level="INFO"/>
<status status="PASS" starttime="20211012 01:28:57.732" endtime="20211012 01:28:57.732"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:28:57.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:28:57.733" endtime="20211012 01:28:57.734"/>
</kw>
<status status="PASS" starttime="20211012 01:28:49.546" endtime="20211012 01:28:57.734"/>
</kw>
<msg timestamp="20211012 01:28:57.734" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:28:49.546" endtime="20211012 01:28:57.735"/>
</kw>
<status status="PASS" starttime="20211012 01:28:49.545" endtime="20211012 01:28:57.735"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:28:57.742" level="INFO">Running command 'ozone sh volume info o3://om:9862/95283-rpcwoport | jq -r '. | select(.name=="95283-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:29:05.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:29:05.294" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211012 01:28:57.739" endtime="20211012 01:29:05.294"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:29:05.295" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211012 01:29:05.295" endtime="20211012 01:29:05.296"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:29:05.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:29:05.296" endtime="20211012 01:29:05.297"/>
</kw>
<status status="PASS" starttime="20211012 01:28:57.738" endtime="20211012 01:29:05.297"/>
</kw>
<msg timestamp="20211012 01:29:05.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:28:57.737" endtime="20211012 01:29:05.298"/>
</kw>
<msg timestamp="20211012 01:29:05.299" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211012 01:28:57.736" endtime="20211012 01:29:05.299"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211012 01:29:05.299" endtime="20211012 01:29:05.300"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:29:05.305" level="INFO">Running command 'ozone sh bucket create o3://om:9862/95283-rpcwoport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:29:12.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:29:12.279" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:29:05.302" endtime="20211012 01:29:12.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:29:12.281" level="INFO"/>
<status status="PASS" starttime="20211012 01:29:12.280" endtime="20211012 01:29:12.282"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:29:12.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:29:12.282" endtime="20211012 01:29:12.283"/>
</kw>
<status status="PASS" starttime="20211012 01:29:05.301" endtime="20211012 01:29:12.284"/>
</kw>
<msg timestamp="20211012 01:29:12.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:29:05.301" endtime="20211012 01:29:12.284"/>
</kw>
<status status="PASS" starttime="20211012 01:29:05.300" endtime="20211012 01:29:12.284"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:29:12.291" level="INFO">Running command 'ozone sh bucket info o3://om:9862/95283-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:29:21.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:29:21.286" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211012 01:29:12.289" endtime="20211012 01:29:21.286"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:29:21.288" level="INFO">DISK</msg>
<status status="PASS" starttime="20211012 01:29:21.286" endtime="20211012 01:29:21.288"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:29:21.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:29:21.288" endtime="20211012 01:29:21.289"/>
</kw>
<status status="PASS" starttime="20211012 01:29:12.288" endtime="20211012 01:29:21.289"/>
</kw>
<msg timestamp="20211012 01:29:21.289" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:29:12.287" endtime="20211012 01:29:21.289"/>
</kw>
<msg timestamp="20211012 01:29:21.290" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211012 01:29:12.285" endtime="20211012 01:29:21.290"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211012 01:29:21.290" endtime="20211012 01:29:21.291"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:29:21.297" level="INFO">Running command 'ozone sh bucket info o3://om:9862/95283-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:29:28.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:29:28.507" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211012 01:29:21.294" endtime="20211012 01:29:28.507"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:29:28.509" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211012 01:29:28.508" endtime="20211012 01:29:28.509"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:29:28.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:29:28.509" endtime="20211012 01:29:28.510"/>
</kw>
<status status="PASS" starttime="20211012 01:29:21.292" endtime="20211012 01:29:28.510"/>
</kw>
<msg timestamp="20211012 01:29:28.510" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:29:21.292" endtime="20211012 01:29:28.510"/>
</kw>
<msg timestamp="20211012 01:29:28.510" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211012 01:29:21.291" endtime="20211012 01:29:28.510"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211012 01:29:28.511" endtime="20211012 01:29:28.511"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:29:28.516" level="INFO">Running command 'ozone sh bucket info o3://om:9862/95283-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:29:37.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:29:37.383" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211012 01:29:28.513" endtime="20211012 01:29:37.384"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:29:37.386" level="INFO">100</msg>
<status status="PASS" starttime="20211012 01:29:37.384" endtime="20211012 01:29:37.386"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:29:37.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:29:37.386" endtime="20211012 01:29:37.387"/>
</kw>
<status status="PASS" starttime="20211012 01:29:28.512" endtime="20211012 01:29:37.388"/>
</kw>
<msg timestamp="20211012 01:29:37.388" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:29:28.512" endtime="20211012 01:29:37.389"/>
</kw>
<msg timestamp="20211012 01:29:37.390" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211012 01:29:28.511" endtime="20211012 01:29:37.390"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211012 01:29:37.391" endtime="20211012 01:29:37.392"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:29:37.399" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/95283-rpcwoport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:29:44.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:29:44.194" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:29:37.396" endtime="20211012 01:29:44.194"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:29:44.196" level="INFO"/>
<status status="PASS" starttime="20211012 01:29:44.195" endtime="20211012 01:29:44.196"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:29:44.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:29:44.196" endtime="20211012 01:29:44.196"/>
</kw>
<status status="PASS" starttime="20211012 01:29:37.394" endtime="20211012 01:29:44.197"/>
</kw>
<msg timestamp="20211012 01:29:44.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:29:37.394" endtime="20211012 01:29:44.198"/>
</kw>
<status status="PASS" starttime="20211012 01:29:37.392" endtime="20211012 01:29:44.198"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:29:44.207" level="INFO">Running command 'ozone sh bucket info o3://om:9862/95283-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:29:51.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:29:51.983" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211012 01:29:44.203" endtime="20211012 01:29:51.983"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:29:51.985" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211012 01:29:51.983" endtime="20211012 01:29:51.985"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:29:51.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:29:51.986" endtime="20211012 01:29:51.987"/>
</kw>
<status status="PASS" starttime="20211012 01:29:44.202" endtime="20211012 01:29:51.987"/>
</kw>
<msg timestamp="20211012 01:29:51.987" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:29:44.201" endtime="20211012 01:29:51.988"/>
</kw>
<msg timestamp="20211012 01:29:51.988" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211012 01:29:44.198" endtime="20211012 01:29:51.988"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211012 01:29:51.989" endtime="20211012 01:29:51.989"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:29:51.997" level="INFO">Running command 'ozone sh bucket info o3://om:9862/95283-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:29:59.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:29:59.842" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211012 01:29:51.993" endtime="20211012 01:29:59.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:29:59.844" level="INFO">1000</msg>
<status status="PASS" starttime="20211012 01:29:59.842" endtime="20211012 01:29:59.844"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:29:59.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:29:59.844" endtime="20211012 01:29:59.845"/>
</kw>
<status status="PASS" starttime="20211012 01:29:51.992" endtime="20211012 01:29:59.845"/>
</kw>
<msg timestamp="20211012 01:29:59.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:29:51.992" endtime="20211012 01:29:59.845"/>
</kw>
<msg timestamp="20211012 01:29:59.846" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211012 01:29:51.990" endtime="20211012 01:29:59.846"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211012 01:29:59.846" endtime="20211012 01:29:59.846"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:29:59.850" level="INFO">Running command 'ozone sh bucket list o3://om:9862/95283-rpcwoport/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:30:06.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:30:06.468" level="INFO">${output} = 95283-rpcwoport</msg>
<status status="PASS" starttime="20211012 01:29:59.848" endtime="20211012 01:30:06.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:30:06.469" level="INFO">95283-rpcwoport</msg>
<status status="PASS" starttime="20211012 01:30:06.469" endtime="20211012 01:30:06.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:30:06.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:30:06.470" endtime="20211012 01:30:06.471"/>
</kw>
<status status="PASS" starttime="20211012 01:29:59.848" endtime="20211012 01:30:06.471"/>
</kw>
<msg timestamp="20211012 01:30:06.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:29:59.847" endtime="20211012 01:30:06.471"/>
</kw>
<msg timestamp="20211012 01:30:06.471" level="INFO">${result} = 95283-rpcwoport</msg>
<status status="PASS" starttime="20211012 01:29:59.847" endtime="20211012 01:30:06.471"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211012 01:30:06.472" endtime="20211012 01:30:06.472"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:30:06.480" level="INFO">Running command 'ozone sh key put o3://om:9862/95283-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:33:17.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:33:17.522" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:30:06.477" endtime="20211012 01:33:17.522"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:33:17.523" level="INFO"/>
<status status="PASS" starttime="20211012 01:33:17.522" endtime="20211012 01:33:17.523"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:33:17.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:33:17.523" endtime="20211012 01:33:17.524"/>
</kw>
<status status="PASS" starttime="20211012 01:30:06.476" endtime="20211012 01:33:17.524"/>
</kw>
<msg timestamp="20211012 01:33:17.524" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:30:06.475" endtime="20211012 01:33:17.525"/>
</kw>
<status status="PASS" starttime="20211012 01:30:06.474" endtime="20211012 01:33:17.525"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:33:17.530" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:33:17.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:33:17.535" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:33:17.528" endtime="20211012 01:33:17.535"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:33:17.536" level="INFO"/>
<status status="PASS" starttime="20211012 01:33:17.536" endtime="20211012 01:33:17.537"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:33:17.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:33:17.537" endtime="20211012 01:33:17.538"/>
</kw>
<status status="PASS" starttime="20211012 01:33:17.526" endtime="20211012 01:33:17.538"/>
</kw>
<msg timestamp="20211012 01:33:17.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:33:17.526" endtime="20211012 01:33:17.538"/>
</kw>
<status status="PASS" starttime="20211012 01:33:17.525" endtime="20211012 01:33:17.538"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:33:17.544" level="INFO">Running command 'ozone sh key get o3://om:9862/95283-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:33:19.292" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211012 01:33:17.541" endtime="20211012 01:33:19.293"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211012 01:33:19.298" endtime="20211012 01:33:19.298"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211012 01:33:19.299" endtime="20211012 01:33:19.300"/>
</kw>
<status status="FAIL" starttime="20211012 01:33:17.540" endtime="20211012 01:33:19.300"/>
</kw>
<msg timestamp="20211012 01:33:19.300" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211012 01:33:17.540" endtime="20211012 01:33:19.300"/>
</kw>
<status status="FAIL" starttime="20211012 01:33:17.539" endtime="20211012 01:33:19.300"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211012 01:33:19.301" endtime="20211012 01:33:19.302"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211012 01:33:19.303" endtime="20211012 01:33:19.304"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211012 01:33:19.304" endtime="20211012 01:33:19.304"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211012 01:33:19.304" endtime="20211012 01:33:19.304"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211012 01:33:19.305" endtime="20211012 01:33:19.305"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211012 01:33:19.305" endtime="20211012 01:33:19.306"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211012 01:33:19.308" endtime="20211012 01:33:19.309"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211012 01:33:19.309" endtime="20211012 01:33:19.309"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211012 01:33:19.309" endtime="20211012 01:33:19.309"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211012 01:33:19.313" endtime="20211012 01:33:19.314"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211012 01:33:19.316" endtime="20211012 01:33:19.316"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211012 01:33:19.316" endtime="20211012 01:33:19.316"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211012 01:33:19.316" endtime="20211012 01:33:19.316"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211012 01:33:19.317" endtime="20211012 01:33:19.317"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211012 01:33:19.317" endtime="20211012 01:33:19.317"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211012 01:33:19.317" endtime="20211012 01:33:19.317"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211012 01:33:19.317" endtime="20211012 01:33:19.317"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211012 01:33:19.317" endtime="20211012 01:33:19.318"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211012 01:33:19.318" endtime="20211012 01:33:19.318"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211012 01:33:19.318" endtime="20211012 01:33:19.318"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211012 01:33:19.318" endtime="20211012 01:33:19.318"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211012 01:33:19.318" endtime="20211012 01:33:19.318"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211012 01:33:19.318" endtime="20211012 01:33:19.318"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211012 01:33:19.319" endtime="20211012 01:33:19.319"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211012 01:33:19.319" endtime="20211012 01:33:19.319"/>
</kw>
<status status="FAIL" starttime="20211012 01:30:06.472" endtime="20211012 01:33:19.319"/>
</kw>
<status status="FAIL" starttime="20211012 01:30:06.472" endtime="20211012 01:33:19.319"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211012 01:33:19.319" endtime="20211012 01:33:19.319"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211012 01:33:19.319" endtime="20211012 01:33:19.319"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211012 01:33:19.325" endtime="20211012 01:33:19.326"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211012 01:33:19.327" endtime="20211012 01:33:19.327"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211012 01:33:19.331" endtime="20211012 01:33:19.331"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211012 01:33:19.331" endtime="20211012 01:33:19.331"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211012 01:33:19.331" endtime="20211012 01:33:19.331"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211012 01:33:19.332" endtime="20211012 01:33:19.335"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211012 01:33:19.336" endtime="20211012 01:33:19.336"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211012 01:33:19.336" endtime="20211012 01:33:19.336"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211012 01:33:19.336" endtime="20211012 01:33:19.336"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211012 01:33:19.343" endtime="20211012 01:33:19.345"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211012 01:33:19.345" endtime="20211012 01:33:19.345"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211012 01:33:19.346" endtime="20211012 01:33:19.347"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211012 01:33:19.348" endtime="20211012 01:33:19.348"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211012 01:33:19.348" endtime="20211012 01:33:19.348"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211012 01:33:19.348" endtime="20211012 01:33:19.348"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211012 01:33:19.348" endtime="20211012 01:33:19.348"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211012 01:33:19.348" endtime="20211012 01:33:19.350"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211012 01:33:19.351" endtime="20211012 01:33:19.351"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211012 01:33:19.351" endtime="20211012 01:33:19.351"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211012 01:33:19.351" endtime="20211012 01:33:19.351"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211012 01:33:19.351" endtime="20211012 01:33:19.351"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211012 01:33:19.351" endtime="20211012 01:33:19.351"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211012 01:33:19.352" endtime="20211012 01:33:19.352"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211012 01:33:19.358" endtime="20211012 01:33:19.358"/>
</kw>
<status status="FAIL" starttime="20211012 01:28:19.465" endtime="20211012 01:33:19.359"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211012 01:28:19.286" endtime="20211012 01:33:19.359">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:33:19.440" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:33:19.462" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:33:19.462" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211012 01:33:19.419" endtime="20211012 01:33:19.462"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:33:19.463" level="INFO">scm</msg>
<status status="PASS" starttime="20211012 01:33:19.463" endtime="20211012 01:33:19.464"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:33:19.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:33:19.464" endtime="20211012 01:33:19.465"/>
</kw>
<status status="PASS" starttime="20211012 01:33:19.419" endtime="20211012 01:33:19.465"/>
</kw>
<msg timestamp="20211012 01:33:19.465" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:33:19.380" endtime="20211012 01:33:19.465"/>
</kw>
<msg timestamp="20211012 01:33:19.466" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211012 01:33:19.378" endtime="20211012 01:33:19.466"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211012 01:33:19.466" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211012 01:33:19.466" endtime="20211012 01:33:19.467"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:33:19.484" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:33:19.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:33:19.535" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:33:19.476" endtime="20211012 01:33:19.535"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:33:19.537" level="INFO"/>
<status status="PASS" starttime="20211012 01:33:19.536" endtime="20211012 01:33:19.537"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:33:19.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:33:19.539" endtime="20211012 01:33:19.540"/>
</kw>
<status status="PASS" starttime="20211012 01:33:19.471" endtime="20211012 01:33:19.542"/>
</kw>
<msg timestamp="20211012 01:33:19.542" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:33:19.471" endtime="20211012 01:33:19.543"/>
</kw>
<status status="PASS" starttime="20211012 01:33:19.468" endtime="20211012 01:33:19.543"/>
</kw>
<status status="PASS" starttime="20211012 01:33:19.467" endtime="20211012 01:33:19.544"/>
</kw>
<status status="PASS" starttime="20211012 01:33:19.370" endtime="20211012 01:33:19.545"/>
</kw>
<status status="PASS" starttime="20211012 01:33:19.370" endtime="20211012 01:33:19.545"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:33:19.568" level="INFO">Running command 'ozone sh volume create o3://om:9862/95283-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:33:34.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:33:34.815" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:33:19.557" endtime="20211012 01:33:34.815"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:33:34.816" level="INFO"/>
<status status="PASS" starttime="20211012 01:33:34.816" endtime="20211012 01:33:34.816"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:33:34.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:33:34.817" endtime="20211012 01:33:34.824"/>
</kw>
<status status="PASS" starttime="20211012 01:33:19.557" endtime="20211012 01:33:34.824"/>
</kw>
<msg timestamp="20211012 01:33:34.825" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:33:19.557" endtime="20211012 01:33:34.825"/>
</kw>
<status status="PASS" starttime="20211012 01:33:19.552" endtime="20211012 01:33:34.825"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:33:34.838" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/95283-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:33:43.261" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:33:43.261" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211012 01:33:34.834" endtime="20211012 01:33:43.261"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:33:43.262" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211012 01:33:43.262" endtime="20211012 01:33:43.262"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:33:43.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:33:43.263" endtime="20211012 01:33:43.263"/>
</kw>
<status status="PASS" starttime="20211012 01:33:34.826" endtime="20211012 01:33:43.264"/>
</kw>
<msg timestamp="20211012 01:33:43.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:33:34.826" endtime="20211012 01:33:43.264"/>
</kw>
<msg timestamp="20211012 01:33:43.265" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211012 01:33:34.825" endtime="20211012 01:33:43.265"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211012 01:33:43.265" endtime="20211012 01:33:43.267"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:33:43.272" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/95283-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:33:49.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:33:49.686" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211012 01:33:43.269" endtime="20211012 01:33:49.686"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:33:49.688" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211012 01:33:49.687" endtime="20211012 01:33:49.688"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:33:49.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:33:49.688" endtime="20211012 01:33:49.689"/>
</kw>
<status status="PASS" starttime="20211012 01:33:43.268" endtime="20211012 01:33:49.690"/>
</kw>
<msg timestamp="20211012 01:33:49.690" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:33:43.268" endtime="20211012 01:33:49.690"/>
</kw>
<msg timestamp="20211012 01:33:49.691" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211012 01:33:43.267" endtime="20211012 01:33:49.691"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:33:49.695" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/95283-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:33:56.713" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:33:56.713" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211012 01:33:49.693" endtime="20211012 01:33:56.714"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:33:56.717" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211012 01:33:56.715" endtime="20211012 01:33:56.717"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:33:56.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:33:56.718" endtime="20211012 01:33:56.719"/>
</kw>
<status status="PASS" starttime="20211012 01:33:49.692" endtime="20211012 01:33:56.719"/>
</kw>
<msg timestamp="20211012 01:33:56.720" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:33:49.692" endtime="20211012 01:33:56.720"/>
</kw>
<msg timestamp="20211012 01:33:56.720" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211012 01:33:49.691" endtime="20211012 01:33:56.720"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211012 01:33:56.720" endtime="20211012 01:33:56.722"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:33:56.729" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/95283-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:34:03.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:34:03.656" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211012 01:33:56.726" endtime="20211012 01:34:03.657"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:34:03.658" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211012 01:34:03.657" endtime="20211012 01:34:03.658"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:34:03.659" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:34:03.658" endtime="20211012 01:34:03.659"/>
</kw>
<status status="PASS" starttime="20211012 01:33:56.725" endtime="20211012 01:34:03.659"/>
</kw>
<msg timestamp="20211012 01:34:03.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:33:56.724" endtime="20211012 01:34:03.659"/>
</kw>
<msg timestamp="20211012 01:34:03.660" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211012 01:33:56.722" endtime="20211012 01:34:03.660"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:34:03.664" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/95283-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:34:11.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:34:11.770" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211012 01:34:03.662" endtime="20211012 01:34:11.771"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:34:11.773" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211012 01:34:11.772" endtime="20211012 01:34:11.773"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:34:11.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:34:11.773" endtime="20211012 01:34:11.774"/>
</kw>
<status status="PASS" starttime="20211012 01:34:03.661" endtime="20211012 01:34:11.774"/>
</kw>
<msg timestamp="20211012 01:34:11.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:34:03.661" endtime="20211012 01:34:11.774"/>
</kw>
<msg timestamp="20211012 01:34:11.775" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211012 01:34:03.660" endtime="20211012 01:34:11.775"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211012 01:34:11.775" endtime="20211012 01:34:11.776"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:34:11.784" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/95283-rpcwoport2 -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:34:18.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:34:18.836" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211012 01:34:11.781" endtime="20211012 01:34:18.836"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:34:18.838" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211012 01:34:18.837" endtime="20211012 01:34:18.838"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:34:18.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:34:18.838" endtime="20211012 01:34:18.838"/>
</kw>
<status status="PASS" starttime="20211012 01:34:11.779" endtime="20211012 01:34:18.839"/>
</kw>
<msg timestamp="20211012 01:34:18.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:34:11.779" endtime="20211012 01:34:18.839"/>
</kw>
<msg timestamp="20211012 01:34:18.839" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211012 01:34:11.776" endtime="20211012 01:34:18.839"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:34:18.845" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/95283-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:34:26.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:34:26.491" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211012 01:34:18.842" endtime="20211012 01:34:26.491"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:34:26.493" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211012 01:34:26.492" endtime="20211012 01:34:26.493"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:34:26.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:34:26.494" endtime="20211012 01:34:26.494"/>
</kw>
<status status="PASS" starttime="20211012 01:34:18.841" endtime="20211012 01:34:26.495"/>
</kw>
<msg timestamp="20211012 01:34:26.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:34:18.840" endtime="20211012 01:34:26.495"/>
</kw>
<msg timestamp="20211012 01:34:26.495" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211012 01:34:18.840" endtime="20211012 01:34:26.495"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211012 01:34:26.496" endtime="20211012 01:34:26.496"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211012 01:34:26.496" endtime="20211012 01:34:26.497"/>
</kw>
<status status="PASS" starttime="20211012 01:33:19.546" endtime="20211012 01:34:26.498"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211012 01:33:19.365" endtime="20211012 01:34:26.498"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:34:26.507" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:34:26.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:34:26.512" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211012 01:34:26.504" endtime="20211012 01:34:26.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:34:26.514" level="INFO">scm</msg>
<status status="PASS" starttime="20211012 01:34:26.513" endtime="20211012 01:34:26.514"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:34:26.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:34:26.514" endtime="20211012 01:34:26.515"/>
</kw>
<status status="PASS" starttime="20211012 01:34:26.504" endtime="20211012 01:34:26.516"/>
</kw>
<msg timestamp="20211012 01:34:26.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:34:26.503" endtime="20211012 01:34:26.516"/>
</kw>
<msg timestamp="20211012 01:34:26.517" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211012 01:34:26.503" endtime="20211012 01:34:26.517"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211012 01:34:26.517" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211012 01:34:26.517" endtime="20211012 01:34:26.517"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:34:26.523" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:34:26.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:34:26.532" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:34:26.521" endtime="20211012 01:34:26.532"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:34:26.534" level="INFO"/>
<status status="PASS" starttime="20211012 01:34:26.533" endtime="20211012 01:34:26.534"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:34:26.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:34:26.534" endtime="20211012 01:34:26.536"/>
</kw>
<status status="PASS" starttime="20211012 01:34:26.520" endtime="20211012 01:34:26.536"/>
</kw>
<msg timestamp="20211012 01:34:26.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:34:26.519" endtime="20211012 01:34:26.537"/>
</kw>
<status status="PASS" starttime="20211012 01:34:26.518" endtime="20211012 01:34:26.537"/>
</kw>
<status status="PASS" starttime="20211012 01:34:26.518" endtime="20211012 01:34:26.537"/>
</kw>
<status status="PASS" starttime="20211012 01:34:26.501" endtime="20211012 01:34:26.538"/>
</kw>
<status status="PASS" starttime="20211012 01:34:26.501" endtime="20211012 01:34:26.538"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:34:26.544" level="INFO">Running command 'ozone sh bucket create o3://om:9862/95283-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:34:33.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:34:33.814" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:34:26.541" endtime="20211012 01:34:33.814"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:34:33.815" level="INFO"/>
<status status="PASS" starttime="20211012 01:34:33.814" endtime="20211012 01:34:33.815"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:34:33.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:34:33.815" endtime="20211012 01:34:33.816"/>
</kw>
<status status="PASS" starttime="20211012 01:34:26.541" endtime="20211012 01:34:33.817"/>
</kw>
<msg timestamp="20211012 01:34:33.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:34:26.540" endtime="20211012 01:34:33.817"/>
</kw>
<status status="PASS" starttime="20211012 01:34:26.539" endtime="20211012 01:34:33.817"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:34:33.822" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/95283-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:34:40.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:34:40.278" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211012 01:34:33.819" endtime="20211012 01:34:40.278"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:34:40.279" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211012 01:34:40.278" endtime="20211012 01:34:40.279"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:34:40.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:34:40.280" endtime="20211012 01:34:40.280"/>
</kw>
<status status="PASS" starttime="20211012 01:34:33.818" endtime="20211012 01:34:40.281"/>
</kw>
<msg timestamp="20211012 01:34:40.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:34:33.818" endtime="20211012 01:34:40.281"/>
</kw>
<msg timestamp="20211012 01:34:40.281" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211012 01:34:33.817" endtime="20211012 01:34:40.281"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211012 01:34:40.281" endtime="20211012 01:34:40.282"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:34:40.287" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/95283-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:34:47.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:34:47.538" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20211012 01:34:40.284" endtime="20211012 01:34:47.538"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:34:47.539" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20211012 01:34:47.539" endtime="20211012 01:34:47.540"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:34:47.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:34:47.540" endtime="20211012 01:34:47.540"/>
</kw>
<status status="PASS" starttime="20211012 01:34:40.284" endtime="20211012 01:34:47.541"/>
</kw>
<msg timestamp="20211012 01:34:47.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:34:40.283" endtime="20211012 01:34:47.541"/>
</kw>
<msg timestamp="20211012 01:34:47.541" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20211012 01:34:40.282" endtime="20211012 01:34:47.541"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:34:47.546" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/95283-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:34:55.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:34:55.755" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211012 01:34:47.544" endtime="20211012 01:34:55.755"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:34:55.757" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211012 01:34:55.756" endtime="20211012 01:34:55.758"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:34:55.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:34:55.758" endtime="20211012 01:34:55.759"/>
</kw>
<status status="PASS" starttime="20211012 01:34:47.543" endtime="20211012 01:34:55.759"/>
</kw>
<msg timestamp="20211012 01:34:55.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:34:47.543" endtime="20211012 01:34:55.760"/>
</kw>
<msg timestamp="20211012 01:34:55.760" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211012 01:34:47.542" endtime="20211012 01:34:55.760"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211012 01:34:55.760" endtime="20211012 01:34:55.762"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:34:55.768" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/95283-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:35:04.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:35:04.360" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211012 01:34:55.765" endtime="20211012 01:35:04.360"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:35:04.362" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211012 01:35:04.361" endtime="20211012 01:35:04.362"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:35:04.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:35:04.362" endtime="20211012 01:35:04.363"/>
</kw>
<status status="PASS" starttime="20211012 01:34:55.764" endtime="20211012 01:35:04.364"/>
</kw>
<msg timestamp="20211012 01:35:04.364" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:34:55.764" endtime="20211012 01:35:04.364"/>
</kw>
<msg timestamp="20211012 01:35:04.365" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211012 01:34:55.763" endtime="20211012 01:35:04.365"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:35:04.371" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/95283-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:35:13.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:35:13.454" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211012 01:35:04.367" endtime="20211012 01:35:13.454"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:35:13.455" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211012 01:35:13.454" endtime="20211012 01:35:13.455"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:35:13.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:35:13.456" endtime="20211012 01:35:13.457"/>
</kw>
<status status="PASS" starttime="20211012 01:35:04.367" endtime="20211012 01:35:13.457"/>
</kw>
<msg timestamp="20211012 01:35:13.458" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:35:04.366" endtime="20211012 01:35:13.458"/>
</kw>
<msg timestamp="20211012 01:35:13.459" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211012 01:35:04.366" endtime="20211012 01:35:13.459"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211012 01:35:13.459" endtime="20211012 01:35:13.461"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:35:13.470" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/95283-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:35:21.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:35:21.044" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211012 01:35:13.466" endtime="20211012 01:35:21.044"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:35:21.046" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211012 01:35:21.045" endtime="20211012 01:35:21.046"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:35:21.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:35:21.046" endtime="20211012 01:35:21.047"/>
</kw>
<status status="PASS" starttime="20211012 01:35:13.464" endtime="20211012 01:35:21.048"/>
</kw>
<msg timestamp="20211012 01:35:21.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:35:13.463" endtime="20211012 01:35:21.048"/>
</kw>
<msg timestamp="20211012 01:35:21.048" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211012 01:35:13.461" endtime="20211012 01:35:21.049"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:35:21.054" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/95283-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:35:27.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:35:27.568" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211012 01:35:21.051" endtime="20211012 01:35:27.568"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:35:27.570" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211012 01:35:27.569" endtime="20211012 01:35:27.570"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:35:27.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:35:27.570" endtime="20211012 01:35:27.571"/>
</kw>
<status status="PASS" starttime="20211012 01:35:21.050" endtime="20211012 01:35:27.571"/>
</kw>
<msg timestamp="20211012 01:35:27.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:35:21.050" endtime="20211012 01:35:27.571"/>
</kw>
<msg timestamp="20211012 01:35:27.572" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211012 01:35:21.049" endtime="20211012 01:35:27.572"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211012 01:35:27.572" endtime="20211012 01:35:27.573"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211012 01:35:27.573" endtime="20211012 01:35:27.574"/>
</kw>
<status status="PASS" starttime="20211012 01:34:26.538" endtime="20211012 01:35:27.574"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211012 01:34:26.499" endtime="20211012 01:35:27.575"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:35:27.584" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:35:27.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:35:27.591" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211012 01:35:27.582" endtime="20211012 01:35:27.591"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:35:27.593" level="INFO">scm</msg>
<status status="PASS" starttime="20211012 01:35:27.592" endtime="20211012 01:35:27.593"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:35:27.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:35:27.594" endtime="20211012 01:35:27.594"/>
</kw>
<status status="PASS" starttime="20211012 01:35:27.581" endtime="20211012 01:35:27.595"/>
</kw>
<msg timestamp="20211012 01:35:27.595" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:35:27.580" endtime="20211012 01:35:27.595"/>
</kw>
<msg timestamp="20211012 01:35:27.596" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211012 01:35:27.579" endtime="20211012 01:35:27.596"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211012 01:35:27.597" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211012 01:35:27.596" endtime="20211012 01:35:27.597"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:35:27.602" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:35:27.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:35:27.611" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:35:27.600" endtime="20211012 01:35:27.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:35:27.613" level="INFO"/>
<status status="PASS" starttime="20211012 01:35:27.612" endtime="20211012 01:35:27.614"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:35:27.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:35:27.614" endtime="20211012 01:35:27.614"/>
</kw>
<status status="PASS" starttime="20211012 01:35:27.599" endtime="20211012 01:35:27.615"/>
</kw>
<msg timestamp="20211012 01:35:27.615" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:35:27.599" endtime="20211012 01:35:27.615"/>
</kw>
<status status="PASS" starttime="20211012 01:35:27.598" endtime="20211012 01:35:27.615"/>
</kw>
<status status="PASS" starttime="20211012 01:35:27.597" endtime="20211012 01:35:27.615"/>
</kw>
<status status="PASS" starttime="20211012 01:35:27.578" endtime="20211012 01:35:27.616"/>
</kw>
<status status="PASS" starttime="20211012 01:35:27.577" endtime="20211012 01:35:27.616"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:35:27.622" level="INFO">Running command 'ozone sh key put o3://om:9862/95283-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:38:37.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:38:37.587" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:35:27.620" endtime="20211012 01:38:37.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:38:37.588" level="INFO"/>
<status status="PASS" starttime="20211012 01:38:37.588" endtime="20211012 01:38:37.589"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:38:37.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:38:37.589" endtime="20211012 01:38:37.590"/>
</kw>
<status status="PASS" starttime="20211012 01:35:27.618" endtime="20211012 01:38:37.590"/>
</kw>
<msg timestamp="20211012 01:38:37.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:35:27.618" endtime="20211012 01:38:37.590"/>
</kw>
<status status="PASS" starttime="20211012 01:35:27.617" endtime="20211012 01:38:37.591"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:38:37.597" level="INFO">Running command 'ozone sh key getacl o3://om:9862/95283-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:38:45.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:38:45.538" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211012 01:38:37.594" endtime="20211012 01:38:45.538"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:38:45.540" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211012 01:38:45.539" endtime="20211012 01:38:45.540"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:38:45.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:38:45.540" endtime="20211012 01:38:45.541"/>
</kw>
<status status="PASS" starttime="20211012 01:38:37.593" endtime="20211012 01:38:45.541"/>
</kw>
<msg timestamp="20211012 01:38:45.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:38:37.593" endtime="20211012 01:38:45.541"/>
</kw>
<msg timestamp="20211012 01:38:45.541" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211012 01:38:37.591" endtime="20211012 01:38:45.541"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211012 01:38:45.542" endtime="20211012 01:38:45.542"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:38:45.546" level="INFO">Running command 'ozone sh key addacl o3://om:9862/95283-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:38:50.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:38:50.566" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211012 01:38:45.544" endtime="20211012 01:38:50.567"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:38:50.568" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211012 01:38:50.567" endtime="20211012 01:38:50.568"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:38:50.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:38:50.568" endtime="20211012 01:38:50.569"/>
</kw>
<status status="PASS" starttime="20211012 01:38:45.543" endtime="20211012 01:38:50.570"/>
</kw>
<msg timestamp="20211012 01:38:50.570" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:38:45.543" endtime="20211012 01:38:50.570"/>
</kw>
<msg timestamp="20211012 01:38:50.570" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211012 01:38:45.542" endtime="20211012 01:38:50.570"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:38:50.579" level="INFO">Running command 'ozone sh key getacl o3://om:9862/95283-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:38:56.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:38:56.715" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211012 01:38:50.573" endtime="20211012 01:38:56.715"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:38:56.716" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211012 01:38:56.715" endtime="20211012 01:38:56.716"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:38:56.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:38:56.716" endtime="20211012 01:38:56.717"/>
</kw>
<status status="PASS" starttime="20211012 01:38:50.572" endtime="20211012 01:38:56.718"/>
</kw>
<msg timestamp="20211012 01:38:56.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:38:50.571" endtime="20211012 01:38:56.718"/>
</kw>
<msg timestamp="20211012 01:38:56.718" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211012 01:38:50.571" endtime="20211012 01:38:56.718"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211012 01:38:56.719" endtime="20211012 01:38:56.720"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:38:56.725" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/95283-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:39:04.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:39:04.191" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211012 01:38:56.722" endtime="20211012 01:39:04.191"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:39:04.192" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211012 01:39:04.191" endtime="20211012 01:39:04.192"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:39:04.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:39:04.193" endtime="20211012 01:39:04.194"/>
</kw>
<status status="PASS" starttime="20211012 01:38:56.722" endtime="20211012 01:39:04.194"/>
</kw>
<msg timestamp="20211012 01:39:04.194" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:38:56.721" endtime="20211012 01:39:04.195"/>
</kw>
<msg timestamp="20211012 01:39:04.195" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211012 01:38:56.720" endtime="20211012 01:39:04.195"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:39:04.201" level="INFO">Running command 'ozone sh key getacl o3://om:9862/95283-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:39:09.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:39:09.748" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211012 01:39:04.197" endtime="20211012 01:39:09.748"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:39:09.750" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20211012 01:39:09.749" endtime="20211012 01:39:09.750"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:39:09.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:39:09.750" endtime="20211012 01:39:09.751"/>
</kw>
<status status="PASS" starttime="20211012 01:39:04.197" endtime="20211012 01:39:09.751"/>
</kw>
<msg timestamp="20211012 01:39:09.751" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:39:04.196" endtime="20211012 01:39:09.752"/>
</kw>
<msg timestamp="20211012 01:39:09.752" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211012 01:39:04.196" endtime="20211012 01:39:09.752"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211012 01:39:09.752" endtime="20211012 01:39:09.752"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:39:09.757" level="INFO">Running command 'ozone sh key setacl o3://om:9862/95283-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:39:16.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:39:16.027" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211012 01:39:09.755" endtime="20211012 01:39:16.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:39:16.029" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211012 01:39:16.028" endtime="20211012 01:39:16.029"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:39:16.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:39:16.029" endtime="20211012 01:39:16.030"/>
</kw>
<status status="PASS" starttime="20211012 01:39:09.755" endtime="20211012 01:39:16.030"/>
</kw>
<msg timestamp="20211012 01:39:16.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:39:09.754" endtime="20211012 01:39:16.031"/>
</kw>
<msg timestamp="20211012 01:39:16.031" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211012 01:39:09.753" endtime="20211012 01:39:16.031"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:39:16.036" level="INFO">Running command 'ozone sh key getacl o3://om:9862/95283-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:39:23.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:39:23.488" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211012 01:39:16.034" endtime="20211012 01:39:23.488"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:39:23.489" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211012 01:39:23.488" endtime="20211012 01:39:23.489"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:39:23.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:39:23.490" endtime="20211012 01:39:23.491"/>
</kw>
<status status="PASS" starttime="20211012 01:39:16.033" endtime="20211012 01:39:23.491"/>
</kw>
<msg timestamp="20211012 01:39:23.491" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:39:16.032" endtime="20211012 01:39:23.491"/>
</kw>
<msg timestamp="20211012 01:39:23.492" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211012 01:39:16.031" endtime="20211012 01:39:23.492"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211012 01:39:23.492" endtime="20211012 01:39:23.493"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211012 01:39:23.493" endtime="20211012 01:39:23.494"/>
</kw>
<status status="PASS" starttime="20211012 01:35:27.616" endtime="20211012 01:39:23.495"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211012 01:35:27.576" endtime="20211012 01:39:23.495"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient prefix acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:39:23.506" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:39:23.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:39:23.511" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211012 01:39:23.503" endtime="20211012 01:39:23.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:39:23.513" level="INFO">scm</msg>
<status status="PASS" starttime="20211012 01:39:23.512" endtime="20211012 01:39:23.513"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:39:23.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:39:23.514" endtime="20211012 01:39:23.515"/>
</kw>
<status status="PASS" starttime="20211012 01:39:23.502" endtime="20211012 01:39:23.515"/>
</kw>
<msg timestamp="20211012 01:39:23.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:39:23.501" endtime="20211012 01:39:23.516"/>
</kw>
<msg timestamp="20211012 01:39:23.516" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211012 01:39:23.501" endtime="20211012 01:39:23.516"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211012 01:39:23.517" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211012 01:39:23.516" endtime="20211012 01:39:23.517"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:39:23.522" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:39:23.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:39:23.556" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:39:23.520" endtime="20211012 01:39:23.557"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:39:23.558" level="INFO"/>
<status status="PASS" starttime="20211012 01:39:23.557" endtime="20211012 01:39:23.558"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:39:23.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:39:23.558" endtime="20211012 01:39:23.559"/>
</kw>
<status status="PASS" starttime="20211012 01:39:23.519" endtime="20211012 01:39:23.559"/>
</kw>
<msg timestamp="20211012 01:39:23.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:39:23.519" endtime="20211012 01:39:23.559"/>
</kw>
<status status="PASS" starttime="20211012 01:39:23.518" endtime="20211012 01:39:23.560"/>
</kw>
<status status="PASS" starttime="20211012 01:39:23.517" endtime="20211012 01:39:23.560"/>
</kw>
<status status="PASS" starttime="20211012 01:39:23.500" endtime="20211012 01:39:23.560"/>
</kw>
<status status="PASS" starttime="20211012 01:39:23.499" endtime="20211012 01:39:23.560"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:39:23.566" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/95283-rpcwoport2/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:39:29.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:39:29.012" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211012 01:39:23.563" endtime="20211012 01:39:29.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:39:29.013" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211012 01:39:29.012" endtime="20211012 01:39:29.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:39:29.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:39:29.013" endtime="20211012 01:39:29.014"/>
</kw>
<status status="PASS" starttime="20211012 01:39:23.563" endtime="20211012 01:39:29.014"/>
</kw>
<msg timestamp="20211012 01:39:29.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:39:23.562" endtime="20211012 01:39:29.015"/>
</kw>
<status status="PASS" starttime="20211012 01:39:23.561" endtime="20211012 01:39:29.015"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:39:29.021" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/95283-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:39:37.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:39:37.018" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211012 01:39:29.018" endtime="20211012 01:39:37.018"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:39:37.021" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211012 01:39:37.019" endtime="20211012 01:39:37.021"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:39:37.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:39:37.021" endtime="20211012 01:39:37.023"/>
</kw>
<status status="PASS" starttime="20211012 01:39:29.017" endtime="20211012 01:39:37.023"/>
</kw>
<msg timestamp="20211012 01:39:37.023" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:39:29.016" endtime="20211012 01:39:37.024"/>
</kw>
<msg timestamp="20211012 01:39:37.024" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211012 01:39:29.015" endtime="20211012 01:39:37.024"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211012 01:39:37.025" endtime="20211012 01:39:37.026"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:39:37.034" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/95283-rpcwoport2/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:39:44.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:39:44.179" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20211012 01:39:37.031" endtime="20211012 01:39:44.180"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:39:44.182" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20211012 01:39:44.181" endtime="20211012 01:39:44.183"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:39:44.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:39:44.183" endtime="20211012 01:39:44.185"/>
</kw>
<status status="PASS" starttime="20211012 01:39:37.029" endtime="20211012 01:39:44.186"/>
</kw>
<msg timestamp="20211012 01:39:44.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:39:37.029" endtime="20211012 01:39:44.186"/>
</kw>
<msg timestamp="20211012 01:39:44.186" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20211012 01:39:37.027" endtime="20211012 01:39:44.186"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:39:44.195" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/95283-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:39:50.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:39:50.958" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211012 01:39:44.192" endtime="20211012 01:39:50.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:39:50.960" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211012 01:39:50.959" endtime="20211012 01:39:50.960"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:39:50.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:39:50.960" endtime="20211012 01:39:50.961"/>
</kw>
<status status="PASS" starttime="20211012 01:39:44.190" endtime="20211012 01:39:50.961"/>
</kw>
<msg timestamp="20211012 01:39:50.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:39:44.189" endtime="20211012 01:39:50.962"/>
</kw>
<msg timestamp="20211012 01:39:50.962" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211012 01:39:44.187" endtime="20211012 01:39:50.962"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211012 01:39:50.962" endtime="20211012 01:39:50.963"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:39:50.968" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/95283-rpcwoport2/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:39:57.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:39:57.362" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211012 01:39:50.965" endtime="20211012 01:39:57.362"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:39:57.367" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211012 01:39:57.364" endtime="20211012 01:39:57.367"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:39:57.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:39:57.367" endtime="20211012 01:39:57.370"/>
</kw>
<status status="PASS" starttime="20211012 01:39:50.965" endtime="20211012 01:39:57.371"/>
</kw>
<msg timestamp="20211012 01:39:57.371" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:39:50.964" endtime="20211012 01:39:57.372"/>
</kw>
<msg timestamp="20211012 01:39:57.372" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211012 01:39:50.964" endtime="20211012 01:39:57.372"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:39:57.380" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/95283-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:40:04.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:40:04.747" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20211012 01:39:57.377" endtime="20211012 01:40:04.747"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:40:04.749" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211012 01:40:04.748" endtime="20211012 01:40:04.749"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:40:04.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:40:04.750" endtime="20211012 01:40:04.751"/>
</kw>
<status status="PASS" starttime="20211012 01:39:57.375" endtime="20211012 01:40:04.751"/>
</kw>
<msg timestamp="20211012 01:40:04.751" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:39:57.375" endtime="20211012 01:40:04.751"/>
</kw>
<msg timestamp="20211012 01:40:04.752" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20211012 01:39:57.373" endtime="20211012 01:40:04.752"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211012 01:40:04.752" endtime="20211012 01:40:04.753"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211012 01:40:04.753" endtime="20211012 01:40:04.753"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:40:04.759" level="INFO">Running command 'ozone sh key put o3://om:9862/95283-rpcwoport2/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:43:17.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:43:17.570" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:40:04.755" endtime="20211012 01:43:17.571"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:43:17.573" level="INFO"/>
<status status="PASS" starttime="20211012 01:43:17.572" endtime="20211012 01:43:17.573"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:43:17.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:43:17.573" endtime="20211012 01:43:17.574"/>
</kw>
<status status="PASS" starttime="20211012 01:40:04.755" endtime="20211012 01:43:17.574"/>
</kw>
<msg timestamp="20211012 01:43:17.574" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:40:04.755" endtime="20211012 01:43:17.575"/>
</kw>
<status status="PASS" starttime="20211012 01:40:04.754" endtime="20211012 01:43:17.575"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:43:17.580" level="INFO">Running command 'ozone sh key getacl o3://om:9862/95283-rpcwoport2/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:43:25.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:43:25.130" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211012 01:43:17.577" endtime="20211012 01:43:25.130"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:43:25.132" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211012 01:43:25.131" endtime="20211012 01:43:25.132"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:43:25.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:43:25.133" endtime="20211012 01:43:25.133"/>
</kw>
<status status="PASS" starttime="20211012 01:43:17.576" endtime="20211012 01:43:25.134"/>
</kw>
<msg timestamp="20211012 01:43:25.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:43:17.576" endtime="20211012 01:43:25.134"/>
</kw>
<msg timestamp="20211012 01:43:25.136" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211012 01:43:17.575" endtime="20211012 01:43:25.136"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211012 01:43:25.136" endtime="20211012 01:43:25.136"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211012 01:43:25.137" endtime="20211012 01:43:25.137"/>
</kw>
<status status="PASS" starttime="20211012 01:39:23.560" endtime="20211012 01:43:25.137"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211012 01:39:23.497" endtime="20211012 01:43:25.138"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:43:25.148" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:43:25.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:43:25.153" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211012 01:43:25.146" endtime="20211012 01:43:25.153"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:43:25.155" level="INFO">scm</msg>
<status status="PASS" starttime="20211012 01:43:25.154" endtime="20211012 01:43:25.155"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:43:25.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:43:25.155" endtime="20211012 01:43:25.156"/>
</kw>
<status status="PASS" starttime="20211012 01:43:25.145" endtime="20211012 01:43:25.157"/>
</kw>
<msg timestamp="20211012 01:43:25.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:43:25.144" endtime="20211012 01:43:25.157"/>
</kw>
<msg timestamp="20211012 01:43:25.157" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211012 01:43:25.143" endtime="20211012 01:43:25.157"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211012 01:43:25.158" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211012 01:43:25.158" endtime="20211012 01:43:25.158"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:43:25.164" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:43:25.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:43:25.173" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:43:25.161" endtime="20211012 01:43:25.173"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:43:25.175" level="INFO"/>
<status status="PASS" starttime="20211012 01:43:25.174" endtime="20211012 01:43:25.175"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:43:25.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:43:25.175" endtime="20211012 01:43:25.176"/>
</kw>
<status status="PASS" starttime="20211012 01:43:25.161" endtime="20211012 01:43:25.176"/>
</kw>
<msg timestamp="20211012 01:43:25.176" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:43:25.160" endtime="20211012 01:43:25.176"/>
</kw>
<status status="PASS" starttime="20211012 01:43:25.159" endtime="20211012 01:43:25.177"/>
</kw>
<status status="PASS" starttime="20211012 01:43:25.159" endtime="20211012 01:43:25.177"/>
</kw>
<status status="PASS" starttime="20211012 01:43:25.142" endtime="20211012 01:43:25.177"/>
</kw>
<status status="PASS" starttime="20211012 01:43:25.141" endtime="20211012 01:43:25.177"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:43:25.183" level="INFO">Running command 'ozone sh volume info o3:///95283-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:43:32.830" level="INFO">${rc} = 255</msg>
<msg timestamp="20211012 01:43:32.830" level="INFO">${output} = VOLUME_NOT_FOUND Volume 95283-rpcwport is not found</msg>
<status status="PASS" starttime="20211012 01:43:25.180" endtime="20211012 01:43:32.831"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:43:32.833" level="INFO">VOLUME_NOT_FOUND Volume 95283-rpcwport is not found</msg>
<status status="PASS" starttime="20211012 01:43:32.832" endtime="20211012 01:43:32.833"/>
</kw>
<msg timestamp="20211012 01:43:32.834" level="INFO">${result} = VOLUME_NOT_FOUND Volume 95283-rpcwport is not found</msg>
<status status="PASS" starttime="20211012 01:43:25.179" endtime="20211012 01:43:32.834"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211012 01:43:32.834" endtime="20211012 01:43:32.835"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:43:32.842" level="INFO">Running command 'ozone sh volume create o3:///95283-rpcwport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:43:39.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:43:39.766" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:43:32.839" endtime="20211012 01:43:39.766"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:43:39.768" level="INFO"/>
<status status="PASS" starttime="20211012 01:43:39.767" endtime="20211012 01:43:39.768"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:43:39.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:43:39.768" endtime="20211012 01:43:39.769"/>
</kw>
<status status="PASS" starttime="20211012 01:43:32.838" endtime="20211012 01:43:39.770"/>
</kw>
<msg timestamp="20211012 01:43:39.770" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:43:32.837" endtime="20211012 01:43:39.771"/>
</kw>
<msg timestamp="20211012 01:43:39.771" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211012 01:43:32.835" endtime="20211012 01:43:39.771"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211012 01:43:39.772" endtime="20211012 01:43:39.773"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:43:39.782" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '.[] | select(.name=="95283-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:43:47.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:43:47.387" level="INFO">${output} = {
  "metadata": {},
  "name": "95283-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211012 01:43:39.777" endtime="20211012 01:43:47.387"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:43:47.389" level="INFO">{
  "metadata": {},
  "name": "95283-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-12T01:43:39.674Z",
  "modificationTime": "2021-10-12T01:43:39.674Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211012 01:43:47.388" endtime="20211012 01:43:47.389"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:43:47.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:43:47.389" endtime="20211012 01:43:47.390"/>
</kw>
<status status="PASS" starttime="20211012 01:43:39.776" endtime="20211012 01:43:47.390"/>
</kw>
<msg timestamp="20211012 01:43:47.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:43:39.775" endtime="20211012 01:43:47.390"/>
</kw>
<msg timestamp="20211012 01:43:47.390" level="INFO">${result} = {
  "metadata": {},
  "name": "95283-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211012 01:43:39.773" endtime="20211012 01:43:47.390"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211012 01:43:47.391" endtime="20211012 01:43:47.391"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:43:47.398" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="95283-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:43:55.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:43:55.472" level="INFO">${output} = {
  "metadata": {},
  "name": "95283-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211012 01:43:47.394" endtime="20211012 01:43:55.472"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:43:55.473" level="INFO">{
  "metadata": {},
  "name": "95283-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-12T01:43:39.674Z",
  "modificationTime": "2021-10-12T01:43:39.674Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211012 01:43:55.472" endtime="20211012 01:43:55.474"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:43:55.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:43:55.474" endtime="20211012 01:43:55.474"/>
</kw>
<status status="PASS" starttime="20211012 01:43:47.393" endtime="20211012 01:43:55.475"/>
</kw>
<msg timestamp="20211012 01:43:55.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:43:47.393" endtime="20211012 01:43:55.475"/>
</kw>
<msg timestamp="20211012 01:43:55.475" level="INFO">${result} = {
  "metadata": {},
  "name": "95283-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211012 01:43:47.392" endtime="20211012 01:43:55.475"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211012 01:43:55.476" endtime="20211012 01:43:55.476"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:43:55.483" level="INFO">Running command 'ozone sh volume setquota o3:///95283-rpcwport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:44:03.998" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:44:03.998" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:43:55.480" endtime="20211012 01:44:03.998"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:44:04.000" level="INFO"/>
<status status="PASS" starttime="20211012 01:44:03.999" endtime="20211012 01:44:04.001"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:44:04.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:44:04.001" endtime="20211012 01:44:04.002"/>
</kw>
<status status="PASS" starttime="20211012 01:43:55.478" endtime="20211012 01:44:04.002"/>
</kw>
<msg timestamp="20211012 01:44:04.003" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:43:55.478" endtime="20211012 01:44:04.003"/>
</kw>
<status status="PASS" starttime="20211012 01:43:55.476" endtime="20211012 01:44:04.004"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:44:04.011" level="INFO">Running command 'ozone sh volume info o3:///95283-rpcwport | jq -r '. | select(.name=="95283-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:44:12.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:44:12.219" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211012 01:44:04.008" endtime="20211012 01:44:12.219"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:44:12.220" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211012 01:44:12.220" endtime="20211012 01:44:12.221"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:44:12.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:44:12.221" endtime="20211012 01:44:12.222"/>
</kw>
<status status="PASS" starttime="20211012 01:44:04.007" endtime="20211012 01:44:12.222"/>
</kw>
<msg timestamp="20211012 01:44:12.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:44:04.006" endtime="20211012 01:44:12.222"/>
</kw>
<msg timestamp="20211012 01:44:12.223" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211012 01:44:04.004" endtime="20211012 01:44:12.223"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211012 01:44:12.223" endtime="20211012 01:44:12.223"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:44:12.230" level="INFO">Running command 'ozone sh bucket create o3:///95283-rpcwport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:44:20.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:44:20.554" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:44:12.227" endtime="20211012 01:44:20.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:44:20.555" level="INFO"/>
<status status="PASS" starttime="20211012 01:44:20.554" endtime="20211012 01:44:20.555"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:44:20.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:44:20.555" endtime="20211012 01:44:20.556"/>
</kw>
<status status="PASS" starttime="20211012 01:44:12.226" endtime="20211012 01:44:20.556"/>
</kw>
<msg timestamp="20211012 01:44:20.556" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:44:12.225" endtime="20211012 01:44:20.556"/>
</kw>
<status status="PASS" starttime="20211012 01:44:12.223" endtime="20211012 01:44:20.557"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:44:20.563" level="INFO">Running command 'ozone sh bucket info o3:///95283-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:44:28.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:44:28.053" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211012 01:44:20.560" endtime="20211012 01:44:28.053"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:44:28.056" level="INFO">DISK</msg>
<status status="PASS" starttime="20211012 01:44:28.055" endtime="20211012 01:44:28.056"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:44:28.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:44:28.056" endtime="20211012 01:44:28.058"/>
</kw>
<status status="PASS" starttime="20211012 01:44:20.559" endtime="20211012 01:44:28.059"/>
</kw>
<msg timestamp="20211012 01:44:28.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:44:20.558" endtime="20211012 01:44:28.060"/>
</kw>
<msg timestamp="20211012 01:44:28.060" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211012 01:44:20.557" endtime="20211012 01:44:28.060"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211012 01:44:28.060" endtime="20211012 01:44:28.061"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:44:28.068" level="INFO">Running command 'ozone sh bucket info o3:///95283-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:44:36.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:44:36.344" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211012 01:44:28.065" endtime="20211012 01:44:36.344"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:44:36.347" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211012 01:44:36.345" endtime="20211012 01:44:36.347"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:44:36.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:44:36.347" endtime="20211012 01:44:36.349"/>
</kw>
<status status="PASS" starttime="20211012 01:44:28.064" endtime="20211012 01:44:36.350"/>
</kw>
<msg timestamp="20211012 01:44:36.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:44:28.063" endtime="20211012 01:44:36.350"/>
</kw>
<msg timestamp="20211012 01:44:36.351" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211012 01:44:28.062" endtime="20211012 01:44:36.351"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211012 01:44:36.352" endtime="20211012 01:44:36.353"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:44:36.362" level="INFO">Running command 'ozone sh bucket info o3:///95283-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:44:43.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:44:43.133" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211012 01:44:36.358" endtime="20211012 01:44:43.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:44:43.135" level="INFO">100</msg>
<status status="PASS" starttime="20211012 01:44:43.134" endtime="20211012 01:44:43.135"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:44:43.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:44:43.135" endtime="20211012 01:44:43.136"/>
</kw>
<status status="PASS" starttime="20211012 01:44:36.356" endtime="20211012 01:44:43.137"/>
</kw>
<msg timestamp="20211012 01:44:43.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:44:36.355" endtime="20211012 01:44:43.137"/>
</kw>
<msg timestamp="20211012 01:44:43.138" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211012 01:44:36.353" endtime="20211012 01:44:43.138"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211012 01:44:43.138" endtime="20211012 01:44:43.139"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:44:43.145" level="INFO">Running command 'ozone sh bucket setquota o3:///95283-rpcwport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:44:48.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:44:48.483" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:44:43.142" endtime="20211012 01:44:48.483"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:44:48.485" level="INFO"/>
<status status="PASS" starttime="20211012 01:44:48.484" endtime="20211012 01:44:48.485"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:44:48.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:44:48.485" endtime="20211012 01:44:48.486"/>
</kw>
<status status="PASS" starttime="20211012 01:44:43.141" endtime="20211012 01:44:48.486"/>
</kw>
<msg timestamp="20211012 01:44:48.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:44:43.141" endtime="20211012 01:44:48.486"/>
</kw>
<status status="PASS" starttime="20211012 01:44:43.139" endtime="20211012 01:44:48.487"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:44:48.493" level="INFO">Running command 'ozone sh bucket info o3:///95283-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:44:56.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:44:56.030" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211012 01:44:48.491" endtime="20211012 01:44:56.030"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:44:56.032" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211012 01:44:56.031" endtime="20211012 01:44:56.032"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:44:56.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:44:56.032" endtime="20211012 01:44:56.033"/>
</kw>
<status status="PASS" starttime="20211012 01:44:48.490" endtime="20211012 01:44:56.033"/>
</kw>
<msg timestamp="20211012 01:44:56.033" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:44:48.489" endtime="20211012 01:44:56.033"/>
</kw>
<msg timestamp="20211012 01:44:56.034" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211012 01:44:48.487" endtime="20211012 01:44:56.034"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211012 01:44:56.034" endtime="20211012 01:44:56.034"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:44:56.039" level="INFO">Running command 'ozone sh bucket info o3:///95283-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:45:03.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:45:03.402" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211012 01:44:56.036" endtime="20211012 01:45:03.402"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:45:03.404" level="INFO">1000</msg>
<status status="PASS" starttime="20211012 01:45:03.403" endtime="20211012 01:45:03.404"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:45:03.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:45:03.405" endtime="20211012 01:45:03.405"/>
</kw>
<status status="PASS" starttime="20211012 01:44:56.036" endtime="20211012 01:45:03.406"/>
</kw>
<msg timestamp="20211012 01:45:03.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:44:56.035" endtime="20211012 01:45:03.406"/>
</kw>
<msg timestamp="20211012 01:45:03.406" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211012 01:44:56.034" endtime="20211012 01:45:03.406"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211012 01:45:03.406" endtime="20211012 01:45:03.407"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:45:03.413" level="INFO">Running command 'ozone sh bucket list o3:///95283-rpcwport/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:45:10.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:45:10.883" level="INFO">${output} = 95283-rpcwport</msg>
<status status="PASS" starttime="20211012 01:45:03.410" endtime="20211012 01:45:10.883"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:45:10.885" level="INFO">95283-rpcwport</msg>
<status status="PASS" starttime="20211012 01:45:10.884" endtime="20211012 01:45:10.885"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:45:10.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:45:10.886" endtime="20211012 01:45:10.886"/>
</kw>
<status status="PASS" starttime="20211012 01:45:03.409" endtime="20211012 01:45:10.887"/>
</kw>
<msg timestamp="20211012 01:45:10.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:45:03.408" endtime="20211012 01:45:10.888"/>
</kw>
<msg timestamp="20211012 01:45:10.888" level="INFO">${result} = 95283-rpcwport</msg>
<status status="PASS" starttime="20211012 01:45:03.407" endtime="20211012 01:45:10.888"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211012 01:45:10.889" endtime="20211012 01:45:10.889"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:45:10.897" level="INFO">Running command 'ozone sh key put o3:///95283-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:48:20.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:48:20.562" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:45:10.894" endtime="20211012 01:48:20.562"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:48:20.564" level="INFO"/>
<status status="PASS" starttime="20211012 01:48:20.563" endtime="20211012 01:48:20.564"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:48:20.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:48:20.564" endtime="20211012 01:48:20.566"/>
</kw>
<status status="PASS" starttime="20211012 01:45:10.893" endtime="20211012 01:48:20.566"/>
</kw>
<msg timestamp="20211012 01:48:20.567" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:45:10.893" endtime="20211012 01:48:20.567"/>
</kw>
<status status="PASS" starttime="20211012 01:45:10.892" endtime="20211012 01:48:20.567"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:48:20.575" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:48:20.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:48:20.578" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:48:20.572" endtime="20211012 01:48:20.578"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:48:20.580" level="INFO"/>
<status status="PASS" starttime="20211012 01:48:20.579" endtime="20211012 01:48:20.580"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:48:20.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:48:20.581" endtime="20211012 01:48:20.582"/>
</kw>
<status status="PASS" starttime="20211012 01:48:20.570" endtime="20211012 01:48:20.582"/>
</kw>
<msg timestamp="20211012 01:48:20.582" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:48:20.569" endtime="20211012 01:48:20.583"/>
</kw>
<status status="PASS" starttime="20211012 01:48:20.568" endtime="20211012 01:48:20.583"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:48:20.590" level="INFO">Running command 'ozone sh key get o3:///95283-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:48:25.142" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211012 01:48:20.587" endtime="20211012 01:48:25.142"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211012 01:48:25.143" endtime="20211012 01:48:25.143"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211012 01:48:25.143" endtime="20211012 01:48:25.143"/>
</kw>
<status status="FAIL" starttime="20211012 01:48:20.586" endtime="20211012 01:48:25.144"/>
</kw>
<msg timestamp="20211012 01:48:25.144" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211012 01:48:20.585" endtime="20211012 01:48:25.144"/>
</kw>
<status status="FAIL" starttime="20211012 01:48:20.584" endtime="20211012 01:48:25.144"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211012 01:48:25.145" endtime="20211012 01:48:25.145"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211012 01:48:25.145" endtime="20211012 01:48:25.145"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211012 01:48:25.145" endtime="20211012 01:48:25.145"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211012 01:48:25.146" endtime="20211012 01:48:25.146"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211012 01:48:25.146" endtime="20211012 01:48:25.146"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211012 01:48:25.146" endtime="20211012 01:48:25.147"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211012 01:48:25.147" endtime="20211012 01:48:25.147"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211012 01:48:25.147" endtime="20211012 01:48:25.147"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211012 01:48:25.147" endtime="20211012 01:48:25.147"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211012 01:48:25.148" endtime="20211012 01:48:25.148"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211012 01:48:25.148" endtime="20211012 01:48:25.148"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211012 01:48:25.149" endtime="20211012 01:48:25.149"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211012 01:48:25.149" endtime="20211012 01:48:25.149"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211012 01:48:25.149" endtime="20211012 01:48:25.149"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211012 01:48:25.151" endtime="20211012 01:48:25.151"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211012 01:48:25.152" endtime="20211012 01:48:25.152"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211012 01:48:25.153" endtime="20211012 01:48:25.153"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211012 01:48:25.154" endtime="20211012 01:48:25.154"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211012 01:48:25.155" endtime="20211012 01:48:25.155"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211012 01:48:25.156" endtime="20211012 01:48:25.156"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211012 01:48:25.156" endtime="20211012 01:48:25.157"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211012 01:48:25.157" endtime="20211012 01:48:25.157"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211012 01:48:25.158" endtime="20211012 01:48:25.158"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211012 01:48:25.158" endtime="20211012 01:48:25.159"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211012 01:48:25.159" endtime="20211012 01:48:25.159"/>
</kw>
<status status="FAIL" starttime="20211012 01:45:10.890" endtime="20211012 01:48:25.160"/>
</kw>
<status status="FAIL" starttime="20211012 01:45:10.890" endtime="20211012 01:48:25.160"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211012 01:48:25.161" endtime="20211012 01:48:25.162"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211012 01:48:25.162" endtime="20211012 01:48:25.162"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211012 01:48:25.162" endtime="20211012 01:48:25.162"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211012 01:48:25.163" endtime="20211012 01:48:25.163"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211012 01:48:25.164" endtime="20211012 01:48:25.164"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211012 01:48:25.164" endtime="20211012 01:48:25.164"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211012 01:48:25.165" endtime="20211012 01:48:25.165"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211012 01:48:25.166" endtime="20211012 01:48:25.166"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211012 01:48:25.167" endtime="20211012 01:48:25.167"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211012 01:48:25.168" endtime="20211012 01:48:25.168"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211012 01:48:25.168" endtime="20211012 01:48:25.169"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211012 01:48:25.169" endtime="20211012 01:48:25.170"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211012 01:48:25.171" endtime="20211012 01:48:25.171"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211012 01:48:25.171" endtime="20211012 01:48:25.171"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211012 01:48:25.171" endtime="20211012 01:48:25.172"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211012 01:48:25.172" endtime="20211012 01:48:25.172"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211012 01:48:25.173" endtime="20211012 01:48:25.173"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211012 01:48:25.174" endtime="20211012 01:48:25.174"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211012 01:48:25.174" endtime="20211012 01:48:25.176"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211012 01:48:25.176" endtime="20211012 01:48:25.176"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211012 01:48:25.177" endtime="20211012 01:48:25.177"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211012 01:48:25.177" endtime="20211012 01:48:25.178"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211012 01:48:25.178" endtime="20211012 01:48:25.179"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211012 01:48:25.179" endtime="20211012 01:48:25.179"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211012 01:48:25.180" endtime="20211012 01:48:25.180"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211012 01:48:25.181" endtime="20211012 01:48:25.181"/>
</kw>
<status status="FAIL" starttime="20211012 01:43:25.177" endtime="20211012 01:48:25.182"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211012 01:43:25.140" endtime="20211012 01:48:25.183">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t7" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:48:25.227" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:48:25.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:48:25.243" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211012 01:48:25.209" endtime="20211012 01:48:25.243"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:48:25.244" level="INFO">scm</msg>
<status status="PASS" starttime="20211012 01:48:25.243" endtime="20211012 01:48:25.244"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:48:25.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:48:25.246" endtime="20211012 01:48:25.246"/>
</kw>
<status status="PASS" starttime="20211012 01:48:25.207" endtime="20211012 01:48:25.247"/>
</kw>
<msg timestamp="20211012 01:48:25.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:48:25.204" endtime="20211012 01:48:25.248"/>
</kw>
<msg timestamp="20211012 01:48:25.248" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211012 01:48:25.201" endtime="20211012 01:48:25.248"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211012 01:48:25.249" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211012 01:48:25.248" endtime="20211012 01:48:25.249"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:48:25.259" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:48:25.324" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:48:25.324" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:48:25.252" endtime="20211012 01:48:25.324"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:48:25.326" level="INFO"/>
<status status="PASS" starttime="20211012 01:48:25.326" endtime="20211012 01:48:25.327"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:48:25.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:48:25.327" endtime="20211012 01:48:25.328"/>
</kw>
<status status="PASS" starttime="20211012 01:48:25.251" endtime="20211012 01:48:25.330"/>
</kw>
<msg timestamp="20211012 01:48:25.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:48:25.251" endtime="20211012 01:48:25.331"/>
</kw>
<status status="PASS" starttime="20211012 01:48:25.250" endtime="20211012 01:48:25.331"/>
</kw>
<status status="PASS" starttime="20211012 01:48:25.249" endtime="20211012 01:48:25.331"/>
</kw>
<status status="PASS" starttime="20211012 01:48:25.199" endtime="20211012 01:48:25.331"/>
</kw>
<status status="PASS" starttime="20211012 01:48:25.189" endtime="20211012 01:48:25.331"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:48:25.347" level="INFO">Running command 'ozone sh volume info /95283-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:48:41.488" level="INFO">${rc} = 255</msg>
<msg timestamp="20211012 01:48:41.488" level="INFO">${output} = VOLUME_NOT_FOUND Volume 95283-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20211012 01:48:25.339" endtime="20211012 01:48:41.488"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:48:41.490" level="INFO">VOLUME_NOT_FOUND Volume 95283-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20211012 01:48:41.488" endtime="20211012 01:48:41.490"/>
</kw>
<msg timestamp="20211012 01:48:41.490" level="INFO">${result} = VOLUME_NOT_FOUND Volume 95283-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20211012 01:48:25.338" endtime="20211012 01:48:41.490"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211012 01:48:41.490" endtime="20211012 01:48:41.491"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:48:41.497" level="INFO">Running command 'ozone sh volume create /95283-rpcwoscheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:48:48.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:48:48.365" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:48:41.494" endtime="20211012 01:48:48.366"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:48:48.368" level="INFO"/>
<status status="PASS" starttime="20211012 01:48:48.366" endtime="20211012 01:48:48.368"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:48:48.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:48:48.368" endtime="20211012 01:48:48.370"/>
</kw>
<status status="PASS" starttime="20211012 01:48:41.493" endtime="20211012 01:48:48.370"/>
</kw>
<msg timestamp="20211012 01:48:48.370" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:48:41.493" endtime="20211012 01:48:48.371"/>
</kw>
<msg timestamp="20211012 01:48:48.371" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211012 01:48:41.491" endtime="20211012 01:48:48.371"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211012 01:48:48.371" endtime="20211012 01:48:48.372"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:48:48.377" level="INFO">Running command 'ozone sh volume list / | jq -r '.[] | select(.name=="95283-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:48:56.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:48:56.283" level="INFO">${output} = {
  "metadata": {},
  "name": "95283-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211012 01:48:48.375" endtime="20211012 01:48:56.283"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:48:56.284" level="INFO">{
  "metadata": {},
  "name": "95283-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-12T01:48:48.211Z",
  "modificationTime": "2021-10-12T01:48:48.211Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211012 01:48:56.283" endtime="20211012 01:48:56.284"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:48:56.285" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:48:56.284" endtime="20211012 01:48:56.285"/>
</kw>
<status status="PASS" starttime="20211012 01:48:48.374" endtime="20211012 01:48:56.286"/>
</kw>
<msg timestamp="20211012 01:48:56.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:48:48.373" endtime="20211012 01:48:56.286"/>
</kw>
<msg timestamp="20211012 01:48:56.286" level="INFO">${result} = {
  "metadata": {},
  "name": "95283-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211012 01:48:48.372" endtime="20211012 01:48:56.286"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211012 01:48:56.287" endtime="20211012 01:48:56.287"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:48:56.292" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="95283-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:49:04.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:49:04.767" level="INFO">${output} = {
  "metadata": {},
  "name": "95283-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211012 01:48:56.290" endtime="20211012 01:49:04.767"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:49:04.769" level="INFO">{
  "metadata": {},
  "name": "95283-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-12T01:48:48.211Z",
  "modificationTime": "2021-10-12T01:48:48.211Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211012 01:49:04.768" endtime="20211012 01:49:04.769"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:49:04.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:49:04.769" endtime="20211012 01:49:04.769"/>
</kw>
<status status="PASS" starttime="20211012 01:48:56.289" endtime="20211012 01:49:04.770"/>
</kw>
<msg timestamp="20211012 01:49:04.770" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:48:56.289" endtime="20211012 01:49:04.770"/>
</kw>
<msg timestamp="20211012 01:49:04.771" level="INFO">${result} = {
  "metadata": {},
  "name": "95283-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211012 01:48:56.287" endtime="20211012 01:49:04.771"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211012 01:49:04.771" endtime="20211012 01:49:04.771"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:49:04.777" level="INFO">Running command 'ozone sh volume setquota /95283-rpcwoscheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:49:13.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:49:13.170" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:49:04.774" endtime="20211012 01:49:13.170"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:49:13.171" level="INFO"/>
<status status="PASS" starttime="20211012 01:49:13.170" endtime="20211012 01:49:13.171"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:49:13.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:49:13.171" endtime="20211012 01:49:13.175"/>
</kw>
<status status="PASS" starttime="20211012 01:49:04.773" endtime="20211012 01:49:13.175"/>
</kw>
<msg timestamp="20211012 01:49:13.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:49:04.772" endtime="20211012 01:49:13.175"/>
</kw>
<status status="PASS" starttime="20211012 01:49:04.771" endtime="20211012 01:49:13.176"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:49:13.187" level="INFO">Running command 'ozone sh volume info /95283-rpcwoscheme | jq -r '. | select(.name=="95283-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:49:22.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:49:22.386" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211012 01:49:13.179" endtime="20211012 01:49:22.386"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:49:22.388" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211012 01:49:22.386" endtime="20211012 01:49:22.388"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:49:22.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:49:22.390" endtime="20211012 01:49:22.391"/>
</kw>
<status status="PASS" starttime="20211012 01:49:13.178" endtime="20211012 01:49:22.392"/>
</kw>
<msg timestamp="20211012 01:49:22.392" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:49:13.177" endtime="20211012 01:49:22.392"/>
</kw>
<msg timestamp="20211012 01:49:22.393" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211012 01:49:13.176" endtime="20211012 01:49:22.393"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211012 01:49:22.393" endtime="20211012 01:49:22.395"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:49:22.402" level="INFO">Running command 'ozone sh bucket create /95283-rpcwoscheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:49:29.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:49:29.582" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:49:22.399" endtime="20211012 01:49:29.582"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:49:29.585" level="INFO"/>
<status status="PASS" starttime="20211012 01:49:29.583" endtime="20211012 01:49:29.585"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:49:29.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:49:29.585" endtime="20211012 01:49:29.587"/>
</kw>
<status status="PASS" starttime="20211012 01:49:22.398" endtime="20211012 01:49:29.587"/>
</kw>
<msg timestamp="20211012 01:49:29.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:49:22.396" endtime="20211012 01:49:29.587"/>
</kw>
<status status="PASS" starttime="20211012 01:49:22.395" endtime="20211012 01:49:29.588"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:49:29.593" level="INFO">Running command 'ozone sh bucket info /95283-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:49:37.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:49:37.107" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211012 01:49:29.591" endtime="20211012 01:49:37.107"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:49:37.108" level="INFO">DISK</msg>
<status status="PASS" starttime="20211012 01:49:37.107" endtime="20211012 01:49:37.108"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:49:37.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:49:37.109" endtime="20211012 01:49:37.109"/>
</kw>
<status status="PASS" starttime="20211012 01:49:29.590" endtime="20211012 01:49:37.109"/>
</kw>
<msg timestamp="20211012 01:49:37.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:49:29.589" endtime="20211012 01:49:37.110"/>
</kw>
<msg timestamp="20211012 01:49:37.110" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211012 01:49:29.588" endtime="20211012 01:49:37.110"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211012 01:49:37.110" endtime="20211012 01:49:37.111"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:49:37.116" level="INFO">Running command 'ozone sh bucket info /95283-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:49:44.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:49:44.174" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211012 01:49:37.113" endtime="20211012 01:49:44.174"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:49:44.176" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211012 01:49:44.175" endtime="20211012 01:49:44.176"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:49:44.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:49:44.176" endtime="20211012 01:49:44.176"/>
</kw>
<status status="PASS" starttime="20211012 01:49:37.112" endtime="20211012 01:49:44.177"/>
</kw>
<msg timestamp="20211012 01:49:44.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:49:37.112" endtime="20211012 01:49:44.177"/>
</kw>
<msg timestamp="20211012 01:49:44.177" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211012 01:49:37.111" endtime="20211012 01:49:44.177"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211012 01:49:44.178" endtime="20211012 01:49:44.178"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:49:44.183" level="INFO">Running command 'ozone sh bucket info /95283-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:49:49.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:49:49.622" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211012 01:49:44.181" endtime="20211012 01:49:49.622"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:49:49.625" level="INFO">100</msg>
<status status="PASS" starttime="20211012 01:49:49.623" endtime="20211012 01:49:49.625"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:49:49.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:49:49.625" endtime="20211012 01:49:49.626"/>
</kw>
<status status="PASS" starttime="20211012 01:49:44.180" endtime="20211012 01:49:49.627"/>
</kw>
<msg timestamp="20211012 01:49:49.627" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:49:44.180" endtime="20211012 01:49:49.627"/>
</kw>
<msg timestamp="20211012 01:49:49.628" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211012 01:49:44.178" endtime="20211012 01:49:49.628"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211012 01:49:49.628" endtime="20211012 01:49:49.629"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:49:49.635" level="INFO">Running command 'ozone sh bucket setquota /95283-rpcwoscheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:49:57.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:49:57.355" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:49:49.633" endtime="20211012 01:49:57.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:49:57.356" level="INFO"/>
<status status="PASS" starttime="20211012 01:49:57.355" endtime="20211012 01:49:57.356"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:49:57.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:49:57.357" endtime="20211012 01:49:57.358"/>
</kw>
<status status="PASS" starttime="20211012 01:49:49.632" endtime="20211012 01:49:57.359"/>
</kw>
<msg timestamp="20211012 01:49:57.359" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:49:49.631" endtime="20211012 01:49:57.359"/>
</kw>
<status status="PASS" starttime="20211012 01:49:49.629" endtime="20211012 01:49:57.359"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:49:57.365" level="INFO">Running command 'ozone sh bucket info /95283-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:50:04.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:50:04.859" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211012 01:49:57.362" endtime="20211012 01:50:04.859"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:50:04.860" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211012 01:50:04.860" endtime="20211012 01:50:04.861"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:50:04.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:50:04.861" endtime="20211012 01:50:04.862"/>
</kw>
<status status="PASS" starttime="20211012 01:49:57.362" endtime="20211012 01:50:04.862"/>
</kw>
<msg timestamp="20211012 01:50:04.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:49:57.361" endtime="20211012 01:50:04.863"/>
</kw>
<msg timestamp="20211012 01:50:04.863" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211012 01:49:57.360" endtime="20211012 01:50:04.863"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211012 01:50:04.864" endtime="20211012 01:50:04.864"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:50:04.871" level="INFO">Running command 'ozone sh bucket info /95283-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:50:11.874" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:50:11.874" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211012 01:50:04.868" endtime="20211012 01:50:11.874"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:50:11.876" level="INFO">1000</msg>
<status status="PASS" starttime="20211012 01:50:11.875" endtime="20211012 01:50:11.876"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:50:11.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:50:11.877" endtime="20211012 01:50:11.878"/>
</kw>
<status status="PASS" starttime="20211012 01:50:04.867" endtime="20211012 01:50:11.879"/>
</kw>
<msg timestamp="20211012 01:50:11.879" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:50:04.866" endtime="20211012 01:50:11.879"/>
</kw>
<msg timestamp="20211012 01:50:11.879" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211012 01:50:04.864" endtime="20211012 01:50:11.879"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211012 01:50:11.880" endtime="20211012 01:50:11.880"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:50:11.889" level="INFO">Running command 'ozone sh bucket list /95283-rpcwoscheme/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:50:18.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:50:18.653" level="INFO">${output} = 95283-rpcwoscheme</msg>
<status status="PASS" starttime="20211012 01:50:11.885" endtime="20211012 01:50:18.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:50:18.655" level="INFO">95283-rpcwoscheme</msg>
<status status="PASS" starttime="20211012 01:50:18.654" endtime="20211012 01:50:18.655"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:50:18.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:50:18.655" endtime="20211012 01:50:18.656"/>
</kw>
<status status="PASS" starttime="20211012 01:50:11.884" endtime="20211012 01:50:18.657"/>
</kw>
<msg timestamp="20211012 01:50:18.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:50:11.883" endtime="20211012 01:50:18.657"/>
</kw>
<msg timestamp="20211012 01:50:18.657" level="INFO">${result} = 95283-rpcwoscheme</msg>
<status status="PASS" starttime="20211012 01:50:11.881" endtime="20211012 01:50:18.657"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211012 01:50:18.658" endtime="20211012 01:50:18.658"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:50:18.665" level="INFO">Running command 'ozone sh key put /95283-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:53:25.188" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211012 01:50:18.662" endtime="20211012 01:53:25.188"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211012 01:53:25.189" endtime="20211012 01:53:25.189"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211012 01:53:25.189" endtime="20211012 01:53:25.189"/>
</kw>
<status status="FAIL" starttime="20211012 01:50:18.661" endtime="20211012 01:53:25.190"/>
</kw>
<msg timestamp="20211012 01:53:25.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211012 01:50:18.660" endtime="20211012 01:53:25.190"/>
</kw>
<status status="FAIL" starttime="20211012 01:50:18.660" endtime="20211012 01:53:25.190"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211012 01:53:25.191" endtime="20211012 01:53:25.191"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211012 01:53:25.191" endtime="20211012 01:53:25.191"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211012 01:53:25.191" endtime="20211012 01:53:25.191"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211012 01:53:25.191" endtime="20211012 01:53:25.191"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211012 01:53:25.191" endtime="20211012 01:53:25.191"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211012 01:53:25.192" endtime="20211012 01:53:25.192"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211012 01:53:25.192" endtime="20211012 01:53:25.192"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211012 01:53:25.192" endtime="20211012 01:53:25.192"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211012 01:53:25.192" endtime="20211012 01:53:25.192"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211012 01:53:25.192" endtime="20211012 01:53:25.193"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211012 01:53:25.193" endtime="20211012 01:53:25.193"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211012 01:53:25.193" endtime="20211012 01:53:25.193"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211012 01:53:25.193" endtime="20211012 01:53:25.193"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211012 01:53:25.193" endtime="20211012 01:53:25.193"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211012 01:53:25.193" endtime="20211012 01:53:25.194"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211012 01:53:25.194" endtime="20211012 01:53:25.194"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211012 01:53:25.195" endtime="20211012 01:53:25.195"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211012 01:53:25.195" endtime="20211012 01:53:25.196"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211012 01:53:25.196" endtime="20211012 01:53:25.196"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211012 01:53:25.196" endtime="20211012 01:53:25.197"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211012 01:53:25.197" endtime="20211012 01:53:25.197"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211012 01:53:25.197" endtime="20211012 01:53:25.197"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211012 01:53:25.198" endtime="20211012 01:53:25.198"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211012 01:53:25.198" endtime="20211012 01:53:25.198"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211012 01:53:25.199" endtime="20211012 01:53:25.199"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211012 01:53:25.199" endtime="20211012 01:53:25.199"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211012 01:53:25.199" endtime="20211012 01:53:25.199"/>
</kw>
<status status="FAIL" starttime="20211012 01:50:18.659" endtime="20211012 01:53:25.200"/>
</kw>
<status status="FAIL" starttime="20211012 01:50:18.658" endtime="20211012 01:53:25.200"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211012 01:53:25.201" endtime="20211012 01:53:25.201"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211012 01:53:25.202" endtime="20211012 01:53:25.202"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211012 01:53:25.202" endtime="20211012 01:53:25.202"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211012 01:53:25.203" endtime="20211012 01:53:25.203"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211012 01:53:25.203" endtime="20211012 01:53:25.203"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211012 01:53:25.203" endtime="20211012 01:53:25.204"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211012 01:53:25.204" endtime="20211012 01:53:25.204"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211012 01:53:25.204" endtime="20211012 01:53:25.204"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211012 01:53:25.205" endtime="20211012 01:53:25.205"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211012 01:53:25.205" endtime="20211012 01:53:25.206"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211012 01:53:25.206" endtime="20211012 01:53:25.206"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211012 01:53:25.207" endtime="20211012 01:53:25.207"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211012 01:53:25.207" endtime="20211012 01:53:25.207"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211012 01:53:25.207" endtime="20211012 01:53:25.208"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211012 01:53:25.208" endtime="20211012 01:53:25.208"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211012 01:53:25.208" endtime="20211012 01:53:25.208"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211012 01:53:25.208" endtime="20211012 01:53:25.208"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211012 01:53:25.209" endtime="20211012 01:53:25.209"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211012 01:53:25.209" endtime="20211012 01:53:25.209"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211012 01:53:25.209" endtime="20211012 01:53:25.209"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211012 01:53:25.209" endtime="20211012 01:53:25.210"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211012 01:53:25.210" endtime="20211012 01:53:25.211"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211012 01:53:25.211" endtime="20211012 01:53:25.211"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211012 01:53:25.212" endtime="20211012 01:53:25.212"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211012 01:53:25.212" endtime="20211012 01:53:25.213"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211012 01:53:25.213" endtime="20211012 01:53:25.213"/>
</kw>
<status status="FAIL" starttime="20211012 01:48:25.331" endtime="20211012 01:53:25.213"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211012 01:48:25.186" endtime="20211012 01:53:25.213">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20211012 01:28:19.228" endtime="20211012 01:53:25.218"/>
</suite>
<status status="FAIL" starttime="20211012 01:03:22.817" endtime="20211012 01:53:25.227"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:03:17.449" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:03:17.454" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:03:17.454" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211012 01:03:17.446" endtime="20211012 01:03:17.454"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:03:17.456" level="INFO">scm</msg>
<status status="PASS" starttime="20211012 01:03:17.455" endtime="20211012 01:03:17.456"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:03:17.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:03:17.456" endtime="20211012 01:03:17.457"/>
</kw>
<status status="PASS" starttime="20211012 01:03:17.445" endtime="20211012 01:03:17.457"/>
</kw>
<msg timestamp="20211012 01:03:17.457" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:03:17.445" endtime="20211012 01:03:17.457"/>
</kw>
<msg timestamp="20211012 01:03:17.458" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211012 01:03:17.444" endtime="20211012 01:03:17.458"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211012 01:03:17.458" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211012 01:03:17.458" endtime="20211012 01:03:17.458"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211012 01:03:17.463" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211012 01:03:17.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20211012 01:03:17.472" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211012 01:03:17.461" endtime="20211012 01:03:17.472"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211012 01:03:17.473" level="INFO"/>
<status status="PASS" starttime="20211012 01:03:17.473" endtime="20211012 01:03:17.473"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211012 01:03:17.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211012 01:03:17.474" endtime="20211012 01:03:17.474"/>
</kw>
<status status="PASS" starttime="20211012 01:03:17.460" endtime="20211012 01:03:17.475"/>
</kw>
<msg timestamp="20211012 01:03:17.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211012 01:03:17.460" endtime="20211012 01:03:17.475"/>
</kw>
<status status="PASS" starttime="20211012 01:03:17.459" endtime="20211012 01:03:17.475"/>
</kw>
<status status="PASS" starttime="20211012 01:03:17.459" endtime="20211012 01:03:17.475"/>
</kw>
<status status="PASS" starttime="20211012 01:03:17.442" endtime="20211012 01:03:17.475"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211012 01:03:17.442" endtime="20211012 01:03:17.476"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20211012 01:03:17.378" endtime="20211012 01:03:17.477"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="3002509"/>
</suite>
<statistics>
<total>
<stat pass="20" fail="10" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="20" fail="10" skip="0" id="s1" name="ozonesecure">ozonesecure</stat>
<stat pass="19" fail="10" skip="0" id="s1-s1" name="Basic">ozonesecure.Basic</stat>
<stat pass="1" fail="1" skip="0" id="s1-s1-s1" name="Basic">ozonesecure.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Getconf">ozonesecure.Basic.Getconf</stat>
<stat pass="10" fail="5" skip="0" id="s1-s1-s3" name="Links">ozonesecure.Basic.Links</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat pass="4" fail="3" skip="0" id="s1-s1-s5" name="Ozone-Shell">ozonesecure.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
