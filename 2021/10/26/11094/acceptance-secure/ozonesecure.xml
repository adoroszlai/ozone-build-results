<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1.2 (Python 3.6.9 on linux)" generated="20211026 22:57:58.815" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:07:22.323" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:07:22.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:07:22.326" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211026 22:07:22.319" endtime="20211026 22:07:22.326"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:07:22.328" level="INFO">scm</msg>
<status status="PASS" starttime="20211026 22:07:22.327" endtime="20211026 22:07:22.328"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:07:22.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:07:22.328" endtime="20211026 22:07:22.329"/>
</kw>
<status status="PASS" starttime="20211026 22:07:22.318" endtime="20211026 22:07:22.329"/>
</kw>
<msg timestamp="20211026 22:07:22.329" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:07:22.318" endtime="20211026 22:07:22.329"/>
</kw>
<msg timestamp="20211026 22:07:22.329" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20211026 22:07:22.317" endtime="20211026 22:07:22.329"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:07:22.334" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:07:22.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:07:22.341" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:07:22.332" endtime="20211026 22:07:22.341"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:07:22.343" level="INFO"/>
<status status="PASS" starttime="20211026 22:07:22.342" endtime="20211026 22:07:22.343"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:07:22.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:07:22.343" endtime="20211026 22:07:22.344"/>
</kw>
<status status="PASS" starttime="20211026 22:07:22.331" endtime="20211026 22:07:22.344"/>
</kw>
<msg timestamp="20211026 22:07:22.344" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:07:22.331" endtime="20211026 22:07:22.344"/>
</kw>
<status status="PASS" starttime="20211026 22:07:22.330" endtime="20211026 22:07:22.345"/>
</kw>
<status status="PASS" starttime="20211026 22:07:22.330" endtime="20211026 22:07:22.345"/>
</kw>
<status status="PASS" starttime="20211026 22:07:22.317" endtime="20211026 22:07:22.345"/>
</kw>
<status status="PASS" starttime="20211026 22:07:22.316" endtime="20211026 22:07:22.345"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:07:22.349" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:07:22.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:07:22.491" level="INFO">${output} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20211026 22:07:22.347" endtime="20211026 22:07:22.491"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:07:22.492" level="INFO">HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 484

HTTP/1.1 200 OK
Date: Tue, 26 Oct 2021 22:07:22 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARClSqkrAqZA5wlmkcWtAOpzAjdbUwG7Q1vlFwc9OqSgSpmT79AqfzTrc+iQxHlDYJRQTCK/mckiv9JUx3ySzNJbn4T
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1635322042478&amp;s=63HMnFgm0QFD70jFqDVKcxgDdWL/7wsB9bnIalUFoHo="; Path=/; HttpOnly
Last-Modified: Tue, 26 Oct 2021 21:52:00 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20211026 22:07:22.491" endtime="20211026 22:07:22.492"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:07:22.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:07:22.492" endtime="20211026 22:07:22.493"/>
</kw>
<status status="PASS" starttime="20211026 22:07:22.346" endtime="20211026 22:07:22.493"/>
</kw>
<msg timestamp="20211026 22:07:22.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:07:22.346" endtime="20211026 22:07:22.494"/>
</kw>
<msg timestamp="20211026 22:07:22.494" level="INFO">${result} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20211026 22:07:22.345" endtime="20211026 22:07:22.494"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211026 22:07:22.494" endtime="20211026 22:07:22.495"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211026 22:07:22.315" endtime="20211026 22:07:22.495"/>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:07:22.504" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:07:22.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:07:22.510" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211026 22:07:22.501" endtime="20211026 22:07:22.510"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:07:22.512" level="INFO">scm</msg>
<status status="PASS" starttime="20211026 22:07:22.511" endtime="20211026 22:07:22.512"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:07:22.513" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:07:22.512" endtime="20211026 22:07:22.513"/>
</kw>
<status status="PASS" starttime="20211026 22:07:22.500" endtime="20211026 22:07:22.513"/>
</kw>
<msg timestamp="20211026 22:07:22.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:07:22.500" endtime="20211026 22:07:22.513"/>
</kw>
<msg timestamp="20211026 22:07:22.514" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211026 22:07:22.499" endtime="20211026 22:07:22.514"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211026 22:07:22.516" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211026 22:07:22.514" endtime="20211026 22:07:22.517"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:07:22.521" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:07:22.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:07:22.531" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:07:22.519" endtime="20211026 22:07:22.532"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:07:22.533" level="INFO"/>
<status status="PASS" starttime="20211026 22:07:22.532" endtime="20211026 22:07:22.533"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:07:22.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:07:22.533" endtime="20211026 22:07:22.534"/>
</kw>
<status status="PASS" starttime="20211026 22:07:22.518" endtime="20211026 22:07:22.534"/>
</kw>
<msg timestamp="20211026 22:07:22.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:07:22.518" endtime="20211026 22:07:22.534"/>
</kw>
<status status="PASS" starttime="20211026 22:07:22.517" endtime="20211026 22:07:22.535"/>
</kw>
<status status="PASS" starttime="20211026 22:07:22.517" endtime="20211026 22:07:22.535"/>
</kw>
<status status="PASS" starttime="20211026 22:07:22.499" endtime="20211026 22:07:22.535"/>
</kw>
<status status="PASS" starttime="20211026 22:07:22.498" endtime="20211026 22:07:22.535"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:07:22.540" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:12:22.498" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211026 22:07:22.538" endtime="20211026 22:12:22.499"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211026 22:12:22.499" endtime="20211026 22:12:22.500"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211026 22:12:22.500" endtime="20211026 22:12:22.500"/>
</kw>
<status status="FAIL" starttime="20211026 22:07:22.536" endtime="20211026 22:12:22.500"/>
</kw>
<msg timestamp="20211026 22:12:22.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211026 22:07:22.536" endtime="20211026 22:12:22.501"/>
</kw>
<status status="FAIL" starttime="20211026 22:07:22.535" endtime="20211026 22:12:22.501"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20211026 22:12:22.502" endtime="20211026 22:12:22.502"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Status: Success</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211026 22:12:22.502" endtime="20211026 22:12:22.502"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211026 22:07:22.497" endtime="20211026 22:12:22.502">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" starttime="20211026 22:07:22.275" endtime="20211026 22:12:22.505"/>
</suite>
<suite id="s1-s1-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s1-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:12:22.521" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:12:25.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:12:25.717" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211026 22:12:22.517" endtime="20211026 22:12:25.717"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:12:25.718" level="INFO">om</msg>
<status status="PASS" starttime="20211026 22:12:25.717" endtime="20211026 22:12:25.719"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:12:25.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:12:25.719" endtime="20211026 22:12:25.721"/>
</kw>
<status status="PASS" starttime="20211026 22:12:22.516" endtime="20211026 22:12:25.722"/>
</kw>
<msg timestamp="20211026 22:12:25.722" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:12:22.516" endtime="20211026 22:12:25.723"/>
</kw>
<msg timestamp="20211026 22:12:25.724" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211026 22:12:22.515" endtime="20211026 22:12:25.724"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211026 22:12:25.724" endtime="20211026 22:12:25.725"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:12:25.734" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:12:28.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:12:28.685" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211026 22:12:25.730" endtime="20211026 22:12:28.685"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:12:28.688" level="INFO">om</msg>
<status status="PASS" starttime="20211026 22:12:28.686" endtime="20211026 22:12:28.688"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:12:28.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:12:28.688" endtime="20211026 22:12:28.689"/>
</kw>
<status status="PASS" starttime="20211026 22:12:25.729" endtime="20211026 22:12:28.692"/>
</kw>
<msg timestamp="20211026 22:12:28.693" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:12:25.727" endtime="20211026 22:12:28.693"/>
</kw>
<msg timestamp="20211026 22:12:28.697" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211026 22:12:25.725" endtime="20211026 22:12:28.697"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211026 22:12:28.698" endtime="20211026 22:12:28.699"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211026 22:12:22.513" endtime="20211026 22:12:28.699"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:12:28.712" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:12:31.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:12:31.570" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211026 22:12:28.707" endtime="20211026 22:12:31.570"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:12:31.571" level="INFO">scm</msg>
<status status="PASS" starttime="20211026 22:12:31.571" endtime="20211026 22:12:31.572"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:12:31.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:12:31.572" endtime="20211026 22:12:31.578"/>
</kw>
<status status="PASS" starttime="20211026 22:12:28.706" endtime="20211026 22:12:31.578"/>
</kw>
<msg timestamp="20211026 22:12:31.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:12:28.705" endtime="20211026 22:12:31.579"/>
</kw>
<msg timestamp="20211026 22:12:31.579" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20211026 22:12:28.703" endtime="20211026 22:12:31.579"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211026 22:12:31.579" endtime="20211026 22:12:31.580"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:12:31.586" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:12:33.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:12:33.146" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211026 22:12:31.582" endtime="20211026 22:12:33.147"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:12:33.148" level="INFO">scm</msg>
<status status="PASS" starttime="20211026 22:12:33.147" endtime="20211026 22:12:33.148"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:12:33.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:12:33.148" endtime="20211026 22:12:33.149"/>
</kw>
<status status="PASS" starttime="20211026 22:12:31.582" endtime="20211026 22:12:33.149"/>
</kw>
<msg timestamp="20211026 22:12:33.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:12:31.581" endtime="20211026 22:12:33.149"/>
</kw>
<msg timestamp="20211026 22:12:33.149" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20211026 22:12:31.580" endtime="20211026 22:12:33.149"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211026 22:12:33.150" endtime="20211026 22:12:33.150"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211026 22:12:28.702" endtime="20211026 22:12:33.150"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:12:33.157" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:12:35.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:12:35.537" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211026 22:12:33.155" endtime="20211026 22:12:35.537"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:12:35.538" level="INFO">om</msg>
<status status="PASS" starttime="20211026 22:12:35.537" endtime="20211026 22:12:35.538"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:12:35.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:12:35.539" endtime="20211026 22:12:35.539"/>
</kw>
<status status="PASS" starttime="20211026 22:12:33.155" endtime="20211026 22:12:35.540"/>
</kw>
<msg timestamp="20211026 22:12:35.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:12:33.154" endtime="20211026 22:12:35.540"/>
</kw>
<msg timestamp="20211026 22:12:35.540" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211026 22:12:33.153" endtime="20211026 22:12:35.540"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211026 22:12:35.540" endtime="20211026 22:12:35.541"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211026 22:12:35.541" endtime="20211026 22:12:35.542"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:12:35.546" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:12:38.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:12:38.556" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211026 22:12:35.544" endtime="20211026 22:12:38.557"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:12:38.559" level="INFO">om</msg>
<status status="PASS" starttime="20211026 22:12:38.558" endtime="20211026 22:12:38.559"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:12:38.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:12:38.560" endtime="20211026 22:12:38.560"/>
</kw>
<status status="PASS" starttime="20211026 22:12:35.543" endtime="20211026 22:12:38.561"/>
</kw>
<msg timestamp="20211026 22:12:38.561" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:12:35.543" endtime="20211026 22:12:38.561"/>
</kw>
<msg timestamp="20211026 22:12:38.562" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211026 22:12:35.542" endtime="20211026 22:12:38.562"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211026 22:12:38.562" endtime="20211026 22:12:38.563"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211026 22:12:38.563" endtime="20211026 22:12:38.564"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211026 22:12:33.152" endtime="20211026 22:12:38.565"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:12:38.573" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:12:41.558" level="INFO">${rc} = 255</msg>
<msg timestamp="20211026 22:12:41.558" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211026 22:12:38.571" endtime="20211026 22:12:41.558"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:12:41.560" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211026 22:12:41.559" endtime="20211026 22:12:41.560"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:12:41.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:12:41.560" endtime="20211026 22:12:41.562"/>
</kw>
<msg timestamp="20211026 22:12:41.563" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211026 22:12:38.570" endtime="20211026 22:12:41.563"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211026 22:12:41.563" endtime="20211026 22:12:41.564"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:12:41.569" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:12:44.364" level="INFO">${rc} = 255</msg>
<msg timestamp="20211026 22:12:44.364" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211026 22:12:41.566" endtime="20211026 22:12:44.365"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:12:44.366" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211026 22:12:44.365" endtime="20211026 22:12:44.366"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:12:44.366" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:12:44.366" endtime="20211026 22:12:44.367"/>
</kw>
<msg timestamp="20211026 22:12:44.367" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211026 22:12:41.565" endtime="20211026 22:12:44.367"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211026 22:12:44.367" endtime="20211026 22:12:44.368"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211026 22:12:38.568" endtime="20211026 22:12:44.368"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20211026 22:12:22.508" endtime="20211026 22:12:44.369"/>
</suite>
<suite id="s1-s1-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211026 22:12:44.393" level="INFO">${random} = 26857</msg>
<status status="PASS" starttime="20211026 22:12:44.392" endtime="20211026 22:12:44.393"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211026 22:12:44.396" level="INFO">${source} = 26857-source</msg>
<status status="PASS" starttime="20211026 22:12:44.393" endtime="20211026 22:12:44.396"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211026 22:12:44.398" level="INFO">${target} = 26857-target</msg>
<status status="PASS" starttime="20211026 22:12:44.396" endtime="20211026 22:12:44.398"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:12:44.403" level="INFO">Running command 'ozone sh volume create 26857-source 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:12:50.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:12:50.894" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:12:44.400" endtime="20211026 22:12:50.894"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:12:50.896" level="INFO"/>
<status status="PASS" starttime="20211026 22:12:50.895" endtime="20211026 22:12:50.896"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:12:50.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:12:50.896" endtime="20211026 22:12:50.897"/>
</kw>
<status status="PASS" starttime="20211026 22:12:44.399" endtime="20211026 22:12:50.897"/>
</kw>
<msg timestamp="20211026 22:12:50.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:12:44.399" endtime="20211026 22:12:50.898"/>
</kw>
<status status="PASS" starttime="20211026 22:12:44.398" endtime="20211026 22:12:50.898"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:12:50.906" level="INFO">Running command 'ozone sh volume create 26857-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:12:59.670" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:12:59.670" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:12:50.903" endtime="20211026 22:12:59.670"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:12:59.672" level="INFO"/>
<status status="PASS" starttime="20211026 22:12:59.671" endtime="20211026 22:12:59.672"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:12:59.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:12:59.672" endtime="20211026 22:12:59.672"/>
</kw>
<status status="PASS" starttime="20211026 22:12:50.900" endtime="20211026 22:12:59.673"/>
</kw>
<msg timestamp="20211026 22:12:59.673" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:12:50.899" endtime="20211026 22:12:59.673"/>
</kw>
<status status="PASS" starttime="20211026 22:12:50.898" endtime="20211026 22:12:59.674"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:12:59.681" level="INFO">Running command 'ozone sh bucket create 26857-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:13:06.478" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:13:06.478" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:12:59.678" endtime="20211026 22:13:06.478"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:13:06.480" level="INFO"/>
<status status="PASS" starttime="20211026 22:13:06.479" endtime="20211026 22:13:06.480"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:13:06.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:13:06.480" endtime="20211026 22:13:06.480"/>
</kw>
<status status="PASS" starttime="20211026 22:12:59.677" endtime="20211026 22:13:06.481"/>
</kw>
<msg timestamp="20211026 22:13:06.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:12:59.676" endtime="20211026 22:13:06.481"/>
</kw>
<status status="PASS" starttime="20211026 22:12:59.675" endtime="20211026 22:13:06.481"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:13:06.486" level="INFO">Running command 'ozone sh key put 26857-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:16:17.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:16:17.719" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:13:06.484" endtime="20211026 22:16:17.719"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:16:17.721" level="INFO"/>
<status status="PASS" starttime="20211026 22:16:17.720" endtime="20211026 22:16:17.721"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:16:17.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:16:17.721" endtime="20211026 22:16:17.722"/>
</kw>
<status status="PASS" starttime="20211026 22:13:06.483" endtime="20211026 22:16:17.723"/>
</kw>
<msg timestamp="20211026 22:16:17.723" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:13:06.482" endtime="20211026 22:16:17.723"/>
</kw>
<status status="PASS" starttime="20211026 22:13:06.482" endtime="20211026 22:16:17.723"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:16:17.728" level="INFO">Running command 'ozone sh bucket create 26857-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:16:25.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:16:25.154" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:16:17.725" endtime="20211026 22:16:25.155"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:16:25.157" level="INFO"/>
<status status="PASS" starttime="20211026 22:16:25.156" endtime="20211026 22:16:25.158"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:16:25.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:16:25.158" endtime="20211026 22:16:25.159"/>
</kw>
<status status="PASS" starttime="20211026 22:16:17.724" endtime="20211026 22:16:25.161"/>
</kw>
<msg timestamp="20211026 22:16:25.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:16:17.724" endtime="20211026 22:16:25.162"/>
</kw>
<status status="PASS" starttime="20211026 22:16:17.723" endtime="20211026 22:16:25.163"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:16:25.173" level="INFO">Running command 'ozone sh bucket link 26857-source/readable-bucket 26857-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:16:33.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:16:33.519" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:16:25.170" endtime="20211026 22:16:33.519"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:16:33.520" level="INFO"/>
<status status="PASS" starttime="20211026 22:16:33.519" endtime="20211026 22:16:33.520"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:16:33.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:16:33.520" endtime="20211026 22:16:33.521"/>
</kw>
<status status="PASS" starttime="20211026 22:16:25.167" endtime="20211026 22:16:33.521"/>
</kw>
<msg timestamp="20211026 22:16:33.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:16:25.166" endtime="20211026 22:16:33.521"/>
</kw>
<status status="PASS" starttime="20211026 22:16:25.163" endtime="20211026 22:16:33.521"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:16:33.528" level="INFO">Running command 'ozone sh bucket link 26857-source/readable-bucket 26857-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:16:39.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:16:39.633" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:16:33.525" endtime="20211026 22:16:39.633"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:16:39.635" level="INFO"/>
<status status="PASS" starttime="20211026 22:16:39.633" endtime="20211026 22:16:39.636"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:16:39.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:16:39.637" endtime="20211026 22:16:39.637"/>
</kw>
<status status="PASS" starttime="20211026 22:16:33.524" endtime="20211026 22:16:39.638"/>
</kw>
<msg timestamp="20211026 22:16:39.638" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:16:33.523" endtime="20211026 22:16:39.638"/>
</kw>
<status status="PASS" starttime="20211026 22:16:33.521" endtime="20211026 22:16:39.639"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:16:39.644" level="INFO">Running command 'ozone sh bucket link 26857-source/unreadable-bucket 26857-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:16:48.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:16:48.227" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:16:39.641" endtime="20211026 22:16:48.227"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:16:48.229" level="INFO"/>
<status status="PASS" starttime="20211026 22:16:48.228" endtime="20211026 22:16:48.229"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:16:48.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:16:48.229" endtime="20211026 22:16:48.230"/>
</kw>
<status status="PASS" starttime="20211026 22:16:39.641" endtime="20211026 22:16:48.231"/>
</kw>
<msg timestamp="20211026 22:16:48.231" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:16:39.640" endtime="20211026 22:16:48.231"/>
</kw>
<status status="PASS" starttime="20211026 22:16:39.639" endtime="20211026 22:16:48.232"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:16:48.236" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 26857-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:16:54.621" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:16:54.621" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211026 22:16:48.234" endtime="20211026 22:16:54.622"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:16:54.625" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211026 22:16:54.623" endtime="20211026 22:16:54.625"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:16:54.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:16:54.625" endtime="20211026 22:16:54.627"/>
</kw>
<status status="PASS" starttime="20211026 22:16:48.233" endtime="20211026 22:16:54.627"/>
</kw>
<msg timestamp="20211026 22:16:54.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:16:48.233" endtime="20211026 22:16:54.628"/>
</kw>
<status status="PASS" starttime="20211026 22:16:48.232" endtime="20211026 22:16:54.629"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:16:54.637" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 26857-source 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:17:02.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:17:02.683" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211026 22:16:54.633" endtime="20211026 22:17:02.683"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:17:02.684" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211026 22:17:02.683" endtime="20211026 22:17:02.684"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:17:02.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:17:02.684" endtime="20211026 22:17:02.685"/>
</kw>
<status status="PASS" starttime="20211026 22:16:54.632" endtime="20211026 22:17:02.685"/>
</kw>
<msg timestamp="20211026 22:17:02.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:16:54.631" endtime="20211026 22:17:02.686"/>
</kw>
<status status="PASS" starttime="20211026 22:16:54.630" endtime="20211026 22:17:02.686"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:17:02.692" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 26857-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:17:10.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:17:10.269" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211026 22:17:02.690" endtime="20211026 22:17:10.269"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:17:10.271" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211026 22:17:10.270" endtime="20211026 22:17:10.271"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:17:10.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:17:10.272" endtime="20211026 22:17:10.273"/>
</kw>
<status status="PASS" starttime="20211026 22:17:02.689" endtime="20211026 22:17:10.274"/>
</kw>
<msg timestamp="20211026 22:17:10.274" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:17:02.688" endtime="20211026 22:17:10.274"/>
</kw>
<status status="PASS" starttime="20211026 22:17:02.687" endtime="20211026 22:17:10.275"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:17:10.282" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 26857-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:17:18.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:17:18.020" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211026 22:17:10.278" endtime="20211026 22:17:18.020"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:17:18.021" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211026 22:17:18.020" endtime="20211026 22:17:18.021"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:17:18.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:17:18.021" endtime="20211026 22:17:18.022"/>
</kw>
<status status="PASS" starttime="20211026 22:17:10.277" endtime="20211026 22:17:18.022"/>
</kw>
<msg timestamp="20211026 22:17:18.022" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:17:10.276" endtime="20211026 22:17:18.022"/>
</kw>
<status status="PASS" starttime="20211026 22:17:10.275" endtime="20211026 22:17:18.023"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:17:18.028" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 26857-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:17:25.777" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:17:25.777" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211026 22:17:18.024" endtime="20211026 22:17:25.777"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:17:25.778" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211026 22:17:25.778" endtime="20211026 22:17:25.778"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:17:25.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:17:25.779" endtime="20211026 22:17:25.779"/>
</kw>
<status status="PASS" starttime="20211026 22:17:18.024" endtime="20211026 22:17:25.779"/>
</kw>
<msg timestamp="20211026 22:17:25.780" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:17:18.024" endtime="20211026 22:17:25.780"/>
</kw>
<status status="PASS" starttime="20211026 22:17:18.023" endtime="20211026 22:17:25.780"/>
</kw>
<status status="PASS" starttime="20211026 22:12:59.675" endtime="20211026 22:17:25.780"/>
</kw>
<status status="PASS" starttime="20211026 22:12:59.674" endtime="20211026 22:17:25.781"/>
</kw>
<status status="PASS" starttime="20211026 22:12:44.392" endtime="20211026 22:17:25.781"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:17:25.788" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:17:25.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:17:25.794" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211026 22:17:25.785" endtime="20211026 22:17:25.795"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:17:25.796" level="INFO">scm</msg>
<status status="PASS" starttime="20211026 22:17:25.795" endtime="20211026 22:17:25.796"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:17:25.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:17:25.797" endtime="20211026 22:17:25.798"/>
</kw>
<status status="PASS" starttime="20211026 22:17:25.785" endtime="20211026 22:17:25.798"/>
</kw>
<msg timestamp="20211026 22:17:25.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:17:25.784" endtime="20211026 22:17:25.799"/>
</kw>
<msg timestamp="20211026 22:17:25.799" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211026 22:17:25.784" endtime="20211026 22:17:25.799"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211026 22:17:25.802" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211026 22:17:25.799" endtime="20211026 22:17:25.802"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:17:25.808" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:17:26.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:17:26.005" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:17:25.806" endtime="20211026 22:17:26.005"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:17:26.006" level="INFO"/>
<status status="PASS" starttime="20211026 22:17:26.005" endtime="20211026 22:17:26.006"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:17:26.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:17:26.007" endtime="20211026 22:17:26.007"/>
</kw>
<status status="PASS" starttime="20211026 22:17:25.805" endtime="20211026 22:17:26.008"/>
</kw>
<msg timestamp="20211026 22:17:26.008" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:17:25.805" endtime="20211026 22:17:26.008"/>
</kw>
<status status="PASS" starttime="20211026 22:17:25.804" endtime="20211026 22:17:26.008"/>
</kw>
<status status="PASS" starttime="20211026 22:17:25.803" endtime="20211026 22:17:26.008"/>
</kw>
<status status="PASS" starttime="20211026 22:17:25.783" endtime="20211026 22:17:26.008"/>
</kw>
<status status="PASS" starttime="20211026 22:17:25.783" endtime="20211026 22:17:26.008"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:17:26.013" level="INFO">Running command 'ozone sh bucket link 26857-source/no-such-bucket 26857-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:17:34.025" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:17:34.025" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:17:26.011" endtime="20211026 22:17:34.025"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:17:34.027" level="INFO"/>
<status status="PASS" starttime="20211026 22:17:34.026" endtime="20211026 22:17:34.027"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:17:34.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:17:34.027" endtime="20211026 22:17:34.028"/>
</kw>
<status status="PASS" starttime="20211026 22:17:26.010" endtime="20211026 22:17:34.028"/>
</kw>
<msg timestamp="20211026 22:17:34.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:17:26.010" endtime="20211026 22:17:34.029"/>
</kw>
<status status="PASS" starttime="20211026 22:17:26.009" endtime="20211026 22:17:34.029"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:17:34.035" level="INFO">Running command 'ozone sh key list 26857-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:17:41.354" level="INFO">${rc} = 255</msg>
<msg timestamp="20211026 22:17:41.354" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20211026 22:17:34.031" endtime="20211026 22:17:41.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:17:41.356" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20211026 22:17:41.355" endtime="20211026 22:17:41.356"/>
</kw>
<msg timestamp="20211026 22:17:41.356" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20211026 22:17:34.030" endtime="20211026 22:17:41.356"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211026 22:17:41.357" endtime="20211026 22:17:41.357"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211026 22:17:25.781" endtime="20211026 22:17:41.357"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:17:41.365" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:17:41.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:17:41.368" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211026 22:17:41.363" endtime="20211026 22:17:41.368"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:17:41.369" level="INFO">scm</msg>
<status status="PASS" starttime="20211026 22:17:41.369" endtime="20211026 22:17:41.369"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:17:41.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:17:41.369" endtime="20211026 22:17:41.370"/>
</kw>
<status status="PASS" starttime="20211026 22:17:41.362" endtime="20211026 22:17:41.370"/>
</kw>
<msg timestamp="20211026 22:17:41.370" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:17:41.362" endtime="20211026 22:17:41.371"/>
</kw>
<msg timestamp="20211026 22:17:41.371" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211026 22:17:41.361" endtime="20211026 22:17:41.371"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211026 22:17:41.372" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211026 22:17:41.371" endtime="20211026 22:17:41.372"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:17:41.376" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:17:41.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:17:41.384" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:17:41.374" endtime="20211026 22:17:41.384"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:17:41.385" level="INFO"/>
<status status="PASS" starttime="20211026 22:17:41.384" endtime="20211026 22:17:41.385"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:17:41.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:17:41.385" endtime="20211026 22:17:41.386"/>
</kw>
<status status="PASS" starttime="20211026 22:17:41.374" endtime="20211026 22:17:41.386"/>
</kw>
<msg timestamp="20211026 22:17:41.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:17:41.373" endtime="20211026 22:17:41.387"/>
</kw>
<status status="PASS" starttime="20211026 22:17:41.373" endtime="20211026 22:17:41.387"/>
</kw>
<status status="PASS" starttime="20211026 22:17:41.372" endtime="20211026 22:17:41.387"/>
</kw>
<status status="PASS" starttime="20211026 22:17:41.360" endtime="20211026 22:17:41.387"/>
</kw>
<status status="PASS" starttime="20211026 22:17:41.359" endtime="20211026 22:17:41.387"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:17:41.393" level="INFO">Running command 'ozone sh bucket link 26857-source/bucket1 26857-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:17:46.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:17:46.843" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:17:41.389" endtime="20211026 22:17:46.843"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:17:46.847" level="INFO"/>
<status status="PASS" starttime="20211026 22:17:46.846" endtime="20211026 22:17:46.847"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:17:46.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:17:46.848" endtime="20211026 22:17:46.850"/>
</kw>
<status status="PASS" starttime="20211026 22:17:41.389" endtime="20211026 22:17:46.851"/>
</kw>
<msg timestamp="20211026 22:17:46.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:17:41.388" endtime="20211026 22:17:46.851"/>
</kw>
<status status="PASS" starttime="20211026 22:17:41.388" endtime="20211026 22:17:46.852"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:17:46.857" level="INFO">Running command 'ozone sh bucket create 26857-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:17:55.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:17:55.286" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:17:46.854" endtime="20211026 22:17:55.286"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:17:55.289" level="INFO"/>
<status status="PASS" starttime="20211026 22:17:55.287" endtime="20211026 22:17:55.289"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:17:55.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:17:55.289" endtime="20211026 22:17:55.291"/>
</kw>
<status status="PASS" starttime="20211026 22:17:46.854" endtime="20211026 22:17:55.291"/>
</kw>
<msg timestamp="20211026 22:17:55.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:17:46.853" endtime="20211026 22:17:55.292"/>
</kw>
<status status="PASS" starttime="20211026 22:17:46.852" endtime="20211026 22:17:55.292"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:17:55.303" level="INFO">Running command 'ozone sh key put 26857-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:19:41.360" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20211026 22:17:55.299" endtime="20211026 22:19:41.360"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211026 22:19:41.361" endtime="20211026 22:19:41.361"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211026 22:19:41.361" endtime="20211026 22:19:41.361"/>
</kw>
<status status="FAIL" starttime="20211026 22:17:55.298" endtime="20211026 22:19:41.362"/>
</kw>
<msg timestamp="20211026 22:19:41.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211026 22:17:55.295" endtime="20211026 22:19:41.362"/>
</kw>
<status status="FAIL" starttime="20211026 22:17:55.292" endtime="20211026 22:19:41.362"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<status status="NOT RUN" starttime="20211026 22:19:41.362" endtime="20211026 22:19:41.363"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211026 22:17:41.359" endtime="20211026 22:19:41.363">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:19:41.371" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:19:41.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:19:41.377" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211026 22:19:41.369" endtime="20211026 22:19:41.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:19:41.379" level="INFO">scm</msg>
<status status="PASS" starttime="20211026 22:19:41.378" endtime="20211026 22:19:41.379"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:19:41.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:19:41.380" endtime="20211026 22:19:41.381"/>
</kw>
<status status="PASS" starttime="20211026 22:19:41.368" endtime="20211026 22:19:41.382"/>
</kw>
<msg timestamp="20211026 22:19:41.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:19:41.368" endtime="20211026 22:19:41.383"/>
</kw>
<msg timestamp="20211026 22:19:41.384" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211026 22:19:41.367" endtime="20211026 22:19:41.384"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211026 22:19:41.386" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211026 22:19:41.384" endtime="20211026 22:19:41.387"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:19:41.397" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:19:41.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:19:41.407" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:19:41.393" endtime="20211026 22:19:41.407"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:19:41.409" level="INFO"/>
<status status="PASS" starttime="20211026 22:19:41.408" endtime="20211026 22:19:41.409"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:19:41.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:19:41.410" endtime="20211026 22:19:41.411"/>
</kw>
<status status="PASS" starttime="20211026 22:19:41.391" endtime="20211026 22:19:41.411"/>
</kw>
<msg timestamp="20211026 22:19:41.411" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:19:41.390" endtime="20211026 22:19:41.411"/>
</kw>
<status status="PASS" starttime="20211026 22:19:41.389" endtime="20211026 22:19:41.412"/>
</kw>
<status status="PASS" starttime="20211026 22:19:41.387" endtime="20211026 22:19:41.412"/>
</kw>
<status status="PASS" starttime="20211026 22:19:41.366" endtime="20211026 22:19:41.412"/>
</kw>
<status status="PASS" starttime="20211026 22:19:41.365" endtime="20211026 22:19:41.412"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:19:41.418" level="INFO">Running command 'ozone sh key put 26857-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:21:41.364" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20211026 22:19:41.415" endtime="20211026 22:21:41.365"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211026 22:21:41.366" endtime="20211026 22:21:41.366"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211026 22:21:41.366" endtime="20211026 22:21:41.366"/>
</kw>
<status status="FAIL" starttime="20211026 22:19:41.414" endtime="20211026 22:21:41.367"/>
</kw>
<msg timestamp="20211026 22:21:41.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211026 22:19:41.414" endtime="20211026 22:21:41.367"/>
</kw>
<status status="FAIL" starttime="20211026 22:19:41.413" endtime="20211026 22:21:41.368"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211026 22:21:41.368" endtime="20211026 22:21:41.368"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211026 22:19:41.364" endtime="20211026 22:21:41.368">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:21:41.383" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:21:41.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:21:41.391" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211026 22:21:41.378" endtime="20211026 22:21:41.391"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:21:41.393" level="INFO">scm</msg>
<status status="PASS" starttime="20211026 22:21:41.392" endtime="20211026 22:21:41.393"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:21:41.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:21:41.393" endtime="20211026 22:21:41.394"/>
</kw>
<status status="PASS" starttime="20211026 22:21:41.377" endtime="20211026 22:21:41.395"/>
</kw>
<msg timestamp="20211026 22:21:41.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:21:41.376" endtime="20211026 22:21:41.395"/>
</kw>
<msg timestamp="20211026 22:21:41.395" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211026 22:21:41.375" endtime="20211026 22:21:41.395"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211026 22:21:41.397" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211026 22:21:41.396" endtime="20211026 22:21:41.397"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:21:41.404" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:21:41.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:21:41.418" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:21:41.401" endtime="20211026 22:21:41.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:21:41.421" level="INFO"/>
<status status="PASS" starttime="20211026 22:21:41.419" endtime="20211026 22:21:41.421"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:21:41.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:21:41.421" endtime="20211026 22:21:41.422"/>
</kw>
<status status="PASS" starttime="20211026 22:21:41.400" endtime="20211026 22:21:41.423"/>
</kw>
<msg timestamp="20211026 22:21:41.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:21:41.399" endtime="20211026 22:21:41.423"/>
</kw>
<status status="PASS" starttime="20211026 22:21:41.397" endtime="20211026 22:21:41.424"/>
</kw>
<status status="PASS" starttime="20211026 22:21:41.397" endtime="20211026 22:21:41.424"/>
</kw>
<status status="PASS" starttime="20211026 22:21:41.374" endtime="20211026 22:21:41.424"/>
</kw>
<status status="PASS" starttime="20211026 22:21:41.372" endtime="20211026 22:21:41.424"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:21:41.431" level="INFO">Running command 'ozone sh key list 26857-target/link1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:21:50.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:21:50.751" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20211026 22:21:41.428" endtime="20211026 22:21:50.751"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:21:50.752" level="INFO">key1</msg>
<status status="PASS" starttime="20211026 22:21:50.751" endtime="20211026 22:21:50.752"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:21:50.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:21:50.752" endtime="20211026 22:21:50.753"/>
</kw>
<status status="PASS" starttime="20211026 22:21:41.427" endtime="20211026 22:21:50.754"/>
</kw>
<msg timestamp="20211026 22:21:50.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:21:41.426" endtime="20211026 22:21:50.755"/>
</kw>
<msg timestamp="20211026 22:21:50.755" level="INFO">${target_list} = key1</msg>
<status status="PASS" starttime="20211026 22:21:41.425" endtime="20211026 22:21:50.755"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:21:50.762" level="INFO">Running command 'ozone sh key list 26857-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:21:59.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:21:59.451" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20211026 22:21:50.758" endtime="20211026 22:21:59.451"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:21:59.453" level="INFO">key1</msg>
<status status="PASS" starttime="20211026 22:21:59.452" endtime="20211026 22:21:59.454"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:21:59.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:21:59.454" endtime="20211026 22:21:59.456"/>
</kw>
<status status="PASS" starttime="20211026 22:21:50.757" endtime="20211026 22:21:59.456"/>
</kw>
<msg timestamp="20211026 22:21:59.457" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:21:50.757" endtime="20211026 22:21:59.457"/>
</kw>
<msg timestamp="20211026 22:21:59.458" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20211026 22:21:50.756" endtime="20211026 22:21:59.458"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211026 22:21:59.458" endtime="20211026 22:21:59.459"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211026 22:21:59.459" endtime="20211026 22:21:59.460"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20211026 22:21:59.462" level="FAIL">'key1' does not contain 'key2'</msg>
<status status="FAIL" starttime="20211026 22:21:59.461" endtime="20211026 22:21:59.462"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211026 22:21:41.370" endtime="20211026 22:21:59.463">'key1' does not contain 'key2'</status>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:21:59.474" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:21:59.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:21:59.483" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211026 22:21:59.471" endtime="20211026 22:21:59.483"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:21:59.485" level="INFO">scm</msg>
<status status="PASS" starttime="20211026 22:21:59.483" endtime="20211026 22:21:59.485"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:21:59.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:21:59.485" endtime="20211026 22:21:59.486"/>
</kw>
<status status="PASS" starttime="20211026 22:21:59.470" endtime="20211026 22:21:59.487"/>
</kw>
<msg timestamp="20211026 22:21:59.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:21:59.469" endtime="20211026 22:21:59.488"/>
</kw>
<msg timestamp="20211026 22:21:59.489" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211026 22:21:59.469" endtime="20211026 22:21:59.489"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211026 22:21:59.490" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211026 22:21:59.489" endtime="20211026 22:21:59.490"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:21:59.496" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:21:59.517" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:21:59.517" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:21:59.494" endtime="20211026 22:21:59.517"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:21:59.520" level="INFO"/>
<status status="PASS" starttime="20211026 22:21:59.518" endtime="20211026 22:21:59.520"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:21:59.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:21:59.521" endtime="20211026 22:21:59.522"/>
</kw>
<status status="PASS" starttime="20211026 22:21:59.492" endtime="20211026 22:21:59.523"/>
</kw>
<msg timestamp="20211026 22:21:59.524" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:21:59.492" endtime="20211026 22:21:59.524"/>
</kw>
<status status="PASS" starttime="20211026 22:21:59.491" endtime="20211026 22:21:59.525"/>
</kw>
<status status="PASS" starttime="20211026 22:21:59.490" endtime="20211026 22:21:59.525"/>
</kw>
<status status="PASS" starttime="20211026 22:21:59.468" endtime="20211026 22:21:59.526"/>
</kw>
<status status="PASS" starttime="20211026 22:21:59.467" endtime="20211026 22:21:59.526"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:21:59.531" level="INFO">Running command 'ozone sh key delete 26857-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:22:08.234" level="INFO">${rc} = 255</msg>
<msg timestamp="20211026 22:22:08.234" level="INFO">${output} = KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20211026 22:21:59.528" endtime="20211026 22:22:08.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:22:08.235" level="INFO">KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20211026 22:22:08.235" endtime="20211026 22:22:08.236"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:22:08.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20211026 22:22:08.237" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20211026 22:22:08.236" endtime="20211026 22:22:08.237"/>
</kw>
<status status="FAIL" starttime="20211026 22:21:59.527" endtime="20211026 22:22:08.237"/>
</kw>
<msg timestamp="20211026 22:22:08.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211026 22:21:59.527" endtime="20211026 22:22:08.237"/>
</kw>
<status status="FAIL" starttime="20211026 22:21:59.526" endtime="20211026 22:22:08.238"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211026 22:22:08.238" endtime="20211026 22:22:08.238"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211026 22:22:08.238" endtime="20211026 22:22:08.239"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211026 22:21:59.465" endtime="20211026 22:22:08.241">255 != 0</status>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:22:08.253" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:22:08.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:22:08.260" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211026 22:22:08.249" endtime="20211026 22:22:08.260"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:22:08.261" level="INFO">scm</msg>
<status status="PASS" starttime="20211026 22:22:08.260" endtime="20211026 22:22:08.261"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:22:08.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:22:08.261" endtime="20211026 22:22:08.263"/>
</kw>
<status status="PASS" starttime="20211026 22:22:08.247" endtime="20211026 22:22:08.264"/>
</kw>
<msg timestamp="20211026 22:22:08.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:22:08.247" endtime="20211026 22:22:08.264"/>
</kw>
<msg timestamp="20211026 22:22:08.265" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211026 22:22:08.245" endtime="20211026 22:22:08.265"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211026 22:22:08.266" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211026 22:22:08.265" endtime="20211026 22:22:08.266"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:22:08.274" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:22:08.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:22:08.281" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:22:08.270" endtime="20211026 22:22:08.281"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:22:08.283" level="INFO"/>
<status status="PASS" starttime="20211026 22:22:08.282" endtime="20211026 22:22:08.283"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:22:08.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:22:08.284" endtime="20211026 22:22:08.284"/>
</kw>
<status status="PASS" starttime="20211026 22:22:08.269" endtime="20211026 22:22:08.285"/>
</kw>
<msg timestamp="20211026 22:22:08.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:22:08.268" endtime="20211026 22:22:08.285"/>
</kw>
<status status="PASS" starttime="20211026 22:22:08.267" endtime="20211026 22:22:08.285"/>
</kw>
<status status="PASS" starttime="20211026 22:22:08.266" endtime="20211026 22:22:08.285"/>
</kw>
<status status="PASS" starttime="20211026 22:22:08.244" endtime="20211026 22:22:08.286"/>
</kw>
<status status="PASS" starttime="20211026 22:22:08.243" endtime="20211026 22:22:08.286"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:22:08.292" level="INFO">Running command 'ozone sh bucket list 26857-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:22:17.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:22:17.337" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "26857-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "202...</msg>
<status status="PASS" starttime="20211026 22:22:08.288" endtime="20211026 22:22:17.337"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:22:17.341" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "26857-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-26T22:17:33.937Z",
  "modificationTime" : "2021-10-26T22:17:33.937Z",
  "sourceVolume" : "26857-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "26857-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-26T22:16:47.854Z",
  "modificationTime" : "2021-10-26T22:17:25.486Z",
  "sourceVolume" : "26857-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "26857-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-26T22:17:46.715Z",
  "modificationTime" : "2021-10-26T22:17:46.715Z",
  "sourceVolume" : "26857-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "26857-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-26T22:16:33.411Z",
  "modificationTime" : "2021-10-26T22:17:17.908Z",
  "sourceVolume" : "26857-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "26857-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-26T22:16:39.508Z",
  "modificationTime" : "2021-10-26T22:16:39.508Z",
  "sourceVolume" : "26857-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
} ]</msg>
<status status="PASS" starttime="20211026 22:22:17.339" endtime="20211026 22:22:17.341"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:22:17.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:22:17.342" endtime="20211026 22:22:17.344"/>
</kw>
<status status="PASS" starttime="20211026 22:22:08.287" endtime="20211026 22:22:17.345"/>
</kw>
<msg timestamp="20211026 22:22:17.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:22:08.287" endtime="20211026 22:22:17.346"/>
</kw>
<msg timestamp="20211026 22:22:17.347" level="INFO">${result} = [ {
  "metadata" : { },
  "volumeName" : "26857-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "202...</msg>
<status status="PASS" starttime="20211026 22:22:08.286" endtime="20211026 22:22:17.347"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211026 22:22:17.347" endtime="20211026 22:22:17.349"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211026 22:22:17.349" endtime="20211026 22:22:17.350"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211026 22:22:08.241" endtime="20211026 22:22:17.351"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:22:17.364" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:22:17.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:22:17.370" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211026 22:22:17.360" endtime="20211026 22:22:17.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:22:17.372" level="INFO">scm</msg>
<status status="PASS" starttime="20211026 22:22:17.371" endtime="20211026 22:22:17.372"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:22:17.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:22:17.372" endtime="20211026 22:22:17.373"/>
</kw>
<status status="PASS" starttime="20211026 22:22:17.359" endtime="20211026 22:22:17.374"/>
</kw>
<msg timestamp="20211026 22:22:17.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:22:17.358" endtime="20211026 22:22:17.374"/>
</kw>
<msg timestamp="20211026 22:22:17.374" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211026 22:22:17.357" endtime="20211026 22:22:17.374"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211026 22:22:17.375" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211026 22:22:17.374" endtime="20211026 22:22:17.376"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:22:17.383" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:22:17.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:22:17.395" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:22:17.381" endtime="20211026 22:22:17.396"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:22:17.397" level="INFO"/>
<status status="PASS" starttime="20211026 22:22:17.396" endtime="20211026 22:22:17.397"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:22:17.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:22:17.398" endtime="20211026 22:22:17.399"/>
</kw>
<status status="PASS" starttime="20211026 22:22:17.379" endtime="20211026 22:22:17.399"/>
</kw>
<msg timestamp="20211026 22:22:17.400" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:22:17.378" endtime="20211026 22:22:17.400"/>
</kw>
<status status="PASS" starttime="20211026 22:22:17.377" endtime="20211026 22:22:17.401"/>
</kw>
<status status="PASS" starttime="20211026 22:22:17.376" endtime="20211026 22:22:17.401"/>
</kw>
<status status="PASS" starttime="20211026 22:22:17.355" endtime="20211026 22:22:17.401"/>
</kw>
<status status="PASS" starttime="20211026 22:22:17.354" endtime="20211026 22:22:17.401"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:22:17.406" level="INFO">Running command 'ozone sh bucket info 26857-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:22:24.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:22:24.526" level="INFO">${output} = {
  "volumeName" : "26857-target",
  "bucketName" : "link1",
  "sourceVolume" : "26857-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-10-26T22:17:46.715Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20211026 22:22:17.404" endtime="20211026 22:22:24.526"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:22:24.529" level="INFO">{
  "volumeName" : "26857-target",
  "bucketName" : "link1",
  "sourceVolume" : "26857-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-10-26T22:17:46.715Z",
  "modificationTime" : "2021-10-26T22:17:46.715Z"
}</msg>
<status status="PASS" starttime="20211026 22:22:24.527" endtime="20211026 22:22:24.529"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:22:24.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:22:24.530" endtime="20211026 22:22:24.531"/>
</kw>
<status status="PASS" starttime="20211026 22:22:17.403" endtime="20211026 22:22:24.532"/>
</kw>
<msg timestamp="20211026 22:22:24.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:22:17.403" endtime="20211026 22:22:24.532"/>
</kw>
<msg timestamp="20211026 22:22:24.532" level="INFO">${result} = {
  "volumeName" : "26857-target",
  "bucketName" : "link1",
  "sourceVolume" : "26857-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-10-26T22:17:46.715Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20211026 22:22:17.402" endtime="20211026 22:22:24.532"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${source}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211026 22:22:24.533" endtime="20211026 22:22:24.534"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bucket1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211026 22:22:24.534" endtime="20211026 22:22:24.535"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${target}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211026 22:22:24.535" endtime="20211026 22:22:24.536"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211026 22:22:24.536" endtime="20211026 22:22:24.539"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>modificationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211026 22:22:24.539" endtime="20211026 22:22:24.539"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211026 22:22:24.540" endtime="20211026 22:22:24.540"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>metadata</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211026 22:22:24.540" endtime="20211026 22:22:24.542"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211026 22:22:17.352" endtime="20211026 22:22:24.542"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:22:24.555" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:22:24.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:22:24.561" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211026 22:22:24.551" endtime="20211026 22:22:24.561"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:22:24.563" level="INFO">scm</msg>
<status status="PASS" starttime="20211026 22:22:24.562" endtime="20211026 22:22:24.563"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:22:24.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:22:24.563" endtime="20211026 22:22:24.564"/>
</kw>
<status status="PASS" starttime="20211026 22:22:24.550" endtime="20211026 22:22:24.565"/>
</kw>
<msg timestamp="20211026 22:22:24.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:22:24.549" endtime="20211026 22:22:24.566"/>
</kw>
<msg timestamp="20211026 22:22:24.566" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211026 22:22:24.548" endtime="20211026 22:22:24.566"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211026 22:22:24.568" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211026 22:22:24.566" endtime="20211026 22:22:24.568"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:22:24.576" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:22:24.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:22:24.586" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:22:24.573" endtime="20211026 22:22:24.586"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:22:24.587" level="INFO"/>
<status status="PASS" starttime="20211026 22:22:24.586" endtime="20211026 22:22:24.587"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:22:24.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:22:24.588" endtime="20211026 22:22:24.588"/>
</kw>
<status status="PASS" starttime="20211026 22:22:24.572" endtime="20211026 22:22:24.589"/>
</kw>
<msg timestamp="20211026 22:22:24.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:22:24.570" endtime="20211026 22:22:24.589"/>
</kw>
<status status="PASS" starttime="20211026 22:22:24.569" endtime="20211026 22:22:24.589"/>
</kw>
<status status="PASS" starttime="20211026 22:22:24.568" endtime="20211026 22:22:24.590"/>
</kw>
<status status="PASS" starttime="20211026 22:22:24.547" endtime="20211026 22:22:24.590"/>
</kw>
<status status="PASS" starttime="20211026 22:22:24.545" endtime="20211026 22:22:24.590"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:22:24.597" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 26857-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:22:32.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:22:32.660" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211026 22:22:24.593" endtime="20211026 22:22:32.661"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:22:32.663" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211026 22:22:32.661" endtime="20211026 22:22:32.664"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:22:32.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:22:32.664" endtime="20211026 22:22:32.665"/>
</kw>
<status status="PASS" starttime="20211026 22:22:24.592" endtime="20211026 22:22:32.666"/>
</kw>
<msg timestamp="20211026 22:22:32.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:22:24.592" endtime="20211026 22:22:32.667"/>
</kw>
<status status="PASS" starttime="20211026 22:22:24.591" endtime="20211026 22:22:32.667"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:22:32.677" level="INFO">Running command 'ozone sh bucket getacl 26857-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:22:41.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:22:41.973" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20211026 22:22:32.674" endtime="20211026 22:22:41.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:22:41.976" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20211026 22:22:41.975" endtime="20211026 22:22:41.976"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:22:41.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:22:41.976" endtime="20211026 22:22:41.977"/>
</kw>
<status status="PASS" starttime="20211026 22:22:32.673" endtime="20211026 22:22:41.977"/>
</kw>
<msg timestamp="20211026 22:22:41.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:22:32.672" endtime="20211026 22:22:41.977"/>
</kw>
<msg timestamp="20211026 22:22:41.978" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20211026 22:22:32.669" endtime="20211026 22:22:41.978"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211026 22:22:41.978" endtime="20211026 22:22:41.979"/>
</kw>
<status status="PASS" starttime="20211026 22:22:32.668" endtime="20211026 22:22:41.979"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:22:41.985" level="INFO">Running command 'ozone sh bucket getacl 26857-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:22:50.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:22:50.549" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:22:41.983" endtime="20211026 22:22:50.550"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:22:50.555" level="INFO"/>
<status status="PASS" starttime="20211026 22:22:50.551" endtime="20211026 22:22:50.555"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:22:50.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:22:50.555" endtime="20211026 22:22:50.556"/>
</kw>
<status status="PASS" starttime="20211026 22:22:41.983" endtime="20211026 22:22:50.557"/>
</kw>
<msg timestamp="20211026 22:22:50.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:22:41.982" endtime="20211026 22:22:50.557"/>
</kw>
<msg timestamp="20211026 22:22:50.558" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20211026 22:22:41.981" endtime="20211026 22:22:50.558"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211026 22:22:50.559" endtime="20211026 22:22:50.561"/>
</kw>
<status status="PASS" starttime="20211026 22:22:41.979" endtime="20211026 22:22:50.561"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:22:50.568" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 26857-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:22:56.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:22:56.653" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211026 22:22:50.565" endtime="20211026 22:22:56.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:22:56.656" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211026 22:22:56.654" endtime="20211026 22:22:56.656"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:22:56.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:22:56.657" endtime="20211026 22:22:56.659"/>
</kw>
<status status="PASS" starttime="20211026 22:22:50.564" endtime="20211026 22:22:56.660"/>
</kw>
<msg timestamp="20211026 22:22:56.660" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:22:50.563" endtime="20211026 22:22:56.660"/>
</kw>
<status status="PASS" starttime="20211026 22:22:50.561" endtime="20211026 22:22:56.661"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:22:56.674" level="INFO">Running command 'ozone sh bucket getacl 26857-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:23:05.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:23:05.730" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:22:56.671" endtime="20211026 22:23:05.730"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:23:05.732" level="INFO"/>
<status status="PASS" starttime="20211026 22:23:05.731" endtime="20211026 22:23:05.732"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:23:05.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:23:05.732" endtime="20211026 22:23:05.733"/>
</kw>
<status status="PASS" starttime="20211026 22:22:56.668" endtime="20211026 22:23:05.733"/>
</kw>
<msg timestamp="20211026 22:23:05.733" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:22:56.667" endtime="20211026 22:23:05.734"/>
</kw>
<msg timestamp="20211026 22:23:05.735" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20211026 22:22:56.665" endtime="20211026 22:23:05.735"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211026 22:23:05.735" endtime="20211026 22:23:05.736"/>
</kw>
<status status="PASS" starttime="20211026 22:22:56.662" endtime="20211026 22:23:05.737"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:23:05.747" level="INFO">Running command 'ozone sh bucket getacl 26857-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:23:13.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:23:13.352" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20211026 22:23:05.744" endtime="20211026 22:23:13.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:23:13.353" level="INFO">READ</msg>
<status status="PASS" starttime="20211026 22:23:13.353" endtime="20211026 22:23:13.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:23:13.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:23:13.354" endtime="20211026 22:23:13.355"/>
</kw>
<status status="PASS" starttime="20211026 22:23:05.743" endtime="20211026 22:23:13.355"/>
</kw>
<msg timestamp="20211026 22:23:13.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:23:05.742" endtime="20211026 22:23:13.356"/>
</kw>
<msg timestamp="20211026 22:23:13.356" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20211026 22:23:05.739" endtime="20211026 22:23:13.356"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211026 22:23:13.356" endtime="20211026 22:23:13.357"/>
</kw>
<status status="PASS" starttime="20211026 22:23:05.737" endtime="20211026 22:23:13.357"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211026 22:22:24.543" endtime="20211026 22:23:13.357"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:23:13.364" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:23:13.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:23:13.368" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211026 22:23:13.362" endtime="20211026 22:23:13.368"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:23:13.370" level="INFO">scm</msg>
<status status="PASS" starttime="20211026 22:23:13.369" endtime="20211026 22:23:13.370"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:23:13.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:23:13.370" endtime="20211026 22:23:13.371"/>
</kw>
<status status="PASS" starttime="20211026 22:23:13.362" endtime="20211026 22:23:13.371"/>
</kw>
<msg timestamp="20211026 22:23:13.371" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:23:13.361" endtime="20211026 22:23:13.371"/>
</kw>
<msg timestamp="20211026 22:23:13.371" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211026 22:23:13.361" endtime="20211026 22:23:13.372"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211026 22:23:13.372" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211026 22:23:13.372" endtime="20211026 22:23:13.373"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:23:13.378" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:23:13.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:23:13.597" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:23:13.375" endtime="20211026 22:23:13.597"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:23:13.598" level="INFO"/>
<status status="PASS" starttime="20211026 22:23:13.597" endtime="20211026 22:23:13.599"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:23:13.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:23:13.599" endtime="20211026 22:23:13.600"/>
</kw>
<status status="PASS" starttime="20211026 22:23:13.374" endtime="20211026 22:23:13.600"/>
</kw>
<msg timestamp="20211026 22:23:13.600" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:23:13.374" endtime="20211026 22:23:13.600"/>
</kw>
<status status="PASS" starttime="20211026 22:23:13.373" endtime="20211026 22:23:13.601"/>
</kw>
<status status="PASS" starttime="20211026 22:23:13.373" endtime="20211026 22:23:13.601"/>
</kw>
<status status="PASS" starttime="20211026 22:23:13.360" endtime="20211026 22:23:13.601"/>
</kw>
<status status="PASS" starttime="20211026 22:23:13.359" endtime="20211026 22:23:13.601"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:23:13.605" level="INFO">Running command 'ozone sh bucket link 26857-source/bucket2 26857-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:23:21.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:23:21.623" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:23:13.603" endtime="20211026 22:23:21.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:23:21.626" level="INFO"/>
<status status="PASS" starttime="20211026 22:23:21.624" endtime="20211026 22:23:21.626"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:23:21.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:23:21.626" endtime="20211026 22:23:21.629"/>
</kw>
<status status="PASS" starttime="20211026 22:23:13.602" endtime="20211026 22:23:21.630"/>
</kw>
<msg timestamp="20211026 22:23:21.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:23:13.602" endtime="20211026 22:23:21.630"/>
</kw>
<status status="PASS" starttime="20211026 22:23:13.601" endtime="20211026 22:23:21.630"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:23:21.635" level="INFO">Running command 'ozone sh bucket create 26857-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:23:30.593" level="INFO">${rc} = 255</msg>
<msg timestamp="20211026 22:23:30.593" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211026 22:23:21.631" endtime="20211026 22:23:30.593"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:23:30.595" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211026 22:23:30.594" endtime="20211026 22:23:30.596"/>
</kw>
<msg timestamp="20211026 22:23:30.596" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211026 22:23:21.630" endtime="20211026 22:23:30.596"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211026 22:23:30.597" endtime="20211026 22:23:30.598"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:23:30.605" level="INFO">Running command 'ozone sh bucket create 26857-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:23:39.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:23:39.106" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:23:30.602" endtime="20211026 22:23:39.106"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:23:39.108" level="INFO"/>
<status status="PASS" starttime="20211026 22:23:39.107" endtime="20211026 22:23:39.108"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:23:39.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:23:39.109" endtime="20211026 22:23:39.110"/>
</kw>
<status status="PASS" starttime="20211026 22:23:30.600" endtime="20211026 22:23:39.111"/>
</kw>
<msg timestamp="20211026 22:23:39.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:23:30.600" endtime="20211026 22:23:39.111"/>
</kw>
<status status="PASS" starttime="20211026 22:23:30.599" endtime="20211026 22:23:39.111"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:23:39.117" level="INFO">Running command 'ozone sh bucket link 26857-source/bucket1 26857-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:23:46.915" level="INFO">${rc} = 255</msg>
<msg timestamp="20211026 22:23:46.915" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211026 22:23:39.113" endtime="20211026 22:23:46.915"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:23:46.918" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211026 22:23:46.916" endtime="20211026 22:23:46.919"/>
</kw>
<msg timestamp="20211026 22:23:46.920" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211026 22:23:39.112" endtime="20211026 22:23:46.920"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211026 22:23:46.920" endtime="20211026 22:23:46.921"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211026 22:23:13.358" endtime="20211026 22:23:46.922"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:23:46.930" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:23:46.935" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:23:46.936" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211026 22:23:46.927" endtime="20211026 22:23:46.936"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:23:46.938" level="INFO">scm</msg>
<status status="PASS" starttime="20211026 22:23:46.937" endtime="20211026 22:23:46.938"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:23:46.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:23:46.938" endtime="20211026 22:23:46.940"/>
</kw>
<status status="PASS" starttime="20211026 22:23:46.927" endtime="20211026 22:23:46.940"/>
</kw>
<msg timestamp="20211026 22:23:46.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:23:46.926" endtime="20211026 22:23:46.941"/>
</kw>
<msg timestamp="20211026 22:23:46.941" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211026 22:23:46.926" endtime="20211026 22:23:46.942"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211026 22:23:46.945" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211026 22:23:46.942" endtime="20211026 22:23:46.945"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:23:46.951" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:23:46.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:23:46.961" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:23:46.948" endtime="20211026 22:23:46.961"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:23:46.964" level="INFO"/>
<status status="PASS" starttime="20211026 22:23:46.963" endtime="20211026 22:23:46.964"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:23:46.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:23:46.964" endtime="20211026 22:23:46.965"/>
</kw>
<status status="PASS" starttime="20211026 22:23:46.947" endtime="20211026 22:23:46.966"/>
</kw>
<msg timestamp="20211026 22:23:46.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:23:46.947" endtime="20211026 22:23:46.966"/>
</kw>
<status status="PASS" starttime="20211026 22:23:46.946" endtime="20211026 22:23:46.967"/>
</kw>
<status status="PASS" starttime="20211026 22:23:46.945" endtime="20211026 22:23:46.967"/>
</kw>
<status status="PASS" starttime="20211026 22:23:46.925" endtime="20211026 22:23:46.967"/>
</kw>
<status status="PASS" starttime="20211026 22:23:46.924" endtime="20211026 22:23:46.967"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:23:46.975" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:23:46.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:23:46.980" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:23:46.972" endtime="20211026 22:23:46.980"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:23:46.982" level="INFO"/>
<status status="PASS" starttime="20211026 22:23:46.981" endtime="20211026 22:23:46.982"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:23:46.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:23:46.982" endtime="20211026 22:23:46.983"/>
</kw>
<status status="PASS" starttime="20211026 22:23:46.972" endtime="20211026 22:23:46.984"/>
</kw>
<msg timestamp="20211026 22:23:46.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:23:46.971" endtime="20211026 22:23:46.984"/>
</kw>
<status status="PASS" starttime="20211026 22:23:46.970" endtime="20211026 22:23:46.984"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:23:46.992" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:23:46.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:23:46.996" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211026 22:23:46.988" endtime="20211026 22:23:46.997"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:23:46.998" level="INFO">scm</msg>
<status status="PASS" starttime="20211026 22:23:46.997" endtime="20211026 22:23:46.998"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:23:47.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:23:46.999" endtime="20211026 22:23:47.000"/>
</kw>
<status status="PASS" starttime="20211026 22:23:46.987" endtime="20211026 22:23:47.001"/>
</kw>
<msg timestamp="20211026 22:23:47.001" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:23:46.987" endtime="20211026 22:23:47.001"/>
</kw>
<msg timestamp="20211026 22:23:47.001" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211026 22:23:46.986" endtime="20211026 22:23:47.002"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211026 22:23:47.003" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211026 22:23:47.002" endtime="20211026 22:23:47.003"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:23:47.009" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:23:47.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:23:47.019" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:23:47.006" endtime="20211026 22:23:47.019"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:23:47.021" level="INFO"/>
<status status="PASS" starttime="20211026 22:23:47.020" endtime="20211026 22:23:47.021"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:23:47.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:23:47.021" endtime="20211026 22:23:47.022"/>
</kw>
<status status="PASS" starttime="20211026 22:23:47.005" endtime="20211026 22:23:47.023"/>
</kw>
<msg timestamp="20211026 22:23:47.023" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:23:47.005" endtime="20211026 22:23:47.024"/>
</kw>
<status status="PASS" starttime="20211026 22:23:47.004" endtime="20211026 22:23:47.024"/>
</kw>
<status status="PASS" starttime="20211026 22:23:47.003" endtime="20211026 22:23:47.024"/>
</kw>
<status status="PASS" starttime="20211026 22:23:46.985" endtime="20211026 22:23:47.024"/>
</kw>
<status status="PASS" starttime="20211026 22:23:46.985" endtime="20211026 22:23:47.025"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:23:47.028" level="INFO">Running command 'ozone sh key list 26857-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:23:55.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:23:55.407" level="INFO">${output} = [ {
  "volumeName" : "26857-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-10-26T22:13:12.456Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20211026 22:23:47.026" endtime="20211026 22:23:55.407"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:23:55.409" level="INFO">[ {
  "volumeName" : "26857-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-10-26T22:13:12.456Z",
  "modificationTime" : "2021-10-26T22:16:16.484Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "replicationFactor" : 3,
  "replicationType" : "RATIS"
} ]</msg>
<status status="PASS" starttime="20211026 22:23:55.408" endtime="20211026 22:23:55.409"/>
</kw>
<msg timestamp="20211026 22:23:55.410" level="INFO">${result} = [ {
  "volumeName" : "26857-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-10-26T22:13:12.456Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20211026 22:23:47.025" endtime="20211026 22:23:55.410"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211026 22:23:55.410" endtime="20211026 22:23:55.412"/>
</kw>
<status status="PASS" starttime="20211026 22:23:46.969" endtime="20211026 22:23:55.412"/>
</kw>
<status status="PASS" starttime="20211026 22:23:46.968" endtime="20211026 22:23:55.412"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211026 22:23:46.923" endtime="20211026 22:23:55.413"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:23:55.423" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:23:55.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:23:55.428" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211026 22:23:55.420" endtime="20211026 22:23:55.428"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:23:55.429" level="INFO">scm</msg>
<status status="PASS" starttime="20211026 22:23:55.428" endtime="20211026 22:23:55.429"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:23:55.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:23:55.429" endtime="20211026 22:23:55.430"/>
</kw>
<status status="PASS" starttime="20211026 22:23:55.419" endtime="20211026 22:23:55.431"/>
</kw>
<msg timestamp="20211026 22:23:55.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:23:55.419" endtime="20211026 22:23:55.431"/>
</kw>
<msg timestamp="20211026 22:23:55.431" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211026 22:23:55.418" endtime="20211026 22:23:55.431"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211026 22:23:55.432" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211026 22:23:55.432" endtime="20211026 22:23:55.433"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:23:55.438" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:23:55.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:23:55.448" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:23:55.435" endtime="20211026 22:23:55.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:23:55.450" level="INFO"/>
<status status="PASS" starttime="20211026 22:23:55.449" endtime="20211026 22:23:55.450"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:23:55.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:23:55.450" endtime="20211026 22:23:55.451"/>
</kw>
<status status="PASS" starttime="20211026 22:23:55.435" endtime="20211026 22:23:55.452"/>
</kw>
<msg timestamp="20211026 22:23:55.452" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:23:55.434" endtime="20211026 22:23:55.452"/>
</kw>
<status status="PASS" starttime="20211026 22:23:55.433" endtime="20211026 22:23:55.453"/>
</kw>
<status status="PASS" starttime="20211026 22:23:55.433" endtime="20211026 22:23:55.454"/>
</kw>
<status status="PASS" starttime="20211026 22:23:55.417" endtime="20211026 22:23:55.454"/>
</kw>
<status status="PASS" starttime="20211026 22:23:55.416" endtime="20211026 22:23:55.454"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:23:55.461" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:23:55.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:23:55.467" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:23:55.459" endtime="20211026 22:23:55.467"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:23:55.471" level="INFO"/>
<status status="PASS" starttime="20211026 22:23:55.467" endtime="20211026 22:23:55.471"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:23:55.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:23:55.471" endtime="20211026 22:23:55.472"/>
</kw>
<status status="PASS" starttime="20211026 22:23:55.458" endtime="20211026 22:23:55.472"/>
</kw>
<msg timestamp="20211026 22:23:55.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:23:55.457" endtime="20211026 22:23:55.473"/>
</kw>
<status status="PASS" starttime="20211026 22:23:55.456" endtime="20211026 22:23:55.473"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:23:55.479" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:23:55.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:23:55.484" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211026 22:23:55.476" endtime="20211026 22:23:55.484"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:23:55.486" level="INFO">scm</msg>
<status status="PASS" starttime="20211026 22:23:55.485" endtime="20211026 22:23:55.486"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:23:55.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:23:55.486" endtime="20211026 22:23:55.487"/>
</kw>
<status status="PASS" starttime="20211026 22:23:55.475" endtime="20211026 22:23:55.488"/>
</kw>
<msg timestamp="20211026 22:23:55.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:23:55.475" endtime="20211026 22:23:55.488"/>
</kw>
<msg timestamp="20211026 22:23:55.488" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211026 22:23:55.474" endtime="20211026 22:23:55.488"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211026 22:23:55.489" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211026 22:23:55.489" endtime="20211026 22:23:55.489"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:23:55.496" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:23:55.505" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:23:55.505" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:23:55.493" endtime="20211026 22:23:55.505"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:23:55.506" level="INFO"/>
<status status="PASS" starttime="20211026 22:23:55.505" endtime="20211026 22:23:55.507"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:23:55.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:23:55.507" endtime="20211026 22:23:55.508"/>
</kw>
<status status="PASS" starttime="20211026 22:23:55.492" endtime="20211026 22:23:55.508"/>
</kw>
<msg timestamp="20211026 22:23:55.508" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:23:55.491" endtime="20211026 22:23:55.509"/>
</kw>
<status status="PASS" starttime="20211026 22:23:55.490" endtime="20211026 22:23:55.509"/>
</kw>
<status status="PASS" starttime="20211026 22:23:55.490" endtime="20211026 22:23:55.509"/>
</kw>
<status status="PASS" starttime="20211026 22:23:55.474" endtime="20211026 22:23:55.510"/>
</kw>
<status status="PASS" starttime="20211026 22:23:55.473" endtime="20211026 22:23:55.510"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:23:55.513" level="INFO">Running command 'ozone sh key list 26857-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:24:04.532" level="INFO">${rc} = 255</msg>
<msg timestamp="20211026 22:24:04.532" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 26857-target unreadable-link null</msg>
<status status="PASS" starttime="20211026 22:23:55.511" endtime="20211026 22:24:04.532"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:24:04.535" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 26857-target unreadable-link null</msg>
<status status="PASS" starttime="20211026 22:24:04.533" endtime="20211026 22:24:04.536"/>
</kw>
<msg timestamp="20211026 22:24:04.536" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 26857-target unreadable-link null</msg>
<status status="PASS" starttime="20211026 22:23:55.510" endtime="20211026 22:24:04.537"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211026 22:24:04.537" endtime="20211026 22:24:04.537"/>
</kw>
<status status="PASS" starttime="20211026 22:23:55.455" endtime="20211026 22:24:04.538"/>
</kw>
<status status="PASS" starttime="20211026 22:23:55.455" endtime="20211026 22:24:04.538"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211026 22:23:55.414" endtime="20211026 22:24:04.539"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:24:04.552" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:24:04.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:24:04.557" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211026 22:24:04.549" endtime="20211026 22:24:04.557"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:24:04.559" level="INFO">scm</msg>
<status status="PASS" starttime="20211026 22:24:04.558" endtime="20211026 22:24:04.559"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:24:04.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:24:04.559" endtime="20211026 22:24:04.560"/>
</kw>
<status status="PASS" starttime="20211026 22:24:04.548" endtime="20211026 22:24:04.561"/>
</kw>
<msg timestamp="20211026 22:24:04.561" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:24:04.547" endtime="20211026 22:24:04.561"/>
</kw>
<msg timestamp="20211026 22:24:04.561" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211026 22:24:04.546" endtime="20211026 22:24:04.561"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211026 22:24:04.562" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211026 22:24:04.562" endtime="20211026 22:24:04.563"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:24:04.569" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:24:04.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:24:04.579" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:24:04.566" endtime="20211026 22:24:04.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:24:04.580" level="INFO"/>
<status status="PASS" starttime="20211026 22:24:04.580" endtime="20211026 22:24:04.581"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:24:04.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:24:04.581" endtime="20211026 22:24:04.582"/>
</kw>
<status status="PASS" starttime="20211026 22:24:04.565" endtime="20211026 22:24:04.582"/>
</kw>
<msg timestamp="20211026 22:24:04.582" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:24:04.564" endtime="20211026 22:24:04.582"/>
</kw>
<status status="PASS" starttime="20211026 22:24:04.563" endtime="20211026 22:24:04.583"/>
</kw>
<status status="PASS" starttime="20211026 22:24:04.563" endtime="20211026 22:24:04.583"/>
</kw>
<status status="PASS" starttime="20211026 22:24:04.546" endtime="20211026 22:24:04.583"/>
</kw>
<status status="PASS" starttime="20211026 22:24:04.545" endtime="20211026 22:24:04.583"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:24:04.590" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:24:04.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:24:04.596" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:24:04.587" endtime="20211026 22:24:04.596"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:24:04.598" level="INFO"/>
<status status="PASS" starttime="20211026 22:24:04.597" endtime="20211026 22:24:04.598"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:24:04.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:24:04.598" endtime="20211026 22:24:04.599"/>
</kw>
<status status="PASS" starttime="20211026 22:24:04.586" endtime="20211026 22:24:04.600"/>
</kw>
<msg timestamp="20211026 22:24:04.600" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:24:04.585" endtime="20211026 22:24:04.600"/>
</kw>
<status status="PASS" starttime="20211026 22:24:04.585" endtime="20211026 22:24:04.600"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:24:04.607" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:24:04.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:24:04.614" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211026 22:24:04.605" endtime="20211026 22:24:04.614"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:24:04.615" level="INFO">scm</msg>
<status status="PASS" starttime="20211026 22:24:04.614" endtime="20211026 22:24:04.615"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:24:04.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:24:04.615" endtime="20211026 22:24:04.616"/>
</kw>
<status status="PASS" starttime="20211026 22:24:04.604" endtime="20211026 22:24:04.616"/>
</kw>
<msg timestamp="20211026 22:24:04.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:24:04.603" endtime="20211026 22:24:04.616"/>
</kw>
<msg timestamp="20211026 22:24:04.616" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211026 22:24:04.602" endtime="20211026 22:24:04.616"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211026 22:24:04.617" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211026 22:24:04.617" endtime="20211026 22:24:04.618"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:24:04.623" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:24:04.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:24:04.635" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:24:04.621" endtime="20211026 22:24:04.635"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:24:04.637" level="INFO"/>
<status status="PASS" starttime="20211026 22:24:04.636" endtime="20211026 22:24:04.637"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:24:04.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:24:04.638" endtime="20211026 22:24:04.639"/>
</kw>
<status status="PASS" starttime="20211026 22:24:04.620" endtime="20211026 22:24:04.640"/>
</kw>
<msg timestamp="20211026 22:24:04.640" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:24:04.620" endtime="20211026 22:24:04.640"/>
</kw>
<status status="PASS" starttime="20211026 22:24:04.619" endtime="20211026 22:24:04.640"/>
</kw>
<status status="PASS" starttime="20211026 22:24:04.618" endtime="20211026 22:24:04.640"/>
</kw>
<status status="PASS" starttime="20211026 22:24:04.601" endtime="20211026 22:24:04.640"/>
</kw>
<status status="PASS" starttime="20211026 22:24:04.601" endtime="20211026 22:24:04.641"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:24:04.645" level="INFO">Running command 'ozone sh bucket info 26857-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:24:12.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:24:12.897" level="INFO">${output} = {
  "volumeName" : "26857-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "26857-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-10-26T22:16:47.854Z...</msg>
<status status="PASS" starttime="20211026 22:24:04.643" endtime="20211026 22:24:12.897"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:24:12.899" level="INFO">{
  "volumeName" : "26857-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "26857-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-10-26T22:16:47.854Z",
  "modificationTime" : "2021-10-26T22:17:25.486Z"
}</msg>
<status status="PASS" starttime="20211026 22:24:12.898" endtime="20211026 22:24:12.900"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:24:12.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:24:12.900" endtime="20211026 22:24:12.902"/>
</kw>
<status status="PASS" starttime="20211026 22:24:04.642" endtime="20211026 22:24:12.903"/>
</kw>
<msg timestamp="20211026 22:24:12.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:24:04.642" endtime="20211026 22:24:12.903"/>
</kw>
<msg timestamp="20211026 22:24:12.904" level="INFO">${result} = {
  "volumeName" : "26857-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "26857-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-10-26T22:16:47.854Z...</msg>
<status status="PASS" starttime="20211026 22:24:04.641" endtime="20211026 22:24:12.904"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211026 22:24:12.904" endtime="20211026 22:24:12.905"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211026 22:24:12.905" endtime="20211026 22:24:12.906"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:24:12.911" level="INFO">Running command 'ozone sh key list 26857-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:24:21.552" level="INFO">${rc} = 255</msg>
<msg timestamp="20211026 22:24:21.552" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 26857-source unreadable-bucket </msg>
<status status="PASS" starttime="20211026 22:24:12.908" endtime="20211026 22:24:21.552"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:24:21.555" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 26857-source unreadable-bucket </msg>
<status status="PASS" starttime="20211026 22:24:21.553" endtime="20211026 22:24:21.555"/>
</kw>
<msg timestamp="20211026 22:24:21.556" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 26857-source unreadable-bucket </msg>
<status status="PASS" starttime="20211026 22:24:12.906" endtime="20211026 22:24:21.556"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211026 22:24:21.557" endtime="20211026 22:24:21.558"/>
</kw>
<status status="PASS" starttime="20211026 22:24:04.584" endtime="20211026 22:24:21.558"/>
</kw>
<status status="PASS" starttime="20211026 22:24:04.584" endtime="20211026 22:24:21.558"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211026 22:24:04.541" endtime="20211026 22:24:21.559"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:24:21.572" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:24:21.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:24:21.577" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211026 22:24:21.568" endtime="20211026 22:24:21.577"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:24:21.580" level="INFO">scm</msg>
<status status="PASS" starttime="20211026 22:24:21.578" endtime="20211026 22:24:21.580"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:24:21.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:24:21.581" endtime="20211026 22:24:21.583"/>
</kw>
<status status="PASS" starttime="20211026 22:24:21.567" endtime="20211026 22:24:21.584"/>
</kw>
<msg timestamp="20211026 22:24:21.585" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:24:21.565" endtime="20211026 22:24:21.585"/>
</kw>
<msg timestamp="20211026 22:24:21.586" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211026 22:24:21.564" endtime="20211026 22:24:21.586"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211026 22:24:21.588" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211026 22:24:21.586" endtime="20211026 22:24:21.588"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:24:21.601" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:24:21.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:24:21.621" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:24:21.592" endtime="20211026 22:24:21.621"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:24:21.623" level="INFO"/>
<status status="PASS" starttime="20211026 22:24:21.621" endtime="20211026 22:24:21.623"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:24:21.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:24:21.624" endtime="20211026 22:24:21.625"/>
</kw>
<status status="PASS" starttime="20211026 22:24:21.591" endtime="20211026 22:24:21.625"/>
</kw>
<msg timestamp="20211026 22:24:21.625" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:24:21.590" endtime="20211026 22:24:21.626"/>
</kw>
<status status="PASS" starttime="20211026 22:24:21.589" endtime="20211026 22:24:21.626"/>
</kw>
<status status="PASS" starttime="20211026 22:24:21.588" endtime="20211026 22:24:21.626"/>
</kw>
<status status="PASS" starttime="20211026 22:24:21.563" endtime="20211026 22:24:21.627"/>
</kw>
<status status="PASS" starttime="20211026 22:24:21.562" endtime="20211026 22:24:21.627"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:24:21.636" level="INFO">Running command 'ozone sh bucket link 26857-target/loop1 26857-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:24:28.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:24:28.816" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:24:21.630" endtime="20211026 22:24:28.816"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:24:28.818" level="INFO"/>
<status status="PASS" starttime="20211026 22:24:28.817" endtime="20211026 22:24:28.818"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:24:28.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:24:28.818" endtime="20211026 22:24:28.819"/>
</kw>
<status status="PASS" starttime="20211026 22:24:21.629" endtime="20211026 22:24:28.819"/>
</kw>
<msg timestamp="20211026 22:24:28.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:24:21.628" endtime="20211026 22:24:28.819"/>
</kw>
<status status="PASS" starttime="20211026 22:24:21.627" endtime="20211026 22:24:28.820"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:24:28.824" level="INFO">Running command 'ozone sh bucket link 26857-target/loop2 26857-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:24:35.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:24:35.859" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:24:28.822" endtime="20211026 22:24:35.859"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:24:35.862" level="INFO"/>
<status status="PASS" starttime="20211026 22:24:35.860" endtime="20211026 22:24:35.862"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:24:35.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:24:35.863" endtime="20211026 22:24:35.865"/>
</kw>
<status status="PASS" starttime="20211026 22:24:28.821" endtime="20211026 22:24:35.866"/>
</kw>
<msg timestamp="20211026 22:24:35.866" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:24:28.821" endtime="20211026 22:24:35.867"/>
</kw>
<status status="PASS" starttime="20211026 22:24:28.820" endtime="20211026 22:24:35.867"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:24:35.875" level="INFO">Running command 'ozone sh bucket link 26857-target/loop3 26857-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:24:42.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:24:42.509" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:24:35.871" endtime="20211026 22:24:42.509"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:24:42.511" level="INFO"/>
<status status="PASS" starttime="20211026 22:24:42.510" endtime="20211026 22:24:42.511"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:24:42.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:24:42.511" endtime="20211026 22:24:42.512"/>
</kw>
<status status="PASS" starttime="20211026 22:24:35.871" endtime="20211026 22:24:42.512"/>
</kw>
<msg timestamp="20211026 22:24:42.512" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:24:35.870" endtime="20211026 22:24:42.512"/>
</kw>
<status status="PASS" starttime="20211026 22:24:35.868" endtime="20211026 22:24:42.512"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:24:42.516" level="INFO">Running command 'ozone sh key list 26857-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:24:48.773" level="INFO">${rc} = 255</msg>
<msg timestamp="20211026 22:24:48.773" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20211026 22:24:42.513" endtime="20211026 22:24:48.773"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:24:48.775" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20211026 22:24:48.774" endtime="20211026 22:24:48.775"/>
</kw>
<msg timestamp="20211026 22:24:48.776" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20211026 22:24:42.513" endtime="20211026 22:24:48.777"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211026 22:24:48.777" endtime="20211026 22:24:48.778"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211026 22:24:21.560" endtime="20211026 22:24:48.779"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:24:48.791" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:24:48.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:24:48.798" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211026 22:24:48.786" endtime="20211026 22:24:48.798"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:24:48.801" level="INFO">scm</msg>
<status status="PASS" starttime="20211026 22:24:48.799" endtime="20211026 22:24:48.801"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:24:48.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:24:48.801" endtime="20211026 22:24:48.803"/>
</kw>
<status status="PASS" starttime="20211026 22:24:48.785" endtime="20211026 22:24:48.803"/>
</kw>
<msg timestamp="20211026 22:24:48.803" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:24:48.785" endtime="20211026 22:24:48.804"/>
</kw>
<msg timestamp="20211026 22:24:48.810" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211026 22:24:48.784" endtime="20211026 22:24:48.810"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211026 22:24:48.812" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211026 22:24:48.811" endtime="20211026 22:24:48.812"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:24:48.818" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:24:48.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:24:48.833" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:24:48.815" endtime="20211026 22:24:48.833"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:24:48.835" level="INFO"/>
<status status="PASS" starttime="20211026 22:24:48.834" endtime="20211026 22:24:48.835"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:24:48.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:24:48.836" endtime="20211026 22:24:48.837"/>
</kw>
<status status="PASS" starttime="20211026 22:24:48.814" endtime="20211026 22:24:48.837"/>
</kw>
<msg timestamp="20211026 22:24:48.837" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:24:48.814" endtime="20211026 22:24:48.838"/>
</kw>
<status status="PASS" starttime="20211026 22:24:48.813" endtime="20211026 22:24:48.838"/>
</kw>
<status status="PASS" starttime="20211026 22:24:48.812" endtime="20211026 22:24:48.838"/>
</kw>
<status status="PASS" starttime="20211026 22:24:48.784" endtime="20211026 22:24:48.839"/>
</kw>
<status status="PASS" starttime="20211026 22:24:48.783" endtime="20211026 22:24:48.839"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:24:48.846" level="INFO">Running command 'ozone sh bucket link 26857-source/bucket1 26857-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:24:57.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:24:57.360" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:24:48.843" endtime="20211026 22:24:57.360"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:24:57.361" level="INFO"/>
<status status="PASS" starttime="20211026 22:24:57.361" endtime="20211026 22:24:57.361"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:24:57.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:24:57.362" endtime="20211026 22:24:57.363"/>
</kw>
<status status="PASS" starttime="20211026 22:24:48.841" endtime="20211026 22:24:57.363"/>
</kw>
<msg timestamp="20211026 22:24:57.363" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:24:48.841" endtime="20211026 22:24:57.363"/>
</kw>
<status status="PASS" starttime="20211026 22:24:48.839" endtime="20211026 22:24:57.364"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:24:57.369" level="INFO">Running command 'ozone sh key put 26857-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:26:48.783" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20211026 22:24:57.366" endtime="20211026 22:26:48.783"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211026 22:26:48.784" endtime="20211026 22:26:48.784"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211026 22:26:48.784" endtime="20211026 22:26:48.784"/>
</kw>
<status status="FAIL" starttime="20211026 22:24:57.365" endtime="20211026 22:26:48.785"/>
</kw>
<msg timestamp="20211026 22:26:48.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211026 22:24:57.365" endtime="20211026 22:26:48.785"/>
</kw>
<status status="FAIL" starttime="20211026 22:24:57.364" endtime="20211026 22:26:48.785"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<status status="NOT RUN" starttime="20211026 22:26:48.786" endtime="20211026 22:26:48.786"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211026 22:24:48.781" endtime="20211026 22:26:48.786">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:26:48.795" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:26:48.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:26:48.798" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211026 22:26:48.792" endtime="20211026 22:26:48.798"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:26:48.804" level="INFO">scm</msg>
<status status="PASS" starttime="20211026 22:26:48.799" endtime="20211026 22:26:48.805"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:26:48.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:26:48.805" endtime="20211026 22:26:48.806"/>
</kw>
<status status="PASS" starttime="20211026 22:26:48.791" endtime="20211026 22:26:48.807"/>
</kw>
<msg timestamp="20211026 22:26:48.807" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:26:48.791" endtime="20211026 22:26:48.807"/>
</kw>
<msg timestamp="20211026 22:26:48.807" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211026 22:26:48.790" endtime="20211026 22:26:48.807"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211026 22:26:48.809" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211026 22:26:48.808" endtime="20211026 22:26:48.809"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:26:48.815" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:26:48.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:26:48.827" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:26:48.812" endtime="20211026 22:26:48.827"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:26:48.829" level="INFO"/>
<status status="PASS" starttime="20211026 22:26:48.827" endtime="20211026 22:26:48.829"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:26:48.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:26:48.829" endtime="20211026 22:26:48.830"/>
</kw>
<status status="PASS" starttime="20211026 22:26:48.811" endtime="20211026 22:26:48.831"/>
</kw>
<msg timestamp="20211026 22:26:48.831" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:26:48.811" endtime="20211026 22:26:48.831"/>
</kw>
<status status="PASS" starttime="20211026 22:26:48.810" endtime="20211026 22:26:48.832"/>
</kw>
<status status="PASS" starttime="20211026 22:26:48.809" endtime="20211026 22:26:48.832"/>
</kw>
<status status="PASS" starttime="20211026 22:26:48.789" endtime="20211026 22:26:48.832"/>
</kw>
<status status="PASS" starttime="20211026 22:26:48.788" endtime="20211026 22:26:48.832"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:26:48.837" level="INFO">Running command 'ozone sh bucket delete 26857-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:26:56.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:26:56.886" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:26:48.834" endtime="20211026 22:26:56.886"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:26:56.889" level="INFO"/>
<status status="PASS" starttime="20211026 22:26:56.888" endtime="20211026 22:26:56.890"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:26:56.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:26:56.890" endtime="20211026 22:26:56.892"/>
</kw>
<status status="PASS" starttime="20211026 22:26:48.833" endtime="20211026 22:26:56.893"/>
</kw>
<msg timestamp="20211026 22:26:56.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:26:48.833" endtime="20211026 22:26:56.893"/>
</kw>
<status status="PASS" starttime="20211026 22:26:48.832" endtime="20211026 22:26:56.894"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:26:56.905" level="INFO">Running command 'ozone sh bucket list 26857-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:27:06.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:27:06.852" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "26857-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-2...</msg>
<status status="PASS" starttime="20211026 22:26:56.898" endtime="20211026 22:27:06.852"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:27:06.854" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "26857-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-26T22:23:38.994Z",
  "modificationTime" : "2021-10-26T22:23:38.994Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "26857-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-26T22:17:33.937Z",
  "modificationTime" : "2021-10-26T22:17:33.937Z",
  "sourceVolume" : "26857-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "26857-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-26T22:16:47.854Z",
  "modificationTime" : "2021-10-26T22:17:25.486Z",
  "sourceVolume" : "26857-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "26857-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-26T22:23:21.362Z",
  "modificationTime" : "2021-10-26T22:23:21.362Z",
  "sourceVolume" : "26857-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "26857-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-26T22:24:57.005Z",
  "modificationTime" : "2021-10-26T22:24:57.005Z",
  "sourceVolume" : "26857-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "26857-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-26T22:24:42.296Z",
  "modificationTime" : "2021-10-26T22:24:42.296Z",
  "sourceVolume" : "26857-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "26857-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-26T22:24:28.755Z",
  "modificationTime" : "2021-10-26T22:24:28.755Z",
  "sourceVolume" : "26857-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "26857-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-26T22:24:35.768Z",
  "modificationTime" : "2021-10-26T22:24:35.768Z",
  "sourceVolume" : "26857-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "26857-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-26T22:16:33.411Z",
  "modificationTime" : "2021-10-26T22:17:17.908Z",
  "sourceVolume" : "26857-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "26857-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-26T22:16:39.508Z",
  "modificationTime" : "2021-10-26T22:16:39.508Z",
  "sourceVolume" : "26857-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
} ]</msg>
<status status="PASS" starttime="20211026 22:27:06.853" endtime="20211026 22:27:06.854"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:27:06.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:27:06.855" endtime="20211026 22:27:06.856"/>
</kw>
<status status="PASS" starttime="20211026 22:26:56.897" endtime="20211026 22:27:06.857"/>
</kw>
<msg timestamp="20211026 22:27:06.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:26:56.896" endtime="20211026 22:27:06.857"/>
</kw>
<msg timestamp="20211026 22:27:06.858" level="INFO">${bucket_list} = [ {
  "metadata" : { },
  "volumeName" : "26857-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-2...</msg>
<status status="PASS" starttime="20211026 22:26:56.895" endtime="20211026 22:27:06.858"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211026 22:27:06.859" endtime="20211026 22:27:06.860"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:27:06.866" level="INFO">Running command 'ozone sh key list 26857-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:27:16.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:27:16.177" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20211026 22:27:06.863" endtime="20211026 22:27:16.177"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:27:16.179" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20211026 22:27:16.178" endtime="20211026 22:27:16.179"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:27:16.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:27:16.180" endtime="20211026 22:27:16.180"/>
</kw>
<status status="PASS" starttime="20211026 22:27:06.862" endtime="20211026 22:27:16.181"/>
</kw>
<msg timestamp="20211026 22:27:16.181" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:27:06.861" endtime="20211026 22:27:16.181"/>
</kw>
<msg timestamp="20211026 22:27:16.182" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20211026 22:27:06.860" endtime="20211026 22:27:16.182"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211026 22:27:16.182" endtime="20211026 22:27:16.183"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211026 22:26:48.787" endtime="20211026 22:27:16.183"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="FAIL" starttime="20211026 22:12:44.373" endtime="20211026 22:27:16.186"/>
</suite>
<suite id="s1-s1-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211026 22:27:16.223" level="INFO">${random} = 75288</msg>
<status status="PASS" starttime="20211026 22:27:16.222" endtime="20211026 22:27:16.223"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211026 22:27:16.224" level="INFO">${prefix} = 75288</msg>
<status status="PASS" starttime="20211026 22:27:16.223" endtime="20211026 22:27:16.224"/>
</kw>
<status status="PASS" starttime="20211026 22:27:16.222" endtime="20211026 22:27:16.224"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:27:16.232" level="INFO">Running command 'ozone sh volume info /75288-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:27:25.384" level="INFO">${rc} = 255</msg>
<msg timestamp="20211026 22:27:25.385" level="INFO">${output} = VOLUME_NOT_FOUND Volume 75288-rpcbasic is not found</msg>
<status status="PASS" starttime="20211026 22:27:16.229" endtime="20211026 22:27:25.385"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:27:25.387" level="INFO">VOLUME_NOT_FOUND Volume 75288-rpcbasic is not found</msg>
<status status="PASS" starttime="20211026 22:27:25.386" endtime="20211026 22:27:25.387"/>
</kw>
<msg timestamp="20211026 22:27:25.388" level="INFO">${result} = VOLUME_NOT_FOUND Volume 75288-rpcbasic is not found</msg>
<status status="PASS" starttime="20211026 22:27:16.228" endtime="20211026 22:27:25.388"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211026 22:27:25.389" endtime="20211026 22:27:25.389"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:27:25.396" level="INFO">Running command 'ozone sh volume create /75288-rpcbasic --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:27:33.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:27:33.723" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:27:25.392" endtime="20211026 22:27:33.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:27:33.724" level="INFO"/>
<status status="PASS" starttime="20211026 22:27:33.724" endtime="20211026 22:27:33.725"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:27:33.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:27:33.725" endtime="20211026 22:27:33.726"/>
</kw>
<status status="PASS" starttime="20211026 22:27:25.391" endtime="20211026 22:27:33.726"/>
</kw>
<msg timestamp="20211026 22:27:33.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:27:25.391" endtime="20211026 22:27:33.726"/>
</kw>
<msg timestamp="20211026 22:27:33.727" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211026 22:27:25.390" endtime="20211026 22:27:33.727"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211026 22:27:33.727" endtime="20211026 22:27:33.728"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:27:33.734" level="INFO">Running command 'ozone sh volume list / | jq -r '.[] | select(.name=="75288-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:27:42.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:27:42.795" level="INFO">${output} = {
  "metadata": {},
  "name": "75288-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211026 22:27:33.730" endtime="20211026 22:27:42.795"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:27:42.798" level="INFO">{
  "metadata": {},
  "name": "75288-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-26T22:27:33.466Z",
  "modificationTime": "2021-10-26T22:27:33.466Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211026 22:27:42.796" endtime="20211026 22:27:42.798"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:27:42.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:27:42.798" endtime="20211026 22:27:42.799"/>
</kw>
<status status="PASS" starttime="20211026 22:27:33.730" endtime="20211026 22:27:42.800"/>
</kw>
<msg timestamp="20211026 22:27:42.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:27:33.729" endtime="20211026 22:27:42.801"/>
</kw>
<msg timestamp="20211026 22:27:42.801" level="INFO">${result} = {
  "metadata": {},
  "name": "75288-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211026 22:27:33.728" endtime="20211026 22:27:42.801"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211026 22:27:42.802" endtime="20211026 22:27:42.803"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:27:42.811" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="75288-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:27:51.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:27:51.731" level="INFO">${output} = {
  "metadata": {},
  "name": "75288-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211026 22:27:42.808" endtime="20211026 22:27:51.731"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:27:51.732" level="INFO">{
  "metadata": {},
  "name": "75288-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-26T22:27:33.466Z",
  "modificationTime": "2021-10-26T22:27:33.466Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211026 22:27:51.731" endtime="20211026 22:27:51.732"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:27:51.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:27:51.732" endtime="20211026 22:27:51.733"/>
</kw>
<status status="PASS" starttime="20211026 22:27:42.806" endtime="20211026 22:27:51.733"/>
</kw>
<msg timestamp="20211026 22:27:51.734" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:27:42.805" endtime="20211026 22:27:51.734"/>
</kw>
<msg timestamp="20211026 22:27:51.734" level="INFO">${result} = {
  "metadata": {},
  "name": "75288-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211026 22:27:42.803" endtime="20211026 22:27:51.734"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211026 22:27:51.735" endtime="20211026 22:27:51.735"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:27:51.740" level="INFO">Running command 'ozone sh volume setquota /75288-rpcbasic --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:27:59.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:27:59.990" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:27:51.737" endtime="20211026 22:27:59.990"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:27:59.991" level="INFO"/>
<status status="PASS" starttime="20211026 22:27:59.991" endtime="20211026 22:27:59.991"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:27:59.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:27:59.991" endtime="20211026 22:27:59.992"/>
</kw>
<status status="PASS" starttime="20211026 22:27:51.737" endtime="20211026 22:27:59.992"/>
</kw>
<msg timestamp="20211026 22:27:59.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:27:51.736" endtime="20211026 22:27:59.993"/>
</kw>
<status status="PASS" starttime="20211026 22:27:51.735" endtime="20211026 22:27:59.993"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:28:00.000" level="INFO">Running command 'ozone sh volume info /75288-rpcbasic | jq -r '. | select(.name=="75288-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:28:10.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:28:10.094" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211026 22:27:59.996" endtime="20211026 22:28:10.094"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:28:10.096" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211026 22:28:10.095" endtime="20211026 22:28:10.099"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:28:10.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:28:10.099" endtime="20211026 22:28:10.100"/>
</kw>
<status status="PASS" starttime="20211026 22:27:59.995" endtime="20211026 22:28:10.100"/>
</kw>
<msg timestamp="20211026 22:28:10.101" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:27:59.994" endtime="20211026 22:28:10.101"/>
</kw>
<msg timestamp="20211026 22:28:10.102" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211026 22:27:59.993" endtime="20211026 22:28:10.102"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211026 22:28:10.102" endtime="20211026 22:28:10.103"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:28:10.111" level="INFO">Running command 'ozone sh bucket create /75288-rpcbasic/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:28:17.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:28:17.983" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:28:10.107" endtime="20211026 22:28:17.983"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:28:17.985" level="INFO"/>
<status status="PASS" starttime="20211026 22:28:17.984" endtime="20211026 22:28:17.985"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:28:17.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:28:17.985" endtime="20211026 22:28:17.987"/>
</kw>
<status status="PASS" starttime="20211026 22:28:10.106" endtime="20211026 22:28:17.987"/>
</kw>
<msg timestamp="20211026 22:28:17.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:28:10.105" endtime="20211026 22:28:17.988"/>
</kw>
<status status="PASS" starttime="20211026 22:28:10.103" endtime="20211026 22:28:17.988"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:28:17.995" level="INFO">Running command 'ozone sh bucket info /75288-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:28:25.778" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:28:25.778" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211026 22:28:17.992" endtime="20211026 22:28:25.778"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:28:25.779" level="INFO">DISK</msg>
<status status="PASS" starttime="20211026 22:28:25.779" endtime="20211026 22:28:25.779"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:28:25.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:28:25.780" endtime="20211026 22:28:25.780"/>
</kw>
<status status="PASS" starttime="20211026 22:28:17.990" endtime="20211026 22:28:25.781"/>
</kw>
<msg timestamp="20211026 22:28:25.781" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:28:17.989" endtime="20211026 22:28:25.781"/>
</kw>
<msg timestamp="20211026 22:28:25.781" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211026 22:28:17.988" endtime="20211026 22:28:25.781"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211026 22:28:25.781" endtime="20211026 22:28:25.782"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:28:25.788" level="INFO">Running command 'ozone sh bucket info /75288-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:28:33.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:28:33.159" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211026 22:28:25.785" endtime="20211026 22:28:33.159"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:28:33.161" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211026 22:28:33.160" endtime="20211026 22:28:33.161"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:28:33.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:28:33.161" endtime="20211026 22:28:33.162"/>
</kw>
<status status="PASS" starttime="20211026 22:28:25.784" endtime="20211026 22:28:33.162"/>
</kw>
<msg timestamp="20211026 22:28:33.162" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:28:25.784" endtime="20211026 22:28:33.162"/>
</kw>
<msg timestamp="20211026 22:28:33.163" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211026 22:28:25.782" endtime="20211026 22:28:33.163"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211026 22:28:33.163" endtime="20211026 22:28:33.163"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:28:33.168" level="INFO">Running command 'ozone sh bucket info /75288-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:28:41.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:28:41.856" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211026 22:28:33.166" endtime="20211026 22:28:41.856"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:28:41.858" level="INFO">100</msg>
<status status="PASS" starttime="20211026 22:28:41.857" endtime="20211026 22:28:41.858"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:28:41.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:28:41.859" endtime="20211026 22:28:41.859"/>
</kw>
<status status="PASS" starttime="20211026 22:28:33.165" endtime="20211026 22:28:41.860"/>
</kw>
<msg timestamp="20211026 22:28:41.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:28:33.165" endtime="20211026 22:28:41.860"/>
</kw>
<msg timestamp="20211026 22:28:41.860" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211026 22:28:33.164" endtime="20211026 22:28:41.860"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211026 22:28:41.860" endtime="20211026 22:28:41.861"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:28:41.870" level="INFO">Running command 'ozone sh bucket setquota /75288-rpcbasic/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:28:50.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:28:50.589" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:28:41.866" endtime="20211026 22:28:50.589"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:28:50.591" level="INFO"/>
<status status="PASS" starttime="20211026 22:28:50.590" endtime="20211026 22:28:50.592"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:28:50.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:28:50.592" endtime="20211026 22:28:50.594"/>
</kw>
<status status="PASS" starttime="20211026 22:28:41.865" endtime="20211026 22:28:50.595"/>
</kw>
<msg timestamp="20211026 22:28:50.595" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:28:41.865" endtime="20211026 22:28:50.595"/>
</kw>
<status status="PASS" starttime="20211026 22:28:41.864" endtime="20211026 22:28:50.595"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:28:50.602" level="INFO">Running command 'ozone sh bucket info /75288-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:28:58.987" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:28:58.987" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211026 22:28:50.599" endtime="20211026 22:28:58.987"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:28:58.988" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211026 22:28:58.987" endtime="20211026 22:28:58.988"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:28:58.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:28:58.988" endtime="20211026 22:28:58.989"/>
</kw>
<status status="PASS" starttime="20211026 22:28:50.598" endtime="20211026 22:28:58.989"/>
</kw>
<msg timestamp="20211026 22:28:58.989" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:28:50.597" endtime="20211026 22:28:58.989"/>
</kw>
<msg timestamp="20211026 22:28:58.990" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211026 22:28:50.596" endtime="20211026 22:28:58.990"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211026 22:28:58.990" endtime="20211026 22:28:58.990"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:28:58.996" level="INFO">Running command 'ozone sh bucket info /75288-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:29:07.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:29:07.306" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211026 22:28:58.993" endtime="20211026 22:29:07.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:29:07.308" level="INFO">1000</msg>
<status status="PASS" starttime="20211026 22:29:07.307" endtime="20211026 22:29:07.308"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:29:07.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:29:07.309" endtime="20211026 22:29:07.310"/>
</kw>
<status status="PASS" starttime="20211026 22:28:58.992" endtime="20211026 22:29:07.310"/>
</kw>
<msg timestamp="20211026 22:29:07.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:28:58.992" endtime="20211026 22:29:07.311"/>
</kw>
<msg timestamp="20211026 22:29:07.311" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211026 22:28:58.991" endtime="20211026 22:29:07.311"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211026 22:29:07.311" endtime="20211026 22:29:07.312"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:29:07.317" level="INFO">Running command 'ozone sh bucket list /75288-rpcbasic/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:29:14.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:29:14.946" level="INFO">${output} = 75288-rpcbasic</msg>
<status status="PASS" starttime="20211026 22:29:07.314" endtime="20211026 22:29:14.946"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:29:14.948" level="INFO">75288-rpcbasic</msg>
<status status="PASS" starttime="20211026 22:29:14.947" endtime="20211026 22:29:14.948"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:29:14.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:29:14.948" endtime="20211026 22:29:14.948"/>
</kw>
<status status="PASS" starttime="20211026 22:29:07.314" endtime="20211026 22:29:14.949"/>
</kw>
<msg timestamp="20211026 22:29:14.949" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:29:07.313" endtime="20211026 22:29:14.949"/>
</kw>
<msg timestamp="20211026 22:29:14.950" level="INFO">${result} = 75288-rpcbasic</msg>
<status status="PASS" starttime="20211026 22:29:07.312" endtime="20211026 22:29:14.950"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211026 22:29:14.950" endtime="20211026 22:29:14.950"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:29:14.957" level="INFO">Running command 'ozone sh key put /75288-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:32:16.226" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211026 22:29:14.954" endtime="20211026 22:32:16.226"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211026 22:32:16.226" endtime="20211026 22:32:16.227"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211026 22:32:16.227" endtime="20211026 22:32:16.227"/>
</kw>
<status status="FAIL" starttime="20211026 22:29:14.953" endtime="20211026 22:32:16.227"/>
</kw>
<msg timestamp="20211026 22:32:16.227" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211026 22:29:14.953" endtime="20211026 22:32:16.228"/>
</kw>
<status status="FAIL" starttime="20211026 22:29:14.952" endtime="20211026 22:32:16.228"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211026 22:32:16.228" endtime="20211026 22:32:16.228"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211026 22:32:16.228" endtime="20211026 22:32:16.228"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211026 22:32:16.228" endtime="20211026 22:32:16.229"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211026 22:32:16.229" endtime="20211026 22:32:16.229"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211026 22:32:16.229" endtime="20211026 22:32:16.229"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211026 22:32:16.229" endtime="20211026 22:32:16.229"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211026 22:32:16.229" endtime="20211026 22:32:16.229"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211026 22:32:16.230" endtime="20211026 22:32:16.230"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211026 22:32:16.230" endtime="20211026 22:32:16.230"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211026 22:32:16.230" endtime="20211026 22:32:16.230"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211026 22:32:16.230" endtime="20211026 22:32:16.230"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211026 22:32:16.230" endtime="20211026 22:32:16.230"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211026 22:32:16.231" endtime="20211026 22:32:16.231"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211026 22:32:16.231" endtime="20211026 22:32:16.231"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211026 22:32:16.231" endtime="20211026 22:32:16.231"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211026 22:32:16.231" endtime="20211026 22:32:16.232"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211026 22:32:16.232" endtime="20211026 22:32:16.232"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211026 22:32:16.232" endtime="20211026 22:32:16.232"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211026 22:32:16.232" endtime="20211026 22:32:16.233"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211026 22:32:16.233" endtime="20211026 22:32:16.233"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211026 22:32:16.233" endtime="20211026 22:32:16.233"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211026 22:32:16.233" endtime="20211026 22:32:16.233"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211026 22:32:16.233" endtime="20211026 22:32:16.234"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211026 22:32:16.234" endtime="20211026 22:32:16.234"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211026 22:32:16.234" endtime="20211026 22:32:16.234"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211026 22:32:16.234" endtime="20211026 22:32:16.234"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211026 22:32:16.234" endtime="20211026 22:32:16.234"/>
</kw>
<status status="FAIL" starttime="20211026 22:29:14.951" endtime="20211026 22:32:16.235"/>
</kw>
<status status="FAIL" starttime="20211026 22:29:14.951" endtime="20211026 22:32:16.235"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211026 22:32:16.235" endtime="20211026 22:32:16.235"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211026 22:32:16.235" endtime="20211026 22:32:16.235"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211026 22:32:16.236" endtime="20211026 22:32:16.236"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211026 22:32:16.236" endtime="20211026 22:32:16.236"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211026 22:32:16.236" endtime="20211026 22:32:16.236"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211026 22:32:16.236" endtime="20211026 22:32:16.237"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211026 22:32:16.237" endtime="20211026 22:32:16.237"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211026 22:32:16.237" endtime="20211026 22:32:16.237"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211026 22:32:16.237" endtime="20211026 22:32:16.237"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211026 22:32:16.237" endtime="20211026 22:32:16.237"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211026 22:32:16.238" endtime="20211026 22:32:16.238"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211026 22:32:16.238" endtime="20211026 22:32:16.238"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211026 22:32:16.238" endtime="20211026 22:32:16.238"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211026 22:32:16.238" endtime="20211026 22:32:16.239"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211026 22:32:16.239" endtime="20211026 22:32:16.239"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211026 22:32:16.239" endtime="20211026 22:32:16.239"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211026 22:32:16.239" endtime="20211026 22:32:16.239"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211026 22:32:16.239" endtime="20211026 22:32:16.239"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211026 22:32:16.240" endtime="20211026 22:32:16.240"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211026 22:32:16.240" endtime="20211026 22:32:16.240"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211026 22:32:16.240" endtime="20211026 22:32:16.240"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211026 22:32:16.240" endtime="20211026 22:32:16.241"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211026 22:32:16.241" endtime="20211026 22:32:16.241"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211026 22:32:16.241" endtime="20211026 22:32:16.241"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211026 22:32:16.241" endtime="20211026 22:32:16.241"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211026 22:32:16.241" endtime="20211026 22:32:16.241"/>
</kw>
<status status="FAIL" starttime="20211026 22:27:16.226" endtime="20211026 22:32:16.241"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211026 22:27:16.225" endtime="20211026 22:32:16.242">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20211026 22:27:16.193" endtime="20211026 22:32:16.246"/>
</suite>
<suite id="s1-s1-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211026 22:32:16.264" level="INFO">${random} = 14132</msg>
<status status="PASS" starttime="20211026 22:32:16.263" endtime="20211026 22:32:16.264"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211026 22:32:16.266" level="INFO">${prefix} = 14132</msg>
<status status="PASS" starttime="20211026 22:32:16.265" endtime="20211026 22:32:16.266"/>
</kw>
<status status="PASS" starttime="20211026 22:32:16.263" endtime="20211026 22:32:16.266"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:32:16.275" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:32:16.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:32:16.281" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211026 22:32:16.272" endtime="20211026 22:32:16.281"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:32:16.283" level="INFO">scm</msg>
<status status="PASS" starttime="20211026 22:32:16.282" endtime="20211026 22:32:16.283"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:32:16.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:32:16.284" endtime="20211026 22:32:16.284"/>
</kw>
<status status="PASS" starttime="20211026 22:32:16.271" endtime="20211026 22:32:16.285"/>
</kw>
<msg timestamp="20211026 22:32:16.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:32:16.270" endtime="20211026 22:32:16.285"/>
</kw>
<msg timestamp="20211026 22:32:16.286" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211026 22:32:16.270" endtime="20211026 22:32:16.286"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211026 22:32:16.288" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211026 22:32:16.286" endtime="20211026 22:32:16.288"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:32:16.293" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:32:16.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:32:16.512" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:32:16.291" endtime="20211026 22:32:16.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:32:16.513" level="INFO"/>
<status status="PASS" starttime="20211026 22:32:16.512" endtime="20211026 22:32:16.513"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:32:16.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:32:16.513" endtime="20211026 22:32:16.514"/>
</kw>
<status status="PASS" starttime="20211026 22:32:16.289" endtime="20211026 22:32:16.514"/>
</kw>
<msg timestamp="20211026 22:32:16.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:32:16.289" endtime="20211026 22:32:16.515"/>
</kw>
<status status="PASS" starttime="20211026 22:32:16.288" endtime="20211026 22:32:16.515"/>
</kw>
<status status="PASS" starttime="20211026 22:32:16.288" endtime="20211026 22:32:16.515"/>
</kw>
<status status="PASS" starttime="20211026 22:32:16.269" endtime="20211026 22:32:16.515"/>
</kw>
<status status="PASS" starttime="20211026 22:32:16.268" endtime="20211026 22:32:16.516"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:32:16.519" level="INFO">Running command 'ozone sh volume info o3://om:9862/14132-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:32:24.180" level="INFO">${rc} = 255</msg>
<msg timestamp="20211026 22:32:24.180" level="INFO">${output} = VOLUME_NOT_FOUND Volume 14132-rpcwoport is not found</msg>
<status status="PASS" starttime="20211026 22:32:16.517" endtime="20211026 22:32:24.181"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:32:24.182" level="INFO">VOLUME_NOT_FOUND Volume 14132-rpcwoport is not found</msg>
<status status="PASS" starttime="20211026 22:32:24.181" endtime="20211026 22:32:24.182"/>
</kw>
<msg timestamp="20211026 22:32:24.182" level="INFO">${result} = VOLUME_NOT_FOUND Volume 14132-rpcwoport is not found</msg>
<status status="PASS" starttime="20211026 22:32:16.517" endtime="20211026 22:32:24.183"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211026 22:32:24.183" endtime="20211026 22:32:24.183"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:32:24.190" level="INFO">Running command 'ozone sh volume create o3://om:9862/14132-rpcwoport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:32:32.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:32:32.500" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:32:24.185" endtime="20211026 22:32:32.500"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:32:32.502" level="INFO"/>
<status status="PASS" starttime="20211026 22:32:32.501" endtime="20211026 22:32:32.502"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:32:32.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:32:32.502" endtime="20211026 22:32:32.503"/>
</kw>
<status status="PASS" starttime="20211026 22:32:24.185" endtime="20211026 22:32:32.504"/>
</kw>
<msg timestamp="20211026 22:32:32.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:32:24.184" endtime="20211026 22:32:32.504"/>
</kw>
<msg timestamp="20211026 22:32:32.505" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211026 22:32:24.183" endtime="20211026 22:32:32.505"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211026 22:32:32.505" endtime="20211026 22:32:32.506"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:32:32.512" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '.[] | select(.name=="14132-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:32:41.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:32:41.469" level="INFO">${output} = {
  "metadata": {},
  "name": "14132-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211026 22:32:32.509" endtime="20211026 22:32:41.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:32:41.471" level="INFO">{
  "metadata": {},
  "name": "14132-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-26T22:32:32.421Z",
  "modificationTime": "2021-10-26T22:32:32.421Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211026 22:32:41.470" endtime="20211026 22:32:41.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:32:41.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:32:41.472" endtime="20211026 22:32:41.473"/>
</kw>
<status status="PASS" starttime="20211026 22:32:32.509" endtime="20211026 22:32:41.474"/>
</kw>
<msg timestamp="20211026 22:32:41.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:32:32.508" endtime="20211026 22:32:41.475"/>
</kw>
<msg timestamp="20211026 22:32:41.475" level="INFO">${result} = {
  "metadata": {},
  "name": "14132-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211026 22:32:32.506" endtime="20211026 22:32:41.475"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211026 22:32:41.476" endtime="20211026 22:32:41.476"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:32:41.483" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="14132-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:32:50.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:32:50.483" level="INFO">${output} = {
  "metadata": {},
  "name": "14132-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211026 22:32:41.480" endtime="20211026 22:32:50.483"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:32:50.486" level="INFO">{
  "metadata": {},
  "name": "14132-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-26T22:32:32.421Z",
  "modificationTime": "2021-10-26T22:32:32.421Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211026 22:32:50.484" endtime="20211026 22:32:50.486"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:32:50.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:32:50.487" endtime="20211026 22:32:50.488"/>
</kw>
<status status="PASS" starttime="20211026 22:32:41.479" endtime="20211026 22:32:50.488"/>
</kw>
<msg timestamp="20211026 22:32:50.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:32:41.478" endtime="20211026 22:32:50.489"/>
</kw>
<msg timestamp="20211026 22:32:50.490" level="INFO">${result} = {
  "metadata": {},
  "name": "14132-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211026 22:32:41.477" endtime="20211026 22:32:50.490"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211026 22:32:50.490" endtime="20211026 22:32:50.491"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:32:50.496" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/14132-rpcwoport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:32:58.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:32:58.571" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:32:50.493" endtime="20211026 22:32:58.572"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:32:58.574" level="INFO"/>
<status status="PASS" starttime="20211026 22:32:58.572" endtime="20211026 22:32:58.575"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:32:58.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:32:58.575" endtime="20211026 22:32:58.576"/>
</kw>
<status status="PASS" starttime="20211026 22:32:50.492" endtime="20211026 22:32:58.577"/>
</kw>
<msg timestamp="20211026 22:32:58.577" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:32:50.492" endtime="20211026 22:32:58.577"/>
</kw>
<status status="PASS" starttime="20211026 22:32:50.491" endtime="20211026 22:32:58.579"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:32:58.585" level="INFO">Running command 'ozone sh volume info o3://om:9862/14132-rpcwoport | jq -r '. | select(.name=="14132-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:33:08.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:33:08.068" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211026 22:32:58.582" endtime="20211026 22:33:08.068"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:33:08.070" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211026 22:33:08.069" endtime="20211026 22:33:08.070"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:33:08.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:33:08.070" endtime="20211026 22:33:08.071"/>
</kw>
<status status="PASS" starttime="20211026 22:32:58.581" endtime="20211026 22:33:08.072"/>
</kw>
<msg timestamp="20211026 22:33:08.072" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:32:58.581" endtime="20211026 22:33:08.072"/>
</kw>
<msg timestamp="20211026 22:33:08.073" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211026 22:32:58.579" endtime="20211026 22:33:08.073"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211026 22:33:08.073" endtime="20211026 22:33:08.074"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:33:08.078" level="INFO">Running command 'ozone sh bucket create o3://om:9862/14132-rpcwoport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:33:15.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:33:15.257" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:33:08.076" endtime="20211026 22:33:15.257"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:33:15.258" level="INFO"/>
<status status="PASS" starttime="20211026 22:33:15.258" endtime="20211026 22:33:15.259"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:33:15.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:33:15.259" endtime="20211026 22:33:15.259"/>
</kw>
<status status="PASS" starttime="20211026 22:33:08.075" endtime="20211026 22:33:15.260"/>
</kw>
<msg timestamp="20211026 22:33:15.260" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:33:08.075" endtime="20211026 22:33:15.260"/>
</kw>
<status status="PASS" starttime="20211026 22:33:08.074" endtime="20211026 22:33:15.260"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:33:15.265" level="INFO">Running command 'ozone sh bucket info o3://om:9862/14132-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:33:23.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:33:23.673" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211026 22:33:15.263" endtime="20211026 22:33:23.674"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:33:23.678" level="INFO">DISK</msg>
<status status="PASS" starttime="20211026 22:33:23.675" endtime="20211026 22:33:23.678"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:33:23.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:33:23.678" endtime="20211026 22:33:23.680"/>
</kw>
<status status="PASS" starttime="20211026 22:33:15.262" endtime="20211026 22:33:23.680"/>
</kw>
<msg timestamp="20211026 22:33:23.680" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:33:15.262" endtime="20211026 22:33:23.681"/>
</kw>
<msg timestamp="20211026 22:33:23.682" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211026 22:33:15.260" endtime="20211026 22:33:23.682"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211026 22:33:23.682" endtime="20211026 22:33:23.683"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:33:23.691" level="INFO">Running command 'ozone sh bucket info o3://om:9862/14132-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:33:32.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:33:32.609" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211026 22:33:23.688" endtime="20211026 22:33:32.609"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:33:32.610" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211026 22:33:32.609" endtime="20211026 22:33:32.610"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:33:32.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:33:32.610" endtime="20211026 22:33:32.611"/>
</kw>
<status status="PASS" starttime="20211026 22:33:23.687" endtime="20211026 22:33:32.611"/>
</kw>
<msg timestamp="20211026 22:33:32.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:33:23.686" endtime="20211026 22:33:32.612"/>
</kw>
<msg timestamp="20211026 22:33:32.612" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211026 22:33:23.684" endtime="20211026 22:33:32.612"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211026 22:33:32.612" endtime="20211026 22:33:32.613"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:33:32.620" level="INFO">Running command 'ozone sh bucket info o3://om:9862/14132-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:33:40.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:33:40.556" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211026 22:33:32.617" endtime="20211026 22:33:40.556"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:33:40.558" level="INFO">100</msg>
<status status="PASS" starttime="20211026 22:33:40.557" endtime="20211026 22:33:40.558"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:33:40.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:33:40.559" endtime="20211026 22:33:40.560"/>
</kw>
<status status="PASS" starttime="20211026 22:33:32.616" endtime="20211026 22:33:40.560"/>
</kw>
<msg timestamp="20211026 22:33:40.560" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:33:32.615" endtime="20211026 22:33:40.561"/>
</kw>
<msg timestamp="20211026 22:33:40.561" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211026 22:33:32.613" endtime="20211026 22:33:40.561"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211026 22:33:40.561" endtime="20211026 22:33:40.561"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:33:40.565" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/14132-rpcwoport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:33:46.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:33:46.672" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:33:40.563" endtime="20211026 22:33:46.672"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:33:46.675" level="INFO"/>
<status status="PASS" starttime="20211026 22:33:46.674" endtime="20211026 22:33:46.675"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:33:46.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:33:46.675" endtime="20211026 22:33:46.676"/>
</kw>
<status status="PASS" starttime="20211026 22:33:40.563" endtime="20211026 22:33:46.676"/>
</kw>
<msg timestamp="20211026 22:33:46.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:33:40.562" endtime="20211026 22:33:46.677"/>
</kw>
<status status="PASS" starttime="20211026 22:33:40.562" endtime="20211026 22:33:46.677"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:33:46.682" level="INFO">Running command 'ozone sh bucket info o3://om:9862/14132-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:33:54.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:33:54.930" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211026 22:33:46.679" endtime="20211026 22:33:54.930"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:33:54.932" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211026 22:33:54.930" endtime="20211026 22:33:54.932"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:33:54.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:33:54.932" endtime="20211026 22:33:54.933"/>
</kw>
<status status="PASS" starttime="20211026 22:33:46.679" endtime="20211026 22:33:54.933"/>
</kw>
<msg timestamp="20211026 22:33:54.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:33:46.678" endtime="20211026 22:33:54.933"/>
</kw>
<msg timestamp="20211026 22:33:54.934" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211026 22:33:46.677" endtime="20211026 22:33:54.934"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211026 22:33:54.934" endtime="20211026 22:33:54.935"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:33:54.941" level="INFO">Running command 'ozone sh bucket info o3://om:9862/14132-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:34:04.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:34:04.005" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211026 22:33:54.938" endtime="20211026 22:34:04.005"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:34:04.006" level="INFO">1000</msg>
<status status="PASS" starttime="20211026 22:34:04.005" endtime="20211026 22:34:04.006"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:34:04.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:34:04.006" endtime="20211026 22:34:04.007"/>
</kw>
<status status="PASS" starttime="20211026 22:33:54.938" endtime="20211026 22:34:04.008"/>
</kw>
<msg timestamp="20211026 22:34:04.008" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:33:54.937" endtime="20211026 22:34:04.008"/>
</kw>
<msg timestamp="20211026 22:34:04.008" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211026 22:33:54.935" endtime="20211026 22:34:04.008"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211026 22:34:04.008" endtime="20211026 22:34:04.009"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:34:04.016" level="INFO">Running command 'ozone sh bucket list o3://om:9862/14132-rpcwoport/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:34:12.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:34:12.439" level="INFO">${output} = 14132-rpcwoport</msg>
<status status="PASS" starttime="20211026 22:34:04.013" endtime="20211026 22:34:12.439"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:34:12.441" level="INFO">14132-rpcwoport</msg>
<status status="PASS" starttime="20211026 22:34:12.440" endtime="20211026 22:34:12.441"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:34:12.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:34:12.441" endtime="20211026 22:34:12.442"/>
</kw>
<status status="PASS" starttime="20211026 22:34:04.012" endtime="20211026 22:34:12.442"/>
</kw>
<msg timestamp="20211026 22:34:12.442" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:34:04.011" endtime="20211026 22:34:12.443"/>
</kw>
<msg timestamp="20211026 22:34:12.443" level="INFO">${result} = 14132-rpcwoport</msg>
<status status="PASS" starttime="20211026 22:34:04.009" endtime="20211026 22:34:12.443"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211026 22:34:12.443" endtime="20211026 22:34:12.444"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:34:12.453" level="INFO">Running command 'ozone sh key put o3://om:9862/14132-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:37:16.268" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211026 22:34:12.449" endtime="20211026 22:37:16.268"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211026 22:37:16.268" endtime="20211026 22:37:16.269"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211026 22:37:16.269" endtime="20211026 22:37:16.269"/>
</kw>
<status status="FAIL" starttime="20211026 22:34:12.448" endtime="20211026 22:37:16.269"/>
</kw>
<msg timestamp="20211026 22:37:16.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211026 22:34:12.447" endtime="20211026 22:37:16.269"/>
</kw>
<status status="FAIL" starttime="20211026 22:34:12.446" endtime="20211026 22:37:16.270"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211026 22:37:16.270" endtime="20211026 22:37:16.270"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211026 22:37:16.271" endtime="20211026 22:37:16.271"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211026 22:37:16.271" endtime="20211026 22:37:16.271"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211026 22:37:16.271" endtime="20211026 22:37:16.271"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211026 22:37:16.271" endtime="20211026 22:37:16.271"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211026 22:37:16.271" endtime="20211026 22:37:16.271"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211026 22:37:16.272" endtime="20211026 22:37:16.272"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211026 22:37:16.272" endtime="20211026 22:37:16.273"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211026 22:37:16.274" endtime="20211026 22:37:16.274"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211026 22:37:16.274" endtime="20211026 22:37:16.274"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211026 22:37:16.274" endtime="20211026 22:37:16.275"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211026 22:37:16.275" endtime="20211026 22:37:16.275"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211026 22:37:16.275" endtime="20211026 22:37:16.275"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211026 22:37:16.275" endtime="20211026 22:37:16.276"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211026 22:37:16.276" endtime="20211026 22:37:16.276"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211026 22:37:16.276" endtime="20211026 22:37:16.276"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211026 22:37:16.276" endtime="20211026 22:37:16.276"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211026 22:37:16.276" endtime="20211026 22:37:16.277"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211026 22:37:16.277" endtime="20211026 22:37:16.277"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211026 22:37:16.277" endtime="20211026 22:37:16.277"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211026 22:37:16.278" endtime="20211026 22:37:16.278"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211026 22:37:16.278" endtime="20211026 22:37:16.278"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211026 22:37:16.278" endtime="20211026 22:37:16.278"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211026 22:37:16.278" endtime="20211026 22:37:16.279"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211026 22:37:16.279" endtime="20211026 22:37:16.279"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211026 22:37:16.279" endtime="20211026 22:37:16.279"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211026 22:37:16.279" endtime="20211026 22:37:16.279"/>
</kw>
<status status="FAIL" starttime="20211026 22:34:12.445" endtime="20211026 22:37:16.280"/>
</kw>
<status status="FAIL" starttime="20211026 22:34:12.444" endtime="20211026 22:37:16.280"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211026 22:37:16.280" endtime="20211026 22:37:16.280"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211026 22:37:16.280" endtime="20211026 22:37:16.281"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211026 22:37:16.281" endtime="20211026 22:37:16.281"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211026 22:37:16.281" endtime="20211026 22:37:16.281"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211026 22:37:16.282" endtime="20211026 22:37:16.282"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211026 22:37:16.283" endtime="20211026 22:37:16.283"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211026 22:37:16.283" endtime="20211026 22:37:16.284"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211026 22:37:16.284" endtime="20211026 22:37:16.284"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211026 22:37:16.284" endtime="20211026 22:37:16.284"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211026 22:37:16.285" endtime="20211026 22:37:16.285"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211026 22:37:16.285" endtime="20211026 22:37:16.286"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211026 22:37:16.286" endtime="20211026 22:37:16.286"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211026 22:37:16.288" endtime="20211026 22:37:16.288"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211026 22:37:16.288" endtime="20211026 22:37:16.288"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211026 22:37:16.289" endtime="20211026 22:37:16.289"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211026 22:37:16.289" endtime="20211026 22:37:16.289"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211026 22:37:16.289" endtime="20211026 22:37:16.289"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211026 22:37:16.289" endtime="20211026 22:37:16.290"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211026 22:37:16.290" endtime="20211026 22:37:16.290"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211026 22:37:16.290" endtime="20211026 22:37:16.290"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211026 22:37:16.290" endtime="20211026 22:37:16.290"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211026 22:37:16.291" endtime="20211026 22:37:16.291"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211026 22:37:16.291" endtime="20211026 22:37:16.291"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211026 22:37:16.291" endtime="20211026 22:37:16.291"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211026 22:37:16.291" endtime="20211026 22:37:16.291"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211026 22:37:16.291" endtime="20211026 22:37:16.291"/>
</kw>
<status status="FAIL" starttime="20211026 22:32:16.516" endtime="20211026 22:37:16.292"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211026 22:32:16.267" endtime="20211026 22:37:16.292">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:37:16.302" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:37:16.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:37:16.307" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211026 22:37:16.298" endtime="20211026 22:37:16.307"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:37:16.308" level="INFO">scm</msg>
<status status="PASS" starttime="20211026 22:37:16.307" endtime="20211026 22:37:16.308"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:37:16.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:37:16.309" endtime="20211026 22:37:16.309"/>
</kw>
<status status="PASS" starttime="20211026 22:37:16.298" endtime="20211026 22:37:16.310"/>
</kw>
<msg timestamp="20211026 22:37:16.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:37:16.297" endtime="20211026 22:37:16.310"/>
</kw>
<msg timestamp="20211026 22:37:16.310" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211026 22:37:16.296" endtime="20211026 22:37:16.310"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211026 22:37:16.311" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211026 22:37:16.310" endtime="20211026 22:37:16.311"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:37:16.332" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:37:16.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:37:16.339" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:37:16.313" endtime="20211026 22:37:16.339"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:37:16.341" level="INFO"/>
<status status="PASS" starttime="20211026 22:37:16.340" endtime="20211026 22:37:16.341"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:37:16.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:37:16.341" endtime="20211026 22:37:16.342"/>
</kw>
<status status="PASS" starttime="20211026 22:37:16.313" endtime="20211026 22:37:16.343"/>
</kw>
<msg timestamp="20211026 22:37:16.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:37:16.312" endtime="20211026 22:37:16.343"/>
</kw>
<status status="PASS" starttime="20211026 22:37:16.312" endtime="20211026 22:37:16.344"/>
</kw>
<status status="PASS" starttime="20211026 22:37:16.311" endtime="20211026 22:37:16.344"/>
</kw>
<status status="PASS" starttime="20211026 22:37:16.295" endtime="20211026 22:37:16.344"/>
</kw>
<status status="PASS" starttime="20211026 22:37:16.294" endtime="20211026 22:37:16.344"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:37:16.351" level="INFO">Running command 'ozone sh volume create o3://om:9862/14132-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:37:25.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:37:25.543" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:37:16.348" endtime="20211026 22:37:25.543"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:37:25.545" level="INFO"/>
<status status="PASS" starttime="20211026 22:37:25.544" endtime="20211026 22:37:25.545"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:37:25.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:37:25.545" endtime="20211026 22:37:25.548"/>
</kw>
<status status="PASS" starttime="20211026 22:37:16.348" endtime="20211026 22:37:25.550"/>
</kw>
<msg timestamp="20211026 22:37:25.550" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:37:16.347" endtime="20211026 22:37:25.552"/>
</kw>
<status status="PASS" starttime="20211026 22:37:16.346" endtime="20211026 22:37:25.553"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:37:25.565" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/14132-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:37:34.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:37:34.811" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211026 22:37:25.560" endtime="20211026 22:37:34.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:37:34.815" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211026 22:37:34.813" endtime="20211026 22:37:34.815"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:37:34.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:37:34.815" endtime="20211026 22:37:34.816"/>
</kw>
<status status="PASS" starttime="20211026 22:37:25.558" endtime="20211026 22:37:34.817"/>
</kw>
<msg timestamp="20211026 22:37:34.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:37:25.555" endtime="20211026 22:37:34.818"/>
</kw>
<msg timestamp="20211026 22:37:34.818" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211026 22:37:25.553" endtime="20211026 22:37:34.818"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211026 22:37:34.819" endtime="20211026 22:37:34.821"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:37:34.828" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/14132-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:37:42.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:37:42.286" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211026 22:37:34.825" endtime="20211026 22:37:42.286"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:37:42.287" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211026 22:37:42.286" endtime="20211026 22:37:42.287"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:37:42.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:37:42.287" endtime="20211026 22:37:42.289"/>
</kw>
<status status="PASS" starttime="20211026 22:37:34.824" endtime="20211026 22:37:42.289"/>
</kw>
<msg timestamp="20211026 22:37:42.290" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:37:34.823" endtime="20211026 22:37:42.290"/>
</kw>
<msg timestamp="20211026 22:37:42.291" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211026 22:37:34.822" endtime="20211026 22:37:42.291"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:37:42.299" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/14132-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:37:49.841" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:37:49.841" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211026 22:37:42.296" endtime="20211026 22:37:49.841"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:37:49.843" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211026 22:37:49.842" endtime="20211026 22:37:49.843"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:37:49.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:37:49.843" endtime="20211026 22:37:49.844"/>
</kw>
<status status="PASS" starttime="20211026 22:37:42.295" endtime="20211026 22:37:49.844"/>
</kw>
<msg timestamp="20211026 22:37:49.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:37:42.294" endtime="20211026 22:37:49.845"/>
</kw>
<msg timestamp="20211026 22:37:49.845" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211026 22:37:42.291" endtime="20211026 22:37:49.845"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211026 22:37:49.845" endtime="20211026 22:37:49.846"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:37:49.851" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/14132-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:37:56.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:37:56.147" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211026 22:37:49.848" endtime="20211026 22:37:56.147"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:37:56.148" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211026 22:37:56.147" endtime="20211026 22:37:56.149"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:37:56.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:37:56.149" endtime="20211026 22:37:56.150"/>
</kw>
<status status="PASS" starttime="20211026 22:37:49.848" endtime="20211026 22:37:56.150"/>
</kw>
<msg timestamp="20211026 22:37:56.150" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:37:49.848" endtime="20211026 22:37:56.151"/>
</kw>
<msg timestamp="20211026 22:37:56.151" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211026 22:37:49.846" endtime="20211026 22:37:56.151"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:37:56.157" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/14132-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:38:04.626" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:38:04.626" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211026 22:37:56.153" endtime="20211026 22:38:04.626"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:38:04.628" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211026 22:38:04.627" endtime="20211026 22:38:04.629"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:38:04.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:38:04.629" endtime="20211026 22:38:04.630"/>
</kw>
<status status="PASS" starttime="20211026 22:37:56.153" endtime="20211026 22:38:04.631"/>
</kw>
<msg timestamp="20211026 22:38:04.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:37:56.152" endtime="20211026 22:38:04.632"/>
</kw>
<msg timestamp="20211026 22:38:04.632" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211026 22:37:56.151" endtime="20211026 22:38:04.632"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211026 22:38:04.633" endtime="20211026 22:38:04.634"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:38:04.643" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/14132-rpcwoport2 -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:38:12.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:38:12.237" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211026 22:38:04.640" endtime="20211026 22:38:12.237"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:38:12.238" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211026 22:38:12.237" endtime="20211026 22:38:12.238"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:38:12.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:38:12.238" endtime="20211026 22:38:12.239"/>
</kw>
<status status="PASS" starttime="20211026 22:38:04.638" endtime="20211026 22:38:12.239"/>
</kw>
<msg timestamp="20211026 22:38:12.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:38:04.637" endtime="20211026 22:38:12.240"/>
</kw>
<msg timestamp="20211026 22:38:12.240" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211026 22:38:04.635" endtime="20211026 22:38:12.240"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:38:12.244" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/14132-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:38:18.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:38:18.124" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211026 22:38:12.242" endtime="20211026 22:38:18.124"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:38:18.125" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211026 22:38:18.125" endtime="20211026 22:38:18.125"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:38:18.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:38:18.126" endtime="20211026 22:38:18.127"/>
</kw>
<status status="PASS" starttime="20211026 22:38:12.241" endtime="20211026 22:38:18.127"/>
</kw>
<msg timestamp="20211026 22:38:18.127" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:38:12.241" endtime="20211026 22:38:18.127"/>
</kw>
<msg timestamp="20211026 22:38:18.128" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211026 22:38:12.240" endtime="20211026 22:38:18.128"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211026 22:38:18.128" endtime="20211026 22:38:18.128"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211026 22:38:18.129" endtime="20211026 22:38:18.130"/>
</kw>
<status status="PASS" starttime="20211026 22:37:16.345" endtime="20211026 22:38:18.130"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211026 22:37:16.293" endtime="20211026 22:38:18.131"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:38:18.142" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:38:18.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:38:18.147" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211026 22:38:18.138" endtime="20211026 22:38:18.147"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:38:18.148" level="INFO">scm</msg>
<status status="PASS" starttime="20211026 22:38:18.147" endtime="20211026 22:38:18.149"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:38:18.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:38:18.149" endtime="20211026 22:38:18.150"/>
</kw>
<status status="PASS" starttime="20211026 22:38:18.137" endtime="20211026 22:38:18.150"/>
</kw>
<msg timestamp="20211026 22:38:18.150" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:38:18.136" endtime="20211026 22:38:18.150"/>
</kw>
<msg timestamp="20211026 22:38:18.151" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211026 22:38:18.136" endtime="20211026 22:38:18.151"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211026 22:38:18.152" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211026 22:38:18.151" endtime="20211026 22:38:18.152"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:38:18.159" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:38:18.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:38:18.381" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:38:18.156" endtime="20211026 22:38:18.381"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:38:18.383" level="INFO"/>
<status status="PASS" starttime="20211026 22:38:18.382" endtime="20211026 22:38:18.383"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:38:18.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:38:18.383" endtime="20211026 22:38:18.384"/>
</kw>
<status status="PASS" starttime="20211026 22:38:18.155" endtime="20211026 22:38:18.384"/>
</kw>
<msg timestamp="20211026 22:38:18.384" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:38:18.154" endtime="20211026 22:38:18.384"/>
</kw>
<status status="PASS" starttime="20211026 22:38:18.153" endtime="20211026 22:38:18.385"/>
</kw>
<status status="PASS" starttime="20211026 22:38:18.153" endtime="20211026 22:38:18.385"/>
</kw>
<status status="PASS" starttime="20211026 22:38:18.135" endtime="20211026 22:38:18.385"/>
</kw>
<status status="PASS" starttime="20211026 22:38:18.134" endtime="20211026 22:38:18.385"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:38:18.391" level="INFO">Running command 'ozone sh bucket create o3://om:9862/14132-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:38:26.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:38:26.303" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:38:18.388" endtime="20211026 22:38:26.303"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:38:26.304" level="INFO"/>
<status status="PASS" starttime="20211026 22:38:26.303" endtime="20211026 22:38:26.304"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:38:26.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:38:26.305" endtime="20211026 22:38:26.305"/>
</kw>
<status status="PASS" starttime="20211026 22:38:18.388" endtime="20211026 22:38:26.305"/>
</kw>
<msg timestamp="20211026 22:38:26.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:38:18.387" endtime="20211026 22:38:26.306"/>
</kw>
<status status="PASS" starttime="20211026 22:38:18.387" endtime="20211026 22:38:26.307"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:38:26.312" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/14132-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:38:34.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:38:34.218" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211026 22:38:26.310" endtime="20211026 22:38:34.218"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:38:34.219" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211026 22:38:34.218" endtime="20211026 22:38:34.220"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:38:34.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:38:34.220" endtime="20211026 22:38:34.221"/>
</kw>
<status status="PASS" starttime="20211026 22:38:26.309" endtime="20211026 22:38:34.221"/>
</kw>
<msg timestamp="20211026 22:38:34.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:38:26.309" endtime="20211026 22:38:34.221"/>
</kw>
<msg timestamp="20211026 22:38:34.222" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211026 22:38:26.307" endtime="20211026 22:38:34.222"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211026 22:38:34.222" endtime="20211026 22:38:34.223"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:38:34.233" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/14132-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:38:42.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:38:42.420" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20211026 22:38:34.226" endtime="20211026 22:38:42.420"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:38:42.422" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20211026 22:38:42.421" endtime="20211026 22:38:42.423"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:38:42.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:38:42.423" endtime="20211026 22:38:42.424"/>
</kw>
<status status="PASS" starttime="20211026 22:38:34.225" endtime="20211026 22:38:42.425"/>
</kw>
<msg timestamp="20211026 22:38:42.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:38:34.225" endtime="20211026 22:38:42.425"/>
</kw>
<msg timestamp="20211026 22:38:42.426" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20211026 22:38:34.223" endtime="20211026 22:38:42.426"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:38:42.433" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/14132-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:38:50.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:38:50.419" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211026 22:38:42.430" endtime="20211026 22:38:50.419"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:38:50.420" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211026 22:38:50.419" endtime="20211026 22:38:50.420"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:38:50.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:38:50.420" endtime="20211026 22:38:50.421"/>
</kw>
<status status="PASS" starttime="20211026 22:38:42.428" endtime="20211026 22:38:50.421"/>
</kw>
<msg timestamp="20211026 22:38:50.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:38:42.428" endtime="20211026 22:38:50.421"/>
</kw>
<msg timestamp="20211026 22:38:50.422" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211026 22:38:42.426" endtime="20211026 22:38:50.422"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211026 22:38:50.422" endtime="20211026 22:38:50.424"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:38:50.431" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/14132-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:38:58.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:38:58.693" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211026 22:38:50.428" endtime="20211026 22:38:58.693"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:38:58.695" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211026 22:38:58.694" endtime="20211026 22:38:58.695"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:38:58.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:38:58.695" endtime="20211026 22:38:58.698"/>
</kw>
<status status="PASS" starttime="20211026 22:38:50.427" endtime="20211026 22:38:58.698"/>
</kw>
<msg timestamp="20211026 22:38:58.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:38:50.426" endtime="20211026 22:38:58.699"/>
</kw>
<msg timestamp="20211026 22:38:58.699" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211026 22:38:50.425" endtime="20211026 22:38:58.700"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:38:58.707" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/14132-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:39:07.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:39:07.680" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211026 22:38:58.703" endtime="20211026 22:39:07.680"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:39:07.682" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211026 22:39:07.681" endtime="20211026 22:39:07.682"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:39:07.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:39:07.682" endtime="20211026 22:39:07.683"/>
</kw>
<status status="PASS" starttime="20211026 22:38:58.702" endtime="20211026 22:39:07.684"/>
</kw>
<msg timestamp="20211026 22:39:07.684" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:38:58.701" endtime="20211026 22:39:07.684"/>
</kw>
<msg timestamp="20211026 22:39:07.685" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211026 22:38:58.700" endtime="20211026 22:39:07.685"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211026 22:39:07.685" endtime="20211026 22:39:07.686"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:39:07.691" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/14132-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:39:15.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:39:15.596" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211026 22:39:07.688" endtime="20211026 22:39:15.597"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:39:15.598" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211026 22:39:15.597" endtime="20211026 22:39:15.598"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:39:15.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:39:15.599" endtime="20211026 22:39:15.600"/>
</kw>
<status status="PASS" starttime="20211026 22:39:07.688" endtime="20211026 22:39:15.601"/>
</kw>
<msg timestamp="20211026 22:39:15.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:39:07.687" endtime="20211026 22:39:15.601"/>
</kw>
<msg timestamp="20211026 22:39:15.602" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211026 22:39:07.686" endtime="20211026 22:39:15.602"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:39:15.610" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/14132-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:39:24.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:39:24.476" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211026 22:39:15.606" endtime="20211026 22:39:24.476"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:39:24.478" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211026 22:39:24.477" endtime="20211026 22:39:24.479"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:39:24.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:39:24.479" endtime="20211026 22:39:24.481"/>
</kw>
<status status="PASS" starttime="20211026 22:39:15.605" endtime="20211026 22:39:24.481"/>
</kw>
<msg timestamp="20211026 22:39:24.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:39:15.604" endtime="20211026 22:39:24.482"/>
</kw>
<msg timestamp="20211026 22:39:24.482" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211026 22:39:15.603" endtime="20211026 22:39:24.482"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211026 22:39:24.482" endtime="20211026 22:39:24.483"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211026 22:39:24.483" endtime="20211026 22:39:24.484"/>
</kw>
<status status="PASS" starttime="20211026 22:38:18.385" endtime="20211026 22:39:24.485"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211026 22:38:18.133" endtime="20211026 22:39:24.485"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:39:24.494" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:39:24.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:39:24.503" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211026 22:39:24.491" endtime="20211026 22:39:24.503"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:39:24.504" level="INFO">scm</msg>
<status status="PASS" starttime="20211026 22:39:24.503" endtime="20211026 22:39:24.504"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:39:24.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:39:24.504" endtime="20211026 22:39:24.505"/>
</kw>
<status status="PASS" starttime="20211026 22:39:24.490" endtime="20211026 22:39:24.506"/>
</kw>
<msg timestamp="20211026 22:39:24.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:39:24.490" endtime="20211026 22:39:24.506"/>
</kw>
<msg timestamp="20211026 22:39:24.506" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211026 22:39:24.489" endtime="20211026 22:39:24.506"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211026 22:39:24.508" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211026 22:39:24.507" endtime="20211026 22:39:24.508"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:39:24.512" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:39:24.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:39:24.522" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:39:24.510" endtime="20211026 22:39:24.522"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:39:24.523" level="INFO"/>
<status status="PASS" starttime="20211026 22:39:24.523" endtime="20211026 22:39:24.523"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:39:24.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:39:24.524" endtime="20211026 22:39:24.524"/>
</kw>
<status status="PASS" starttime="20211026 22:39:24.510" endtime="20211026 22:39:24.525"/>
</kw>
<msg timestamp="20211026 22:39:24.525" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:39:24.509" endtime="20211026 22:39:24.525"/>
</kw>
<status status="PASS" starttime="20211026 22:39:24.509" endtime="20211026 22:39:24.526"/>
</kw>
<status status="PASS" starttime="20211026 22:39:24.508" endtime="20211026 22:39:24.526"/>
</kw>
<status status="PASS" starttime="20211026 22:39:24.488" endtime="20211026 22:39:24.527"/>
</kw>
<status status="PASS" starttime="20211026 22:39:24.487" endtime="20211026 22:39:24.527"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:39:24.536" level="INFO">Running command 'ozone sh key put o3://om:9862/14132-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:42:35.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:42:35.708" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:39:24.532" endtime="20211026 22:42:35.708"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:42:35.709" level="INFO"/>
<status status="PASS" starttime="20211026 22:42:35.708" endtime="20211026 22:42:35.709"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:42:35.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:42:35.710" endtime="20211026 22:42:35.711"/>
</kw>
<status status="PASS" starttime="20211026 22:39:24.531" endtime="20211026 22:42:35.711"/>
</kw>
<msg timestamp="20211026 22:42:35.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:39:24.530" endtime="20211026 22:42:35.711"/>
</kw>
<status status="PASS" starttime="20211026 22:39:24.529" endtime="20211026 22:42:35.712"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:42:35.718" level="INFO">Running command 'ozone sh key getacl o3://om:9862/14132-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:42:44.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:42:44.117" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211026 22:42:35.714" endtime="20211026 22:42:44.117"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:42:44.119" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211026 22:42:44.117" endtime="20211026 22:42:44.119"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:42:44.121" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:42:44.119" endtime="20211026 22:42:44.121"/>
</kw>
<status status="PASS" starttime="20211026 22:42:35.713" endtime="20211026 22:42:44.121"/>
</kw>
<msg timestamp="20211026 22:42:44.122" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:42:35.713" endtime="20211026 22:42:44.122"/>
</kw>
<msg timestamp="20211026 22:42:44.122" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211026 22:42:35.712" endtime="20211026 22:42:44.123"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211026 22:42:44.123" endtime="20211026 22:42:44.124"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:42:44.130" level="INFO">Running command 'ozone sh key addacl o3://om:9862/14132-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:42:50.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:42:50.537" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211026 22:42:44.127" endtime="20211026 22:42:50.537"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:42:50.539" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211026 22:42:50.538" endtime="20211026 22:42:50.539"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:42:50.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:42:50.539" endtime="20211026 22:42:50.540"/>
</kw>
<status status="PASS" starttime="20211026 22:42:44.126" endtime="20211026 22:42:50.540"/>
</kw>
<msg timestamp="20211026 22:42:50.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:42:44.125" endtime="20211026 22:42:50.541"/>
</kw>
<msg timestamp="20211026 22:42:50.541" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211026 22:42:44.124" endtime="20211026 22:42:50.541"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:42:50.545" level="INFO">Running command 'ozone sh key getacl o3://om:9862/14132-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:42:57.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:42:57.424" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211026 22:42:50.543" endtime="20211026 22:42:57.424"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:42:57.426" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211026 22:42:57.425" endtime="20211026 22:42:57.426"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:42:57.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:42:57.426" endtime="20211026 22:42:57.427"/>
</kw>
<status status="PASS" starttime="20211026 22:42:50.543" endtime="20211026 22:42:57.427"/>
</kw>
<msg timestamp="20211026 22:42:57.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:42:50.542" endtime="20211026 22:42:57.427"/>
</kw>
<msg timestamp="20211026 22:42:57.428" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211026 22:42:50.541" endtime="20211026 22:42:57.428"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211026 22:42:57.428" endtime="20211026 22:42:57.429"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:42:57.433" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/14132-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:43:05.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:43:05.149" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211026 22:42:57.431" endtime="20211026 22:43:05.149"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:43:05.152" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211026 22:43:05.150" endtime="20211026 22:43:05.153"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:43:05.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:43:05.153" endtime="20211026 22:43:05.155"/>
</kw>
<status status="PASS" starttime="20211026 22:42:57.431" endtime="20211026 22:43:05.155"/>
</kw>
<msg timestamp="20211026 22:43:05.156" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:42:57.430" endtime="20211026 22:43:05.156"/>
</kw>
<msg timestamp="20211026 22:43:05.157" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211026 22:42:57.430" endtime="20211026 22:43:05.157"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:43:05.165" level="INFO">Running command 'ozone sh key getacl o3://om:9862/14132-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:43:14.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:43:14.047" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211026 22:43:05.160" endtime="20211026 22:43:14.047"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:43:14.051" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20211026 22:43:14.048" endtime="20211026 22:43:14.051"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:43:14.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:43:14.051" endtime="20211026 22:43:14.052"/>
</kw>
<status status="PASS" starttime="20211026 22:43:05.159" endtime="20211026 22:43:14.052"/>
</kw>
<msg timestamp="20211026 22:43:14.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:43:05.159" endtime="20211026 22:43:14.053"/>
</kw>
<msg timestamp="20211026 22:43:14.054" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211026 22:43:05.157" endtime="20211026 22:43:14.054"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211026 22:43:14.054" endtime="20211026 22:43:14.055"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:43:14.060" level="INFO">Running command 'ozone sh key setacl o3://om:9862/14132-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:43:21.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:43:21.067" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211026 22:43:14.057" endtime="20211026 22:43:21.067"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:43:21.069" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211026 22:43:21.068" endtime="20211026 22:43:21.069"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:43:21.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:43:21.069" endtime="20211026 22:43:21.070"/>
</kw>
<status status="PASS" starttime="20211026 22:43:14.056" endtime="20211026 22:43:21.071"/>
</kw>
<msg timestamp="20211026 22:43:21.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:43:14.056" endtime="20211026 22:43:21.071"/>
</kw>
<msg timestamp="20211026 22:43:21.072" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211026 22:43:14.055" endtime="20211026 22:43:21.072"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:43:21.084" level="INFO">Running command 'ozone sh key getacl o3://om:9862/14132-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:43:29.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:43:29.272" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211026 22:43:21.076" endtime="20211026 22:43:29.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:43:29.274" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211026 22:43:29.273" endtime="20211026 22:43:29.274"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:43:29.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:43:29.274" endtime="20211026 22:43:29.275"/>
</kw>
<status status="PASS" starttime="20211026 22:43:21.074" endtime="20211026 22:43:29.275"/>
</kw>
<msg timestamp="20211026 22:43:29.276" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:43:21.074" endtime="20211026 22:43:29.276"/>
</kw>
<msg timestamp="20211026 22:43:29.276" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211026 22:43:21.072" endtime="20211026 22:43:29.276"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211026 22:43:29.276" endtime="20211026 22:43:29.277"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211026 22:43:29.277" endtime="20211026 22:43:29.278"/>
</kw>
<status status="PASS" starttime="20211026 22:39:24.528" endtime="20211026 22:43:29.278"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211026 22:39:24.486" endtime="20211026 22:43:29.279"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient prefix acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:43:29.288" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:43:29.292" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:43:29.292" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211026 22:43:29.286" endtime="20211026 22:43:29.292"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:43:29.293" level="INFO">scm</msg>
<status status="PASS" starttime="20211026 22:43:29.292" endtime="20211026 22:43:29.293"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:43:29.294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:43:29.293" endtime="20211026 22:43:29.294"/>
</kw>
<status status="PASS" starttime="20211026 22:43:29.285" endtime="20211026 22:43:29.294"/>
</kw>
<msg timestamp="20211026 22:43:29.294" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:43:29.283" endtime="20211026 22:43:29.295"/>
</kw>
<msg timestamp="20211026 22:43:29.295" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211026 22:43:29.282" endtime="20211026 22:43:29.295"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211026 22:43:29.296" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211026 22:43:29.295" endtime="20211026 22:43:29.296"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:43:29.301" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:43:29.517" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:43:29.517" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:43:29.298" endtime="20211026 22:43:29.518"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:43:29.519" level="INFO"/>
<status status="PASS" starttime="20211026 22:43:29.518" endtime="20211026 22:43:29.519"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:43:29.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:43:29.519" endtime="20211026 22:43:29.521"/>
</kw>
<status status="PASS" starttime="20211026 22:43:29.297" endtime="20211026 22:43:29.521"/>
</kw>
<msg timestamp="20211026 22:43:29.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:43:29.297" endtime="20211026 22:43:29.522"/>
</kw>
<status status="PASS" starttime="20211026 22:43:29.296" endtime="20211026 22:43:29.522"/>
</kw>
<status status="PASS" starttime="20211026 22:43:29.296" endtime="20211026 22:43:29.522"/>
</kw>
<status status="PASS" starttime="20211026 22:43:29.281" endtime="20211026 22:43:29.522"/>
</kw>
<status status="PASS" starttime="20211026 22:43:29.280" endtime="20211026 22:43:29.522"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:43:29.527" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/14132-rpcwoport2/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:43:37.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:43:37.336" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211026 22:43:29.525" endtime="20211026 22:43:37.336"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:43:37.339" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211026 22:43:37.337" endtime="20211026 22:43:37.340"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:43:37.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:43:37.340" endtime="20211026 22:43:37.342"/>
</kw>
<status status="PASS" starttime="20211026 22:43:29.524" endtime="20211026 22:43:37.342"/>
</kw>
<msg timestamp="20211026 22:43:37.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:43:29.524" endtime="20211026 22:43:37.343"/>
</kw>
<status status="PASS" starttime="20211026 22:43:29.523" endtime="20211026 22:43:37.344"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:43:37.355" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/14132-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:43:45.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:43:45.420" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211026 22:43:37.349" endtime="20211026 22:43:45.420"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:43:45.422" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211026 22:43:45.421" endtime="20211026 22:43:45.422"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:43:45.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:43:45.422" endtime="20211026 22:43:45.423"/>
</kw>
<status status="PASS" starttime="20211026 22:43:37.348" endtime="20211026 22:43:45.423"/>
</kw>
<msg timestamp="20211026 22:43:45.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:43:37.347" endtime="20211026 22:43:45.424"/>
</kw>
<msg timestamp="20211026 22:43:45.424" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211026 22:43:37.344" endtime="20211026 22:43:45.424"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211026 22:43:45.424" endtime="20211026 22:43:45.425"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:43:45.431" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/14132-rpcwoport2/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:43:53.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:43:53.449" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20211026 22:43:45.429" endtime="20211026 22:43:53.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:43:53.451" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20211026 22:43:53.450" endtime="20211026 22:43:53.451"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:43:53.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:43:53.451" endtime="20211026 22:43:53.452"/>
</kw>
<status status="PASS" starttime="20211026 22:43:45.428" endtime="20211026 22:43:53.452"/>
</kw>
<msg timestamp="20211026 22:43:53.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:43:45.426" endtime="20211026 22:43:53.453"/>
</kw>
<msg timestamp="20211026 22:43:53.453" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20211026 22:43:45.425" endtime="20211026 22:43:53.453"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:43:53.459" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/14132-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:44:01.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:44:01.992" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211026 22:43:53.455" endtime="20211026 22:44:01.992"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:44:01.994" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211026 22:44:01.993" endtime="20211026 22:44:01.995"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:44:01.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:44:01.995" endtime="20211026 22:44:01.997"/>
</kw>
<status status="PASS" starttime="20211026 22:43:53.455" endtime="20211026 22:44:01.998"/>
</kw>
<msg timestamp="20211026 22:44:01.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:43:53.454" endtime="20211026 22:44:02.000"/>
</kw>
<msg timestamp="20211026 22:44:02.000" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211026 22:43:53.453" endtime="20211026 22:44:02.001"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211026 22:44:02.001" endtime="20211026 22:44:02.004"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:44:02.013" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/14132-rpcwoport2/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:44:09.643" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:44:09.643" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211026 22:44:02.008" endtime="20211026 22:44:09.643"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:44:09.644" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211026 22:44:09.643" endtime="20211026 22:44:09.644"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:44:09.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:44:09.644" endtime="20211026 22:44:09.645"/>
</kw>
<status status="PASS" starttime="20211026 22:44:02.007" endtime="20211026 22:44:09.645"/>
</kw>
<msg timestamp="20211026 22:44:09.645" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:44:02.006" endtime="20211026 22:44:09.646"/>
</kw>
<msg timestamp="20211026 22:44:09.646" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211026 22:44:02.004" endtime="20211026 22:44:09.646"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:44:09.654" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/14132-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:44:18.300" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:44:18.300" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20211026 22:44:09.651" endtime="20211026 22:44:18.300"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:44:18.302" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211026 22:44:18.301" endtime="20211026 22:44:18.302"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:44:18.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:44:18.302" endtime="20211026 22:44:18.304"/>
</kw>
<status status="PASS" starttime="20211026 22:44:09.649" endtime="20211026 22:44:18.304"/>
</kw>
<msg timestamp="20211026 22:44:18.304" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:44:09.648" endtime="20211026 22:44:18.304"/>
</kw>
<msg timestamp="20211026 22:44:18.305" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20211026 22:44:09.647" endtime="20211026 22:44:18.305"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211026 22:44:18.306" endtime="20211026 22:44:18.307"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211026 22:44:18.307" endtime="20211026 22:44:18.308"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:44:18.314" level="INFO">Running command 'ozone sh key put o3://om:9862/14132-rpcwoport2/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:47:30.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:47:30.725" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:44:18.311" endtime="20211026 22:47:30.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:47:30.728" level="INFO"/>
<status status="PASS" starttime="20211026 22:47:30.727" endtime="20211026 22:47:30.728"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:47:30.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:47:30.729" endtime="20211026 22:47:30.729"/>
</kw>
<status status="PASS" starttime="20211026 22:44:18.310" endtime="20211026 22:47:30.731"/>
</kw>
<msg timestamp="20211026 22:47:30.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:44:18.310" endtime="20211026 22:47:30.731"/>
</kw>
<status status="PASS" starttime="20211026 22:44:18.309" endtime="20211026 22:47:30.731"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:47:30.738" level="INFO">Running command 'ozone sh key getacl o3://om:9862/14132-rpcwoport2/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:47:39.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:47:39.476" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211026 22:47:30.734" endtime="20211026 22:47:39.476"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:47:39.479" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211026 22:47:39.477" endtime="20211026 22:47:39.479"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:47:39.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:47:39.480" endtime="20211026 22:47:39.481"/>
</kw>
<status status="PASS" starttime="20211026 22:47:30.733" endtime="20211026 22:47:39.481"/>
</kw>
<msg timestamp="20211026 22:47:39.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:47:30.733" endtime="20211026 22:47:39.482"/>
</kw>
<msg timestamp="20211026 22:47:39.483" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211026 22:47:30.732" endtime="20211026 22:47:39.483"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211026 22:47:39.483" endtime="20211026 22:47:39.484"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211026 22:47:39.484" endtime="20211026 22:47:39.485"/>
</kw>
<status status="PASS" starttime="20211026 22:43:29.523" endtime="20211026 22:47:39.486"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211026 22:43:29.279" endtime="20211026 22:47:39.486"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:47:39.500" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:47:39.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:47:39.506" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211026 22:47:39.497" endtime="20211026 22:47:39.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:47:39.507" level="INFO">scm</msg>
<status status="PASS" starttime="20211026 22:47:39.507" endtime="20211026 22:47:39.508"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:47:39.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:47:39.508" endtime="20211026 22:47:39.509"/>
</kw>
<status status="PASS" starttime="20211026 22:47:39.496" endtime="20211026 22:47:39.510"/>
</kw>
<msg timestamp="20211026 22:47:39.510" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:47:39.496" endtime="20211026 22:47:39.510"/>
</kw>
<msg timestamp="20211026 22:47:39.511" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211026 22:47:39.492" endtime="20211026 22:47:39.511"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211026 22:47:39.511" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211026 22:47:39.511" endtime="20211026 22:47:39.512"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:47:39.520" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:47:39.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:47:39.533" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:47:39.516" endtime="20211026 22:47:39.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:47:39.535" level="INFO"/>
<status status="PASS" starttime="20211026 22:47:39.534" endtime="20211026 22:47:39.535"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:47:39.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:47:39.535" endtime="20211026 22:47:39.536"/>
</kw>
<status status="PASS" starttime="20211026 22:47:39.515" endtime="20211026 22:47:39.537"/>
</kw>
<msg timestamp="20211026 22:47:39.537" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:47:39.515" endtime="20211026 22:47:39.537"/>
</kw>
<status status="PASS" starttime="20211026 22:47:39.512" endtime="20211026 22:47:39.538"/>
</kw>
<status status="PASS" starttime="20211026 22:47:39.512" endtime="20211026 22:47:39.538"/>
</kw>
<status status="PASS" starttime="20211026 22:47:39.491" endtime="20211026 22:47:39.538"/>
</kw>
<status status="PASS" starttime="20211026 22:47:39.490" endtime="20211026 22:47:39.538"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:47:39.545" level="INFO">Running command 'ozone sh volume info o3:///14132-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:47:48.256" level="INFO">${rc} = 255</msg>
<msg timestamp="20211026 22:47:48.256" level="INFO">${output} = VOLUME_NOT_FOUND Volume 14132-rpcwport is not found</msg>
<status status="PASS" starttime="20211026 22:47:39.542" endtime="20211026 22:47:48.256"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:47:48.257" level="INFO">VOLUME_NOT_FOUND Volume 14132-rpcwport is not found</msg>
<status status="PASS" starttime="20211026 22:47:48.257" endtime="20211026 22:47:48.258"/>
</kw>
<msg timestamp="20211026 22:47:48.258" level="INFO">${result} = VOLUME_NOT_FOUND Volume 14132-rpcwport is not found</msg>
<status status="PASS" starttime="20211026 22:47:39.541" endtime="20211026 22:47:48.258"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211026 22:47:48.258" endtime="20211026 22:47:48.259"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:47:48.265" level="INFO">Running command 'ozone sh volume create o3:///14132-rpcwport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:47:55.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:47:56.000" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:47:48.261" endtime="20211026 22:47:56.000"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:47:56.002" level="INFO"/>
<status status="PASS" starttime="20211026 22:47:56.001" endtime="20211026 22:47:56.002"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:47:56.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:47:56.003" endtime="20211026 22:47:56.007"/>
</kw>
<status status="PASS" starttime="20211026 22:47:48.260" endtime="20211026 22:47:56.007"/>
</kw>
<msg timestamp="20211026 22:47:56.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:47:48.260" endtime="20211026 22:47:56.008"/>
</kw>
<msg timestamp="20211026 22:47:56.008" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211026 22:47:48.259" endtime="20211026 22:47:56.008"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211026 22:47:56.008" endtime="20211026 22:47:56.009"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:47:56.019" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '.[] | select(.name=="14132-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:48:03.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:48:03.574" level="INFO">${output} = {
  "metadata": {},
  "name": "14132-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211026 22:47:56.015" endtime="20211026 22:48:03.574"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:48:03.577" level="INFO">{
  "metadata": {},
  "name": "14132-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-26T22:47:55.893Z",
  "modificationTime": "2021-10-26T22:47:55.893Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211026 22:48:03.576" endtime="20211026 22:48:03.578"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:48:03.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:48:03.578" endtime="20211026 22:48:03.580"/>
</kw>
<status status="PASS" starttime="20211026 22:47:56.014" endtime="20211026 22:48:03.581"/>
</kw>
<msg timestamp="20211026 22:48:03.581" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:47:56.012" endtime="20211026 22:48:03.581"/>
</kw>
<msg timestamp="20211026 22:48:03.582" level="INFO">${result} = {
  "metadata": {},
  "name": "14132-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211026 22:47:56.010" endtime="20211026 22:48:03.582"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211026 22:48:03.582" endtime="20211026 22:48:03.583"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:48:03.590" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="14132-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:48:12.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:48:12.687" level="INFO">${output} = {
  "metadata": {},
  "name": "14132-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211026 22:48:03.587" endtime="20211026 22:48:12.687"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:48:12.688" level="INFO">{
  "metadata": {},
  "name": "14132-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-26T22:47:55.893Z",
  "modificationTime": "2021-10-26T22:47:55.893Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211026 22:48:12.687" endtime="20211026 22:48:12.688"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:48:12.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:48:12.688" endtime="20211026 22:48:12.691"/>
</kw>
<status status="PASS" starttime="20211026 22:48:03.585" endtime="20211026 22:48:12.692"/>
</kw>
<msg timestamp="20211026 22:48:12.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:48:03.585" endtime="20211026 22:48:12.692"/>
</kw>
<msg timestamp="20211026 22:48:12.693" level="INFO">${result} = {
  "metadata": {},
  "name": "14132-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211026 22:48:03.583" endtime="20211026 22:48:12.693"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211026 22:48:12.693" endtime="20211026 22:48:12.694"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:48:12.703" level="INFO">Running command 'ozone sh volume setquota o3:///14132-rpcwport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:48:20.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:48:20.941" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:48:12.698" endtime="20211026 22:48:20.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:48:20.943" level="INFO"/>
<status status="PASS" starttime="20211026 22:48:20.942" endtime="20211026 22:48:20.943"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:48:20.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:48:20.943" endtime="20211026 22:48:20.944"/>
</kw>
<status status="PASS" starttime="20211026 22:48:12.696" endtime="20211026 22:48:20.944"/>
</kw>
<msg timestamp="20211026 22:48:20.944" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:48:12.695" endtime="20211026 22:48:20.944"/>
</kw>
<status status="PASS" starttime="20211026 22:48:12.694" endtime="20211026 22:48:20.944"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:48:20.950" level="INFO">Running command 'ozone sh volume info o3:///14132-rpcwport | jq -r '. | select(.name=="14132-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:48:29.916" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:48:29.916" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211026 22:48:20.947" endtime="20211026 22:48:29.916"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:48:29.918" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211026 22:48:29.917" endtime="20211026 22:48:29.919"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:48:29.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:48:29.919" endtime="20211026 22:48:29.920"/>
</kw>
<status status="PASS" starttime="20211026 22:48:20.946" endtime="20211026 22:48:29.921"/>
</kw>
<msg timestamp="20211026 22:48:29.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:48:20.946" endtime="20211026 22:48:29.921"/>
</kw>
<msg timestamp="20211026 22:48:29.922" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211026 22:48:20.945" endtime="20211026 22:48:29.922"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211026 22:48:29.922" endtime="20211026 22:48:29.923"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:48:29.929" level="INFO">Running command 'ozone sh bucket create o3:///14132-rpcwport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:48:37.994" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:48:37.994" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:48:29.927" endtime="20211026 22:48:37.994"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:48:37.996" level="INFO"/>
<status status="PASS" starttime="20211026 22:48:37.995" endtime="20211026 22:48:37.996"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:48:37.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:48:37.997" endtime="20211026 22:48:37.998"/>
</kw>
<status status="PASS" starttime="20211026 22:48:29.925" endtime="20211026 22:48:37.999"/>
</kw>
<msg timestamp="20211026 22:48:37.999" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:48:29.925" endtime="20211026 22:48:37.999"/>
</kw>
<status status="PASS" starttime="20211026 22:48:29.923" endtime="20211026 22:48:38.000"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:48:38.007" level="INFO">Running command 'ozone sh bucket info o3:///14132-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:48:46.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:48:46.344" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211026 22:48:38.004" endtime="20211026 22:48:46.344"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:48:46.345" level="INFO">DISK</msg>
<status status="PASS" starttime="20211026 22:48:46.345" endtime="20211026 22:48:46.346"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:48:46.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:48:46.346" endtime="20211026 22:48:46.347"/>
</kw>
<status status="PASS" starttime="20211026 22:48:38.003" endtime="20211026 22:48:46.348"/>
</kw>
<msg timestamp="20211026 22:48:46.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:48:38.003" endtime="20211026 22:48:46.350"/>
</kw>
<msg timestamp="20211026 22:48:46.351" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211026 22:48:38.001" endtime="20211026 22:48:46.351"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211026 22:48:46.351" endtime="20211026 22:48:46.352"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:48:46.359" level="INFO">Running command 'ozone sh bucket info o3:///14132-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:48:54.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:48:54.250" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211026 22:48:46.356" endtime="20211026 22:48:54.250"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:48:54.251" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211026 22:48:54.251" endtime="20211026 22:48:54.251"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:48:54.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:48:54.252" endtime="20211026 22:48:54.252"/>
</kw>
<status status="PASS" starttime="20211026 22:48:46.355" endtime="20211026 22:48:54.253"/>
</kw>
<msg timestamp="20211026 22:48:54.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:48:46.354" endtime="20211026 22:48:54.253"/>
</kw>
<msg timestamp="20211026 22:48:54.253" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211026 22:48:46.352" endtime="20211026 22:48:54.253"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211026 22:48:54.253" endtime="20211026 22:48:54.254"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:48:54.262" level="INFO">Running command 'ozone sh bucket info o3:///14132-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:49:03.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:49:03.058" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211026 22:48:54.258" endtime="20211026 22:49:03.059"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:49:03.061" level="INFO">100</msg>
<status status="PASS" starttime="20211026 22:49:03.059" endtime="20211026 22:49:03.061"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:49:03.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:49:03.061" endtime="20211026 22:49:03.062"/>
</kw>
<status status="PASS" starttime="20211026 22:48:54.257" endtime="20211026 22:49:03.062"/>
</kw>
<msg timestamp="20211026 22:49:03.062" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:48:54.257" endtime="20211026 22:49:03.063"/>
</kw>
<msg timestamp="20211026 22:49:03.063" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211026 22:48:54.254" endtime="20211026 22:49:03.063"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211026 22:49:03.064" endtime="20211026 22:49:03.064"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:49:03.073" level="INFO">Running command 'ozone sh bucket setquota o3:///14132-rpcwport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:49:08.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:49:08.600" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:49:03.068" endtime="20211026 22:49:08.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:49:08.602" level="INFO"/>
<status status="PASS" starttime="20211026 22:49:08.601" endtime="20211026 22:49:08.602"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:49:08.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:49:08.602" endtime="20211026 22:49:08.603"/>
</kw>
<status status="PASS" starttime="20211026 22:49:03.067" endtime="20211026 22:49:08.603"/>
</kw>
<msg timestamp="20211026 22:49:08.603" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:49:03.066" endtime="20211026 22:49:08.603"/>
</kw>
<status status="PASS" starttime="20211026 22:49:03.064" endtime="20211026 22:49:08.604"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:49:08.610" level="INFO">Running command 'ozone sh bucket info o3:///14132-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:49:15.841" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:49:15.841" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211026 22:49:08.606" endtime="20211026 22:49:15.841"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:49:15.842" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211026 22:49:15.841" endtime="20211026 22:49:15.842"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:49:15.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:49:15.843" endtime="20211026 22:49:15.843"/>
</kw>
<status status="PASS" starttime="20211026 22:49:08.605" endtime="20211026 22:49:15.844"/>
</kw>
<msg timestamp="20211026 22:49:15.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:49:08.605" endtime="20211026 22:49:15.844"/>
</kw>
<msg timestamp="20211026 22:49:15.844" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211026 22:49:08.604" endtime="20211026 22:49:15.844"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211026 22:49:15.844" endtime="20211026 22:49:15.845"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:49:15.851" level="INFO">Running command 'ozone sh bucket info o3:///14132-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:49:26.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:49:26.027" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211026 22:49:15.848" endtime="20211026 22:49:26.028"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:49:26.029" level="INFO">1000</msg>
<status status="PASS" starttime="20211026 22:49:26.028" endtime="20211026 22:49:26.029"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:49:26.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:49:26.029" endtime="20211026 22:49:26.030"/>
</kw>
<status status="PASS" starttime="20211026 22:49:15.847" endtime="20211026 22:49:26.030"/>
</kw>
<msg timestamp="20211026 22:49:26.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:49:15.847" endtime="20211026 22:49:26.030"/>
</kw>
<msg timestamp="20211026 22:49:26.031" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211026 22:49:15.845" endtime="20211026 22:49:26.031"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211026 22:49:26.031" endtime="20211026 22:49:26.031"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:49:26.039" level="INFO">Running command 'ozone sh bucket list o3:///14132-rpcwport/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:49:34.760" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:49:34.760" level="INFO">${output} = 14132-rpcwport</msg>
<status status="PASS" starttime="20211026 22:49:26.035" endtime="20211026 22:49:34.760"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:49:34.761" level="INFO">14132-rpcwport</msg>
<status status="PASS" starttime="20211026 22:49:34.761" endtime="20211026 22:49:34.762"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:49:34.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:49:34.762" endtime="20211026 22:49:34.762"/>
</kw>
<status status="PASS" starttime="20211026 22:49:26.033" endtime="20211026 22:49:34.763"/>
</kw>
<msg timestamp="20211026 22:49:34.763" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:49:26.033" endtime="20211026 22:49:34.763"/>
</kw>
<msg timestamp="20211026 22:49:34.763" level="INFO">${result} = 14132-rpcwport</msg>
<status status="PASS" starttime="20211026 22:49:26.032" endtime="20211026 22:49:34.763"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211026 22:49:34.764" endtime="20211026 22:49:34.764"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:49:34.772" level="INFO">Running command 'ozone sh key put o3:///14132-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:52:39.489" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211026 22:49:34.768" endtime="20211026 22:52:39.490"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211026 22:52:39.490" endtime="20211026 22:52:39.490"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211026 22:52:39.491" endtime="20211026 22:52:39.491"/>
</kw>
<status status="FAIL" starttime="20211026 22:49:34.767" endtime="20211026 22:52:39.491"/>
</kw>
<msg timestamp="20211026 22:52:39.491" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211026 22:49:34.767" endtime="20211026 22:52:39.491"/>
</kw>
<status status="FAIL" starttime="20211026 22:49:34.766" endtime="20211026 22:52:39.492"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211026 22:52:39.492" endtime="20211026 22:52:39.492"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211026 22:52:39.492" endtime="20211026 22:52:39.492"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211026 22:52:39.492" endtime="20211026 22:52:39.492"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211026 22:52:39.493" endtime="20211026 22:52:39.493"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211026 22:52:39.493" endtime="20211026 22:52:39.493"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211026 22:52:39.493" endtime="20211026 22:52:39.493"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211026 22:52:39.493" endtime="20211026 22:52:39.493"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211026 22:52:39.493" endtime="20211026 22:52:39.493"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211026 22:52:39.494" endtime="20211026 22:52:39.494"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211026 22:52:39.494" endtime="20211026 22:52:39.494"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211026 22:52:39.494" endtime="20211026 22:52:39.494"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211026 22:52:39.494" endtime="20211026 22:52:39.495"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211026 22:52:39.495" endtime="20211026 22:52:39.495"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211026 22:52:39.495" endtime="20211026 22:52:39.495"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211026 22:52:39.495" endtime="20211026 22:52:39.495"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211026 22:52:39.495" endtime="20211026 22:52:39.495"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211026 22:52:39.496" endtime="20211026 22:52:39.496"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211026 22:52:39.496" endtime="20211026 22:52:39.496"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211026 22:52:39.496" endtime="20211026 22:52:39.496"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211026 22:52:39.496" endtime="20211026 22:52:39.496"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211026 22:52:39.496" endtime="20211026 22:52:39.497"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211026 22:52:39.497" endtime="20211026 22:52:39.497"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211026 22:52:39.497" endtime="20211026 22:52:39.497"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211026 22:52:39.497" endtime="20211026 22:52:39.497"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211026 22:52:39.497" endtime="20211026 22:52:39.497"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211026 22:52:39.497" endtime="20211026 22:52:39.498"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211026 22:52:39.498" endtime="20211026 22:52:39.498"/>
</kw>
<status status="FAIL" starttime="20211026 22:49:34.765" endtime="20211026 22:52:39.498"/>
</kw>
<status status="FAIL" starttime="20211026 22:49:34.764" endtime="20211026 22:52:39.498"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211026 22:52:39.498" endtime="20211026 22:52:39.498"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211026 22:52:39.498" endtime="20211026 22:52:39.498"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211026 22:52:39.499" endtime="20211026 22:52:39.499"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211026 22:52:39.499" endtime="20211026 22:52:39.499"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211026 22:52:39.499" endtime="20211026 22:52:39.499"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211026 22:52:39.499" endtime="20211026 22:52:39.499"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211026 22:52:39.499" endtime="20211026 22:52:39.500"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211026 22:52:39.500" endtime="20211026 22:52:39.500"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211026 22:52:39.500" endtime="20211026 22:52:39.500"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211026 22:52:39.500" endtime="20211026 22:52:39.500"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211026 22:52:39.501" endtime="20211026 22:52:39.501"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211026 22:52:39.501" endtime="20211026 22:52:39.501"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211026 22:52:39.501" endtime="20211026 22:52:39.502"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211026 22:52:39.502" endtime="20211026 22:52:39.502"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211026 22:52:39.502" endtime="20211026 22:52:39.502"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211026 22:52:39.503" endtime="20211026 22:52:39.503"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211026 22:52:39.503" endtime="20211026 22:52:39.503"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211026 22:52:39.503" endtime="20211026 22:52:39.503"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211026 22:52:39.504" endtime="20211026 22:52:39.504"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211026 22:52:39.504" endtime="20211026 22:52:39.504"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211026 22:52:39.504" endtime="20211026 22:52:39.504"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211026 22:52:39.504" endtime="20211026 22:52:39.504"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211026 22:52:39.505" endtime="20211026 22:52:39.505"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211026 22:52:39.505" endtime="20211026 22:52:39.505"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211026 22:52:39.505" endtime="20211026 22:52:39.506"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211026 22:52:39.506" endtime="20211026 22:52:39.506"/>
</kw>
<status status="FAIL" starttime="20211026 22:47:39.538" endtime="20211026 22:52:39.506"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211026 22:47:39.488" endtime="20211026 22:52:39.506">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t7" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:52:39.515" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:52:39.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:52:39.522" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211026 22:52:39.513" endtime="20211026 22:52:39.522"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:52:39.525" level="INFO">scm</msg>
<status status="PASS" starttime="20211026 22:52:39.523" endtime="20211026 22:52:39.525"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:52:39.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:52:39.525" endtime="20211026 22:52:39.526"/>
</kw>
<status status="PASS" starttime="20211026 22:52:39.512" endtime="20211026 22:52:39.527"/>
</kw>
<msg timestamp="20211026 22:52:39.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:52:39.511" endtime="20211026 22:52:39.527"/>
</kw>
<msg timestamp="20211026 22:52:39.527" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211026 22:52:39.511" endtime="20211026 22:52:39.528"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211026 22:52:39.529" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211026 22:52:39.528" endtime="20211026 22:52:39.530"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:52:39.536" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:52:39.760" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:52:39.761" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:52:39.533" endtime="20211026 22:52:39.761"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:52:39.762" level="INFO"/>
<status status="PASS" starttime="20211026 22:52:39.761" endtime="20211026 22:52:39.762"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:52:39.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:52:39.762" endtime="20211026 22:52:39.763"/>
</kw>
<status status="PASS" starttime="20211026 22:52:39.532" endtime="20211026 22:52:39.763"/>
</kw>
<msg timestamp="20211026 22:52:39.763" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:52:39.531" endtime="20211026 22:52:39.764"/>
</kw>
<status status="PASS" starttime="20211026 22:52:39.531" endtime="20211026 22:52:39.764"/>
</kw>
<status status="PASS" starttime="20211026 22:52:39.530" endtime="20211026 22:52:39.764"/>
</kw>
<status status="PASS" starttime="20211026 22:52:39.510" endtime="20211026 22:52:39.764"/>
</kw>
<status status="PASS" starttime="20211026 22:52:39.509" endtime="20211026 22:52:39.764"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:52:39.772" level="INFO">Running command 'ozone sh volume info /14132-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:52:45.888" level="INFO">${rc} = 255</msg>
<msg timestamp="20211026 22:52:45.888" level="INFO">${output} = VOLUME_NOT_FOUND Volume 14132-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20211026 22:52:39.768" endtime="20211026 22:52:45.888"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:52:45.890" level="INFO">VOLUME_NOT_FOUND Volume 14132-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20211026 22:52:45.889" endtime="20211026 22:52:45.890"/>
</kw>
<msg timestamp="20211026 22:52:45.891" level="INFO">${result} = VOLUME_NOT_FOUND Volume 14132-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20211026 22:52:39.767" endtime="20211026 22:52:45.891"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211026 22:52:45.891" endtime="20211026 22:52:45.891"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:52:45.898" level="INFO">Running command 'ozone sh volume create /14132-rpcwoscheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:52:54.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:52:54.284" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:52:45.895" endtime="20211026 22:52:54.284"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:52:54.287" level="INFO"/>
<status status="PASS" starttime="20211026 22:52:54.285" endtime="20211026 22:52:54.287"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:52:54.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:52:54.288" endtime="20211026 22:52:54.290"/>
</kw>
<status status="PASS" starttime="20211026 22:52:45.894" endtime="20211026 22:52:54.291"/>
</kw>
<msg timestamp="20211026 22:52:54.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:52:45.893" endtime="20211026 22:52:54.292"/>
</kw>
<msg timestamp="20211026 22:52:54.293" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211026 22:52:45.892" endtime="20211026 22:52:54.294"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211026 22:52:54.294" endtime="20211026 22:52:54.295"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:52:54.303" level="INFO">Running command 'ozone sh volume list / | jq -r '.[] | select(.name=="14132-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:53:03.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:53:03.252" level="INFO">${output} = {
  "metadata": {},
  "name": "14132-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211026 22:52:54.300" endtime="20211026 22:53:03.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:53:03.254" level="INFO">{
  "metadata": {},
  "name": "14132-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-26T22:52:53.944Z",
  "modificationTime": "2021-10-26T22:52:53.944Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211026 22:53:03.253" endtime="20211026 22:53:03.254"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:53:03.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:53:03.254" endtime="20211026 22:53:03.255"/>
</kw>
<status status="PASS" starttime="20211026 22:52:54.299" endtime="20211026 22:53:03.256"/>
</kw>
<msg timestamp="20211026 22:53:03.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:52:54.298" endtime="20211026 22:53:03.256"/>
</kw>
<msg timestamp="20211026 22:53:03.257" level="INFO">${result} = {
  "metadata": {},
  "name": "14132-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211026 22:52:54.295" endtime="20211026 22:53:03.257"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211026 22:53:03.257" endtime="20211026 22:53:03.257"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:53:03.262" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="14132-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:53:09.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:53:09.392" level="INFO">${output} = {
  "metadata": {},
  "name": "14132-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211026 22:53:03.259" endtime="20211026 22:53:09.393"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:53:09.396" level="INFO">{
  "metadata": {},
  "name": "14132-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-26T22:52:53.944Z",
  "modificationTime": "2021-10-26T22:52:53.944Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211026 22:53:09.394" endtime="20211026 22:53:09.396"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:53:09.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:53:09.397" endtime="20211026 22:53:09.399"/>
</kw>
<status status="PASS" starttime="20211026 22:53:03.259" endtime="20211026 22:53:09.400"/>
</kw>
<msg timestamp="20211026 22:53:09.400" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:53:03.258" endtime="20211026 22:53:09.400"/>
</kw>
<msg timestamp="20211026 22:53:09.401" level="INFO">${result} = {
  "metadata": {},
  "name": "14132-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211026 22:53:03.258" endtime="20211026 22:53:09.401"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211026 22:53:09.402" endtime="20211026 22:53:09.403"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:53:09.410" level="INFO">Running command 'ozone sh volume setquota /14132-rpcwoscheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:53:14.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:53:14.782" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:53:09.407" endtime="20211026 22:53:14.782"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:53:14.784" level="INFO"/>
<status status="PASS" starttime="20211026 22:53:14.783" endtime="20211026 22:53:14.784"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:53:14.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:53:14.784" endtime="20211026 22:53:14.785"/>
</kw>
<status status="PASS" starttime="20211026 22:53:09.405" endtime="20211026 22:53:14.785"/>
</kw>
<msg timestamp="20211026 22:53:14.786" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:53:09.405" endtime="20211026 22:53:14.786"/>
</kw>
<status status="PASS" starttime="20211026 22:53:09.403" endtime="20211026 22:53:14.786"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:53:14.791" level="INFO">Running command 'ozone sh volume info /14132-rpcwoscheme | jq -r '. | select(.name=="14132-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:53:22.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:53:22.985" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211026 22:53:14.788" endtime="20211026 22:53:22.985"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:53:22.987" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211026 22:53:22.986" endtime="20211026 22:53:22.987"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:53:22.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:53:22.987" endtime="20211026 22:53:22.989"/>
</kw>
<status status="PASS" starttime="20211026 22:53:14.788" endtime="20211026 22:53:22.989"/>
</kw>
<msg timestamp="20211026 22:53:22.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:53:14.787" endtime="20211026 22:53:22.990"/>
</kw>
<msg timestamp="20211026 22:53:22.991" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211026 22:53:14.786" endtime="20211026 22:53:22.991"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211026 22:53:22.991" endtime="20211026 22:53:22.992"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:53:22.998" level="INFO">Running command 'ozone sh bucket create /14132-rpcwoscheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:53:29.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:53:29.248" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:53:22.996" endtime="20211026 22:53:29.248"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:53:29.250" level="INFO"/>
<status status="PASS" starttime="20211026 22:53:29.249" endtime="20211026 22:53:29.251"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:53:29.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:53:29.251" endtime="20211026 22:53:29.252"/>
</kw>
<status status="PASS" starttime="20211026 22:53:22.995" endtime="20211026 22:53:29.253"/>
</kw>
<msg timestamp="20211026 22:53:29.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:53:22.994" endtime="20211026 22:53:29.253"/>
</kw>
<status status="PASS" starttime="20211026 22:53:22.992" endtime="20211026 22:53:29.253"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:53:29.259" level="INFO">Running command 'ozone sh bucket info /14132-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:53:38.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:53:38.159" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211026 22:53:29.256" endtime="20211026 22:53:38.159"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:53:38.160" level="INFO">DISK</msg>
<status status="PASS" starttime="20211026 22:53:38.159" endtime="20211026 22:53:38.161"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:53:38.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:53:38.161" endtime="20211026 22:53:38.161"/>
</kw>
<status status="PASS" starttime="20211026 22:53:29.255" endtime="20211026 22:53:38.162"/>
</kw>
<msg timestamp="20211026 22:53:38.162" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:53:29.255" endtime="20211026 22:53:38.162"/>
</kw>
<msg timestamp="20211026 22:53:38.162" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211026 22:53:29.254" endtime="20211026 22:53:38.162"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211026 22:53:38.163" endtime="20211026 22:53:38.163"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:53:38.168" level="INFO">Running command 'ozone sh bucket info /14132-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:53:46.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:53:46.331" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211026 22:53:38.165" endtime="20211026 22:53:46.331"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:53:46.333" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211026 22:53:46.332" endtime="20211026 22:53:46.333"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:53:46.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:53:46.333" endtime="20211026 22:53:46.334"/>
</kw>
<status status="PASS" starttime="20211026 22:53:38.164" endtime="20211026 22:53:46.334"/>
</kw>
<msg timestamp="20211026 22:53:46.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:53:38.164" endtime="20211026 22:53:46.335"/>
</kw>
<msg timestamp="20211026 22:53:46.335" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211026 22:53:38.163" endtime="20211026 22:53:46.335"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211026 22:53:46.336" endtime="20211026 22:53:46.336"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:53:46.341" level="INFO">Running command 'ozone sh bucket info /14132-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:53:54.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:53:54.750" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211026 22:53:46.339" endtime="20211026 22:53:54.750"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:53:54.752" level="INFO">100</msg>
<status status="PASS" starttime="20211026 22:53:54.751" endtime="20211026 22:53:54.752"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:53:54.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:53:54.752" endtime="20211026 22:53:54.753"/>
</kw>
<status status="PASS" starttime="20211026 22:53:46.338" endtime="20211026 22:53:54.753"/>
</kw>
<msg timestamp="20211026 22:53:54.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:53:46.337" endtime="20211026 22:53:54.754"/>
</kw>
<msg timestamp="20211026 22:53:54.754" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211026 22:53:46.336" endtime="20211026 22:53:54.754"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211026 22:53:54.754" endtime="20211026 22:53:54.755"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:53:54.759" level="INFO">Running command 'ozone sh bucket setquota /14132-rpcwoscheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:54:02.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:54:02.844" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:53:54.757" endtime="20211026 22:54:02.844"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:54:02.847" level="INFO"/>
<status status="PASS" starttime="20211026 22:54:02.845" endtime="20211026 22:54:02.847"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:54:02.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:54:02.848" endtime="20211026 22:54:02.849"/>
</kw>
<status status="PASS" starttime="20211026 22:53:54.756" endtime="20211026 22:54:02.849"/>
</kw>
<msg timestamp="20211026 22:54:02.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:53:54.756" endtime="20211026 22:54:02.850"/>
</kw>
<status status="PASS" starttime="20211026 22:53:54.755" endtime="20211026 22:54:02.850"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:54:02.858" level="INFO">Running command 'ozone sh bucket info /14132-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:54:11.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:54:11.831" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211026 22:54:02.855" endtime="20211026 22:54:11.831"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:54:11.832" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211026 22:54:11.831" endtime="20211026 22:54:11.832"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:54:11.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:54:11.832" endtime="20211026 22:54:11.833"/>
</kw>
<status status="PASS" starttime="20211026 22:54:02.854" endtime="20211026 22:54:11.833"/>
</kw>
<msg timestamp="20211026 22:54:11.833" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:54:02.853" endtime="20211026 22:54:11.833"/>
</kw>
<msg timestamp="20211026 22:54:11.834" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211026 22:54:02.851" endtime="20211026 22:54:11.834"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211026 22:54:11.834" endtime="20211026 22:54:11.835"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:54:11.840" level="INFO">Running command 'ozone sh bucket info /14132-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:54:20.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:54:20.932" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211026 22:54:11.837" endtime="20211026 22:54:20.932"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:54:20.934" level="INFO">1000</msg>
<status status="PASS" starttime="20211026 22:54:20.933" endtime="20211026 22:54:20.934"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:54:20.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:54:20.934" endtime="20211026 22:54:20.935"/>
</kw>
<status status="PASS" starttime="20211026 22:54:11.836" endtime="20211026 22:54:20.935"/>
</kw>
<msg timestamp="20211026 22:54:20.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:54:11.836" endtime="20211026 22:54:20.936"/>
</kw>
<msg timestamp="20211026 22:54:20.939" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211026 22:54:11.835" endtime="20211026 22:54:20.939"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211026 22:54:20.939" endtime="20211026 22:54:20.940"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:54:20.952" level="INFO">Running command 'ozone sh bucket list /14132-rpcwoscheme/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:54:30.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:54:30.259" level="INFO">${output} = 14132-rpcwoscheme</msg>
<status status="PASS" starttime="20211026 22:54:20.948" endtime="20211026 22:54:30.259"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:54:30.261" level="INFO">14132-rpcwoscheme</msg>
<status status="PASS" starttime="20211026 22:54:30.260" endtime="20211026 22:54:30.261"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:54:30.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:54:30.261" endtime="20211026 22:54:30.262"/>
</kw>
<status status="PASS" starttime="20211026 22:54:20.946" endtime="20211026 22:54:30.262"/>
</kw>
<msg timestamp="20211026 22:54:30.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:54:20.945" endtime="20211026 22:54:30.263"/>
</kw>
<msg timestamp="20211026 22:54:30.264" level="INFO">${result} = 14132-rpcwoscheme</msg>
<status status="PASS" starttime="20211026 22:54:20.940" endtime="20211026 22:54:30.264"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211026 22:54:30.265" endtime="20211026 22:54:30.267"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:54:30.281" level="INFO">Running command 'ozone sh key put /14132-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:57:39.509" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211026 22:54:30.277" endtime="20211026 22:57:39.509"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211026 22:57:39.510" endtime="20211026 22:57:39.510"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211026 22:57:39.510" endtime="20211026 22:57:39.510"/>
</kw>
<status status="FAIL" starttime="20211026 22:54:30.273" endtime="20211026 22:57:39.511"/>
</kw>
<msg timestamp="20211026 22:57:39.511" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211026 22:54:30.273" endtime="20211026 22:57:39.511"/>
</kw>
<status status="FAIL" starttime="20211026 22:54:30.271" endtime="20211026 22:57:39.511"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211026 22:57:39.512" endtime="20211026 22:57:39.512"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211026 22:57:39.512" endtime="20211026 22:57:39.512"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211026 22:57:39.512" endtime="20211026 22:57:39.512"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211026 22:57:39.513" endtime="20211026 22:57:39.513"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211026 22:57:39.513" endtime="20211026 22:57:39.513"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211026 22:57:39.513" endtime="20211026 22:57:39.513"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211026 22:57:39.513" endtime="20211026 22:57:39.513"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211026 22:57:39.513" endtime="20211026 22:57:39.514"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211026 22:57:39.514" endtime="20211026 22:57:39.514"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211026 22:57:39.514" endtime="20211026 22:57:39.514"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211026 22:57:39.514" endtime="20211026 22:57:39.514"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211026 22:57:39.514" endtime="20211026 22:57:39.514"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211026 22:57:39.514" endtime="20211026 22:57:39.515"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211026 22:57:39.515" endtime="20211026 22:57:39.515"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211026 22:57:39.515" endtime="20211026 22:57:39.515"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211026 22:57:39.515" endtime="20211026 22:57:39.515"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211026 22:57:39.515" endtime="20211026 22:57:39.516"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211026 22:57:39.516" endtime="20211026 22:57:39.516"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211026 22:57:39.516" endtime="20211026 22:57:39.516"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211026 22:57:39.516" endtime="20211026 22:57:39.516"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211026 22:57:39.516" endtime="20211026 22:57:39.516"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211026 22:57:39.517" endtime="20211026 22:57:39.517"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211026 22:57:39.517" endtime="20211026 22:57:39.517"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211026 22:57:39.517" endtime="20211026 22:57:39.517"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211026 22:57:39.517" endtime="20211026 22:57:39.517"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211026 22:57:39.517" endtime="20211026 22:57:39.518"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211026 22:57:39.518" endtime="20211026 22:57:39.518"/>
</kw>
<status status="FAIL" starttime="20211026 22:54:30.270" endtime="20211026 22:57:39.519"/>
</kw>
<status status="FAIL" starttime="20211026 22:54:30.268" endtime="20211026 22:57:39.519"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211026 22:57:39.519" endtime="20211026 22:57:39.519"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211026 22:57:39.519" endtime="20211026 22:57:39.519"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211026 22:57:39.519" endtime="20211026 22:57:39.520"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211026 22:57:39.520" endtime="20211026 22:57:39.520"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211026 22:57:39.520" endtime="20211026 22:57:39.520"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211026 22:57:39.520" endtime="20211026 22:57:39.520"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211026 22:57:39.520" endtime="20211026 22:57:39.520"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211026 22:57:39.521" endtime="20211026 22:57:39.521"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211026 22:57:39.521" endtime="20211026 22:57:39.521"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211026 22:57:39.521" endtime="20211026 22:57:39.521"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211026 22:57:39.521" endtime="20211026 22:57:39.521"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211026 22:57:39.521" endtime="20211026 22:57:39.522"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211026 22:57:39.522" endtime="20211026 22:57:39.522"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211026 22:57:39.522" endtime="20211026 22:57:39.522"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211026 22:57:39.522" endtime="20211026 22:57:39.522"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211026 22:57:39.523" endtime="20211026 22:57:39.523"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211026 22:57:39.523" endtime="20211026 22:57:39.523"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211026 22:57:39.523" endtime="20211026 22:57:39.523"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211026 22:57:39.524" endtime="20211026 22:57:39.524"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211026 22:57:39.524" endtime="20211026 22:57:39.525"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211026 22:57:39.525" endtime="20211026 22:57:39.525"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211026 22:57:39.525" endtime="20211026 22:57:39.525"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211026 22:57:39.526" endtime="20211026 22:57:39.526"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211026 22:57:39.526" endtime="20211026 22:57:39.526"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211026 22:57:39.527" endtime="20211026 22:57:39.527"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211026 22:57:39.527" endtime="20211026 22:57:39.527"/>
</kw>
<status status="FAIL" starttime="20211026 22:52:39.764" endtime="20211026 22:57:39.527"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211026 22:52:39.508" endtime="20211026 22:57:39.528">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20211026 22:32:16.249" endtime="20211026 22:57:39.529"/>
</suite>
<status status="FAIL" starttime="20211026 22:07:22.240" endtime="20211026 22:57:39.538"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:07:16.777" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:07:16.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:07:16.782" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211026 22:07:16.773" endtime="20211026 22:07:16.783"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:07:16.784" level="INFO">scm</msg>
<status status="PASS" starttime="20211026 22:07:16.783" endtime="20211026 22:07:16.784"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:07:16.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:07:16.784" endtime="20211026 22:07:16.785"/>
</kw>
<status status="PASS" starttime="20211026 22:07:16.772" endtime="20211026 22:07:16.785"/>
</kw>
<msg timestamp="20211026 22:07:16.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:07:16.772" endtime="20211026 22:07:16.785"/>
</kw>
<msg timestamp="20211026 22:07:16.786" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211026 22:07:16.771" endtime="20211026 22:07:16.786"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211026 22:07:16.788" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211026 22:07:16.786" endtime="20211026 22:07:16.788"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211026 22:07:16.795" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211026 22:07:16.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20211026 22:07:16.804" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211026 22:07:16.792" endtime="20211026 22:07:16.804"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211026 22:07:16.806" level="INFO"/>
<status status="PASS" starttime="20211026 22:07:16.805" endtime="20211026 22:07:16.806"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211026 22:07:16.807" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211026 22:07:16.806" endtime="20211026 22:07:16.807"/>
</kw>
<status status="PASS" starttime="20211026 22:07:16.791" endtime="20211026 22:07:16.807"/>
</kw>
<msg timestamp="20211026 22:07:16.807" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211026 22:07:16.790" endtime="20211026 22:07:16.808"/>
</kw>
<status status="PASS" starttime="20211026 22:07:16.789" endtime="20211026 22:07:16.808"/>
</kw>
<status status="PASS" starttime="20211026 22:07:16.788" endtime="20211026 22:07:16.808"/>
</kw>
<status status="PASS" starttime="20211026 22:07:16.770" endtime="20211026 22:07:16.808"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211026 22:07:16.769" endtime="20211026 22:07:16.808"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20211026 22:07:16.700" endtime="20211026 22:07:16.810"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="3017408"/>
</suite>
<statistics>
<total>
<stat pass="20" fail="10" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="20" fail="10" skip="0" id="s1" name="ozonesecure">ozonesecure</stat>
<stat pass="19" fail="10" skip="0" id="s1-s1" name="Basic">ozonesecure.Basic</stat>
<stat pass="1" fail="1" skip="0" id="s1-s1-s1" name="Basic">ozonesecure.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Getconf">ozonesecure.Basic.Getconf</stat>
<stat pass="10" fail="5" skip="0" id="s1-s1-s3" name="Links">ozonesecure.Basic.Links</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat pass="4" fail="3" skip="0" id="s1-s1-s5" name="Ozone-Shell">ozonesecure.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
