<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1.1 (Python 3.6.9 on linux)" generated="20211007 13:47:47.353" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 12:57:35.851" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 12:57:35.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 12:57:35.855" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211007 12:57:35.847" endtime="20211007 12:57:35.855"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 12:57:35.856" level="INFO">scm</msg>
<status status="PASS" starttime="20211007 12:57:35.855" endtime="20211007 12:57:35.856"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 12:57:35.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 12:57:35.856" endtime="20211007 12:57:35.857"/>
</kw>
<status status="PASS" starttime="20211007 12:57:35.846" endtime="20211007 12:57:35.857"/>
</kw>
<msg timestamp="20211007 12:57:35.858" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 12:57:35.846" endtime="20211007 12:57:35.858"/>
</kw>
<msg timestamp="20211007 12:57:35.858" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20211007 12:57:35.845" endtime="20211007 12:57:35.858"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 12:57:35.862" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 12:57:35.871" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 12:57:35.871" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 12:57:35.861" endtime="20211007 12:57:35.872"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 12:57:35.873" level="INFO"/>
<status status="PASS" starttime="20211007 12:57:35.872" endtime="20211007 12:57:35.873"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 12:57:35.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 12:57:35.873" endtime="20211007 12:57:35.874"/>
</kw>
<status status="PASS" starttime="20211007 12:57:35.860" endtime="20211007 12:57:35.874"/>
</kw>
<msg timestamp="20211007 12:57:35.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 12:57:35.859" endtime="20211007 12:57:35.875"/>
</kw>
<status status="PASS" starttime="20211007 12:57:35.859" endtime="20211007 12:57:35.875"/>
</kw>
<status status="PASS" starttime="20211007 12:57:35.858" endtime="20211007 12:57:35.875"/>
</kw>
<status status="PASS" starttime="20211007 12:57:35.845" endtime="20211007 12:57:35.875"/>
</kw>
<status status="PASS" starttime="20211007 12:57:35.844" endtime="20211007 12:57:35.875"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 12:57:35.879" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 12:57:36.059" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 12:57:36.059" level="INFO">${output} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20211007 12:57:35.877" endtime="20211007 12:57:36.059"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 12:57:36.061" level="INFO">HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 484

HTTP/1.1 200 OK
Date: Thu, 07 Oct 2021 12:57:36 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGkGCSqGSIb3EgECAgIAb1owWKADAgEFoQMCAQ+iTDBKoAMCARKiQwRBf80eMVlCBR/EQ1WAJo2C6cOSzQNhRCzXBSMAmDGlbL3UwoFinPFN6Ta81hZ3AahwoIUMLXTZ7lAoKFngqBDrbBE=
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1633647456033&amp;s=r4bZMVtINp6I7uClq+XCsLPO2Jzjw4HFGgz7XkHvJAY="; Path=/; HttpOnly
Last-Modified: Thu, 07 Oct 2021 12:44:42 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20211007 12:57:36.060" endtime="20211007 12:57:36.061"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 12:57:36.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 12:57:36.062" endtime="20211007 12:57:36.062"/>
</kw>
<status status="PASS" starttime="20211007 12:57:35.876" endtime="20211007 12:57:36.063"/>
</kw>
<msg timestamp="20211007 12:57:36.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 12:57:35.876" endtime="20211007 12:57:36.063"/>
</kw>
<msg timestamp="20211007 12:57:36.063" level="INFO">${result} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20211007 12:57:35.875" endtime="20211007 12:57:36.063"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211007 12:57:36.064" endtime="20211007 12:57:36.064"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211007 12:57:35.843" endtime="20211007 12:57:36.066"/>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 12:57:36.074" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 12:57:36.083" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 12:57:36.083" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211007 12:57:36.072" endtime="20211007 12:57:36.083"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 12:57:36.084" level="INFO">scm</msg>
<status status="PASS" starttime="20211007 12:57:36.084" endtime="20211007 12:57:36.085"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 12:57:36.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 12:57:36.085" endtime="20211007 12:57:36.086"/>
</kw>
<status status="PASS" starttime="20211007 12:57:36.071" endtime="20211007 12:57:36.086"/>
</kw>
<msg timestamp="20211007 12:57:36.086" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 12:57:36.071" endtime="20211007 12:57:36.087"/>
</kw>
<msg timestamp="20211007 12:57:36.087" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211007 12:57:36.070" endtime="20211007 12:57:36.087"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211007 12:57:36.089" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211007 12:57:36.087" endtime="20211007 12:57:36.089"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 12:57:36.095" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 12:57:36.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 12:57:36.103" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 12:57:36.093" endtime="20211007 12:57:36.104"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 12:57:36.105" level="INFO"/>
<status status="PASS" starttime="20211007 12:57:36.104" endtime="20211007 12:57:36.105"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 12:57:36.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 12:57:36.105" endtime="20211007 12:57:36.106"/>
</kw>
<status status="PASS" starttime="20211007 12:57:36.092" endtime="20211007 12:57:36.107"/>
</kw>
<msg timestamp="20211007 12:57:36.107" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 12:57:36.091" endtime="20211007 12:57:36.107"/>
</kw>
<status status="PASS" starttime="20211007 12:57:36.090" endtime="20211007 12:57:36.107"/>
</kw>
<status status="PASS" starttime="20211007 12:57:36.089" endtime="20211007 12:57:36.107"/>
</kw>
<status status="PASS" starttime="20211007 12:57:36.069" endtime="20211007 12:57:36.108"/>
</kw>
<status status="PASS" starttime="20211007 12:57:36.069" endtime="20211007 12:57:36.108"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 12:57:36.112" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:02:36.069" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211007 12:57:36.110" endtime="20211007 13:02:36.069"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211007 13:02:36.070" endtime="20211007 13:02:36.070"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211007 13:02:36.070" endtime="20211007 13:02:36.070"/>
</kw>
<status status="FAIL" starttime="20211007 12:57:36.109" endtime="20211007 13:02:36.070"/>
</kw>
<msg timestamp="20211007 13:02:36.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211007 12:57:36.108" endtime="20211007 13:02:36.071"/>
</kw>
<status status="FAIL" starttime="20211007 12:57:36.108" endtime="20211007 13:02:36.071"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20211007 13:02:36.071" endtime="20211007 13:02:36.071"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Status: Success</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211007 13:02:36.072" endtime="20211007 13:02:36.072"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211007 12:57:36.068" endtime="20211007 13:02:36.072">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" starttime="20211007 12:57:35.807" endtime="20211007 13:02:36.074"/>
</suite>
<suite id="s1-s1-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s1-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:02:36.092" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:02:38.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:02:38.146" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211007 13:02:36.088" endtime="20211007 13:02:38.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:02:38.147" level="INFO">om</msg>
<status status="PASS" starttime="20211007 13:02:38.146" endtime="20211007 13:02:38.147"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:02:38.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:02:38.147" endtime="20211007 13:02:38.148"/>
</kw>
<status status="PASS" starttime="20211007 13:02:36.085" endtime="20211007 13:02:38.149"/>
</kw>
<msg timestamp="20211007 13:02:38.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:02:36.084" endtime="20211007 13:02:38.149"/>
</kw>
<msg timestamp="20211007 13:02:38.149" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211007 13:02:36.083" endtime="20211007 13:02:38.150"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211007 13:02:38.150" endtime="20211007 13:02:38.150"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:02:38.156" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:02:40.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:02:40.417" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211007 13:02:38.152" endtime="20211007 13:02:40.417"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:02:40.419" level="INFO">om</msg>
<status status="PASS" starttime="20211007 13:02:40.418" endtime="20211007 13:02:40.419"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:02:40.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:02:40.420" endtime="20211007 13:02:40.420"/>
</kw>
<status status="PASS" starttime="20211007 13:02:38.151" endtime="20211007 13:02:40.421"/>
</kw>
<msg timestamp="20211007 13:02:40.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:02:38.151" endtime="20211007 13:02:40.421"/>
</kw>
<msg timestamp="20211007 13:02:40.421" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211007 13:02:38.150" endtime="20211007 13:02:40.421"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211007 13:02:40.421" endtime="20211007 13:02:40.422"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211007 13:02:36.082" endtime="20211007 13:02:40.422"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:02:40.433" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:02:43.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:02:43.477" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211007 13:02:40.427" endtime="20211007 13:02:43.477"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:02:43.478" level="INFO">scm</msg>
<status status="PASS" starttime="20211007 13:02:43.478" endtime="20211007 13:02:43.479"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:02:43.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:02:43.479" endtime="20211007 13:02:43.479"/>
</kw>
<status status="PASS" starttime="20211007 13:02:40.426" endtime="20211007 13:02:43.480"/>
</kw>
<msg timestamp="20211007 13:02:43.480" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:02:40.425" endtime="20211007 13:02:43.480"/>
</kw>
<msg timestamp="20211007 13:02:43.480" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20211007 13:02:40.424" endtime="20211007 13:02:43.480"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211007 13:02:43.481" endtime="20211007 13:02:43.482"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:02:43.486" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:02:46.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:02:46.511" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211007 13:02:43.484" endtime="20211007 13:02:46.511"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:02:46.513" level="INFO">scm</msg>
<status status="PASS" starttime="20211007 13:02:46.512" endtime="20211007 13:02:46.514"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:02:46.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:02:46.514" endtime="20211007 13:02:46.515"/>
</kw>
<status status="PASS" starttime="20211007 13:02:43.483" endtime="20211007 13:02:46.515"/>
</kw>
<msg timestamp="20211007 13:02:46.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:02:43.483" endtime="20211007 13:02:46.516"/>
</kw>
<msg timestamp="20211007 13:02:46.516" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20211007 13:02:43.482" endtime="20211007 13:02:46.516"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211007 13:02:46.516" endtime="20211007 13:02:46.517"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211007 13:02:40.423" endtime="20211007 13:02:46.518"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:02:46.525" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:02:49.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:02:49.394" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211007 13:02:46.522" endtime="20211007 13:02:49.394"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:02:49.396" level="INFO">om</msg>
<status status="PASS" starttime="20211007 13:02:49.395" endtime="20211007 13:02:49.396"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:02:49.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:02:49.396" endtime="20211007 13:02:49.397"/>
</kw>
<status status="PASS" starttime="20211007 13:02:46.521" endtime="20211007 13:02:49.397"/>
</kw>
<msg timestamp="20211007 13:02:49.397" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:02:46.520" endtime="20211007 13:02:49.397"/>
</kw>
<msg timestamp="20211007 13:02:49.398" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211007 13:02:46.519" endtime="20211007 13:02:49.398"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211007 13:02:49.398" endtime="20211007 13:02:49.399"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211007 13:02:49.399" endtime="20211007 13:02:49.399"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:02:49.405" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:02:51.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:02:51.919" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211007 13:02:49.402" endtime="20211007 13:02:51.919"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:02:51.920" level="INFO">om</msg>
<status status="PASS" starttime="20211007 13:02:51.919" endtime="20211007 13:02:51.921"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:02:51.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:02:51.921" endtime="20211007 13:02:51.922"/>
</kw>
<status status="PASS" starttime="20211007 13:02:49.401" endtime="20211007 13:02:51.922"/>
</kw>
<msg timestamp="20211007 13:02:51.922" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:02:49.401" endtime="20211007 13:02:51.922"/>
</kw>
<msg timestamp="20211007 13:02:51.922" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211007 13:02:49.400" endtime="20211007 13:02:51.923"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211007 13:02:51.923" endtime="20211007 13:02:51.923"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211007 13:02:51.923" endtime="20211007 13:02:51.924"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211007 13:02:46.518" endtime="20211007 13:02:51.924"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:02:51.928" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:02:53.313" level="INFO">${rc} = 255</msg>
<msg timestamp="20211007 13:02:53.313" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211007 13:02:51.927" endtime="20211007 13:02:53.313"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:02:53.315" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211007 13:02:53.314" endtime="20211007 13:02:53.315"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:02:53.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:02:53.315" endtime="20211007 13:02:53.316"/>
</kw>
<msg timestamp="20211007 13:02:53.316" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211007 13:02:51.926" endtime="20211007 13:02:53.316"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211007 13:02:53.317" endtime="20211007 13:02:53.317"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:02:53.322" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:02:56.200" level="INFO">${rc} = 255</msg>
<msg timestamp="20211007 13:02:56.200" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211007 13:02:53.320" endtime="20211007 13:02:56.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:02:56.202" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211007 13:02:56.201" endtime="20211007 13:02:56.202"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:02:56.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:02:56.202" endtime="20211007 13:02:56.203"/>
</kw>
<msg timestamp="20211007 13:02:56.204" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211007 13:02:53.318" endtime="20211007 13:02:56.204"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211007 13:02:56.204" endtime="20211007 13:02:56.204"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211007 13:02:51.925" endtime="20211007 13:02:56.205"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20211007 13:02:36.078" endtime="20211007 13:02:56.206"/>
</suite>
<suite id="s1-s1-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211007 13:02:56.228" level="INFO">${random} = 67802</msg>
<status status="PASS" starttime="20211007 13:02:56.227" endtime="20211007 13:02:56.228"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211007 13:02:56.230" level="INFO">${source} = 67802-source</msg>
<status status="PASS" starttime="20211007 13:02:56.228" endtime="20211007 13:02:56.230"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211007 13:02:56.233" level="INFO">${target} = 67802-target</msg>
<status status="PASS" starttime="20211007 13:02:56.230" endtime="20211007 13:02:56.233"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:02:56.237" level="INFO">Running command 'ozone sh volume create 67802-source 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:03:04.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:03:04.741" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:02:56.235" endtime="20211007 13:03:04.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:03:04.742" level="INFO"/>
<status status="PASS" starttime="20211007 13:03:04.742" endtime="20211007 13:03:04.742"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:03:04.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:03:04.743" endtime="20211007 13:03:04.743"/>
</kw>
<status status="PASS" starttime="20211007 13:02:56.234" endtime="20211007 13:03:04.743"/>
</kw>
<msg timestamp="20211007 13:03:04.744" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:02:56.234" endtime="20211007 13:03:04.744"/>
</kw>
<status status="PASS" starttime="20211007 13:02:56.233" endtime="20211007 13:03:04.744"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:03:04.749" level="INFO">Running command 'ozone sh volume create 67802-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:03:10.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:03:10.599" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:03:04.746" endtime="20211007 13:03:10.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:03:10.600" level="INFO"/>
<status status="PASS" starttime="20211007 13:03:10.599" endtime="20211007 13:03:10.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:03:10.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:03:10.601" endtime="20211007 13:03:10.602"/>
</kw>
<status status="PASS" starttime="20211007 13:03:04.746" endtime="20211007 13:03:10.603"/>
</kw>
<msg timestamp="20211007 13:03:10.603" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:03:04.745" endtime="20211007 13:03:10.604"/>
</kw>
<status status="PASS" starttime="20211007 13:03:04.744" endtime="20211007 13:03:10.604"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:03:10.613" level="INFO">Running command 'ozone sh bucket create 67802-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:03:18.952" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:03:18.953" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:03:10.610" endtime="20211007 13:03:18.953"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:03:18.955" level="INFO"/>
<status status="PASS" starttime="20211007 13:03:18.954" endtime="20211007 13:03:18.955"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:03:18.957" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:03:18.956" endtime="20211007 13:03:18.957"/>
</kw>
<status status="PASS" starttime="20211007 13:03:10.609" endtime="20211007 13:03:18.958"/>
</kw>
<msg timestamp="20211007 13:03:18.958" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:03:10.606" endtime="20211007 13:03:18.958"/>
</kw>
<status status="PASS" starttime="20211007 13:03:10.605" endtime="20211007 13:03:18.959"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:03:18.966" level="INFO">Running command 'ozone sh key put 67802-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:06:32.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:06:32.584" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:03:18.962" endtime="20211007 13:06:32.584"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:06:32.588" level="INFO"/>
<status status="PASS" starttime="20211007 13:06:32.586" endtime="20211007 13:06:32.588"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:06:32.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:06:32.592" endtime="20211007 13:06:32.593"/>
</kw>
<status status="PASS" starttime="20211007 13:03:18.962" endtime="20211007 13:06:32.594"/>
</kw>
<msg timestamp="20211007 13:06:32.594" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:03:18.961" endtime="20211007 13:06:32.594"/>
</kw>
<status status="PASS" starttime="20211007 13:03:18.959" endtime="20211007 13:06:32.595"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:06:32.600" level="INFO">Running command 'ozone sh bucket create 67802-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:06:40.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:06:40.732" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:06:32.597" endtime="20211007 13:06:40.732"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:06:40.734" level="INFO"/>
<status status="PASS" starttime="20211007 13:06:40.733" endtime="20211007 13:06:40.734"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:06:40.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:06:40.735" endtime="20211007 13:06:40.736"/>
</kw>
<status status="PASS" starttime="20211007 13:06:32.596" endtime="20211007 13:06:40.738"/>
</kw>
<msg timestamp="20211007 13:06:40.738" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:06:32.596" endtime="20211007 13:06:40.738"/>
</kw>
<status status="PASS" starttime="20211007 13:06:32.595" endtime="20211007 13:06:40.739"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:06:40.746" level="INFO">Running command 'ozone sh bucket link 67802-source/readable-bucket 67802-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:06:48.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:06:48.880" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:06:40.743" endtime="20211007 13:06:48.880"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:06:48.882" level="INFO"/>
<status status="PASS" starttime="20211007 13:06:48.881" endtime="20211007 13:06:48.882"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:06:48.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:06:48.882" endtime="20211007 13:06:48.883"/>
</kw>
<status status="PASS" starttime="20211007 13:06:40.741" endtime="20211007 13:06:48.883"/>
</kw>
<msg timestamp="20211007 13:06:48.883" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:06:40.740" endtime="20211007 13:06:48.883"/>
</kw>
<status status="PASS" starttime="20211007 13:06:40.739" endtime="20211007 13:06:48.884"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:06:48.888" level="INFO">Running command 'ozone sh bucket link 67802-source/readable-bucket 67802-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:06:57.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:06:57.336" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:06:48.885" endtime="20211007 13:06:57.336"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:06:57.339" level="INFO"/>
<status status="PASS" starttime="20211007 13:06:57.337" endtime="20211007 13:06:57.339"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:06:57.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:06:57.340" endtime="20211007 13:06:57.341"/>
</kw>
<status status="PASS" starttime="20211007 13:06:48.885" endtime="20211007 13:06:57.342"/>
</kw>
<msg timestamp="20211007 13:06:57.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:06:48.885" endtime="20211007 13:06:57.342"/>
</kw>
<status status="PASS" starttime="20211007 13:06:48.884" endtime="20211007 13:06:57.343"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:06:57.351" level="INFO">Running command 'ozone sh bucket link 67802-source/unreadable-bucket 67802-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:07:05.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:07:05.011" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:06:57.349" endtime="20211007 13:07:05.011"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:07:05.012" level="INFO"/>
<status status="PASS" starttime="20211007 13:07:05.011" endtime="20211007 13:07:05.012"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:07:05.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:07:05.012" endtime="20211007 13:07:05.013"/>
</kw>
<status status="PASS" starttime="20211007 13:06:57.349" endtime="20211007 13:07:05.013"/>
</kw>
<msg timestamp="20211007 13:07:05.013" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:06:57.347" endtime="20211007 13:07:05.014"/>
</kw>
<status status="PASS" starttime="20211007 13:06:57.344" endtime="20211007 13:07:05.014"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:07:05.018" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 67802-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:07:13.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:07:13.054" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211007 13:07:05.015" endtime="20211007 13:07:13.054"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:07:13.056" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211007 13:07:13.055" endtime="20211007 13:07:13.056"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:07:13.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:07:13.056" endtime="20211007 13:07:13.056"/>
</kw>
<status status="PASS" starttime="20211007 13:07:05.015" endtime="20211007 13:07:13.057"/>
</kw>
<msg timestamp="20211007 13:07:13.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:07:05.015" endtime="20211007 13:07:13.057"/>
</kw>
<status status="PASS" starttime="20211007 13:07:05.014" endtime="20211007 13:07:13.058"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:07:13.065" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 67802-source 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:07:21.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:07:21.114" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211007 13:07:13.061" endtime="20211007 13:07:21.114"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:07:21.115" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211007 13:07:21.114" endtime="20211007 13:07:21.115"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:07:21.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:07:21.116" endtime="20211007 13:07:21.116"/>
</kw>
<status status="PASS" starttime="20211007 13:07:13.061" endtime="20211007 13:07:21.117"/>
</kw>
<msg timestamp="20211007 13:07:21.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:07:13.059" endtime="20211007 13:07:21.117"/>
</kw>
<status status="PASS" starttime="20211007 13:07:13.058" endtime="20211007 13:07:21.117"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:07:21.121" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 67802-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:07:29.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:07:29.097" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211007 13:07:21.120" endtime="20211007 13:07:29.097"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:07:29.098" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211007 13:07:29.098" endtime="20211007 13:07:29.099"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:07:29.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:07:29.099" endtime="20211007 13:07:29.099"/>
</kw>
<status status="PASS" starttime="20211007 13:07:21.119" endtime="20211007 13:07:29.100"/>
</kw>
<msg timestamp="20211007 13:07:29.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:07:21.119" endtime="20211007 13:07:29.100"/>
</kw>
<status status="PASS" starttime="20211007 13:07:21.118" endtime="20211007 13:07:29.100"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:07:29.107" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 67802-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:07:35.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:07:35.638" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211007 13:07:29.103" endtime="20211007 13:07:35.638"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:07:35.640" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211007 13:07:35.639" endtime="20211007 13:07:35.640"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:07:35.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:07:35.640" endtime="20211007 13:07:35.641"/>
</kw>
<status status="PASS" starttime="20211007 13:07:29.102" endtime="20211007 13:07:35.641"/>
</kw>
<msg timestamp="20211007 13:07:35.641" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:07:29.101" endtime="20211007 13:07:35.641"/>
</kw>
<status status="PASS" starttime="20211007 13:07:29.101" endtime="20211007 13:07:35.642"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:07:35.646" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 67802-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:07:42.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:07:42.968" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211007 13:07:35.643" endtime="20211007 13:07:42.968"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:07:42.969" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211007 13:07:42.969" endtime="20211007 13:07:42.969"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:07:42.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:07:42.970" endtime="20211007 13:07:42.970"/>
</kw>
<status status="PASS" starttime="20211007 13:07:35.643" endtime="20211007 13:07:42.970"/>
</kw>
<msg timestamp="20211007 13:07:42.971" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:07:35.642" endtime="20211007 13:07:42.971"/>
</kw>
<status status="PASS" starttime="20211007 13:07:35.642" endtime="20211007 13:07:42.971"/>
</kw>
<status status="PASS" starttime="20211007 13:03:10.605" endtime="20211007 13:07:42.972"/>
</kw>
<status status="PASS" starttime="20211007 13:03:10.604" endtime="20211007 13:07:42.972"/>
</kw>
<status status="PASS" starttime="20211007 13:02:56.226" endtime="20211007 13:07:42.972"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:07:42.981" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:07:42.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:07:42.986" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211007 13:07:42.977" endtime="20211007 13:07:42.986"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:07:42.988" level="INFO">scm</msg>
<status status="PASS" starttime="20211007 13:07:42.987" endtime="20211007 13:07:42.989"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:07:42.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:07:42.989" endtime="20211007 13:07:42.990"/>
</kw>
<status status="PASS" starttime="20211007 13:07:42.976" endtime="20211007 13:07:42.991"/>
</kw>
<msg timestamp="20211007 13:07:42.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:07:42.976" endtime="20211007 13:07:42.991"/>
</kw>
<msg timestamp="20211007 13:07:42.992" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211007 13:07:42.975" endtime="20211007 13:07:42.992"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211007 13:07:42.995" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211007 13:07:42.992" endtime="20211007 13:07:42.995"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:07:43.003" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:07:43.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:07:43.041" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:07:43.000" endtime="20211007 13:07:43.041"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:07:43.042" level="INFO"/>
<status status="PASS" starttime="20211007 13:07:43.042" endtime="20211007 13:07:43.043"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:07:43.043" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:07:43.043" endtime="20211007 13:07:43.043"/>
</kw>
<status status="PASS" starttime="20211007 13:07:42.998" endtime="20211007 13:07:43.044"/>
</kw>
<msg timestamp="20211007 13:07:43.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:07:42.997" endtime="20211007 13:07:43.044"/>
</kw>
<status status="PASS" starttime="20211007 13:07:42.996" endtime="20211007 13:07:43.044"/>
</kw>
<status status="PASS" starttime="20211007 13:07:42.995" endtime="20211007 13:07:43.045"/>
</kw>
<status status="PASS" starttime="20211007 13:07:42.974" endtime="20211007 13:07:43.045"/>
</kw>
<status status="PASS" starttime="20211007 13:07:42.974" endtime="20211007 13:07:43.045"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:07:43.049" level="INFO">Running command 'ozone sh bucket link 67802-source/no-such-bucket 67802-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:07:50.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:07:50.886" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:07:43.047" endtime="20211007 13:07:50.886"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:07:50.888" level="INFO"/>
<status status="PASS" starttime="20211007 13:07:50.887" endtime="20211007 13:07:50.888"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:07:50.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:07:50.889" endtime="20211007 13:07:50.889"/>
</kw>
<status status="PASS" starttime="20211007 13:07:43.046" endtime="20211007 13:07:50.889"/>
</kw>
<msg timestamp="20211007 13:07:50.890" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:07:43.046" endtime="20211007 13:07:50.890"/>
</kw>
<status status="PASS" starttime="20211007 13:07:43.045" endtime="20211007 13:07:50.890"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:07:50.895" level="INFO">Running command 'ozone sh key list 67802-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:07:58.299" level="INFO">${rc} = 255</msg>
<msg timestamp="20211007 13:07:58.299" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20211007 13:07:50.891" endtime="20211007 13:07:58.299"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:07:58.301" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20211007 13:07:58.300" endtime="20211007 13:07:58.301"/>
</kw>
<msg timestamp="20211007 13:07:58.301" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20211007 13:07:50.890" endtime="20211007 13:07:58.302"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211007 13:07:58.302" endtime="20211007 13:07:58.303"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211007 13:07:42.972" endtime="20211007 13:07:58.303"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:07:58.314" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:07:58.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:07:58.320" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211007 13:07:58.312" endtime="20211007 13:07:58.320"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:07:58.322" level="INFO">scm</msg>
<status status="PASS" starttime="20211007 13:07:58.321" endtime="20211007 13:07:58.322"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:07:58.323" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:07:58.322" endtime="20211007 13:07:58.323"/>
</kw>
<status status="PASS" starttime="20211007 13:07:58.309" endtime="20211007 13:07:58.324"/>
</kw>
<msg timestamp="20211007 13:07:58.324" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:07:58.308" endtime="20211007 13:07:58.324"/>
</kw>
<msg timestamp="20211007 13:07:58.325" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211007 13:07:58.307" endtime="20211007 13:07:58.325"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211007 13:07:58.326" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211007 13:07:58.325" endtime="20211007 13:07:58.326"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:07:58.334" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:07:58.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:07:58.345" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:07:58.331" endtime="20211007 13:07:58.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:07:58.346" level="INFO"/>
<status status="PASS" starttime="20211007 13:07:58.345" endtime="20211007 13:07:58.346"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:07:58.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:07:58.347" endtime="20211007 13:07:58.348"/>
</kw>
<status status="PASS" starttime="20211007 13:07:58.330" endtime="20211007 13:07:58.348"/>
</kw>
<msg timestamp="20211007 13:07:58.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:07:58.329" endtime="20211007 13:07:58.349"/>
</kw>
<status status="PASS" starttime="20211007 13:07:58.328" endtime="20211007 13:07:58.349"/>
</kw>
<status status="PASS" starttime="20211007 13:07:58.327" endtime="20211007 13:07:58.349"/>
</kw>
<status status="PASS" starttime="20211007 13:07:58.306" endtime="20211007 13:07:58.350"/>
</kw>
<status status="PASS" starttime="20211007 13:07:58.305" endtime="20211007 13:07:58.350"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:07:58.357" level="INFO">Running command 'ozone sh bucket link 67802-source/bucket1 67802-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:08:06.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:08:06.120" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:07:58.352" endtime="20211007 13:08:06.120"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:08:06.122" level="INFO"/>
<status status="PASS" starttime="20211007 13:08:06.121" endtime="20211007 13:08:06.123"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:08:06.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:08:06.123" endtime="20211007 13:08:06.124"/>
</kw>
<status status="PASS" starttime="20211007 13:07:58.351" endtime="20211007 13:08:06.124"/>
</kw>
<msg timestamp="20211007 13:08:06.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:07:58.351" endtime="20211007 13:08:06.124"/>
</kw>
<status status="PASS" starttime="20211007 13:07:58.350" endtime="20211007 13:08:06.125"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:08:06.134" level="INFO">Running command 'ozone sh bucket create 67802-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:08:14.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:08:14.369" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:08:06.128" endtime="20211007 13:08:14.369"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:08:14.372" level="INFO"/>
<status status="PASS" starttime="20211007 13:08:14.370" endtime="20211007 13:08:14.372"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:08:14.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:08:14.373" endtime="20211007 13:08:14.373"/>
</kw>
<status status="PASS" starttime="20211007 13:08:06.127" endtime="20211007 13:08:14.374"/>
</kw>
<msg timestamp="20211007 13:08:14.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:08:06.126" endtime="20211007 13:08:14.374"/>
</kw>
<status status="PASS" starttime="20211007 13:08:06.125" endtime="20211007 13:08:14.374"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:08:14.384" level="INFO">Running command 'ozone sh key put 67802-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:09:58.305" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20211007 13:08:14.378" endtime="20211007 13:09:58.305"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211007 13:09:58.306" endtime="20211007 13:09:58.306"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211007 13:09:58.306" endtime="20211007 13:09:58.306"/>
</kw>
<status status="FAIL" starttime="20211007 13:08:14.376" endtime="20211007 13:09:58.307"/>
</kw>
<msg timestamp="20211007 13:09:58.307" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211007 13:08:14.375" endtime="20211007 13:09:58.307"/>
</kw>
<status status="FAIL" starttime="20211007 13:08:14.375" endtime="20211007 13:09:58.307"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<status status="NOT RUN" starttime="20211007 13:09:58.307" endtime="20211007 13:09:58.307"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211007 13:07:58.304" endtime="20211007 13:09:58.308">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:09:58.316" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:09:58.321" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:09:58.321" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211007 13:09:58.314" endtime="20211007 13:09:58.321"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:09:58.323" level="INFO">scm</msg>
<status status="PASS" starttime="20211007 13:09:58.321" endtime="20211007 13:09:58.323"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:09:58.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:09:58.323" endtime="20211007 13:09:58.324"/>
</kw>
<status status="PASS" starttime="20211007 13:09:58.313" endtime="20211007 13:09:58.325"/>
</kw>
<msg timestamp="20211007 13:09:58.325" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:09:58.313" endtime="20211007 13:09:58.325"/>
</kw>
<msg timestamp="20211007 13:09:58.326" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211007 13:09:58.312" endtime="20211007 13:09:58.326"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211007 13:09:58.328" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211007 13:09:58.327" endtime="20211007 13:09:58.328"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:09:58.335" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:09:58.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:09:58.345" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:09:58.333" endtime="20211007 13:09:58.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:09:58.347" level="INFO"/>
<status status="PASS" starttime="20211007 13:09:58.346" endtime="20211007 13:09:58.347"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:09:58.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:09:58.347" endtime="20211007 13:09:58.348"/>
</kw>
<status status="PASS" starttime="20211007 13:09:58.331" endtime="20211007 13:09:58.349"/>
</kw>
<msg timestamp="20211007 13:09:58.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:09:58.331" endtime="20211007 13:09:58.349"/>
</kw>
<status status="PASS" starttime="20211007 13:09:58.330" endtime="20211007 13:09:58.349"/>
</kw>
<status status="PASS" starttime="20211007 13:09:58.328" endtime="20211007 13:09:58.349"/>
</kw>
<status status="PASS" starttime="20211007 13:09:58.312" endtime="20211007 13:09:58.350"/>
</kw>
<status status="PASS" starttime="20211007 13:09:58.311" endtime="20211007 13:09:58.350"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:09:58.360" level="INFO">Running command 'ozone sh key put 67802-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:11:58.311" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20211007 13:09:58.353" endtime="20211007 13:11:58.312"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211007 13:11:58.313" endtime="20211007 13:11:58.313"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211007 13:11:58.313" endtime="20211007 13:11:58.313"/>
</kw>
<status status="FAIL" starttime="20211007 13:09:58.352" endtime="20211007 13:11:58.314"/>
</kw>
<msg timestamp="20211007 13:11:58.314" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211007 13:09:58.351" endtime="20211007 13:11:58.314"/>
</kw>
<status status="FAIL" starttime="20211007 13:09:58.350" endtime="20211007 13:11:58.314"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211007 13:11:58.314" endtime="20211007 13:11:58.314"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211007 13:09:58.310" endtime="20211007 13:11:58.315">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:11:58.327" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:11:58.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:11:58.332" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211007 13:11:58.325" endtime="20211007 13:11:58.332"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:11:58.335" level="INFO">scm</msg>
<status status="PASS" starttime="20211007 13:11:58.334" endtime="20211007 13:11:58.335"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:11:58.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:11:58.335" endtime="20211007 13:11:58.337"/>
</kw>
<status status="PASS" starttime="20211007 13:11:58.324" endtime="20211007 13:11:58.337"/>
</kw>
<msg timestamp="20211007 13:11:58.337" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:11:58.322" endtime="20211007 13:11:58.337"/>
</kw>
<msg timestamp="20211007 13:11:58.337" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211007 13:11:58.322" endtime="20211007 13:11:58.337"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211007 13:11:58.339" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211007 13:11:58.338" endtime="20211007 13:11:58.339"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:11:58.344" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:11:58.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:11:58.353" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:11:58.342" endtime="20211007 13:11:58.354"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:11:58.359" level="INFO"/>
<status status="PASS" starttime="20211007 13:11:58.358" endtime="20211007 13:11:58.359"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:11:58.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:11:58.359" endtime="20211007 13:11:58.362"/>
</kw>
<status status="PASS" starttime="20211007 13:11:58.341" endtime="20211007 13:11:58.364"/>
</kw>
<msg timestamp="20211007 13:11:58.364" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:11:58.341" endtime="20211007 13:11:58.364"/>
</kw>
<status status="PASS" starttime="20211007 13:11:58.340" endtime="20211007 13:11:58.365"/>
</kw>
<status status="PASS" starttime="20211007 13:11:58.339" endtime="20211007 13:11:58.365"/>
</kw>
<status status="PASS" starttime="20211007 13:11:58.321" endtime="20211007 13:11:58.365"/>
</kw>
<status status="PASS" starttime="20211007 13:11:58.321" endtime="20211007 13:11:58.365"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:11:58.370" level="INFO">Running command 'ozone sh key list 67802-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:12:06.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:12:06.106" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20211007 13:11:58.367" endtime="20211007 13:12:06.106"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:12:06.107" level="INFO">key1</msg>
<status status="PASS" starttime="20211007 13:12:06.106" endtime="20211007 13:12:06.107"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:12:06.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:12:06.108" endtime="20211007 13:12:06.109"/>
</kw>
<status status="PASS" starttime="20211007 13:11:58.366" endtime="20211007 13:12:06.109"/>
</kw>
<msg timestamp="20211007 13:12:06.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:11:58.366" endtime="20211007 13:12:06.110"/>
</kw>
<msg timestamp="20211007 13:12:06.110" level="INFO">${target_list} = key1</msg>
<status status="PASS" starttime="20211007 13:11:58.365" endtime="20211007 13:12:06.110"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:12:06.115" level="INFO">Running command 'ozone sh key list 67802-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:12:14.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:12:14.610" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20211007 13:12:06.112" endtime="20211007 13:12:14.610"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:12:14.612" level="INFO">key1</msg>
<status status="PASS" starttime="20211007 13:12:14.611" endtime="20211007 13:12:14.612"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:12:14.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:12:14.612" endtime="20211007 13:12:14.613"/>
</kw>
<status status="PASS" starttime="20211007 13:12:06.111" endtime="20211007 13:12:14.614"/>
</kw>
<msg timestamp="20211007 13:12:14.614" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:12:06.111" endtime="20211007 13:12:14.614"/>
</kw>
<msg timestamp="20211007 13:12:14.614" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20211007 13:12:06.110" endtime="20211007 13:12:14.614"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211007 13:12:14.614" endtime="20211007 13:12:14.615"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211007 13:12:14.615" endtime="20211007 13:12:14.616"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20211007 13:12:14.617" level="FAIL">'key1' does not contain 'key2'</msg>
<status status="FAIL" starttime="20211007 13:12:14.617" endtime="20211007 13:12:14.618"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211007 13:11:58.320" endtime="20211007 13:12:14.618">'key1' does not contain 'key2'</status>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:12:14.628" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:12:14.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:12:14.635" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211007 13:12:14.626" endtime="20211007 13:12:14.635"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:12:14.638" level="INFO">scm</msg>
<status status="PASS" starttime="20211007 13:12:14.636" endtime="20211007 13:12:14.638"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:12:14.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:12:14.638" endtime="20211007 13:12:14.640"/>
</kw>
<status status="PASS" starttime="20211007 13:12:14.624" endtime="20211007 13:12:14.640"/>
</kw>
<msg timestamp="20211007 13:12:14.641" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:12:14.624" endtime="20211007 13:12:14.641"/>
</kw>
<msg timestamp="20211007 13:12:14.641" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211007 13:12:14.623" endtime="20211007 13:12:14.642"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211007 13:12:14.643" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211007 13:12:14.642" endtime="20211007 13:12:14.643"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:12:14.652" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:12:14.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:12:14.663" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:12:14.649" endtime="20211007 13:12:14.663"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:12:14.665" level="INFO"/>
<status status="PASS" starttime="20211007 13:12:14.664" endtime="20211007 13:12:14.665"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:12:14.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:12:14.666" endtime="20211007 13:12:14.667"/>
</kw>
<status status="PASS" starttime="20211007 13:12:14.648" endtime="20211007 13:12:14.668"/>
</kw>
<msg timestamp="20211007 13:12:14.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:12:14.647" endtime="20211007 13:12:14.668"/>
</kw>
<status status="PASS" starttime="20211007 13:12:14.644" endtime="20211007 13:12:14.668"/>
</kw>
<status status="PASS" starttime="20211007 13:12:14.643" endtime="20211007 13:12:14.668"/>
</kw>
<status status="PASS" starttime="20211007 13:12:14.622" endtime="20211007 13:12:14.669"/>
</kw>
<status status="PASS" starttime="20211007 13:12:14.621" endtime="20211007 13:12:14.669"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:12:14.676" level="INFO">Running command 'ozone sh key delete 67802-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:12:22.559" level="INFO">${rc} = 255</msg>
<msg timestamp="20211007 13:12:22.559" level="INFO">${output} = KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20211007 13:12:14.671" endtime="20211007 13:12:22.559"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:12:22.560" level="INFO">KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20211007 13:12:22.560" endtime="20211007 13:12:22.561"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:12:22.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20211007 13:12:22.562" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20211007 13:12:22.561" endtime="20211007 13:12:22.562"/>
</kw>
<status status="FAIL" starttime="20211007 13:12:14.670" endtime="20211007 13:12:22.566"/>
</kw>
<msg timestamp="20211007 13:12:22.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211007 13:12:14.670" endtime="20211007 13:12:22.566"/>
</kw>
<status status="FAIL" starttime="20211007 13:12:14.669" endtime="20211007 13:12:22.566"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20211007 13:12:22.567" endtime="20211007 13:12:22.567"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211007 13:12:22.567" endtime="20211007 13:12:22.567"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211007 13:12:14.619" endtime="20211007 13:12:22.567">255 != 0</status>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:12:22.576" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:12:22.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:12:22.581" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211007 13:12:22.574" endtime="20211007 13:12:22.581"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:12:22.584" level="INFO">scm</msg>
<status status="PASS" starttime="20211007 13:12:22.582" endtime="20211007 13:12:22.584"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:12:22.585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:12:22.584" endtime="20211007 13:12:22.585"/>
</kw>
<status status="PASS" starttime="20211007 13:12:22.573" endtime="20211007 13:12:22.586"/>
</kw>
<msg timestamp="20211007 13:12:22.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:12:22.572" endtime="20211007 13:12:22.586"/>
</kw>
<msg timestamp="20211007 13:12:22.587" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211007 13:12:22.571" endtime="20211007 13:12:22.587"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211007 13:12:22.588" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211007 13:12:22.587" endtime="20211007 13:12:22.588"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:12:22.594" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:12:22.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:12:22.603" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:12:22.592" endtime="20211007 13:12:22.604"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:12:22.605" level="INFO"/>
<status status="PASS" starttime="20211007 13:12:22.604" endtime="20211007 13:12:22.605"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:12:22.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:12:22.606" endtime="20211007 13:12:22.607"/>
</kw>
<status status="PASS" starttime="20211007 13:12:22.591" endtime="20211007 13:12:22.607"/>
</kw>
<msg timestamp="20211007 13:12:22.607" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:12:22.590" endtime="20211007 13:12:22.607"/>
</kw>
<status status="PASS" starttime="20211007 13:12:22.589" endtime="20211007 13:12:22.608"/>
</kw>
<status status="PASS" starttime="20211007 13:12:22.588" endtime="20211007 13:12:22.608"/>
</kw>
<status status="PASS" starttime="20211007 13:12:22.570" endtime="20211007 13:12:22.608"/>
</kw>
<status status="PASS" starttime="20211007 13:12:22.570" endtime="20211007 13:12:22.608"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:12:22.615" level="INFO">Running command 'ozone sh bucket list 67802-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:12:31.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:12:31.442" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "67802-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" starttime="20211007 13:12:22.612" endtime="20211007 13:12:31.442"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:12:31.444" level="INFO">{
  "metadata" : { },
  "volumeName" : "67802-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-07T13:07:50.729Z",
  "modificationTime" : "2021-10-07T13:07:50.729Z",
  "sourceVolume" : "67802-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "67802-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-07T13:07:04.887Z",
  "modificationTime" : "2021-10-07T13:07:42.878Z",
  "sourceVolume" : "67802-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "67802-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-07T13:08:06.038Z",
  "modificationTime" : "2021-10-07T13:08:06.038Z",
  "sourceVolume" : "67802-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "67802-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-07T13:06:48.735Z",
  "modificationTime" : "2021-10-07T13:07:35.488Z",
  "sourceVolume" : "67802-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "67802-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-07T13:06:57.206Z",
  "modificationTime" : "2021-10-07T13:06:57.206Z",
  "sourceVolume" : "67802-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}</msg>
<status status="PASS" starttime="20211007 13:12:31.444" endtime="20211007 13:12:31.445"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:12:31.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:12:31.445" endtime="20211007 13:12:31.448"/>
</kw>
<status status="PASS" starttime="20211007 13:12:22.611" endtime="20211007 13:12:31.453"/>
</kw>
<msg timestamp="20211007 13:12:31.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:12:22.610" endtime="20211007 13:12:31.453"/>
</kw>
<msg timestamp="20211007 13:12:31.454" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "67802-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" starttime="20211007 13:12:22.609" endtime="20211007 13:12:31.454"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211007 13:12:31.454" endtime="20211007 13:12:31.454"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211007 13:12:31.455" endtime="20211007 13:12:31.455"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211007 13:12:22.569" endtime="20211007 13:12:31.458"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:12:31.466" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:12:31.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:12:31.472" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211007 13:12:31.463" endtime="20211007 13:12:31.472"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:12:31.473" level="INFO">scm</msg>
<status status="PASS" starttime="20211007 13:12:31.472" endtime="20211007 13:12:31.473"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:12:31.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:12:31.474" endtime="20211007 13:12:31.475"/>
</kw>
<status status="PASS" starttime="20211007 13:12:31.463" endtime="20211007 13:12:31.477"/>
</kw>
<msg timestamp="20211007 13:12:31.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:12:31.462" endtime="20211007 13:12:31.477"/>
</kw>
<msg timestamp="20211007 13:12:31.477" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211007 13:12:31.462" endtime="20211007 13:12:31.477"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211007 13:12:31.478" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211007 13:12:31.478" endtime="20211007 13:12:31.478"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:12:31.485" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:12:31.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:12:31.496" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:12:31.482" endtime="20211007 13:12:31.496"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:12:31.498" level="INFO"/>
<status status="PASS" starttime="20211007 13:12:31.497" endtime="20211007 13:12:31.498"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:12:31.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:12:31.499" endtime="20211007 13:12:31.500"/>
</kw>
<status status="PASS" starttime="20211007 13:12:31.481" endtime="20211007 13:12:31.501"/>
</kw>
<msg timestamp="20211007 13:12:31.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:12:31.480" endtime="20211007 13:12:31.501"/>
</kw>
<status status="PASS" starttime="20211007 13:12:31.479" endtime="20211007 13:12:31.502"/>
</kw>
<status status="PASS" starttime="20211007 13:12:31.479" endtime="20211007 13:12:31.502"/>
</kw>
<status status="PASS" starttime="20211007 13:12:31.461" endtime="20211007 13:12:31.503"/>
</kw>
<status status="PASS" starttime="20211007 13:12:31.460" endtime="20211007 13:12:31.503"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:12:31.509" level="INFO">Running command 'ozone sh bucket info 67802-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:12:39.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:12:39.782" level="INFO">${output} = {
  "volumeName" : "67802-target",
  "bucketName" : "link1",
  "sourceVolume" : "67802-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-10-07T13:08:06.038Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20211007 13:12:31.507" endtime="20211007 13:12:39.782"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:12:39.783" level="INFO">{
  "volumeName" : "67802-target",
  "bucketName" : "link1",
  "sourceVolume" : "67802-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-10-07T13:08:06.038Z",
  "modificationTime" : "2021-10-07T13:08:06.038Z"
}</msg>
<status status="PASS" starttime="20211007 13:12:39.782" endtime="20211007 13:12:39.783"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:12:39.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:12:39.783" endtime="20211007 13:12:39.785"/>
</kw>
<status status="PASS" starttime="20211007 13:12:31.506" endtime="20211007 13:12:39.786"/>
</kw>
<msg timestamp="20211007 13:12:39.786" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:12:31.504" endtime="20211007 13:12:39.786"/>
</kw>
<msg timestamp="20211007 13:12:39.787" level="INFO">${result} = {
  "volumeName" : "67802-target",
  "bucketName" : "link1",
  "sourceVolume" : "67802-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-10-07T13:08:06.038Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20211007 13:12:31.503" endtime="20211007 13:12:39.787"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${source}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211007 13:12:39.787" endtime="20211007 13:12:39.788"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bucket1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211007 13:12:39.789" endtime="20211007 13:12:39.790"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${target}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211007 13:12:39.790" endtime="20211007 13:12:39.791"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211007 13:12:39.791" endtime="20211007 13:12:39.792"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>modificationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211007 13:12:39.792" endtime="20211007 13:12:39.793"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211007 13:12:39.793" endtime="20211007 13:12:39.793"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>metadata</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211007 13:12:39.793" endtime="20211007 13:12:39.794"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211007 13:12:31.459" endtime="20211007 13:12:39.794"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:12:39.804" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:12:39.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:12:39.809" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211007 13:12:39.802" endtime="20211007 13:12:39.809"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:12:39.810" level="INFO">scm</msg>
<status status="PASS" starttime="20211007 13:12:39.809" endtime="20211007 13:12:39.811"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:12:39.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:12:39.811" endtime="20211007 13:12:39.812"/>
</kw>
<status status="PASS" starttime="20211007 13:12:39.801" endtime="20211007 13:12:39.812"/>
</kw>
<msg timestamp="20211007 13:12:39.812" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:12:39.800" endtime="20211007 13:12:39.813"/>
</kw>
<msg timestamp="20211007 13:12:39.813" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211007 13:12:39.799" endtime="20211007 13:12:39.813"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211007 13:12:39.814" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211007 13:12:39.813" endtime="20211007 13:12:39.814"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:12:39.822" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:12:39.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:12:39.834" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:12:39.819" endtime="20211007 13:12:39.834"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:12:39.838" level="INFO"/>
<status status="PASS" starttime="20211007 13:12:39.836" endtime="20211007 13:12:39.838"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:12:39.839" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:12:39.838" endtime="20211007 13:12:39.839"/>
</kw>
<status status="PASS" starttime="20211007 13:12:39.818" endtime="20211007 13:12:39.840"/>
</kw>
<msg timestamp="20211007 13:12:39.840" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:12:39.817" endtime="20211007 13:12:39.840"/>
</kw>
<status status="PASS" starttime="20211007 13:12:39.816" endtime="20211007 13:12:39.841"/>
</kw>
<status status="PASS" starttime="20211007 13:12:39.815" endtime="20211007 13:12:39.841"/>
</kw>
<status status="PASS" starttime="20211007 13:12:39.798" endtime="20211007 13:12:39.841"/>
</kw>
<status status="PASS" starttime="20211007 13:12:39.798" endtime="20211007 13:12:39.841"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:12:39.847" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 67802-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:12:47.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:12:47.471" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211007 13:12:39.844" endtime="20211007 13:12:47.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:12:47.475" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211007 13:12:47.472" endtime="20211007 13:12:47.475"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:12:47.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:12:47.475" endtime="20211007 13:12:47.477"/>
</kw>
<status status="PASS" starttime="20211007 13:12:39.843" endtime="20211007 13:12:47.477"/>
</kw>
<msg timestamp="20211007 13:12:47.478" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:12:39.843" endtime="20211007 13:12:47.478"/>
</kw>
<status status="PASS" starttime="20211007 13:12:39.842" endtime="20211007 13:12:47.478"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:12:47.486" level="INFO">Running command 'ozone sh bucket getacl 67802-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:12:55.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:12:55.253" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20211007 13:12:47.483" endtime="20211007 13:12:55.253"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:12:55.256" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20211007 13:12:55.254" endtime="20211007 13:12:55.257"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:12:55.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:12:55.257" endtime="20211007 13:12:55.259"/>
</kw>
<status status="PASS" starttime="20211007 13:12:47.482" endtime="20211007 13:12:55.260"/>
</kw>
<msg timestamp="20211007 13:12:55.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:12:47.482" endtime="20211007 13:12:55.261"/>
</kw>
<msg timestamp="20211007 13:12:55.262" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20211007 13:12:47.481" endtime="20211007 13:12:55.262"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211007 13:12:55.263" endtime="20211007 13:12:55.264"/>
</kw>
<status status="PASS" starttime="20211007 13:12:47.479" endtime="20211007 13:12:55.264"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:12:55.278" level="INFO">Running command 'ozone sh bucket getacl 67802-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:13:03.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:13:03.584" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:12:55.273" endtime="20211007 13:13:03.584"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:13:03.587" level="INFO"/>
<status status="PASS" starttime="20211007 13:13:03.585" endtime="20211007 13:13:03.588"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:13:03.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:13:03.588" endtime="20211007 13:13:03.589"/>
</kw>
<status status="PASS" starttime="20211007 13:12:55.272" endtime="20211007 13:13:03.589"/>
</kw>
<msg timestamp="20211007 13:13:03.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:12:55.270" endtime="20211007 13:13:03.590"/>
</kw>
<msg timestamp="20211007 13:13:03.590" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20211007 13:12:55.268" endtime="20211007 13:13:03.590"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211007 13:13:03.590" endtime="20211007 13:13:03.592"/>
</kw>
<status status="PASS" starttime="20211007 13:12:55.265" endtime="20211007 13:13:03.593"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:13:03.598" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 67802-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:13:11.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:13:11.690" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211007 13:13:03.595" endtime="20211007 13:13:11.690"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:13:11.692" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211007 13:13:11.691" endtime="20211007 13:13:11.692"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:13:11.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:13:11.692" endtime="20211007 13:13:11.694"/>
</kw>
<status status="PASS" starttime="20211007 13:13:03.595" endtime="20211007 13:13:11.694"/>
</kw>
<msg timestamp="20211007 13:13:11.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:13:03.594" endtime="20211007 13:13:11.695"/>
</kw>
<status status="PASS" starttime="20211007 13:13:03.593" endtime="20211007 13:13:11.695"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:13:11.704" level="INFO">Running command 'ozone sh bucket getacl 67802-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:13:20.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:13:20.081" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:13:11.701" endtime="20211007 13:13:20.081"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:13:20.084" level="INFO"/>
<status status="PASS" starttime="20211007 13:13:20.082" endtime="20211007 13:13:20.084"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:13:20.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:13:20.085" endtime="20211007 13:13:20.086"/>
</kw>
<status status="PASS" starttime="20211007 13:13:11.700" endtime="20211007 13:13:20.087"/>
</kw>
<msg timestamp="20211007 13:13:20.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:13:11.699" endtime="20211007 13:13:20.088"/>
</kw>
<msg timestamp="20211007 13:13:20.088" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20211007 13:13:11.698" endtime="20211007 13:13:20.088"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211007 13:13:20.089" endtime="20211007 13:13:20.090"/>
</kw>
<status status="PASS" starttime="20211007 13:13:11.696" endtime="20211007 13:13:20.090"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:13:20.099" level="INFO">Running command 'ozone sh bucket getacl 67802-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:13:28.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:13:28.198" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20211007 13:13:20.096" endtime="20211007 13:13:28.198"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:13:28.199" level="INFO">READ</msg>
<status status="PASS" starttime="20211007 13:13:28.198" endtime="20211007 13:13:28.199"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:13:28.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:13:28.199" endtime="20211007 13:13:28.200"/>
</kw>
<status status="PASS" starttime="20211007 13:13:20.095" endtime="20211007 13:13:28.201"/>
</kw>
<msg timestamp="20211007 13:13:28.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:13:20.094" endtime="20211007 13:13:28.201"/>
</kw>
<msg timestamp="20211007 13:13:28.201" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20211007 13:13:20.092" endtime="20211007 13:13:28.201"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211007 13:13:28.202" endtime="20211007 13:13:28.202"/>
</kw>
<status status="PASS" starttime="20211007 13:13:20.091" endtime="20211007 13:13:28.202"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211007 13:12:39.796" endtime="20211007 13:13:28.203"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:13:28.211" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:13:28.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:13:28.214" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211007 13:13:28.207" endtime="20211007 13:13:28.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:13:28.215" level="INFO">scm</msg>
<status status="PASS" starttime="20211007 13:13:28.214" endtime="20211007 13:13:28.215"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:13:28.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:13:28.215" endtime="20211007 13:13:28.216"/>
</kw>
<status status="PASS" starttime="20211007 13:13:28.207" endtime="20211007 13:13:28.217"/>
</kw>
<msg timestamp="20211007 13:13:28.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:13:28.206" endtime="20211007 13:13:28.217"/>
</kw>
<msg timestamp="20211007 13:13:28.217" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211007 13:13:28.206" endtime="20211007 13:13:28.217"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211007 13:13:28.218" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211007 13:13:28.218" endtime="20211007 13:13:28.218"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:13:28.223" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:13:28.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:13:28.259" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:13:28.221" endtime="20211007 13:13:28.259"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:13:28.261" level="INFO"/>
<status status="PASS" starttime="20211007 13:13:28.260" endtime="20211007 13:13:28.261"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:13:28.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:13:28.261" endtime="20211007 13:13:28.262"/>
</kw>
<status status="PASS" starttime="20211007 13:13:28.220" endtime="20211007 13:13:28.262"/>
</kw>
<msg timestamp="20211007 13:13:28.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:13:28.220" endtime="20211007 13:13:28.262"/>
</kw>
<status status="PASS" starttime="20211007 13:13:28.219" endtime="20211007 13:13:28.263"/>
</kw>
<status status="PASS" starttime="20211007 13:13:28.219" endtime="20211007 13:13:28.263"/>
</kw>
<status status="PASS" starttime="20211007 13:13:28.205" endtime="20211007 13:13:28.263"/>
</kw>
<status status="PASS" starttime="20211007 13:13:28.204" endtime="20211007 13:13:28.263"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:13:28.267" level="INFO">Running command 'ozone sh bucket link 67802-source/bucket2 67802-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:13:34.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:13:34.398" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:13:28.265" endtime="20211007 13:13:34.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:13:34.399" level="INFO"/>
<status status="PASS" starttime="20211007 13:13:34.398" endtime="20211007 13:13:34.399"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:13:34.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:13:34.400" endtime="20211007 13:13:34.402"/>
</kw>
<status status="PASS" starttime="20211007 13:13:28.264" endtime="20211007 13:13:34.403"/>
</kw>
<msg timestamp="20211007 13:13:34.403" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:13:28.264" endtime="20211007 13:13:34.403"/>
</kw>
<status status="PASS" starttime="20211007 13:13:28.263" endtime="20211007 13:13:34.404"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:13:34.409" level="INFO">Running command 'ozone sh bucket create 67802-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:13:41.684" level="INFO">${rc} = 255</msg>
<msg timestamp="20211007 13:13:41.684" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211007 13:13:34.405" endtime="20211007 13:13:41.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:13:41.686" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211007 13:13:41.685" endtime="20211007 13:13:41.686"/>
</kw>
<msg timestamp="20211007 13:13:41.687" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211007 13:13:34.404" endtime="20211007 13:13:41.687"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211007 13:13:41.687" endtime="20211007 13:13:41.688"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:13:41.696" level="INFO">Running command 'ozone sh bucket create 67802-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:13:48.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:13:48.625" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:13:41.692" endtime="20211007 13:13:48.625"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:13:48.626" level="INFO"/>
<status status="PASS" starttime="20211007 13:13:48.625" endtime="20211007 13:13:48.626"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:13:48.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:13:48.626" endtime="20211007 13:13:48.627"/>
</kw>
<status status="PASS" starttime="20211007 13:13:41.690" endtime="20211007 13:13:48.627"/>
</kw>
<msg timestamp="20211007 13:13:48.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:13:41.690" endtime="20211007 13:13:48.628"/>
</kw>
<status status="PASS" starttime="20211007 13:13:41.688" endtime="20211007 13:13:48.628"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:13:48.632" level="INFO">Running command 'ozone sh bucket link 67802-source/bucket1 67802-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:13:53.815" level="INFO">${rc} = 255</msg>
<msg timestamp="20211007 13:13:53.816" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211007 13:13:48.629" endtime="20211007 13:13:53.816"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:13:53.818" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211007 13:13:53.817" endtime="20211007 13:13:53.819"/>
</kw>
<msg timestamp="20211007 13:13:53.819" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211007 13:13:48.628" endtime="20211007 13:13:53.819"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211007 13:13:53.820" endtime="20211007 13:13:53.821"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211007 13:13:28.203" endtime="20211007 13:13:53.821"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:13:53.832" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:13:53.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:13:53.839" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211007 13:13:53.829" endtime="20211007 13:13:53.839"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:13:53.842" level="INFO">scm</msg>
<status status="PASS" starttime="20211007 13:13:53.840" endtime="20211007 13:13:53.842"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:13:53.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:13:53.842" endtime="20211007 13:13:53.843"/>
</kw>
<status status="PASS" starttime="20211007 13:13:53.828" endtime="20211007 13:13:53.844"/>
</kw>
<msg timestamp="20211007 13:13:53.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:13:53.827" endtime="20211007 13:13:53.844"/>
</kw>
<msg timestamp="20211007 13:13:53.845" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211007 13:13:53.827" endtime="20211007 13:13:53.845"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211007 13:13:53.847" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211007 13:13:53.845" endtime="20211007 13:13:53.847"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:13:53.855" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:13:53.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:13:53.865" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:13:53.852" endtime="20211007 13:13:53.865"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:13:53.868" level="INFO"/>
<status status="PASS" starttime="20211007 13:13:53.866" endtime="20211007 13:13:53.868"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:13:53.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:13:53.868" endtime="20211007 13:13:53.869"/>
</kw>
<status status="PASS" starttime="20211007 13:13:53.850" endtime="20211007 13:13:53.871"/>
</kw>
<msg timestamp="20211007 13:13:53.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:13:53.850" endtime="20211007 13:13:53.871"/>
</kw>
<status status="PASS" starttime="20211007 13:13:53.848" endtime="20211007 13:13:53.872"/>
</kw>
<status status="PASS" starttime="20211007 13:13:53.847" endtime="20211007 13:13:53.872"/>
</kw>
<status status="PASS" starttime="20211007 13:13:53.826" endtime="20211007 13:13:53.872"/>
</kw>
<status status="PASS" starttime="20211007 13:13:53.826" endtime="20211007 13:13:53.872"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:13:53.877" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:13:53.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:13:53.883" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:13:53.875" endtime="20211007 13:13:53.883"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:13:53.885" level="INFO"/>
<status status="PASS" starttime="20211007 13:13:53.884" endtime="20211007 13:13:53.886"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:13:53.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:13:53.886" endtime="20211007 13:13:53.887"/>
</kw>
<status status="PASS" starttime="20211007 13:13:53.875" endtime="20211007 13:13:53.888"/>
</kw>
<msg timestamp="20211007 13:13:53.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:13:53.874" endtime="20211007 13:13:53.888"/>
</kw>
<status status="PASS" starttime="20211007 13:13:53.874" endtime="20211007 13:13:53.888"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:13:53.894" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:13:53.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:13:53.899" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211007 13:13:53.892" endtime="20211007 13:13:53.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:13:53.901" level="INFO">scm</msg>
<status status="PASS" starttime="20211007 13:13:53.900" endtime="20211007 13:13:53.902"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:13:53.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:13:53.902" endtime="20211007 13:13:53.903"/>
</kw>
<status status="PASS" starttime="20211007 13:13:53.891" endtime="20211007 13:13:53.903"/>
</kw>
<msg timestamp="20211007 13:13:53.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:13:53.891" endtime="20211007 13:13:53.904"/>
</kw>
<msg timestamp="20211007 13:13:53.904" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211007 13:13:53.890" endtime="20211007 13:13:53.904"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211007 13:13:53.905" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211007 13:13:53.904" endtime="20211007 13:13:53.905"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:13:53.911" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:13:53.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:13:53.921" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:13:53.909" endtime="20211007 13:13:53.921"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:13:53.922" level="INFO"/>
<status status="PASS" starttime="20211007 13:13:53.921" endtime="20211007 13:13:53.922"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:13:53.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:13:53.923" endtime="20211007 13:13:53.924"/>
</kw>
<status status="PASS" starttime="20211007 13:13:53.908" endtime="20211007 13:13:53.924"/>
</kw>
<msg timestamp="20211007 13:13:53.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:13:53.907" endtime="20211007 13:13:53.926"/>
</kw>
<status status="PASS" starttime="20211007 13:13:53.906" endtime="20211007 13:13:53.926"/>
</kw>
<status status="PASS" starttime="20211007 13:13:53.906" endtime="20211007 13:13:53.926"/>
</kw>
<status status="PASS" starttime="20211007 13:13:53.889" endtime="20211007 13:13:53.927"/>
</kw>
<status status="PASS" starttime="20211007 13:13:53.889" endtime="20211007 13:13:53.927"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:13:53.931" level="INFO">Running command 'ozone sh key list 67802-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:14:02.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:14:02.548" level="INFO">${output} = {
  "volumeName" : "67802-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-10-07T13:03:27.214Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20211007 13:13:53.928" endtime="20211007 13:14:02.548"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:14:02.550" level="INFO">{
  "volumeName" : "67802-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-10-07T13:03:27.214Z",
  "modificationTime" : "2021-10-07T13:06:31.376Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" starttime="20211007 13:14:02.549" endtime="20211007 13:14:02.550"/>
</kw>
<msg timestamp="20211007 13:14:02.550" level="INFO">${result} = {
  "volumeName" : "67802-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-10-07T13:03:27.214Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20211007 13:13:53.927" endtime="20211007 13:14:02.550"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211007 13:14:02.550" endtime="20211007 13:14:02.551"/>
</kw>
<status status="PASS" starttime="20211007 13:13:53.873" endtime="20211007 13:14:02.551"/>
</kw>
<status status="PASS" starttime="20211007 13:13:53.873" endtime="20211007 13:14:02.551"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211007 13:13:53.822" endtime="20211007 13:14:02.552"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:14:02.561" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:14:02.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:14:02.567" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211007 13:14:02.558" endtime="20211007 13:14:02.567"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:14:02.569" level="INFO">scm</msg>
<status status="PASS" starttime="20211007 13:14:02.568" endtime="20211007 13:14:02.569"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:14:02.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:14:02.569" endtime="20211007 13:14:02.570"/>
</kw>
<status status="PASS" starttime="20211007 13:14:02.558" endtime="20211007 13:14:02.570"/>
</kw>
<msg timestamp="20211007 13:14:02.570" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:14:02.557" endtime="20211007 13:14:02.570"/>
</kw>
<msg timestamp="20211007 13:14:02.571" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211007 13:14:02.557" endtime="20211007 13:14:02.571"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211007 13:14:02.572" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211007 13:14:02.571" endtime="20211007 13:14:02.572"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:14:02.576" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:14:02.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:14:02.585" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:14:02.575" endtime="20211007 13:14:02.585"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:14:02.586" level="INFO"/>
<status status="PASS" starttime="20211007 13:14:02.585" endtime="20211007 13:14:02.586"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:14:02.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:14:02.586" endtime="20211007 13:14:02.587"/>
</kw>
<status status="PASS" starttime="20211007 13:14:02.574" endtime="20211007 13:14:02.587"/>
</kw>
<msg timestamp="20211007 13:14:02.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:14:02.573" endtime="20211007 13:14:02.588"/>
</kw>
<status status="PASS" starttime="20211007 13:14:02.572" endtime="20211007 13:14:02.588"/>
</kw>
<status status="PASS" starttime="20211007 13:14:02.572" endtime="20211007 13:14:02.588"/>
</kw>
<status status="PASS" starttime="20211007 13:14:02.556" endtime="20211007 13:14:02.589"/>
</kw>
<status status="PASS" starttime="20211007 13:14:02.555" endtime="20211007 13:14:02.589"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:14:02.594" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:14:02.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:14:02.598" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:14:02.592" endtime="20211007 13:14:02.598"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:14:02.599" level="INFO"/>
<status status="PASS" starttime="20211007 13:14:02.599" endtime="20211007 13:14:02.599"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:14:02.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:14:02.600" endtime="20211007 13:14:02.600"/>
</kw>
<status status="PASS" starttime="20211007 13:14:02.591" endtime="20211007 13:14:02.601"/>
</kw>
<msg timestamp="20211007 13:14:02.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:14:02.591" endtime="20211007 13:14:02.601"/>
</kw>
<status status="PASS" starttime="20211007 13:14:02.590" endtime="20211007 13:14:02.601"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:14:02.607" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:14:02.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:14:02.611" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211007 13:14:02.605" endtime="20211007 13:14:02.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:14:02.613" level="INFO">scm</msg>
<status status="PASS" starttime="20211007 13:14:02.612" endtime="20211007 13:14:02.613"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:14:02.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:14:02.613" endtime="20211007 13:14:02.614"/>
</kw>
<status status="PASS" starttime="20211007 13:14:02.604" endtime="20211007 13:14:02.614"/>
</kw>
<msg timestamp="20211007 13:14:02.615" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:14:02.604" endtime="20211007 13:14:02.615"/>
</kw>
<msg timestamp="20211007 13:14:02.615" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211007 13:14:02.603" endtime="20211007 13:14:02.615"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211007 13:14:02.616" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211007 13:14:02.615" endtime="20211007 13:14:02.616"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:14:02.622" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:14:02.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:14:02.635" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:14:02.619" endtime="20211007 13:14:02.635"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:14:02.636" level="INFO"/>
<status status="PASS" starttime="20211007 13:14:02.635" endtime="20211007 13:14:02.636"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:14:02.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:14:02.636" endtime="20211007 13:14:02.637"/>
</kw>
<status status="PASS" starttime="20211007 13:14:02.618" endtime="20211007 13:14:02.637"/>
</kw>
<msg timestamp="20211007 13:14:02.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:14:02.618" endtime="20211007 13:14:02.638"/>
</kw>
<status status="PASS" starttime="20211007 13:14:02.617" endtime="20211007 13:14:02.638"/>
</kw>
<status status="PASS" starttime="20211007 13:14:02.617" endtime="20211007 13:14:02.638"/>
</kw>
<status status="PASS" starttime="20211007 13:14:02.602" endtime="20211007 13:14:02.638"/>
</kw>
<status status="PASS" starttime="20211007 13:14:02.602" endtime="20211007 13:14:02.638"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:14:02.644" level="INFO">Running command 'ozone sh key list 67802-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:14:10.366" level="INFO">${rc} = 255</msg>
<msg timestamp="20211007 13:14:10.366" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 67802-target unreadable-link null</msg>
<status status="PASS" starttime="20211007 13:14:02.640" endtime="20211007 13:14:10.366"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:14:10.367" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 67802-target unreadable-link null</msg>
<status status="PASS" starttime="20211007 13:14:10.366" endtime="20211007 13:14:10.367"/>
</kw>
<msg timestamp="20211007 13:14:10.368" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 67802-target unreadable-link null</msg>
<status status="PASS" starttime="20211007 13:14:02.640" endtime="20211007 13:14:10.368"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211007 13:14:10.368" endtime="20211007 13:14:10.368"/>
</kw>
<status status="PASS" starttime="20211007 13:14:02.589" endtime="20211007 13:14:10.369"/>
</kw>
<status status="PASS" starttime="20211007 13:14:02.589" endtime="20211007 13:14:10.369"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211007 13:14:02.554" endtime="20211007 13:14:10.369"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:14:10.380" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:14:10.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:14:10.385" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211007 13:14:10.378" endtime="20211007 13:14:10.385"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:14:10.387" level="INFO">scm</msg>
<status status="PASS" starttime="20211007 13:14:10.386" endtime="20211007 13:14:10.387"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:14:10.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:14:10.387" endtime="20211007 13:14:10.388"/>
</kw>
<status status="PASS" starttime="20211007 13:14:10.377" endtime="20211007 13:14:10.389"/>
</kw>
<msg timestamp="20211007 13:14:10.389" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:14:10.377" endtime="20211007 13:14:10.389"/>
</kw>
<msg timestamp="20211007 13:14:10.389" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211007 13:14:10.375" endtime="20211007 13:14:10.389"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211007 13:14:10.391" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211007 13:14:10.390" endtime="20211007 13:14:10.391"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:14:10.398" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:14:10.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:14:10.409" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:14:10.395" endtime="20211007 13:14:10.410"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:14:10.411" level="INFO"/>
<status status="PASS" starttime="20211007 13:14:10.410" endtime="20211007 13:14:10.411"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:14:10.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:14:10.411" endtime="20211007 13:14:10.412"/>
</kw>
<status status="PASS" starttime="20211007 13:14:10.393" endtime="20211007 13:14:10.412"/>
</kw>
<msg timestamp="20211007 13:14:10.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:14:10.393" endtime="20211007 13:14:10.412"/>
</kw>
<status status="PASS" starttime="20211007 13:14:10.392" endtime="20211007 13:14:10.413"/>
</kw>
<status status="PASS" starttime="20211007 13:14:10.391" endtime="20211007 13:14:10.413"/>
</kw>
<status status="PASS" starttime="20211007 13:14:10.374" endtime="20211007 13:14:10.413"/>
</kw>
<status status="PASS" starttime="20211007 13:14:10.372" endtime="20211007 13:14:10.413"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:14:10.418" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:14:10.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:14:10.422" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:14:10.416" endtime="20211007 13:14:10.422"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:14:10.423" level="INFO"/>
<status status="PASS" starttime="20211007 13:14:10.422" endtime="20211007 13:14:10.423"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:14:10.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:14:10.423" endtime="20211007 13:14:10.424"/>
</kw>
<status status="PASS" starttime="20211007 13:14:10.415" endtime="20211007 13:14:10.424"/>
</kw>
<msg timestamp="20211007 13:14:10.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:14:10.415" endtime="20211007 13:14:10.425"/>
</kw>
<status status="PASS" starttime="20211007 13:14:10.414" endtime="20211007 13:14:10.425"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:14:10.430" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:14:10.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:14:10.435" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211007 13:14:10.428" endtime="20211007 13:14:10.435"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:14:10.437" level="INFO">scm</msg>
<status status="PASS" starttime="20211007 13:14:10.436" endtime="20211007 13:14:10.437"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:14:10.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:14:10.437" endtime="20211007 13:14:10.438"/>
</kw>
<status status="PASS" starttime="20211007 13:14:10.427" endtime="20211007 13:14:10.438"/>
</kw>
<msg timestamp="20211007 13:14:10.438" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:14:10.427" endtime="20211007 13:14:10.438"/>
</kw>
<msg timestamp="20211007 13:14:10.439" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211007 13:14:10.426" endtime="20211007 13:14:10.439"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211007 13:14:10.439" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211007 13:14:10.439" endtime="20211007 13:14:10.440"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:14:10.447" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:14:10.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:14:10.458" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:14:10.444" endtime="20211007 13:14:10.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:14:10.461" level="INFO"/>
<status status="PASS" starttime="20211007 13:14:10.458" endtime="20211007 13:14:10.461"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:14:10.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:14:10.462" endtime="20211007 13:14:10.463"/>
</kw>
<status status="PASS" starttime="20211007 13:14:10.443" endtime="20211007 13:14:10.463"/>
</kw>
<msg timestamp="20211007 13:14:10.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:14:10.442" endtime="20211007 13:14:10.464"/>
</kw>
<status status="PASS" starttime="20211007 13:14:10.441" endtime="20211007 13:14:10.464"/>
</kw>
<status status="PASS" starttime="20211007 13:14:10.440" endtime="20211007 13:14:10.465"/>
</kw>
<status status="PASS" starttime="20211007 13:14:10.426" endtime="20211007 13:14:10.465"/>
</kw>
<status status="PASS" starttime="20211007 13:14:10.425" endtime="20211007 13:14:10.465"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:14:10.469" level="INFO">Running command 'ozone sh bucket info 67802-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:14:17.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:14:17.632" level="INFO">${output} = {
  "volumeName" : "67802-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "67802-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-10-07T13:07:04.887Z...</msg>
<status status="PASS" starttime="20211007 13:14:10.467" endtime="20211007 13:14:17.632"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:14:17.634" level="INFO">{
  "volumeName" : "67802-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "67802-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-10-07T13:07:04.887Z",
  "modificationTime" : "2021-10-07T13:07:42.878Z"
}</msg>
<status status="PASS" starttime="20211007 13:14:17.633" endtime="20211007 13:14:17.634"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:14:17.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:14:17.634" endtime="20211007 13:14:17.635"/>
</kw>
<status status="PASS" starttime="20211007 13:14:10.466" endtime="20211007 13:14:17.635"/>
</kw>
<msg timestamp="20211007 13:14:17.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:14:10.466" endtime="20211007 13:14:17.636"/>
</kw>
<msg timestamp="20211007 13:14:17.636" level="INFO">${result} = {
  "volumeName" : "67802-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "67802-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-10-07T13:07:04.887Z...</msg>
<status status="PASS" starttime="20211007 13:14:10.465" endtime="20211007 13:14:17.636"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211007 13:14:17.636" endtime="20211007 13:14:17.637"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211007 13:14:17.637" endtime="20211007 13:14:17.637"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:14:17.640" level="INFO">Running command 'ozone sh key list 67802-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:14:24.017" level="INFO">${rc} = 255</msg>
<msg timestamp="20211007 13:14:24.017" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 67802-source unreadable-bucket </msg>
<status status="PASS" starttime="20211007 13:14:17.638" endtime="20211007 13:14:24.017"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:14:24.018" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 67802-source unreadable-bucket </msg>
<status status="PASS" starttime="20211007 13:14:24.017" endtime="20211007 13:14:24.018"/>
</kw>
<msg timestamp="20211007 13:14:24.019" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 67802-source unreadable-bucket </msg>
<status status="PASS" starttime="20211007 13:14:17.638" endtime="20211007 13:14:24.019"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211007 13:14:24.019" endtime="20211007 13:14:24.020"/>
</kw>
<status status="PASS" starttime="20211007 13:14:10.414" endtime="20211007 13:14:24.020"/>
</kw>
<status status="PASS" starttime="20211007 13:14:10.413" endtime="20211007 13:14:24.020"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211007 13:14:10.370" endtime="20211007 13:14:24.021"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:14:24.028" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:14:24.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:14:24.032" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211007 13:14:24.026" endtime="20211007 13:14:24.032"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:14:24.033" level="INFO">scm</msg>
<status status="PASS" starttime="20211007 13:14:24.033" endtime="20211007 13:14:24.033"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:14:24.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:14:24.034" endtime="20211007 13:14:24.034"/>
</kw>
<status status="PASS" starttime="20211007 13:14:24.025" endtime="20211007 13:14:24.035"/>
</kw>
<msg timestamp="20211007 13:14:24.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:14:24.024" endtime="20211007 13:14:24.035"/>
</kw>
<msg timestamp="20211007 13:14:24.035" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211007 13:14:24.024" endtime="20211007 13:14:24.035"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211007 13:14:24.036" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211007 13:14:24.035" endtime="20211007 13:14:24.036"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:14:24.040" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:14:24.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:14:24.048" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:14:24.038" endtime="20211007 13:14:24.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:14:24.049" level="INFO"/>
<status status="PASS" starttime="20211007 13:14:24.048" endtime="20211007 13:14:24.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:14:24.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:14:24.050" endtime="20211007 13:14:24.050"/>
</kw>
<status status="PASS" starttime="20211007 13:14:24.038" endtime="20211007 13:14:24.051"/>
</kw>
<msg timestamp="20211007 13:14:24.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:14:24.037" endtime="20211007 13:14:24.051"/>
</kw>
<status status="PASS" starttime="20211007 13:14:24.037" endtime="20211007 13:14:24.051"/>
</kw>
<status status="PASS" starttime="20211007 13:14:24.036" endtime="20211007 13:14:24.051"/>
</kw>
<status status="PASS" starttime="20211007 13:14:24.023" endtime="20211007 13:14:24.052"/>
</kw>
<status status="PASS" starttime="20211007 13:14:24.023" endtime="20211007 13:14:24.052"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:14:24.056" level="INFO">Running command 'ozone sh bucket link 67802-target/loop1 67802-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:14:29.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:14:29.060" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:14:24.054" endtime="20211007 13:14:29.061"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:14:29.063" level="INFO"/>
<status status="PASS" starttime="20211007 13:14:29.062" endtime="20211007 13:14:29.063"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:14:29.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:14:29.063" endtime="20211007 13:14:29.064"/>
</kw>
<status status="PASS" starttime="20211007 13:14:24.053" endtime="20211007 13:14:29.065"/>
</kw>
<msg timestamp="20211007 13:14:29.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:14:24.053" endtime="20211007 13:14:29.068"/>
</kw>
<status status="PASS" starttime="20211007 13:14:24.052" endtime="20211007 13:14:29.069"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:14:29.077" level="INFO">Running command 'ozone sh bucket link 67802-target/loop2 67802-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:14:36.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:14:36.789" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:14:29.070" endtime="20211007 13:14:36.789"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:14:36.791" level="INFO"/>
<status status="PASS" starttime="20211007 13:14:36.790" endtime="20211007 13:14:36.791"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:14:36.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:14:36.791" endtime="20211007 13:14:36.792"/>
</kw>
<status status="PASS" starttime="20211007 13:14:29.070" endtime="20211007 13:14:36.792"/>
</kw>
<msg timestamp="20211007 13:14:36.792" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:14:29.070" endtime="20211007 13:14:36.792"/>
</kw>
<status status="PASS" starttime="20211007 13:14:29.069" endtime="20211007 13:14:36.793"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:14:36.799" level="INFO">Running command 'ozone sh bucket link 67802-target/loop3 67802-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:14:42.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:14:42.283" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:14:36.796" endtime="20211007 13:14:42.283"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:14:42.284" level="INFO"/>
<status status="PASS" starttime="20211007 13:14:42.284" endtime="20211007 13:14:42.285"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:14:42.285" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:14:42.285" endtime="20211007 13:14:42.285"/>
</kw>
<status status="PASS" starttime="20211007 13:14:36.795" endtime="20211007 13:14:42.286"/>
</kw>
<msg timestamp="20211007 13:14:42.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:14:36.794" endtime="20211007 13:14:42.286"/>
</kw>
<status status="PASS" starttime="20211007 13:14:36.793" endtime="20211007 13:14:42.286"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:14:42.290" level="INFO">Running command 'ozone sh key list 67802-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:14:49.659" level="INFO">${rc} = 255</msg>
<msg timestamp="20211007 13:14:49.659" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20211007 13:14:42.288" endtime="20211007 13:14:49.659"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:14:49.662" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20211007 13:14:49.660" endtime="20211007 13:14:49.662"/>
</kw>
<msg timestamp="20211007 13:14:49.663" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20211007 13:14:42.287" endtime="20211007 13:14:49.663"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211007 13:14:49.663" endtime="20211007 13:14:49.664"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211007 13:14:24.022" endtime="20211007 13:14:49.665"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:14:49.678" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:14:49.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:14:49.684" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211007 13:14:49.674" endtime="20211007 13:14:49.685"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:14:49.686" level="INFO">scm</msg>
<status status="PASS" starttime="20211007 13:14:49.685" endtime="20211007 13:14:49.686"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:14:49.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:14:49.686" endtime="20211007 13:14:49.687"/>
</kw>
<status status="PASS" starttime="20211007 13:14:49.673" endtime="20211007 13:14:49.688"/>
</kw>
<msg timestamp="20211007 13:14:49.688" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:14:49.672" endtime="20211007 13:14:49.688"/>
</kw>
<msg timestamp="20211007 13:14:49.689" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211007 13:14:49.671" endtime="20211007 13:14:49.689"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211007 13:14:49.690" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211007 13:14:49.689" endtime="20211007 13:14:49.690"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:14:49.696" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:14:49.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:14:49.704" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:14:49.693" endtime="20211007 13:14:49.704"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:14:49.705" level="INFO"/>
<status status="PASS" starttime="20211007 13:14:49.704" endtime="20211007 13:14:49.706"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:14:49.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:14:49.706" endtime="20211007 13:14:49.707"/>
</kw>
<status status="PASS" starttime="20211007 13:14:49.692" endtime="20211007 13:14:49.707"/>
</kw>
<msg timestamp="20211007 13:14:49.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:14:49.692" endtime="20211007 13:14:49.707"/>
</kw>
<status status="PASS" starttime="20211007 13:14:49.691" endtime="20211007 13:14:49.708"/>
</kw>
<status status="PASS" starttime="20211007 13:14:49.690" endtime="20211007 13:14:49.708"/>
</kw>
<status status="PASS" starttime="20211007 13:14:49.669" endtime="20211007 13:14:49.708"/>
</kw>
<status status="PASS" starttime="20211007 13:14:49.668" endtime="20211007 13:14:49.708"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:14:49.714" level="INFO">Running command 'ozone sh bucket link 67802-source/bucket1 67802-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:14:56.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:14:56.186" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:14:49.711" endtime="20211007 13:14:56.186"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:14:56.187" level="INFO"/>
<status status="PASS" starttime="20211007 13:14:56.187" endtime="20211007 13:14:56.188"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:14:56.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:14:56.188" endtime="20211007 13:14:56.188"/>
</kw>
<status status="PASS" starttime="20211007 13:14:49.710" endtime="20211007 13:14:56.189"/>
</kw>
<msg timestamp="20211007 13:14:56.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:14:49.710" endtime="20211007 13:14:56.189"/>
</kw>
<status status="PASS" starttime="20211007 13:14:49.709" endtime="20211007 13:14:56.189"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:14:56.194" level="INFO">Running command 'ozone sh key put 67802-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:16:49.667" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20211007 13:14:56.191" endtime="20211007 13:16:49.667"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211007 13:16:49.668" endtime="20211007 13:16:49.668"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211007 13:16:49.668" endtime="20211007 13:16:49.668"/>
</kw>
<status status="FAIL" starttime="20211007 13:14:56.191" endtime="20211007 13:16:49.668"/>
</kw>
<msg timestamp="20211007 13:16:49.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211007 13:14:56.190" endtime="20211007 13:16:49.669"/>
</kw>
<status status="FAIL" starttime="20211007 13:14:56.190" endtime="20211007 13:16:49.669"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<status status="NOT RUN" starttime="20211007 13:16:49.669" endtime="20211007 13:16:49.669"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211007 13:14:49.666" endtime="20211007 13:16:49.670">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:16:49.679" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:16:49.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:16:49.687" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211007 13:16:49.677" endtime="20211007 13:16:49.687"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:16:49.688" level="INFO">scm</msg>
<status status="PASS" starttime="20211007 13:16:49.687" endtime="20211007 13:16:49.688"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:16:49.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:16:49.689" endtime="20211007 13:16:49.689"/>
</kw>
<status status="PASS" starttime="20211007 13:16:49.676" endtime="20211007 13:16:49.689"/>
</kw>
<msg timestamp="20211007 13:16:49.690" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:16:49.676" endtime="20211007 13:16:49.690"/>
</kw>
<msg timestamp="20211007 13:16:49.690" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211007 13:16:49.675" endtime="20211007 13:16:49.690"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211007 13:16:49.691" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211007 13:16:49.690" endtime="20211007 13:16:49.691"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:16:49.697" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:16:49.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:16:49.706" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:16:49.695" endtime="20211007 13:16:49.706"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:16:49.707" level="INFO"/>
<status status="PASS" starttime="20211007 13:16:49.706" endtime="20211007 13:16:49.707"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:16:49.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:16:49.707" endtime="20211007 13:16:49.708"/>
</kw>
<status status="PASS" starttime="20211007 13:16:49.694" endtime="20211007 13:16:49.709"/>
</kw>
<msg timestamp="20211007 13:16:49.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:16:49.694" endtime="20211007 13:16:49.709"/>
</kw>
<status status="PASS" starttime="20211007 13:16:49.692" endtime="20211007 13:16:49.709"/>
</kw>
<status status="PASS" starttime="20211007 13:16:49.691" endtime="20211007 13:16:49.709"/>
</kw>
<status status="PASS" starttime="20211007 13:16:49.674" endtime="20211007 13:16:49.710"/>
</kw>
<status status="PASS" starttime="20211007 13:16:49.673" endtime="20211007 13:16:49.710"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:16:49.714" level="INFO">Running command 'ozone sh bucket delete 67802-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:16:57.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:16:57.127" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:16:49.711" endtime="20211007 13:16:57.127"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:16:57.130" level="INFO"/>
<status status="PASS" starttime="20211007 13:16:57.128" endtime="20211007 13:16:57.130"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:16:57.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:16:57.130" endtime="20211007 13:16:57.132"/>
</kw>
<status status="PASS" starttime="20211007 13:16:49.711" endtime="20211007 13:16:57.132"/>
</kw>
<msg timestamp="20211007 13:16:57.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:16:49.710" endtime="20211007 13:16:57.133"/>
</kw>
<status status="PASS" starttime="20211007 13:16:49.710" endtime="20211007 13:16:57.133"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:16:57.138" level="INFO">Running command 'ozone sh bucket list 67802-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:17:06.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:17:06.039" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "67802-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-07T...</msg>
<status status="PASS" starttime="20211007 13:16:57.136" endtime="20211007 13:17:06.039"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:17:06.041" level="INFO">{
  "metadata" : { },
  "volumeName" : "67802-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-07T13:13:48.545Z",
  "modificationTime" : "2021-10-07T13:13:48.545Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "67802-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-07T13:07:50.729Z",
  "modificationTime" : "2021-10-07T13:07:50.729Z",
  "sourceVolume" : "67802-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "67802-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-07T13:07:04.887Z",
  "modificationTime" : "2021-10-07T13:07:42.878Z",
  "sourceVolume" : "67802-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "67802-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-07T13:13:34.302Z",
  "modificationTime" : "2021-10-07T13:13:34.302Z",
  "sourceVolume" : "67802-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "67802-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-07T13:14:56.106Z",
  "modificationTime" : "2021-10-07T13:14:56.106Z",
  "sourceVolume" : "67802-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "67802-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-07T13:14:42.173Z",
  "modificationTime" : "2021-10-07T13:14:42.173Z",
  "sourceVolume" : "67802-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "67802-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-07T13:14:28.886Z",
  "modificationTime" : "2021-10-07T13:14:28.886Z",
  "sourceVolume" : "67802-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "67802-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-07T13:14:36.698Z",
  "modificationTime" : "2021-10-07T13:14:36.698Z",
  "sourceVolume" : "67802-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "67802-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-07T13:06:48.735Z",
  "modificationTime" : "2021-10-07T13:07:35.488Z",
  "sourceVolume" : "67802-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "67802-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-07T13:06:57.206Z",
  "modificationTime" : "2021-10-07T13:06:57.206Z",
  "sourceVolume" : "67802-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}</msg>
<status status="PASS" starttime="20211007 13:17:06.040" endtime="20211007 13:17:06.041"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:17:06.043" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:17:06.042" endtime="20211007 13:17:06.043"/>
</kw>
<status status="PASS" starttime="20211007 13:16:57.135" endtime="20211007 13:17:06.044"/>
</kw>
<msg timestamp="20211007 13:17:06.045" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:16:57.134" endtime="20211007 13:17:06.045"/>
</kw>
<msg timestamp="20211007 13:17:06.046" level="INFO">${bucket_list} = {
  "metadata" : { },
  "volumeName" : "67802-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-07T...</msg>
<status status="PASS" starttime="20211007 13:16:57.134" endtime="20211007 13:17:06.046"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211007 13:17:06.046" endtime="20211007 13:17:06.047"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:17:06.054" level="INFO">Running command 'ozone sh key list 67802-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:17:14.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:17:14.404" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20211007 13:17:06.050" endtime="20211007 13:17:14.404"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:17:14.406" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20211007 13:17:14.405" endtime="20211007 13:17:14.406"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:17:14.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:17:14.406" endtime="20211007 13:17:14.407"/>
</kw>
<status status="PASS" starttime="20211007 13:17:06.049" endtime="20211007 13:17:14.407"/>
</kw>
<msg timestamp="20211007 13:17:14.407" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:17:06.049" endtime="20211007 13:17:14.407"/>
</kw>
<msg timestamp="20211007 13:17:14.407" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20211007 13:17:06.047" endtime="20211007 13:17:14.407"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211007 13:17:14.408" endtime="20211007 13:17:14.408"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211007 13:16:49.671" endtime="20211007 13:17:14.409"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="FAIL" starttime="20211007 13:02:56.209" endtime="20211007 13:17:14.411"/>
</suite>
<suite id="s1-s1-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211007 13:17:14.445" level="INFO">${random} = 12964</msg>
<status status="PASS" starttime="20211007 13:17:14.444" endtime="20211007 13:17:14.445"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211007 13:17:14.446" level="INFO">${prefix} = 12964</msg>
<status status="PASS" starttime="20211007 13:17:14.446" endtime="20211007 13:17:14.446"/>
</kw>
<status status="PASS" starttime="20211007 13:17:14.444" endtime="20211007 13:17:14.447"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:17:14.455" level="INFO">Running command 'ozone sh volume info /12964-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:17:22.310" level="INFO">${rc} = 255</msg>
<msg timestamp="20211007 13:17:22.310" level="INFO">${output} = VOLUME_NOT_FOUND Volume 12964-rpcbasic is not found</msg>
<status status="PASS" starttime="20211007 13:17:14.452" endtime="20211007 13:17:22.311"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:17:22.312" level="INFO">VOLUME_NOT_FOUND Volume 12964-rpcbasic is not found</msg>
<status status="PASS" starttime="20211007 13:17:22.311" endtime="20211007 13:17:22.312"/>
</kw>
<msg timestamp="20211007 13:17:22.312" level="INFO">${result} = VOLUME_NOT_FOUND Volume 12964-rpcbasic is not found</msg>
<status status="PASS" starttime="20211007 13:17:14.451" endtime="20211007 13:17:22.312"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211007 13:17:22.313" endtime="20211007 13:17:22.313"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:17:22.320" level="INFO">Running command 'ozone sh volume create /12964-rpcbasic --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:17:31.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:17:31.254" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:17:22.317" endtime="20211007 13:17:31.254"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:17:31.257" level="INFO"/>
<status status="PASS" starttime="20211007 13:17:31.255" endtime="20211007 13:17:31.257"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:17:31.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:17:31.257" endtime="20211007 13:17:31.258"/>
</kw>
<status status="PASS" starttime="20211007 13:17:22.315" endtime="20211007 13:17:31.258"/>
</kw>
<msg timestamp="20211007 13:17:31.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:17:22.315" endtime="20211007 13:17:31.259"/>
</kw>
<msg timestamp="20211007 13:17:31.259" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211007 13:17:22.314" endtime="20211007 13:17:31.259"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211007 13:17:31.260" endtime="20211007 13:17:31.261"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:17:31.270" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="12964-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:17:40.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:17:40.525" level="INFO">${output} = {
  "metadata": {},
  "name": "12964-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211007 13:17:31.265" endtime="20211007 13:17:40.525"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:17:40.527" level="INFO">{
  "metadata": {},
  "name": "12964-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-07T13:17:31.062Z",
  "modificationTime": "2021-10-07T13:17:31.062Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211007 13:17:40.526" endtime="20211007 13:17:40.527"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:17:40.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:17:40.527" endtime="20211007 13:17:40.528"/>
</kw>
<status status="PASS" starttime="20211007 13:17:31.264" endtime="20211007 13:17:40.528"/>
</kw>
<msg timestamp="20211007 13:17:40.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:17:31.263" endtime="20211007 13:17:40.529"/>
</kw>
<msg timestamp="20211007 13:17:40.529" level="INFO">${result} = {
  "metadata": {},
  "name": "12964-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211007 13:17:31.261" endtime="20211007 13:17:40.529"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211007 13:17:40.529" endtime="20211007 13:17:40.530"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:17:40.535" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="12964-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:17:49.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:17:49.730" level="INFO">${output} = {
  "metadata": {},
  "name": "12964-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211007 13:17:40.532" endtime="20211007 13:17:49.730"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:17:49.733" level="INFO">{
  "metadata": {},
  "name": "12964-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-07T13:17:31.062Z",
  "modificationTime": "2021-10-07T13:17:31.062Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211007 13:17:49.731" endtime="20211007 13:17:49.734"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:17:49.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:17:49.734" endtime="20211007 13:17:49.736"/>
</kw>
<status status="PASS" starttime="20211007 13:17:40.531" endtime="20211007 13:17:49.737"/>
</kw>
<msg timestamp="20211007 13:17:49.737" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:17:40.531" endtime="20211007 13:17:49.738"/>
</kw>
<msg timestamp="20211007 13:17:49.739" level="INFO">${result} = {
  "metadata": {},
  "name": "12964-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211007 13:17:40.530" endtime="20211007 13:17:49.739"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211007 13:17:49.739" endtime="20211007 13:17:49.740"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:17:49.745" level="INFO">Running command 'ozone sh volume setquota /12964-rpcbasic --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:17:57.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:17:57.882" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:17:49.742" endtime="20211007 13:17:57.883"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:17:57.884" level="INFO"/>
<status status="PASS" starttime="20211007 13:17:57.883" endtime="20211007 13:17:57.884"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:17:57.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:17:57.884" endtime="20211007 13:17:57.886"/>
</kw>
<status status="PASS" starttime="20211007 13:17:49.742" endtime="20211007 13:17:57.886"/>
</kw>
<msg timestamp="20211007 13:17:57.886" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:17:49.741" endtime="20211007 13:17:57.886"/>
</kw>
<status status="PASS" starttime="20211007 13:17:49.740" endtime="20211007 13:17:57.887"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:17:57.892" level="INFO">Running command 'ozone sh volume info /12964-rpcbasic | jq -r '. | select(.name=="12964-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:18:05.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:18:05.941" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211007 13:17:57.889" endtime="20211007 13:18:05.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:18:05.942" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211007 13:18:05.942" endtime="20211007 13:18:05.942"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:18:05.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:18:05.943" endtime="20211007 13:18:05.944"/>
</kw>
<status status="PASS" starttime="20211007 13:17:57.889" endtime="20211007 13:18:05.944"/>
</kw>
<msg timestamp="20211007 13:18:05.944" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:17:57.889" endtime="20211007 13:18:05.944"/>
</kw>
<msg timestamp="20211007 13:18:05.945" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211007 13:17:57.887" endtime="20211007 13:18:05.945"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211007 13:18:05.945" endtime="20211007 13:18:05.945"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:18:05.952" level="INFO">Running command 'ozone sh bucket create /12964-rpcbasic/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:18:14.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:18:14.251" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:18:05.947" endtime="20211007 13:18:14.251"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:18:14.252" level="INFO"/>
<status status="PASS" starttime="20211007 13:18:14.251" endtime="20211007 13:18:14.252"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:18:14.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:18:14.252" endtime="20211007 13:18:14.253"/>
</kw>
<status status="PASS" starttime="20211007 13:18:05.947" endtime="20211007 13:18:14.254"/>
</kw>
<msg timestamp="20211007 13:18:14.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:18:05.946" endtime="20211007 13:18:14.254"/>
</kw>
<status status="PASS" starttime="20211007 13:18:05.945" endtime="20211007 13:18:14.254"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:18:14.260" level="INFO">Running command 'ozone sh bucket info /12964-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:18:20.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:18:20.593" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211007 13:18:14.257" endtime="20211007 13:18:20.593"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:18:20.595" level="INFO">DISK</msg>
<status status="PASS" starttime="20211007 13:18:20.593" endtime="20211007 13:18:20.595"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:18:20.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:18:20.595" endtime="20211007 13:18:20.597"/>
</kw>
<status status="PASS" starttime="20211007 13:18:14.256" endtime="20211007 13:18:20.598"/>
</kw>
<msg timestamp="20211007 13:18:20.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:18:14.256" endtime="20211007 13:18:20.598"/>
</kw>
<msg timestamp="20211007 13:18:20.600" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211007 13:18:14.255" endtime="20211007 13:18:20.602"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211007 13:18:20.602" endtime="20211007 13:18:20.604"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:18:20.612" level="INFO">Running command 'ozone sh bucket info /12964-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:18:28.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:18:28.627" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211007 13:18:20.609" endtime="20211007 13:18:28.627"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:18:28.628" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211007 13:18:28.627" endtime="20211007 13:18:28.628"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:18:28.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:18:28.629" endtime="20211007 13:18:28.629"/>
</kw>
<status status="PASS" starttime="20211007 13:18:20.607" endtime="20211007 13:18:28.630"/>
</kw>
<msg timestamp="20211007 13:18:28.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:18:20.607" endtime="20211007 13:18:28.630"/>
</kw>
<msg timestamp="20211007 13:18:28.630" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211007 13:18:20.604" endtime="20211007 13:18:28.630"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211007 13:18:28.630" endtime="20211007 13:18:28.631"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:18:28.637" level="INFO">Running command 'ozone sh bucket info /12964-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:18:35.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:18:35.943" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211007 13:18:28.634" endtime="20211007 13:18:35.943"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:18:35.944" level="INFO">100</msg>
<status status="PASS" starttime="20211007 13:18:35.944" endtime="20211007 13:18:35.945"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:18:35.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:18:35.945" endtime="20211007 13:18:35.945"/>
</kw>
<status status="PASS" starttime="20211007 13:18:28.632" endtime="20211007 13:18:35.946"/>
</kw>
<msg timestamp="20211007 13:18:35.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:18:28.632" endtime="20211007 13:18:35.946"/>
</kw>
<msg timestamp="20211007 13:18:35.946" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211007 13:18:28.631" endtime="20211007 13:18:35.946"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211007 13:18:35.947" endtime="20211007 13:18:35.947"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:18:35.952" level="INFO">Running command 'ozone sh bucket setquota /12964-rpcbasic/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:18:44.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:18:44.421" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:18:35.949" endtime="20211007 13:18:44.421"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:18:44.423" level="INFO"/>
<status status="PASS" starttime="20211007 13:18:44.422" endtime="20211007 13:18:44.423"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:18:44.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:18:44.423" endtime="20211007 13:18:44.424"/>
</kw>
<status status="PASS" starttime="20211007 13:18:35.948" endtime="20211007 13:18:44.424"/>
</kw>
<msg timestamp="20211007 13:18:44.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:18:35.948" endtime="20211007 13:18:44.425"/>
</kw>
<status status="PASS" starttime="20211007 13:18:35.947" endtime="20211007 13:18:44.425"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:18:44.432" level="INFO">Running command 'ozone sh bucket info /12964-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:18:50.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:18:50.831" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211007 13:18:44.427" endtime="20211007 13:18:50.831"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:18:50.834" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211007 13:18:50.832" endtime="20211007 13:18:50.834"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:18:50.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:18:50.835" endtime="20211007 13:18:50.837"/>
</kw>
<status status="PASS" starttime="20211007 13:18:44.427" endtime="20211007 13:18:50.838"/>
</kw>
<msg timestamp="20211007 13:18:50.838" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:18:44.426" endtime="20211007 13:18:50.839"/>
</kw>
<msg timestamp="20211007 13:18:50.840" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211007 13:18:44.425" endtime="20211007 13:18:50.840"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211007 13:18:50.840" endtime="20211007 13:18:50.841"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:18:50.846" level="INFO">Running command 'ozone sh bucket info /12964-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:18:58.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:18:58.950" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211007 13:18:50.843" endtime="20211007 13:18:58.950"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:18:58.951" level="INFO">1000</msg>
<status status="PASS" starttime="20211007 13:18:58.950" endtime="20211007 13:18:58.951"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:18:58.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:18:58.951" endtime="20211007 13:18:58.952"/>
</kw>
<status status="PASS" starttime="20211007 13:18:50.843" endtime="20211007 13:18:58.952"/>
</kw>
<msg timestamp="20211007 13:18:58.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:18:50.842" endtime="20211007 13:18:58.952"/>
</kw>
<msg timestamp="20211007 13:18:58.953" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211007 13:18:50.841" endtime="20211007 13:18:58.953"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211007 13:18:58.953" endtime="20211007 13:18:58.953"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:18:58.960" level="INFO">Running command 'ozone sh bucket list /12964-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:19:07.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:19:07.332" level="INFO">${output} = 12964-rpcbasic</msg>
<status status="PASS" starttime="20211007 13:18:58.956" endtime="20211007 13:19:07.333"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:19:07.335" level="INFO">12964-rpcbasic</msg>
<status status="PASS" starttime="20211007 13:19:07.334" endtime="20211007 13:19:07.335"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:19:07.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:19:07.336" endtime="20211007 13:19:07.337"/>
</kw>
<status status="PASS" starttime="20211007 13:18:58.956" endtime="20211007 13:19:07.338"/>
</kw>
<msg timestamp="20211007 13:19:07.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:18:58.955" endtime="20211007 13:19:07.338"/>
</kw>
<msg timestamp="20211007 13:19:07.339" level="INFO">${result} = 12964-rpcbasic</msg>
<status status="PASS" starttime="20211007 13:18:58.954" endtime="20211007 13:19:07.339"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211007 13:19:07.339" endtime="20211007 13:19:07.340"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:19:07.352" level="INFO">Running command 'ozone sh key put /12964-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:22:14.448" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211007 13:19:07.349" endtime="20211007 13:22:14.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211007 13:22:14.449" endtime="20211007 13:22:14.449"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211007 13:22:14.449" endtime="20211007 13:22:14.449"/>
</kw>
<status status="FAIL" starttime="20211007 13:19:07.347" endtime="20211007 13:22:14.450"/>
</kw>
<msg timestamp="20211007 13:22:14.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211007 13:19:07.347" endtime="20211007 13:22:14.450"/>
</kw>
<status status="FAIL" starttime="20211007 13:19:07.343" endtime="20211007 13:22:14.450"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211007 13:22:14.450" endtime="20211007 13:22:14.450"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211007 13:22:14.451" endtime="20211007 13:22:14.451"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211007 13:22:14.451" endtime="20211007 13:22:14.451"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211007 13:22:14.451" endtime="20211007 13:22:14.451"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211007 13:22:14.451" endtime="20211007 13:22:14.451"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211007 13:22:14.451" endtime="20211007 13:22:14.452"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211007 13:22:14.452" endtime="20211007 13:22:14.452"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211007 13:22:14.452" endtime="20211007 13:22:14.452"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211007 13:22:14.452" endtime="20211007 13:22:14.452"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211007 13:22:14.453" endtime="20211007 13:22:14.453"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211007 13:22:14.453" endtime="20211007 13:22:14.453"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211007 13:22:14.453" endtime="20211007 13:22:14.453"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211007 13:22:14.453" endtime="20211007 13:22:14.453"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211007 13:22:14.453" endtime="20211007 13:22:14.453"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211007 13:22:14.453" endtime="20211007 13:22:14.454"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211007 13:22:14.454" endtime="20211007 13:22:14.454"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211007 13:22:14.454" endtime="20211007 13:22:14.454"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211007 13:22:14.454" endtime="20211007 13:22:14.454"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211007 13:22:14.454" endtime="20211007 13:22:14.454"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211007 13:22:14.454" endtime="20211007 13:22:14.455"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211007 13:22:14.455" endtime="20211007 13:22:14.455"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211007 13:22:14.455" endtime="20211007 13:22:14.455"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211007 13:22:14.456" endtime="20211007 13:22:14.456"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211007 13:22:14.456" endtime="20211007 13:22:14.456"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20211007 13:22:14.456" endtime="20211007 13:22:14.456"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211007 13:22:14.456" endtime="20211007 13:22:14.456"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211007 13:22:14.457" endtime="20211007 13:22:14.457"/>
</kw>
<status status="FAIL" starttime="20211007 13:19:07.341" endtime="20211007 13:22:14.457"/>
</kw>
<status status="FAIL" starttime="20211007 13:19:07.341" endtime="20211007 13:22:14.457"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211007 13:22:14.457" endtime="20211007 13:22:14.457"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211007 13:22:14.457" endtime="20211007 13:22:14.458"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211007 13:22:14.458" endtime="20211007 13:22:14.458"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211007 13:22:14.458" endtime="20211007 13:22:14.458"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211007 13:22:14.458" endtime="20211007 13:22:14.458"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211007 13:22:14.458" endtime="20211007 13:22:14.458"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211007 13:22:14.458" endtime="20211007 13:22:14.458"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211007 13:22:14.459" endtime="20211007 13:22:14.459"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211007 13:22:14.459" endtime="20211007 13:22:14.459"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211007 13:22:14.459" endtime="20211007 13:22:14.459"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211007 13:22:14.459" endtime="20211007 13:22:14.459"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211007 13:22:14.459" endtime="20211007 13:22:14.459"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211007 13:22:14.460" endtime="20211007 13:22:14.460"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211007 13:22:14.460" endtime="20211007 13:22:14.460"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211007 13:22:14.460" endtime="20211007 13:22:14.460"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211007 13:22:14.460" endtime="20211007 13:22:14.460"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211007 13:22:14.460" endtime="20211007 13:22:14.461"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211007 13:22:14.461" endtime="20211007 13:22:14.461"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211007 13:22:14.461" endtime="20211007 13:22:14.461"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211007 13:22:14.461" endtime="20211007 13:22:14.461"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211007 13:22:14.462" endtime="20211007 13:22:14.462"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211007 13:22:14.462" endtime="20211007 13:22:14.462"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211007 13:22:14.462" endtime="20211007 13:22:14.463"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211007 13:22:14.463" endtime="20211007 13:22:14.463"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211007 13:22:14.463" endtime="20211007 13:22:14.463"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211007 13:22:14.463" endtime="20211007 13:22:14.463"/>
</kw>
<status status="FAIL" starttime="20211007 13:17:14.448" endtime="20211007 13:22:14.464"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211007 13:17:14.447" endtime="20211007 13:22:14.464">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20211007 13:17:14.418" endtime="20211007 13:22:14.466"/>
</suite>
<suite id="s1-s1-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211007 13:22:14.484" level="INFO">${random} = 77607</msg>
<status status="PASS" starttime="20211007 13:22:14.483" endtime="20211007 13:22:14.484"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211007 13:22:14.485" level="INFO">${prefix} = 77607</msg>
<status status="PASS" starttime="20211007 13:22:14.484" endtime="20211007 13:22:14.485"/>
</kw>
<status status="PASS" starttime="20211007 13:22:14.482" endtime="20211007 13:22:14.485"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:22:14.491" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:22:14.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:22:14.497" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211007 13:22:14.489" endtime="20211007 13:22:14.497"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:22:14.499" level="INFO">scm</msg>
<status status="PASS" starttime="20211007 13:22:14.498" endtime="20211007 13:22:14.500"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:22:14.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:22:14.500" endtime="20211007 13:22:14.501"/>
</kw>
<status status="PASS" starttime="20211007 13:22:14.488" endtime="20211007 13:22:14.501"/>
</kw>
<msg timestamp="20211007 13:22:14.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:22:14.488" endtime="20211007 13:22:14.502"/>
</kw>
<msg timestamp="20211007 13:22:14.502" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211007 13:22:14.487" endtime="20211007 13:22:14.502"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211007 13:22:14.504" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211007 13:22:14.502" endtime="20211007 13:22:14.504"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:22:14.510" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:22:14.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:22:14.549" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:22:14.507" endtime="20211007 13:22:14.549"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:22:14.550" level="INFO"/>
<status status="PASS" starttime="20211007 13:22:14.550" endtime="20211007 13:22:14.550"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:22:14.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:22:14.551" endtime="20211007 13:22:14.551"/>
</kw>
<status status="PASS" starttime="20211007 13:22:14.506" endtime="20211007 13:22:14.552"/>
</kw>
<msg timestamp="20211007 13:22:14.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:22:14.506" endtime="20211007 13:22:14.552"/>
</kw>
<status status="PASS" starttime="20211007 13:22:14.505" endtime="20211007 13:22:14.552"/>
</kw>
<status status="PASS" starttime="20211007 13:22:14.504" endtime="20211007 13:22:14.552"/>
</kw>
<status status="PASS" starttime="20211007 13:22:14.487" endtime="20211007 13:22:14.552"/>
</kw>
<status status="PASS" starttime="20211007 13:22:14.486" endtime="20211007 13:22:14.552"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:22:14.557" level="INFO">Running command 'ozone sh volume info o3://om:9862/77607-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:22:22.938" level="INFO">${rc} = 255</msg>
<msg timestamp="20211007 13:22:22.938" level="INFO">${output} = VOLUME_NOT_FOUND Volume 77607-rpcwoport is not found</msg>
<status status="PASS" starttime="20211007 13:22:14.554" endtime="20211007 13:22:22.938"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:22:22.941" level="INFO">VOLUME_NOT_FOUND Volume 77607-rpcwoport is not found</msg>
<status status="PASS" starttime="20211007 13:22:22.940" endtime="20211007 13:22:22.941"/>
</kw>
<msg timestamp="20211007 13:22:22.942" level="INFO">${result} = VOLUME_NOT_FOUND Volume 77607-rpcwoport is not found</msg>
<status status="PASS" starttime="20211007 13:22:14.553" endtime="20211007 13:22:22.942"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211007 13:22:22.943" endtime="20211007 13:22:22.944"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:22:22.951" level="INFO">Running command 'ozone sh volume create o3://om:9862/77607-rpcwoport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:22:31.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:22:31.305" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:22:22.948" endtime="20211007 13:22:31.305"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:22:31.308" level="INFO"/>
<status status="PASS" starttime="20211007 13:22:31.306" endtime="20211007 13:22:31.308"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:22:31.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:22:31.308" endtime="20211007 13:22:31.309"/>
</kw>
<status status="PASS" starttime="20211007 13:22:22.947" endtime="20211007 13:22:31.311"/>
</kw>
<msg timestamp="20211007 13:22:31.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:22:22.946" endtime="20211007 13:22:31.311"/>
</kw>
<msg timestamp="20211007 13:22:31.312" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211007 13:22:22.944" endtime="20211007 13:22:31.312"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211007 13:22:31.312" endtime="20211007 13:22:31.314"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:22:31.321" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="77607-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:22:38.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:22:38.342" level="INFO">${output} = {
  "metadata": {},
  "name": "77607-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211007 13:22:31.318" endtime="20211007 13:22:38.343"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:22:38.345" level="INFO">{
  "metadata": {},
  "name": "77607-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-07T13:22:30.902Z",
  "modificationTime": "2021-10-07T13:22:30.902Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211007 13:22:38.343" endtime="20211007 13:22:38.345"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:22:38.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:22:38.345" endtime="20211007 13:22:38.346"/>
</kw>
<status status="PASS" starttime="20211007 13:22:31.317" endtime="20211007 13:22:38.347"/>
</kw>
<msg timestamp="20211007 13:22:38.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:22:31.316" endtime="20211007 13:22:38.347"/>
</kw>
<msg timestamp="20211007 13:22:38.348" level="INFO">${result} = {
  "metadata": {},
  "name": "77607-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211007 13:22:31.314" endtime="20211007 13:22:38.348"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211007 13:22:38.348" endtime="20211007 13:22:38.349"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:22:38.363" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="77607-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:22:44.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:22:44.519" level="INFO">${output} = {
  "metadata": {},
  "name": "77607-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211007 13:22:38.351" endtime="20211007 13:22:44.519"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:22:44.522" level="INFO">{
  "metadata": {},
  "name": "77607-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-07T13:22:30.902Z",
  "modificationTime": "2021-10-07T13:22:30.902Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211007 13:22:44.520" endtime="20211007 13:22:44.522"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:22:44.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:22:44.522" endtime="20211007 13:22:44.522"/>
</kw>
<status status="PASS" starttime="20211007 13:22:38.350" endtime="20211007 13:22:44.523"/>
</kw>
<msg timestamp="20211007 13:22:44.523" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:22:38.350" endtime="20211007 13:22:44.523"/>
</kw>
<msg timestamp="20211007 13:22:44.524" level="INFO">${result} = {
  "metadata": {},
  "name": "77607-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211007 13:22:38.349" endtime="20211007 13:22:44.524"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211007 13:22:44.524" endtime="20211007 13:22:44.525"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:22:44.531" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/77607-rpcwoport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:22:52.411" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:22:52.411" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:22:44.528" endtime="20211007 13:22:52.411"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:22:52.413" level="INFO"/>
<status status="PASS" starttime="20211007 13:22:52.412" endtime="20211007 13:22:52.414"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:22:52.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:22:52.414" endtime="20211007 13:22:52.415"/>
</kw>
<status status="PASS" starttime="20211007 13:22:44.527" endtime="20211007 13:22:52.416"/>
</kw>
<msg timestamp="20211007 13:22:52.416" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:22:44.527" endtime="20211007 13:22:52.416"/>
</kw>
<status status="PASS" starttime="20211007 13:22:44.526" endtime="20211007 13:22:52.417"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:22:52.425" level="INFO">Running command 'ozone sh volume info o3://om:9862/77607-rpcwoport | jq -r '. | select(.name=="77607-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:22:59.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:22:59.985" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211007 13:22:52.422" endtime="20211007 13:22:59.985"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:22:59.986" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211007 13:22:59.985" endtime="20211007 13:22:59.986"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:22:59.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:22:59.987" endtime="20211007 13:22:59.987"/>
</kw>
<status status="PASS" starttime="20211007 13:22:52.420" endtime="20211007 13:22:59.988"/>
</kw>
<msg timestamp="20211007 13:22:59.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:22:52.420" endtime="20211007 13:22:59.988"/>
</kw>
<msg timestamp="20211007 13:22:59.988" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211007 13:22:52.417" endtime="20211007 13:22:59.988"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211007 13:22:59.989" endtime="20211007 13:22:59.989"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:22:59.994" level="INFO">Running command 'ozone sh bucket create o3://om:9862/77607-rpcwoport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:23:07.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:23:07.537" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:22:59.991" endtime="20211007 13:23:07.537"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:23:07.538" level="INFO"/>
<status status="PASS" starttime="20211007 13:23:07.537" endtime="20211007 13:23:07.538"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:23:07.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:23:07.538" endtime="20211007 13:23:07.539"/>
</kw>
<status status="PASS" starttime="20211007 13:22:59.991" endtime="20211007 13:23:07.539"/>
</kw>
<msg timestamp="20211007 13:23:07.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:22:59.990" endtime="20211007 13:23:07.540"/>
</kw>
<status status="PASS" starttime="20211007 13:22:59.989" endtime="20211007 13:23:07.540"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:23:07.547" level="INFO">Running command 'ozone sh bucket info o3://om:9862/77607-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:23:15.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:23:15.728" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211007 13:23:07.543" endtime="20211007 13:23:15.728"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:23:15.732" level="INFO">DISK</msg>
<status status="PASS" starttime="20211007 13:23:15.729" endtime="20211007 13:23:15.732"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:23:15.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:23:15.733" endtime="20211007 13:23:15.734"/>
</kw>
<status status="PASS" starttime="20211007 13:23:07.542" endtime="20211007 13:23:15.735"/>
</kw>
<msg timestamp="20211007 13:23:15.735" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:23:07.542" endtime="20211007 13:23:15.735"/>
</kw>
<msg timestamp="20211007 13:23:15.736" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211007 13:23:07.541" endtime="20211007 13:23:15.736"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211007 13:23:15.736" endtime="20211007 13:23:15.737"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:23:15.746" level="INFO">Running command 'ozone sh bucket info o3://om:9862/77607-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:23:24.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:23:24.568" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211007 13:23:15.742" endtime="20211007 13:23:24.568"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:23:24.570" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211007 13:23:24.569" endtime="20211007 13:23:24.570"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:23:24.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:23:24.570" endtime="20211007 13:23:24.570"/>
</kw>
<status status="PASS" starttime="20211007 13:23:15.741" endtime="20211007 13:23:24.571"/>
</kw>
<msg timestamp="20211007 13:23:24.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:23:15.740" endtime="20211007 13:23:24.571"/>
</kw>
<msg timestamp="20211007 13:23:24.571" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211007 13:23:15.738" endtime="20211007 13:23:24.571"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211007 13:23:24.572" endtime="20211007 13:23:24.572"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:23:24.578" level="INFO">Running command 'ozone sh bucket info o3://om:9862/77607-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:23:32.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:23:32.759" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211007 13:23:24.574" endtime="20211007 13:23:32.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:23:32.761" level="INFO">100</msg>
<status status="PASS" starttime="20211007 13:23:32.760" endtime="20211007 13:23:32.761"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:23:32.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:23:32.761" endtime="20211007 13:23:32.762"/>
</kw>
<status status="PASS" starttime="20211007 13:23:24.574" endtime="20211007 13:23:32.762"/>
</kw>
<msg timestamp="20211007 13:23:32.762" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:23:24.573" endtime="20211007 13:23:32.763"/>
</kw>
<msg timestamp="20211007 13:23:32.763" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211007 13:23:24.573" endtime="20211007 13:23:32.763"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211007 13:23:32.763" endtime="20211007 13:23:32.764"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:23:32.770" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/77607-rpcwoport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:23:41.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:23:41.132" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:23:32.766" endtime="20211007 13:23:41.132"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:23:41.133" level="INFO"/>
<status status="PASS" starttime="20211007 13:23:41.132" endtime="20211007 13:23:41.133"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:23:41.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:23:41.134" endtime="20211007 13:23:41.135"/>
</kw>
<status status="PASS" starttime="20211007 13:23:32.765" endtime="20211007 13:23:41.135"/>
</kw>
<msg timestamp="20211007 13:23:41.135" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:23:32.765" endtime="20211007 13:23:41.136"/>
</kw>
<status status="PASS" starttime="20211007 13:23:32.764" endtime="20211007 13:23:41.136"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:23:41.145" level="INFO">Running command 'ozone sh bucket info o3://om:9862/77607-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:23:48.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:23:48.128" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211007 13:23:41.141" endtime="20211007 13:23:48.128"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:23:48.130" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211007 13:23:48.129" endtime="20211007 13:23:48.131"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:23:48.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:23:48.131" endtime="20211007 13:23:48.132"/>
</kw>
<status status="PASS" starttime="20211007 13:23:41.139" endtime="20211007 13:23:48.132"/>
</kw>
<msg timestamp="20211007 13:23:48.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:23:41.139" endtime="20211007 13:23:48.132"/>
</kw>
<msg timestamp="20211007 13:23:48.133" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211007 13:23:41.136" endtime="20211007 13:23:48.133"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211007 13:23:48.133" endtime="20211007 13:23:48.134"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:23:48.139" level="INFO">Running command 'ozone sh bucket info o3://om:9862/77607-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:23:55.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:23:55.333" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211007 13:23:48.136" endtime="20211007 13:23:55.333"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:23:55.336" level="INFO">1000</msg>
<status status="PASS" starttime="20211007 13:23:55.334" endtime="20211007 13:23:55.337"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:23:55.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:23:55.337" endtime="20211007 13:23:55.339"/>
</kw>
<status status="PASS" starttime="20211007 13:23:48.136" endtime="20211007 13:23:55.340"/>
</kw>
<msg timestamp="20211007 13:23:55.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:23:48.135" endtime="20211007 13:23:55.341"/>
</kw>
<msg timestamp="20211007 13:23:55.341" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211007 13:23:48.134" endtime="20211007 13:23:55.341"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211007 13:23:55.341" endtime="20211007 13:23:55.342"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:23:55.349" level="INFO">Running command 'ozone sh bucket list o3://om:9862/77607-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:24:01.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:24:01.753" level="INFO">${output} = 77607-rpcwoport</msg>
<status status="PASS" starttime="20211007 13:23:55.345" endtime="20211007 13:24:01.753"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:24:01.755" level="INFO">77607-rpcwoport</msg>
<status status="PASS" starttime="20211007 13:24:01.754" endtime="20211007 13:24:01.755"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:24:01.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:24:01.755" endtime="20211007 13:24:01.755"/>
</kw>
<status status="PASS" starttime="20211007 13:23:55.344" endtime="20211007 13:24:01.756"/>
</kw>
<msg timestamp="20211007 13:24:01.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:23:55.344" endtime="20211007 13:24:01.756"/>
</kw>
<msg timestamp="20211007 13:24:01.756" level="INFO">${result} = 77607-rpcwoport</msg>
<status status="PASS" starttime="20211007 13:23:55.342" endtime="20211007 13:24:01.757"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211007 13:24:01.757" endtime="20211007 13:24:01.757"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:24:01.765" level="INFO">Running command 'ozone sh key put o3://om:9862/77607-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:27:14.486" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211007 13:24:01.763" endtime="20211007 13:27:14.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211007 13:27:14.487" endtime="20211007 13:27:14.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211007 13:27:14.487" endtime="20211007 13:27:14.487"/>
</kw>
<status status="FAIL" starttime="20211007 13:24:01.762" endtime="20211007 13:27:14.488"/>
</kw>
<msg timestamp="20211007 13:27:14.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211007 13:24:01.762" endtime="20211007 13:27:14.488"/>
</kw>
<status status="FAIL" starttime="20211007 13:24:01.761" endtime="20211007 13:27:14.488"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211007 13:27:14.489" endtime="20211007 13:27:14.489"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211007 13:27:14.489" endtime="20211007 13:27:14.489"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211007 13:27:14.489" endtime="20211007 13:27:14.489"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211007 13:27:14.489" endtime="20211007 13:27:14.489"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211007 13:27:14.489" endtime="20211007 13:27:14.489"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211007 13:27:14.490" endtime="20211007 13:27:14.490"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211007 13:27:14.490" endtime="20211007 13:27:14.490"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211007 13:27:14.490" endtime="20211007 13:27:14.496"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211007 13:27:14.497" endtime="20211007 13:27:14.497"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211007 13:27:14.497" endtime="20211007 13:27:14.497"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211007 13:27:14.497" endtime="20211007 13:27:14.497"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211007 13:27:14.497" endtime="20211007 13:27:14.497"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211007 13:27:14.497" endtime="20211007 13:27:14.497"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211007 13:27:14.497" endtime="20211007 13:27:14.498"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211007 13:27:14.498" endtime="20211007 13:27:14.498"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211007 13:27:14.498" endtime="20211007 13:27:14.498"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211007 13:27:14.498" endtime="20211007 13:27:14.498"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211007 13:27:14.498" endtime="20211007 13:27:14.498"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211007 13:27:14.499" endtime="20211007 13:27:14.499"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211007 13:27:14.499" endtime="20211007 13:27:14.499"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211007 13:27:14.499" endtime="20211007 13:27:14.499"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211007 13:27:14.499" endtime="20211007 13:27:14.499"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211007 13:27:14.499" endtime="20211007 13:27:14.499"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211007 13:27:14.499" endtime="20211007 13:27:14.500"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20211007 13:27:14.500" endtime="20211007 13:27:14.500"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211007 13:27:14.500" endtime="20211007 13:27:14.507"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211007 13:27:14.507" endtime="20211007 13:27:14.507"/>
</kw>
<status status="FAIL" starttime="20211007 13:24:01.758" endtime="20211007 13:27:14.507"/>
</kw>
<status status="FAIL" starttime="20211007 13:24:01.757" endtime="20211007 13:27:14.507"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211007 13:27:14.507" endtime="20211007 13:27:14.508"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211007 13:27:14.508" endtime="20211007 13:27:14.508"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211007 13:27:14.508" endtime="20211007 13:27:14.508"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211007 13:27:14.508" endtime="20211007 13:27:14.508"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211007 13:27:14.509" endtime="20211007 13:27:14.509"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211007 13:27:14.509" endtime="20211007 13:27:14.509"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211007 13:27:14.509" endtime="20211007 13:27:14.509"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211007 13:27:14.509" endtime="20211007 13:27:14.509"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211007 13:27:14.509" endtime="20211007 13:27:14.509"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211007 13:27:14.510" endtime="20211007 13:27:14.510"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211007 13:27:14.510" endtime="20211007 13:27:14.510"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211007 13:27:14.510" endtime="20211007 13:27:14.510"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211007 13:27:14.511" endtime="20211007 13:27:14.511"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211007 13:27:14.511" endtime="20211007 13:27:14.511"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211007 13:27:14.511" endtime="20211007 13:27:14.511"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211007 13:27:14.511" endtime="20211007 13:27:14.511"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211007 13:27:14.512" endtime="20211007 13:27:14.512"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211007 13:27:14.512" endtime="20211007 13:27:14.512"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211007 13:27:14.512" endtime="20211007 13:27:14.512"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211007 13:27:14.512" endtime="20211007 13:27:14.512"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211007 13:27:14.513" endtime="20211007 13:27:14.513"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211007 13:27:14.513" endtime="20211007 13:27:14.513"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211007 13:27:14.513" endtime="20211007 13:27:14.513"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211007 13:27:14.513" endtime="20211007 13:27:14.513"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211007 13:27:14.514" endtime="20211007 13:27:14.514"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211007 13:27:14.514" endtime="20211007 13:27:14.514"/>
</kw>
<status status="FAIL" starttime="20211007 13:22:14.553" endtime="20211007 13:27:14.514"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211007 13:22:14.485" endtime="20211007 13:27:14.514">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:27:14.529" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:27:14.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:27:14.532" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211007 13:27:14.525" endtime="20211007 13:27:14.532"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:27:14.534" level="INFO">scm</msg>
<status status="PASS" starttime="20211007 13:27:14.533" endtime="20211007 13:27:14.534"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:27:14.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:27:14.534" endtime="20211007 13:27:14.535"/>
</kw>
<status status="PASS" starttime="20211007 13:27:14.524" endtime="20211007 13:27:14.535"/>
</kw>
<msg timestamp="20211007 13:27:14.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:27:14.524" endtime="20211007 13:27:14.535"/>
</kw>
<msg timestamp="20211007 13:27:14.535" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211007 13:27:14.523" endtime="20211007 13:27:14.535"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211007 13:27:14.536" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211007 13:27:14.536" endtime="20211007 13:27:14.536"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:27:14.582" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:27:14.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:27:14.613" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:27:14.544" endtime="20211007 13:27:14.613"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:27:14.615" level="INFO"/>
<status status="PASS" starttime="20211007 13:27:14.614" endtime="20211007 13:27:14.615"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:27:14.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:27:14.615" endtime="20211007 13:27:14.615"/>
</kw>
<status status="PASS" starttime="20211007 13:27:14.538" endtime="20211007 13:27:14.616"/>
</kw>
<msg timestamp="20211007 13:27:14.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:27:14.538" endtime="20211007 13:27:14.616"/>
</kw>
<status status="PASS" starttime="20211007 13:27:14.537" endtime="20211007 13:27:14.616"/>
</kw>
<status status="PASS" starttime="20211007 13:27:14.537" endtime="20211007 13:27:14.617"/>
</kw>
<status status="PASS" starttime="20211007 13:27:14.523" endtime="20211007 13:27:14.617"/>
</kw>
<status status="PASS" starttime="20211007 13:27:14.522" endtime="20211007 13:27:14.617"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:27:14.628" level="INFO">Running command 'ozone sh volume create o3://om:9862/77607-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:27:23.917" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:27:23.917" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:27:14.623" endtime="20211007 13:27:23.917"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:27:23.918" level="INFO"/>
<status status="PASS" starttime="20211007 13:27:23.917" endtime="20211007 13:27:23.918"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:27:23.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:27:23.918" endtime="20211007 13:27:23.919"/>
</kw>
<status status="PASS" starttime="20211007 13:27:14.621" endtime="20211007 13:27:23.919"/>
</kw>
<msg timestamp="20211007 13:27:23.919" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:27:14.620" endtime="20211007 13:27:23.919"/>
</kw>
<status status="PASS" starttime="20211007 13:27:14.619" endtime="20211007 13:27:23.920"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:27:23.926" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/77607-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:27:31.607" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:27:31.607" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211007 13:27:23.923" endtime="20211007 13:27:31.607"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:27:31.608" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211007 13:27:31.608" endtime="20211007 13:27:31.609"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:27:31.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:27:31.609" endtime="20211007 13:27:31.609"/>
</kw>
<status status="PASS" starttime="20211007 13:27:23.922" endtime="20211007 13:27:31.610"/>
</kw>
<msg timestamp="20211007 13:27:31.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:27:23.921" endtime="20211007 13:27:31.610"/>
</kw>
<msg timestamp="20211007 13:27:31.610" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211007 13:27:23.920" endtime="20211007 13:27:31.610"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211007 13:27:31.610" endtime="20211007 13:27:31.611"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:27:31.616" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/77607-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:27:37.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:27:37.943" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211007 13:27:31.614" endtime="20211007 13:27:37.943"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:27:37.945" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211007 13:27:37.944" endtime="20211007 13:27:37.945"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:27:37.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:27:37.945" endtime="20211007 13:27:37.945"/>
</kw>
<status status="PASS" starttime="20211007 13:27:31.613" endtime="20211007 13:27:37.946"/>
</kw>
<msg timestamp="20211007 13:27:37.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:27:31.612" endtime="20211007 13:27:37.946"/>
</kw>
<msg timestamp="20211007 13:27:37.946" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211007 13:27:31.612" endtime="20211007 13:27:37.946"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:27:37.953" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/77607-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:27:46.085" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:27:46.086" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211007 13:27:37.950" endtime="20211007 13:27:46.086"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:27:46.087" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211007 13:27:46.086" endtime="20211007 13:27:46.087"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:27:46.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:27:46.087" endtime="20211007 13:27:46.088"/>
</kw>
<status status="PASS" starttime="20211007 13:27:37.950" endtime="20211007 13:27:46.089"/>
</kw>
<msg timestamp="20211007 13:27:46.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:27:37.949" endtime="20211007 13:27:46.090"/>
</kw>
<msg timestamp="20211007 13:27:46.091" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211007 13:27:37.946" endtime="20211007 13:27:46.091"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211007 13:27:46.091" endtime="20211007 13:27:46.092"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:27:46.099" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/77607-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:27:54.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:27:54.024" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211007 13:27:46.095" endtime="20211007 13:27:54.024"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:27:54.025" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211007 13:27:54.025" endtime="20211007 13:27:54.026"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:27:54.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:27:54.026" endtime="20211007 13:27:54.026"/>
</kw>
<status status="PASS" starttime="20211007 13:27:46.094" endtime="20211007 13:27:54.027"/>
</kw>
<msg timestamp="20211007 13:27:54.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:27:46.093" endtime="20211007 13:27:54.027"/>
</kw>
<msg timestamp="20211007 13:27:54.027" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211007 13:27:46.093" endtime="20211007 13:27:54.027"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:27:54.031" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/77607-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:27:59.935" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:27:59.935" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211007 13:27:54.029" endtime="20211007 13:27:59.935"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:27:59.937" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211007 13:27:59.936" endtime="20211007 13:27:59.938"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:27:59.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:27:59.938" endtime="20211007 13:27:59.940"/>
</kw>
<status status="PASS" starttime="20211007 13:27:54.029" endtime="20211007 13:27:59.941"/>
</kw>
<msg timestamp="20211007 13:27:59.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:27:54.028" endtime="20211007 13:27:59.942"/>
</kw>
<msg timestamp="20211007 13:27:59.942" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211007 13:27:54.027" endtime="20211007 13:27:59.942"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211007 13:27:59.943" endtime="20211007 13:27:59.945"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:27:59.952" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/77607-rpcwoport2 -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:28:07.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:28:07.738" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211007 13:27:59.949" endtime="20211007 13:28:07.738"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:28:07.739" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211007 13:28:07.738" endtime="20211007 13:28:07.739"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:28:07.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:28:07.739" endtime="20211007 13:28:07.740"/>
</kw>
<status status="PASS" starttime="20211007 13:27:59.948" endtime="20211007 13:28:07.741"/>
</kw>
<msg timestamp="20211007 13:28:07.741" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:27:59.947" endtime="20211007 13:28:07.741"/>
</kw>
<msg timestamp="20211007 13:28:07.742" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211007 13:27:59.945" endtime="20211007 13:28:07.742"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:28:07.749" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/77607-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:28:16.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:28:16.510" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211007 13:28:07.746" endtime="20211007 13:28:16.510"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:28:16.511" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211007 13:28:16.510" endtime="20211007 13:28:16.511"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:28:16.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:28:16.511" endtime="20211007 13:28:16.512"/>
</kw>
<status status="PASS" starttime="20211007 13:28:07.745" endtime="20211007 13:28:16.512"/>
</kw>
<msg timestamp="20211007 13:28:16.512" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:28:07.744" endtime="20211007 13:28:16.513"/>
</kw>
<msg timestamp="20211007 13:28:16.513" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211007 13:28:07.742" endtime="20211007 13:28:16.513"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211007 13:28:16.513" endtime="20211007 13:28:16.514"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211007 13:28:16.514" endtime="20211007 13:28:16.515"/>
</kw>
<status status="PASS" starttime="20211007 13:27:14.618" endtime="20211007 13:28:16.516"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211007 13:27:14.520" endtime="20211007 13:28:16.516"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:28:16.524" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:28:16.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:28:16.529" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211007 13:28:16.521" endtime="20211007 13:28:16.529"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:28:16.532" level="INFO">scm</msg>
<status status="PASS" starttime="20211007 13:28:16.530" endtime="20211007 13:28:16.534"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:28:16.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:28:16.534" endtime="20211007 13:28:16.538"/>
</kw>
<status status="PASS" starttime="20211007 13:28:16.521" endtime="20211007 13:28:16.539"/>
</kw>
<msg timestamp="20211007 13:28:16.539" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:28:16.520" endtime="20211007 13:28:16.539"/>
</kw>
<msg timestamp="20211007 13:28:16.540" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211007 13:28:16.519" endtime="20211007 13:28:16.540"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211007 13:28:16.541" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211007 13:28:16.541" endtime="20211007 13:28:16.541"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:28:16.553" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:28:16.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:28:16.576" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:28:16.547" endtime="20211007 13:28:16.576"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:28:16.577" level="INFO"/>
<status status="PASS" starttime="20211007 13:28:16.577" endtime="20211007 13:28:16.577"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:28:16.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:28:16.578" endtime="20211007 13:28:16.578"/>
</kw>
<status status="PASS" starttime="20211007 13:28:16.545" endtime="20211007 13:28:16.579"/>
</kw>
<msg timestamp="20211007 13:28:16.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:28:16.545" endtime="20211007 13:28:16.579"/>
</kw>
<status status="PASS" starttime="20211007 13:28:16.542" endtime="20211007 13:28:16.579"/>
</kw>
<status status="PASS" starttime="20211007 13:28:16.541" endtime="20211007 13:28:16.580"/>
</kw>
<status status="PASS" starttime="20211007 13:28:16.519" endtime="20211007 13:28:16.581"/>
</kw>
<status status="PASS" starttime="20211007 13:28:16.518" endtime="20211007 13:28:16.581"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:28:16.590" level="INFO">Running command 'ozone sh bucket create o3://om:9862/77607-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:28:24.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:28:24.405" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:28:16.585" endtime="20211007 13:28:24.405"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:28:24.406" level="INFO"/>
<status status="PASS" starttime="20211007 13:28:24.405" endtime="20211007 13:28:24.406"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:28:24.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:28:24.407" endtime="20211007 13:28:24.408"/>
</kw>
<status status="PASS" starttime="20211007 13:28:16.584" endtime="20211007 13:28:24.408"/>
</kw>
<msg timestamp="20211007 13:28:24.409" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:28:16.583" endtime="20211007 13:28:24.409"/>
</kw>
<status status="PASS" starttime="20211007 13:28:16.582" endtime="20211007 13:28:24.409"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:28:24.418" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/77607-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:28:30.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:28:30.528" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211007 13:28:24.415" endtime="20211007 13:28:30.528"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:28:30.530" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211007 13:28:30.529" endtime="20211007 13:28:30.530"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:28:30.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:28:30.531" endtime="20211007 13:28:30.531"/>
</kw>
<status status="PASS" starttime="20211007 13:28:24.412" endtime="20211007 13:28:30.532"/>
</kw>
<msg timestamp="20211007 13:28:30.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:28:24.411" endtime="20211007 13:28:30.533"/>
</kw>
<msg timestamp="20211007 13:28:30.533" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211007 13:28:24.410" endtime="20211007 13:28:30.533"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211007 13:28:30.534" endtime="20211007 13:28:30.534"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:28:30.540" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/77607-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:28:38.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:28:38.789" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20211007 13:28:30.537" endtime="20211007 13:28:38.789"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:28:38.790" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20211007 13:28:38.789" endtime="20211007 13:28:38.790"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:28:38.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:28:38.791" endtime="20211007 13:28:38.792"/>
</kw>
<status status="PASS" starttime="20211007 13:28:30.536" endtime="20211007 13:28:38.792"/>
</kw>
<msg timestamp="20211007 13:28:38.792" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:28:30.536" endtime="20211007 13:28:38.792"/>
</kw>
<msg timestamp="20211007 13:28:38.793" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20211007 13:28:30.535" endtime="20211007 13:28:38.793"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:28:38.799" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/77607-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:28:46.328" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:28:46.328" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211007 13:28:38.796" endtime="20211007 13:28:46.329"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:28:46.330" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211007 13:28:46.329" endtime="20211007 13:28:46.330"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:28:46.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:28:46.330" endtime="20211007 13:28:46.331"/>
</kw>
<status status="PASS" starttime="20211007 13:28:38.794" endtime="20211007 13:28:46.332"/>
</kw>
<msg timestamp="20211007 13:28:46.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:28:38.794" endtime="20211007 13:28:46.332"/>
</kw>
<msg timestamp="20211007 13:28:46.332" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211007 13:28:38.793" endtime="20211007 13:28:46.333"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211007 13:28:46.333" endtime="20211007 13:28:46.334"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:28:46.340" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/77607-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:28:53.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:28:53.702" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211007 13:28:46.336" endtime="20211007 13:28:53.702"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:28:53.705" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211007 13:28:53.703" endtime="20211007 13:28:53.705"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:28:53.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:28:53.705" endtime="20211007 13:28:53.707"/>
</kw>
<status status="PASS" starttime="20211007 13:28:46.335" endtime="20211007 13:28:53.707"/>
</kw>
<msg timestamp="20211007 13:28:53.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:28:46.335" endtime="20211007 13:28:53.708"/>
</kw>
<msg timestamp="20211007 13:28:53.709" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211007 13:28:46.334" endtime="20211007 13:28:53.709"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:28:53.718" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/77607-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:29:01.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:29:01.414" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211007 13:28:53.714" endtime="20211007 13:29:01.414"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:29:01.415" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211007 13:29:01.414" endtime="20211007 13:29:01.416"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:29:01.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:29:01.416" endtime="20211007 13:29:01.417"/>
</kw>
<status status="PASS" starttime="20211007 13:28:53.712" endtime="20211007 13:29:01.418"/>
</kw>
<msg timestamp="20211007 13:29:01.419" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:28:53.711" endtime="20211007 13:29:01.419"/>
</kw>
<msg timestamp="20211007 13:29:01.419" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211007 13:28:53.709" endtime="20211007 13:29:01.419"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211007 13:29:01.419" endtime="20211007 13:29:01.420"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:29:01.427" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/77607-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:29:08.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:29:08.896" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211007 13:29:01.423" endtime="20211007 13:29:08.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:29:08.898" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211007 13:29:08.897" endtime="20211007 13:29:08.899"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:29:08.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:29:08.899" endtime="20211007 13:29:08.899"/>
</kw>
<status status="PASS" starttime="20211007 13:29:01.422" endtime="20211007 13:29:08.900"/>
</kw>
<msg timestamp="20211007 13:29:08.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:29:01.422" endtime="20211007 13:29:08.900"/>
</kw>
<msg timestamp="20211007 13:29:08.901" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211007 13:29:01.421" endtime="20211007 13:29:08.904"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:29:08.910" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/77607-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:29:17.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:29:17.486" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211007 13:29:08.906" endtime="20211007 13:29:17.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:29:17.488" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211007 13:29:17.487" endtime="20211007 13:29:17.489"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:29:17.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:29:17.489" endtime="20211007 13:29:17.491"/>
</kw>
<status status="PASS" starttime="20211007 13:29:08.906" endtime="20211007 13:29:17.492"/>
</kw>
<msg timestamp="20211007 13:29:17.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:29:08.905" endtime="20211007 13:29:17.492"/>
</kw>
<msg timestamp="20211007 13:29:17.493" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211007 13:29:08.904" endtime="20211007 13:29:17.493"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211007 13:29:17.494" endtime="20211007 13:29:17.495"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211007 13:29:17.495" endtime="20211007 13:29:17.496"/>
</kw>
<status status="PASS" starttime="20211007 13:28:16.581" endtime="20211007 13:29:17.497"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211007 13:28:16.517" endtime="20211007 13:29:17.498"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:29:17.515" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:29:17.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:29:17.522" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211007 13:29:17.511" endtime="20211007 13:29:17.522"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:29:17.523" level="INFO">scm</msg>
<status status="PASS" starttime="20211007 13:29:17.522" endtime="20211007 13:29:17.523"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:29:17.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:29:17.523" endtime="20211007 13:29:17.524"/>
</kw>
<status status="PASS" starttime="20211007 13:29:17.510" endtime="20211007 13:29:17.528"/>
</kw>
<msg timestamp="20211007 13:29:17.528" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:29:17.505" endtime="20211007 13:29:17.529"/>
</kw>
<msg timestamp="20211007 13:29:17.529" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211007 13:29:17.504" endtime="20211007 13:29:17.529"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211007 13:29:17.530" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211007 13:29:17.529" endtime="20211007 13:29:17.530"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:29:17.535" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:29:17.547" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:29:17.547" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:29:17.532" endtime="20211007 13:29:17.547"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:29:17.549" level="INFO"/>
<status status="PASS" starttime="20211007 13:29:17.547" endtime="20211007 13:29:17.549"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:29:17.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:29:17.549" endtime="20211007 13:29:17.550"/>
</kw>
<status status="PASS" starttime="20211007 13:29:17.532" endtime="20211007 13:29:17.551"/>
</kw>
<msg timestamp="20211007 13:29:17.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:29:17.531" endtime="20211007 13:29:17.551"/>
</kw>
<status status="PASS" starttime="20211007 13:29:17.530" endtime="20211007 13:29:17.552"/>
</kw>
<status status="PASS" starttime="20211007 13:29:17.530" endtime="20211007 13:29:17.552"/>
</kw>
<status status="PASS" starttime="20211007 13:29:17.503" endtime="20211007 13:29:17.553"/>
</kw>
<status status="PASS" starttime="20211007 13:29:17.501" endtime="20211007 13:29:17.553"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:29:17.561" level="INFO">Running command 'ozone sh key put o3://om:9862/77607-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:32:30.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:32:30.622" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:29:17.558" endtime="20211007 13:32:30.622"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:32:30.624" level="INFO"/>
<status status="PASS" starttime="20211007 13:32:30.623" endtime="20211007 13:32:30.624"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:32:30.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:32:30.625" endtime="20211007 13:32:30.625"/>
</kw>
<status status="PASS" starttime="20211007 13:29:17.555" endtime="20211007 13:32:30.626"/>
</kw>
<msg timestamp="20211007 13:32:30.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:29:17.555" endtime="20211007 13:32:30.626"/>
</kw>
<status status="PASS" starttime="20211007 13:29:17.554" endtime="20211007 13:32:30.626"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:32:30.632" level="INFO">Running command 'ozone sh key getacl o3://om:9862/77607-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:32:37.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:32:37.099" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211007 13:32:30.629" endtime="20211007 13:32:37.099"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:32:37.101" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211007 13:32:37.100" endtime="20211007 13:32:37.101"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:32:37.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:32:37.101" endtime="20211007 13:32:37.102"/>
</kw>
<status status="PASS" starttime="20211007 13:32:30.629" endtime="20211007 13:32:37.102"/>
</kw>
<msg timestamp="20211007 13:32:37.103" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:32:30.628" endtime="20211007 13:32:37.103"/>
</kw>
<msg timestamp="20211007 13:32:37.103" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211007 13:32:30.627" endtime="20211007 13:32:37.103"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211007 13:32:37.103" endtime="20211007 13:32:37.104"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:32:37.110" level="INFO">Running command 'ozone sh key addacl o3://om:9862/77607-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:32:44.626" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:32:44.626" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211007 13:32:37.107" endtime="20211007 13:32:44.626"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:32:44.627" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211007 13:32:44.626" endtime="20211007 13:32:44.627"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:32:44.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:32:44.627" endtime="20211007 13:32:44.629"/>
</kw>
<status status="PASS" starttime="20211007 13:32:37.105" endtime="20211007 13:32:44.629"/>
</kw>
<msg timestamp="20211007 13:32:44.629" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:32:37.105" endtime="20211007 13:32:44.630"/>
</kw>
<msg timestamp="20211007 13:32:44.630" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211007 13:32:37.104" endtime="20211007 13:32:44.630"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:32:44.638" level="INFO">Running command 'ozone sh key getacl o3://om:9862/77607-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:32:53.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:32:53.166" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211007 13:32:44.635" endtime="20211007 13:32:53.166"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:32:53.168" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211007 13:32:53.167" endtime="20211007 13:32:53.168"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:32:53.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:32:53.168" endtime="20211007 13:32:53.169"/>
</kw>
<status status="PASS" starttime="20211007 13:32:44.634" endtime="20211007 13:32:53.169"/>
</kw>
<msg timestamp="20211007 13:32:53.170" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:32:44.634" endtime="20211007 13:32:53.170"/>
</kw>
<msg timestamp="20211007 13:32:53.170" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211007 13:32:44.630" endtime="20211007 13:32:53.170"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211007 13:32:53.170" endtime="20211007 13:32:53.171"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:32:53.178" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/77607-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:32:58.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:32:58.815" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211007 13:32:53.174" endtime="20211007 13:32:58.815"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:32:58.817" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211007 13:32:58.816" endtime="20211007 13:32:58.817"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:32:58.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:32:58.817" endtime="20211007 13:32:58.818"/>
</kw>
<status status="PASS" starttime="20211007 13:32:53.174" endtime="20211007 13:32:58.818"/>
</kw>
<msg timestamp="20211007 13:32:58.818" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:32:53.173" endtime="20211007 13:32:58.819"/>
</kw>
<msg timestamp="20211007 13:32:58.819" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211007 13:32:53.172" endtime="20211007 13:32:58.819"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:32:58.825" level="INFO">Running command 'ozone sh key getacl o3://om:9862/77607-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:33:06.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:33:06.673" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211007 13:32:58.822" endtime="20211007 13:33:06.673"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:33:06.675" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20211007 13:33:06.674" endtime="20211007 13:33:06.675"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:33:06.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:33:06.675" endtime="20211007 13:33:06.677"/>
</kw>
<status status="PASS" starttime="20211007 13:32:58.821" endtime="20211007 13:33:06.678"/>
</kw>
<msg timestamp="20211007 13:33:06.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:32:58.820" endtime="20211007 13:33:06.679"/>
</kw>
<msg timestamp="20211007 13:33:06.680" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211007 13:32:58.819" endtime="20211007 13:33:06.680"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211007 13:33:06.681" endtime="20211007 13:33:06.682"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:33:06.691" level="INFO">Running command 'ozone sh key setacl o3://om:9862/77607-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:33:14.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:33:14.630" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211007 13:33:06.688" endtime="20211007 13:33:14.631"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:33:14.633" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211007 13:33:14.632" endtime="20211007 13:33:14.633"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:33:14.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:33:14.633" endtime="20211007 13:33:14.635"/>
</kw>
<status status="PASS" starttime="20211007 13:33:06.686" endtime="20211007 13:33:14.635"/>
</kw>
<msg timestamp="20211007 13:33:14.636" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:33:06.684" endtime="20211007 13:33:14.636"/>
</kw>
<msg timestamp="20211007 13:33:14.637" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211007 13:33:06.682" endtime="20211007 13:33:14.637"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:33:14.644" level="INFO">Running command 'ozone sh key getacl o3://om:9862/77607-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:33:22.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:33:22.835" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211007 13:33:14.641" endtime="20211007 13:33:22.835"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:33:22.836" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211007 13:33:22.835" endtime="20211007 13:33:22.836"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:33:22.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:33:22.837" endtime="20211007 13:33:22.837"/>
</kw>
<status status="PASS" starttime="20211007 13:33:14.639" endtime="20211007 13:33:22.837"/>
</kw>
<msg timestamp="20211007 13:33:22.838" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:33:14.639" endtime="20211007 13:33:22.838"/>
</kw>
<msg timestamp="20211007 13:33:22.838" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211007 13:33:14.637" endtime="20211007 13:33:22.838"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211007 13:33:22.838" endtime="20211007 13:33:22.839"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211007 13:33:22.839" endtime="20211007 13:33:22.840"/>
</kw>
<status status="PASS" starttime="20211007 13:29:17.553" endtime="20211007 13:33:22.841"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211007 13:29:17.499" endtime="20211007 13:33:22.841"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient prefix acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:33:22.852" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:33:22.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:33:22.857" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211007 13:33:22.849" endtime="20211007 13:33:22.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:33:22.859" level="INFO">scm</msg>
<status status="PASS" starttime="20211007 13:33:22.858" endtime="20211007 13:33:22.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:33:22.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:33:22.859" endtime="20211007 13:33:22.860"/>
</kw>
<status status="PASS" starttime="20211007 13:33:22.847" endtime="20211007 13:33:22.861"/>
</kw>
<msg timestamp="20211007 13:33:22.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:33:22.847" endtime="20211007 13:33:22.862"/>
</kw>
<msg timestamp="20211007 13:33:22.862" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211007 13:33:22.846" endtime="20211007 13:33:22.862"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211007 13:33:22.863" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211007 13:33:22.862" endtime="20211007 13:33:22.863"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:33:22.872" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:33:22.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:33:22.912" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:33:22.868" endtime="20211007 13:33:22.912"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:33:22.921" level="INFO"/>
<status status="PASS" starttime="20211007 13:33:22.913" endtime="20211007 13:33:22.921"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:33:22.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:33:22.921" endtime="20211007 13:33:22.922"/>
</kw>
<status status="PASS" starttime="20211007 13:33:22.867" endtime="20211007 13:33:22.922"/>
</kw>
<msg timestamp="20211007 13:33:22.922" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:33:22.867" endtime="20211007 13:33:22.923"/>
</kw>
<status status="PASS" starttime="20211007 13:33:22.865" endtime="20211007 13:33:22.923"/>
</kw>
<status status="PASS" starttime="20211007 13:33:22.864" endtime="20211007 13:33:22.923"/>
</kw>
<status status="PASS" starttime="20211007 13:33:22.845" endtime="20211007 13:33:22.923"/>
</kw>
<status status="PASS" starttime="20211007 13:33:22.844" endtime="20211007 13:33:22.923"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:33:22.929" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/77607-rpcwoport2/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:33:28.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:33:28.557" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211007 13:33:22.926" endtime="20211007 13:33:28.558"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:33:28.561" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211007 13:33:28.558" endtime="20211007 13:33:28.561"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:33:28.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:33:28.561" endtime="20211007 13:33:28.562"/>
</kw>
<status status="PASS" starttime="20211007 13:33:22.926" endtime="20211007 13:33:28.563"/>
</kw>
<msg timestamp="20211007 13:33:28.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:33:22.925" endtime="20211007 13:33:28.563"/>
</kw>
<status status="PASS" starttime="20211007 13:33:22.924" endtime="20211007 13:33:28.563"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:33:28.575" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/77607-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:33:36.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:33:36.539" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211007 13:33:28.569" endtime="20211007 13:33:36.539"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:33:36.543" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211007 13:33:36.541" endtime="20211007 13:33:36.543"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:33:36.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:33:36.543" endtime="20211007 13:33:36.545"/>
</kw>
<status status="PASS" starttime="20211007 13:33:28.566" endtime="20211007 13:33:36.546"/>
</kw>
<msg timestamp="20211007 13:33:36.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:33:28.565" endtime="20211007 13:33:36.547"/>
</kw>
<msg timestamp="20211007 13:33:36.548" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211007 13:33:28.563" endtime="20211007 13:33:36.548"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211007 13:33:36.548" endtime="20211007 13:33:36.550"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:33:36.558" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/77607-rpcwoport2/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:33:44.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:33:44.684" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20211007 13:33:36.555" endtime="20211007 13:33:44.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:33:44.687" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20211007 13:33:44.685" endtime="20211007 13:33:44.687"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:33:44.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:33:44.688" endtime="20211007 13:33:44.690"/>
</kw>
<status status="PASS" starttime="20211007 13:33:36.553" endtime="20211007 13:33:44.691"/>
</kw>
<msg timestamp="20211007 13:33:44.691" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:33:36.552" endtime="20211007 13:33:44.692"/>
</kw>
<msg timestamp="20211007 13:33:44.693" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20211007 13:33:36.550" endtime="20211007 13:33:44.693"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:33:44.702" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/77607-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:33:53.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:33:53.033" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211007 13:33:44.698" endtime="20211007 13:33:53.033"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:33:53.035" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211007 13:33:53.034" endtime="20211007 13:33:53.035"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:33:53.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:33:53.035" endtime="20211007 13:33:53.036"/>
</kw>
<status status="PASS" starttime="20211007 13:33:44.696" endtime="20211007 13:33:53.036"/>
</kw>
<msg timestamp="20211007 13:33:53.036" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:33:44.695" endtime="20211007 13:33:53.036"/>
</kw>
<msg timestamp="20211007 13:33:53.037" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211007 13:33:44.693" endtime="20211007 13:33:53.037"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211007 13:33:53.038" endtime="20211007 13:33:53.039"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:33:53.043" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/77607-rpcwoport2/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:34:00.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:34:00.995" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211007 13:33:53.041" endtime="20211007 13:34:00.995"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:34:00.998" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211007 13:34:00.996" endtime="20211007 13:34:00.998"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:34:00.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:34:00.998" endtime="20211007 13:34:00.999"/>
</kw>
<status status="PASS" starttime="20211007 13:33:53.040" endtime="20211007 13:34:01.000"/>
</kw>
<msg timestamp="20211007 13:34:01.000" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:33:53.039" endtime="20211007 13:34:01.001"/>
</kw>
<msg timestamp="20211007 13:34:01.001" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211007 13:33:53.039" endtime="20211007 13:34:01.001"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:34:01.007" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/77607-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:34:09.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:34:09.057" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20211007 13:34:01.004" endtime="20211007 13:34:09.057"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:34:09.059" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211007 13:34:09.058" endtime="20211007 13:34:09.060"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:34:09.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:34:09.061" endtime="20211007 13:34:09.062"/>
</kw>
<status status="PASS" starttime="20211007 13:34:01.003" endtime="20211007 13:34:09.063"/>
</kw>
<msg timestamp="20211007 13:34:09.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:34:01.003" endtime="20211007 13:34:09.063"/>
</kw>
<msg timestamp="20211007 13:34:09.064" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20211007 13:34:01.001" endtime="20211007 13:34:09.064"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211007 13:34:09.064" endtime="20211007 13:34:09.065"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211007 13:34:09.066" endtime="20211007 13:34:09.067"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:34:09.075" level="INFO">Running command 'ozone sh key put o3://om:9862/77607-rpcwoport2/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:37:19.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:37:19.697" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:34:09.072" endtime="20211007 13:37:19.697"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:37:19.699" level="INFO"/>
<status status="PASS" starttime="20211007 13:37:19.698" endtime="20211007 13:37:19.699"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:37:19.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:37:19.699" endtime="20211007 13:37:19.700"/>
</kw>
<status status="PASS" starttime="20211007 13:34:09.069" endtime="20211007 13:37:19.701"/>
</kw>
<msg timestamp="20211007 13:37:19.702" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:34:09.069" endtime="20211007 13:37:19.702"/>
</kw>
<status status="PASS" starttime="20211007 13:34:09.067" endtime="20211007 13:37:19.702"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:37:19.711" level="INFO">Running command 'ozone sh key getacl o3://om:9862/77607-rpcwoport2/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:37:28.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:37:28.473" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211007 13:37:19.707" endtime="20211007 13:37:28.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:37:28.475" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211007 13:37:28.474" endtime="20211007 13:37:28.475"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:37:28.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:37:28.475" endtime="20211007 13:37:28.477"/>
</kw>
<status status="PASS" starttime="20211007 13:37:19.706" endtime="20211007 13:37:28.478"/>
</kw>
<msg timestamp="20211007 13:37:28.478" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:37:19.706" endtime="20211007 13:37:28.478"/>
</kw>
<msg timestamp="20211007 13:37:28.479" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211007 13:37:19.703" endtime="20211007 13:37:28.479"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211007 13:37:28.479" endtime="20211007 13:37:28.480"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211007 13:37:28.481" endtime="20211007 13:37:28.481"/>
</kw>
<status status="PASS" starttime="20211007 13:33:22.924" endtime="20211007 13:37:28.482"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211007 13:33:22.842" endtime="20211007 13:37:28.482"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:37:28.493" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:37:28.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:37:28.498" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211007 13:37:28.489" endtime="20211007 13:37:28.498"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:37:28.500" level="INFO">scm</msg>
<status status="PASS" starttime="20211007 13:37:28.499" endtime="20211007 13:37:28.501"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:37:28.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:37:28.501" endtime="20211007 13:37:28.502"/>
</kw>
<status status="PASS" starttime="20211007 13:37:28.489" endtime="20211007 13:37:28.503"/>
</kw>
<msg timestamp="20211007 13:37:28.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:37:28.488" endtime="20211007 13:37:28.503"/>
</kw>
<msg timestamp="20211007 13:37:28.504" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211007 13:37:28.487" endtime="20211007 13:37:28.504"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211007 13:37:28.505" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211007 13:37:28.504" endtime="20211007 13:37:28.506"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:37:28.515" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:37:28.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:37:28.525" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:37:28.511" endtime="20211007 13:37:28.525"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:37:28.527" level="INFO"/>
<status status="PASS" starttime="20211007 13:37:28.526" endtime="20211007 13:37:28.527"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:37:28.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:37:28.528" endtime="20211007 13:37:28.529"/>
</kw>
<status status="PASS" starttime="20211007 13:37:28.509" endtime="20211007 13:37:28.529"/>
</kw>
<msg timestamp="20211007 13:37:28.530" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:37:28.509" endtime="20211007 13:37:28.530"/>
</kw>
<status status="PASS" starttime="20211007 13:37:28.507" endtime="20211007 13:37:28.530"/>
</kw>
<status status="PASS" starttime="20211007 13:37:28.506" endtime="20211007 13:37:28.530"/>
</kw>
<status status="PASS" starttime="20211007 13:37:28.486" endtime="20211007 13:37:28.531"/>
</kw>
<status status="PASS" starttime="20211007 13:37:28.485" endtime="20211007 13:37:28.531"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:37:28.539" level="INFO">Running command 'ozone sh volume info o3:///77607-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:37:36.027" level="INFO">${rc} = 255</msg>
<msg timestamp="20211007 13:37:36.027" level="INFO">${output} = VOLUME_NOT_FOUND Volume 77607-rpcwport is not found</msg>
<status status="PASS" starttime="20211007 13:37:28.536" endtime="20211007 13:37:36.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:37:36.029" level="INFO">VOLUME_NOT_FOUND Volume 77607-rpcwport is not found</msg>
<status status="PASS" starttime="20211007 13:37:36.028" endtime="20211007 13:37:36.029"/>
</kw>
<msg timestamp="20211007 13:37:36.029" level="INFO">${result} = VOLUME_NOT_FOUND Volume 77607-rpcwport is not found</msg>
<status status="PASS" starttime="20211007 13:37:28.534" endtime="20211007 13:37:36.029"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211007 13:37:36.030" endtime="20211007 13:37:36.030"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:37:36.037" level="INFO">Running command 'ozone sh volume create o3:///77607-rpcwport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:37:43.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:37:43.979" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:37:36.033" endtime="20211007 13:37:43.979"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:37:43.981" level="INFO"/>
<status status="PASS" starttime="20211007 13:37:43.980" endtime="20211007 13:37:43.982"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:37:43.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:37:43.982" endtime="20211007 13:37:43.983"/>
</kw>
<status status="PASS" starttime="20211007 13:37:36.032" endtime="20211007 13:37:43.984"/>
</kw>
<msg timestamp="20211007 13:37:43.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:37:36.031" endtime="20211007 13:37:43.984"/>
</kw>
<msg timestamp="20211007 13:37:43.985" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211007 13:37:36.030" endtime="20211007 13:37:43.985"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211007 13:37:43.985" endtime="20211007 13:37:43.986"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:37:43.992" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="77607-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:37:51.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:37:51.789" level="INFO">${output} = {
  "metadata": {},
  "name": "77607-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211007 13:37:43.989" endtime="20211007 13:37:51.789"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:37:51.791" level="INFO">{
  "metadata": {},
  "name": "77607-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-07T13:37:43.594Z",
  "modificationTime": "2021-10-07T13:37:43.594Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211007 13:37:51.790" endtime="20211007 13:37:51.792"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:37:51.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:37:51.792" endtime="20211007 13:37:51.794"/>
</kw>
<status status="PASS" starttime="20211007 13:37:43.989" endtime="20211007 13:37:51.794"/>
</kw>
<msg timestamp="20211007 13:37:51.795" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:37:43.988" endtime="20211007 13:37:51.795"/>
</kw>
<msg timestamp="20211007 13:37:51.796" level="INFO">${result} = {
  "metadata": {},
  "name": "77607-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211007 13:37:43.986" endtime="20211007 13:37:51.796"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211007 13:37:51.796" endtime="20211007 13:37:51.797"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:37:51.807" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="77607-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:38:00.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:38:00.241" level="INFO">${output} = {
  "metadata": {},
  "name": "77607-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211007 13:37:51.803" endtime="20211007 13:38:00.241"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:38:00.242" level="INFO">{
  "metadata": {},
  "name": "77607-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-07T13:37:43.594Z",
  "modificationTime": "2021-10-07T13:37:43.594Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211007 13:38:00.241" endtime="20211007 13:38:00.242"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:38:00.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:38:00.243" endtime="20211007 13:38:00.245"/>
</kw>
<status status="PASS" starttime="20211007 13:37:51.802" endtime="20211007 13:38:00.245"/>
</kw>
<msg timestamp="20211007 13:38:00.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:37:51.800" endtime="20211007 13:38:00.245"/>
</kw>
<msg timestamp="20211007 13:38:00.246" level="INFO">${result} = {
  "metadata": {},
  "name": "77607-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211007 13:37:51.798" endtime="20211007 13:38:00.246"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211007 13:38:00.246" endtime="20211007 13:38:00.246"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:38:00.252" level="INFO">Running command 'ozone sh volume setquota o3:///77607-rpcwport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:38:07.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:38:07.943" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:38:00.249" endtime="20211007 13:38:07.943"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:38:07.945" level="INFO"/>
<status status="PASS" starttime="20211007 13:38:07.944" endtime="20211007 13:38:07.945"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:38:07.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:38:07.945" endtime="20211007 13:38:07.946"/>
</kw>
<status status="PASS" starttime="20211007 13:38:00.248" endtime="20211007 13:38:07.946"/>
</kw>
<msg timestamp="20211007 13:38:07.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:38:00.247" endtime="20211007 13:38:07.946"/>
</kw>
<status status="PASS" starttime="20211007 13:38:00.246" endtime="20211007 13:38:07.947"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:38:07.951" level="INFO">Running command 'ozone sh volume info o3:///77607-rpcwport | jq -r '. | select(.name=="77607-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:38:14.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:38:14.912" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211007 13:38:07.949" endtime="20211007 13:38:14.912"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:38:14.919" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211007 13:38:14.913" endtime="20211007 13:38:14.919"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:38:14.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:38:14.919" endtime="20211007 13:38:14.920"/>
</kw>
<status status="PASS" starttime="20211007 13:38:07.948" endtime="20211007 13:38:14.921"/>
</kw>
<msg timestamp="20211007 13:38:14.922" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:38:07.948" endtime="20211007 13:38:14.923"/>
</kw>
<msg timestamp="20211007 13:38:14.923" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211007 13:38:07.947" endtime="20211007 13:38:14.923"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211007 13:38:14.924" endtime="20211007 13:38:14.925"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:38:14.930" level="INFO">Running command 'ozone sh bucket create o3:///77607-rpcwport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:38:22.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:38:22.008" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:38:14.927" endtime="20211007 13:38:22.008"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:38:22.010" level="INFO"/>
<status status="PASS" starttime="20211007 13:38:22.009" endtime="20211007 13:38:22.010"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:38:22.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:38:22.010" endtime="20211007 13:38:22.011"/>
</kw>
<status status="PASS" starttime="20211007 13:38:14.926" endtime="20211007 13:38:22.011"/>
</kw>
<msg timestamp="20211007 13:38:22.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:38:14.926" endtime="20211007 13:38:22.012"/>
</kw>
<status status="PASS" starttime="20211007 13:38:14.925" endtime="20211007 13:38:22.012"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:38:22.017" level="INFO">Running command 'ozone sh bucket info o3:///77607-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:38:30.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:38:30.713" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211007 13:38:22.014" endtime="20211007 13:38:30.713"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:38:30.714" level="INFO">DISK</msg>
<status status="PASS" starttime="20211007 13:38:30.713" endtime="20211007 13:38:30.714"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:38:30.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:38:30.714" endtime="20211007 13:38:30.715"/>
</kw>
<status status="PASS" starttime="20211007 13:38:22.013" endtime="20211007 13:38:30.715"/>
</kw>
<msg timestamp="20211007 13:38:30.715" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:38:22.013" endtime="20211007 13:38:30.716"/>
</kw>
<msg timestamp="20211007 13:38:30.716" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211007 13:38:22.012" endtime="20211007 13:38:30.716"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211007 13:38:30.717" endtime="20211007 13:38:30.717"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:38:30.725" level="INFO">Running command 'ozone sh bucket info o3:///77607-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:38:36.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:38:36.975" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211007 13:38:30.721" endtime="20211007 13:38:36.975"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:38:36.977" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211007 13:38:36.976" endtime="20211007 13:38:36.977"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:38:36.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:38:36.977" endtime="20211007 13:38:36.978"/>
</kw>
<status status="PASS" starttime="20211007 13:38:30.721" endtime="20211007 13:38:36.979"/>
</kw>
<msg timestamp="20211007 13:38:36.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:38:30.720" endtime="20211007 13:38:36.979"/>
</kw>
<msg timestamp="20211007 13:38:36.980" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211007 13:38:30.717" endtime="20211007 13:38:36.980"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211007 13:38:36.980" endtime="20211007 13:38:36.981"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:38:36.989" level="INFO">Running command 'ozone sh bucket info o3:///77607-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:38:45.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:38:45.730" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211007 13:38:36.986" endtime="20211007 13:38:45.731"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:38:45.732" level="INFO">100</msg>
<status status="PASS" starttime="20211007 13:38:45.731" endtime="20211007 13:38:45.733"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:38:45.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:38:45.733" endtime="20211007 13:38:45.735"/>
</kw>
<status status="PASS" starttime="20211007 13:38:36.985" endtime="20211007 13:38:45.736"/>
</kw>
<msg timestamp="20211007 13:38:45.736" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:38:36.984" endtime="20211007 13:38:45.736"/>
</kw>
<msg timestamp="20211007 13:38:45.737" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211007 13:38:36.982" endtime="20211007 13:38:45.737"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211007 13:38:45.737" endtime="20211007 13:38:45.737"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:38:45.746" level="INFO">Running command 'ozone sh bucket setquota o3:///77607-rpcwport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:38:53.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:38:53.914" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:38:45.742" endtime="20211007 13:38:53.915"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:38:53.917" level="INFO"/>
<status status="PASS" starttime="20211007 13:38:53.915" endtime="20211007 13:38:53.918"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:38:53.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:38:53.918" endtime="20211007 13:38:53.920"/>
</kw>
<status status="PASS" starttime="20211007 13:38:45.740" endtime="20211007 13:38:53.921"/>
</kw>
<msg timestamp="20211007 13:38:53.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:38:45.739" endtime="20211007 13:38:53.921"/>
</kw>
<status status="PASS" starttime="20211007 13:38:45.737" endtime="20211007 13:38:53.922"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:38:53.931" level="INFO">Running command 'ozone sh bucket info o3:///77607-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:39:02.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:39:02.290" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211007 13:38:53.927" endtime="20211007 13:39:02.290"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:39:02.292" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211007 13:39:02.291" endtime="20211007 13:39:02.292"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:39:02.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:39:02.292" endtime="20211007 13:39:02.293"/>
</kw>
<status status="PASS" starttime="20211007 13:38:53.925" endtime="20211007 13:39:02.293"/>
</kw>
<msg timestamp="20211007 13:39:02.293" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:38:53.925" endtime="20211007 13:39:02.294"/>
</kw>
<msg timestamp="20211007 13:39:02.294" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211007 13:38:53.922" endtime="20211007 13:39:02.294"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211007 13:39:02.294" endtime="20211007 13:39:02.295"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:39:02.302" level="INFO">Running command 'ozone sh bucket info o3:///77607-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:39:11.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:39:11.114" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211007 13:39:02.299" endtime="20211007 13:39:11.114"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:39:11.115" level="INFO">1000</msg>
<status status="PASS" starttime="20211007 13:39:11.115" endtime="20211007 13:39:11.116"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:39:11.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:39:11.116" endtime="20211007 13:39:11.118"/>
</kw>
<status status="PASS" starttime="20211007 13:39:02.298" endtime="20211007 13:39:11.119"/>
</kw>
<msg timestamp="20211007 13:39:11.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:39:02.297" endtime="20211007 13:39:11.120"/>
</kw>
<msg timestamp="20211007 13:39:11.121" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211007 13:39:02.295" endtime="20211007 13:39:11.121"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211007 13:39:11.122" endtime="20211007 13:39:11.122"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:39:11.130" level="INFO">Running command 'ozone sh bucket list o3:///77607-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:39:19.621" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:39:19.622" level="INFO">${output} = 77607-rpcwport</msg>
<status status="PASS" starttime="20211007 13:39:11.127" endtime="20211007 13:39:19.622"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:39:19.625" level="INFO">77607-rpcwport</msg>
<status status="PASS" starttime="20211007 13:39:19.623" endtime="20211007 13:39:19.626"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:39:19.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:39:19.627" endtime="20211007 13:39:19.629"/>
</kw>
<status status="PASS" starttime="20211007 13:39:11.126" endtime="20211007 13:39:19.630"/>
</kw>
<msg timestamp="20211007 13:39:19.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:39:11.126" endtime="20211007 13:39:19.630"/>
</kw>
<msg timestamp="20211007 13:39:19.631" level="INFO">${result} = 77607-rpcwport</msg>
<status status="PASS" starttime="20211007 13:39:11.123" endtime="20211007 13:39:19.634"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211007 13:39:19.634" endtime="20211007 13:39:19.635"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:39:19.647" level="INFO">Running command 'ozone sh key put o3:///77607-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:42:28.486" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211007 13:39:19.644" endtime="20211007 13:42:28.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211007 13:42:28.486" endtime="20211007 13:42:28.486"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211007 13:42:28.487" endtime="20211007 13:42:28.487"/>
</kw>
<status status="FAIL" starttime="20211007 13:39:19.643" endtime="20211007 13:42:28.487"/>
</kw>
<msg timestamp="20211007 13:42:28.487" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211007 13:39:19.643" endtime="20211007 13:42:28.488"/>
</kw>
<status status="FAIL" starttime="20211007 13:39:19.641" endtime="20211007 13:42:28.488"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211007 13:42:28.488" endtime="20211007 13:42:28.488"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211007 13:42:28.488" endtime="20211007 13:42:28.488"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211007 13:42:28.488" endtime="20211007 13:42:28.488"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211007 13:42:28.489" endtime="20211007 13:42:28.489"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211007 13:42:28.489" endtime="20211007 13:42:28.489"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211007 13:42:28.489" endtime="20211007 13:42:28.489"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211007 13:42:28.489" endtime="20211007 13:42:28.489"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211007 13:42:28.489" endtime="20211007 13:42:28.490"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211007 13:42:28.490" endtime="20211007 13:42:28.490"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211007 13:42:28.490" endtime="20211007 13:42:28.490"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211007 13:42:28.490" endtime="20211007 13:42:28.490"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211007 13:42:28.490" endtime="20211007 13:42:28.490"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211007 13:42:28.490" endtime="20211007 13:42:28.490"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211007 13:42:28.491" endtime="20211007 13:42:28.491"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211007 13:42:28.491" endtime="20211007 13:42:28.491"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211007 13:42:28.491" endtime="20211007 13:42:28.491"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211007 13:42:28.492" endtime="20211007 13:42:28.492"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211007 13:42:28.492" endtime="20211007 13:42:28.492"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211007 13:42:28.492" endtime="20211007 13:42:28.492"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211007 13:42:28.492" endtime="20211007 13:42:28.492"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211007 13:42:28.493" endtime="20211007 13:42:28.493"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211007 13:42:28.493" endtime="20211007 13:42:28.493"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211007 13:42:28.493" endtime="20211007 13:42:28.493"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211007 13:42:28.493" endtime="20211007 13:42:28.493"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20211007 13:42:28.493" endtime="20211007 13:42:28.493"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211007 13:42:28.494" endtime="20211007 13:42:28.494"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211007 13:42:28.494" endtime="20211007 13:42:28.494"/>
</kw>
<status status="FAIL" starttime="20211007 13:39:19.636" endtime="20211007 13:42:28.494"/>
</kw>
<status status="FAIL" starttime="20211007 13:39:19.635" endtime="20211007 13:42:28.494"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211007 13:42:28.494" endtime="20211007 13:42:28.495"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211007 13:42:28.495" endtime="20211007 13:42:28.496"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211007 13:42:28.496" endtime="20211007 13:42:28.497"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211007 13:42:28.497" endtime="20211007 13:42:28.497"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211007 13:42:28.497" endtime="20211007 13:42:28.497"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211007 13:42:28.497" endtime="20211007 13:42:28.498"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211007 13:42:28.498" endtime="20211007 13:42:28.498"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211007 13:42:28.498" endtime="20211007 13:42:28.498"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211007 13:42:28.498" endtime="20211007 13:42:28.498"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211007 13:42:28.499" endtime="20211007 13:42:28.499"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211007 13:42:28.499" endtime="20211007 13:42:28.499"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211007 13:42:28.499" endtime="20211007 13:42:28.500"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211007 13:42:28.501" endtime="20211007 13:42:28.501"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211007 13:42:28.501" endtime="20211007 13:42:28.501"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211007 13:42:28.501" endtime="20211007 13:42:28.502"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211007 13:42:28.502" endtime="20211007 13:42:28.502"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211007 13:42:28.502" endtime="20211007 13:42:28.502"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211007 13:42:28.502" endtime="20211007 13:42:28.503"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211007 13:42:28.503" endtime="20211007 13:42:28.503"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211007 13:42:28.503" endtime="20211007 13:42:28.503"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211007 13:42:28.504" endtime="20211007 13:42:28.504"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211007 13:42:28.504" endtime="20211007 13:42:28.504"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211007 13:42:28.504" endtime="20211007 13:42:28.504"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211007 13:42:28.504" endtime="20211007 13:42:28.505"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211007 13:42:28.505" endtime="20211007 13:42:28.505"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211007 13:42:28.505" endtime="20211007 13:42:28.505"/>
</kw>
<status status="FAIL" starttime="20211007 13:37:28.532" endtime="20211007 13:42:28.506"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211007 13:37:28.484" endtime="20211007 13:42:28.507">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t7" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:42:28.517" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:42:28.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:42:28.522" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211007 13:42:28.514" endtime="20211007 13:42:28.522"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:42:28.523" level="INFO">scm</msg>
<status status="PASS" starttime="20211007 13:42:28.522" endtime="20211007 13:42:28.523"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:42:28.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:42:28.523" endtime="20211007 13:42:28.524"/>
</kw>
<status status="PASS" starttime="20211007 13:42:28.514" endtime="20211007 13:42:28.525"/>
</kw>
<msg timestamp="20211007 13:42:28.525" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:42:28.513" endtime="20211007 13:42:28.525"/>
</kw>
<msg timestamp="20211007 13:42:28.525" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211007 13:42:28.512" endtime="20211007 13:42:28.525"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211007 13:42:28.526" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211007 13:42:28.526" endtime="20211007 13:42:28.526"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:42:28.532" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:42:28.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:42:28.573" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:42:28.529" endtime="20211007 13:42:28.573"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:42:28.574" level="INFO"/>
<status status="PASS" starttime="20211007 13:42:28.573" endtime="20211007 13:42:28.574"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:42:28.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:42:28.574" endtime="20211007 13:42:28.575"/>
</kw>
<status status="PASS" starttime="20211007 13:42:28.529" endtime="20211007 13:42:28.575"/>
</kw>
<msg timestamp="20211007 13:42:28.575" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:42:28.528" endtime="20211007 13:42:28.575"/>
</kw>
<status status="PASS" starttime="20211007 13:42:28.527" endtime="20211007 13:42:28.576"/>
</kw>
<status status="PASS" starttime="20211007 13:42:28.527" endtime="20211007 13:42:28.580"/>
</kw>
<status status="PASS" starttime="20211007 13:42:28.511" endtime="20211007 13:42:28.580"/>
</kw>
<status status="PASS" starttime="20211007 13:42:28.511" endtime="20211007 13:42:28.580"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:42:28.589" level="INFO">Running command 'ozone sh volume info /77607-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:42:37.615" level="INFO">${rc} = 255</msg>
<msg timestamp="20211007 13:42:37.615" level="INFO">${output} = VOLUME_NOT_FOUND Volume 77607-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20211007 13:42:28.584" endtime="20211007 13:42:37.615"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:42:37.618" level="INFO">VOLUME_NOT_FOUND Volume 77607-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20211007 13:42:37.616" endtime="20211007 13:42:37.618"/>
</kw>
<msg timestamp="20211007 13:42:37.618" level="INFO">${result} = VOLUME_NOT_FOUND Volume 77607-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20211007 13:42:28.583" endtime="20211007 13:42:37.618"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211007 13:42:37.618" endtime="20211007 13:42:37.619"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:42:37.626" level="INFO">Running command 'ozone sh volume create /77607-rpcwoscheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:42:45.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:42:45.674" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:42:37.623" endtime="20211007 13:42:45.674"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:42:45.678" level="INFO"/>
<status status="PASS" starttime="20211007 13:42:45.676" endtime="20211007 13:42:45.678"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:42:45.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:42:45.679" endtime="20211007 13:42:45.680"/>
</kw>
<status status="PASS" starttime="20211007 13:42:37.622" endtime="20211007 13:42:45.680"/>
</kw>
<msg timestamp="20211007 13:42:45.680" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:42:37.620" endtime="20211007 13:42:45.680"/>
</kw>
<msg timestamp="20211007 13:42:45.681" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211007 13:42:37.619" endtime="20211007 13:42:45.681"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211007 13:42:45.681" endtime="20211007 13:42:45.682"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:42:45.687" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="77607-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:42:53.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:42:53.814" level="INFO">${output} = {
  "metadata": {},
  "name": "77607-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211007 13:42:45.685" endtime="20211007 13:42:53.814"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:42:53.815" level="INFO">{
  "metadata": {},
  "name": "77607-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-07T13:42:45.552Z",
  "modificationTime": "2021-10-07T13:42:45.552Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211007 13:42:53.815" endtime="20211007 13:42:53.816"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:42:53.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:42:53.816" endtime="20211007 13:42:53.820"/>
</kw>
<status status="PASS" starttime="20211007 13:42:45.684" endtime="20211007 13:42:53.821"/>
</kw>
<msg timestamp="20211007 13:42:53.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:42:45.683" endtime="20211007 13:42:53.825"/>
</kw>
<msg timestamp="20211007 13:42:53.825" level="INFO">${result} = {
  "metadata": {},
  "name": "77607-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211007 13:42:45.682" endtime="20211007 13:42:53.825"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211007 13:42:53.825" endtime="20211007 13:42:53.826"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:42:53.836" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="77607-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:43:00.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:43:00.555" level="INFO">${output} = {
  "metadata": {},
  "name": "77607-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211007 13:42:53.830" endtime="20211007 13:43:00.555"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:43:00.557" level="INFO">{
  "metadata": {},
  "name": "77607-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-07T13:42:45.552Z",
  "modificationTime": "2021-10-07T13:42:45.552Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211007 13:43:00.556" endtime="20211007 13:43:00.557"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:43:00.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:43:00.557" endtime="20211007 13:43:00.558"/>
</kw>
<status status="PASS" starttime="20211007 13:42:53.830" endtime="20211007 13:43:00.558"/>
</kw>
<msg timestamp="20211007 13:43:00.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:42:53.829" endtime="20211007 13:43:00.559"/>
</kw>
<msg timestamp="20211007 13:43:00.559" level="INFO">${result} = {
  "metadata": {},
  "name": "77607-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211007 13:42:53.826" endtime="20211007 13:43:00.559"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211007 13:43:00.559" endtime="20211007 13:43:00.560"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:43:00.564" level="INFO">Running command 'ozone sh volume setquota /77607-rpcwoscheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:43:08.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:43:08.650" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:43:00.562" endtime="20211007 13:43:08.650"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:43:08.652" level="INFO"/>
<status status="PASS" starttime="20211007 13:43:08.650" endtime="20211007 13:43:08.652"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:43:08.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:43:08.652" endtime="20211007 13:43:08.653"/>
</kw>
<status status="PASS" starttime="20211007 13:43:00.561" endtime="20211007 13:43:08.654"/>
</kw>
<msg timestamp="20211007 13:43:08.654" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:43:00.561" endtime="20211007 13:43:08.654"/>
</kw>
<status status="PASS" starttime="20211007 13:43:00.560" endtime="20211007 13:43:08.655"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:43:08.663" level="INFO">Running command 'ozone sh volume info /77607-rpcwoscheme | jq -r '. | select(.name=="77607-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:43:17.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:43:17.175" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211007 13:43:08.659" endtime="20211007 13:43:17.175"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:43:17.176" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211007 13:43:17.175" endtime="20211007 13:43:17.177"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:43:17.177" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:43:17.177" endtime="20211007 13:43:17.178"/>
</kw>
<status status="PASS" starttime="20211007 13:43:08.658" endtime="20211007 13:43:17.178"/>
</kw>
<msg timestamp="20211007 13:43:17.178" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:43:08.657" endtime="20211007 13:43:17.178"/>
</kw>
<msg timestamp="20211007 13:43:17.178" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211007 13:43:08.655" endtime="20211007 13:43:17.178"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211007 13:43:17.179" endtime="20211007 13:43:17.179"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:43:17.184" level="INFO">Running command 'ozone sh bucket create /77607-rpcwoscheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:43:25.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:43:25.552" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:43:17.181" endtime="20211007 13:43:25.552"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:43:25.553" level="INFO"/>
<status status="PASS" starttime="20211007 13:43:25.553" endtime="20211007 13:43:25.553"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:43:25.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:43:25.554" endtime="20211007 13:43:25.554"/>
</kw>
<status status="PASS" starttime="20211007 13:43:17.180" endtime="20211007 13:43:25.555"/>
</kw>
<msg timestamp="20211007 13:43:25.555" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:43:17.180" endtime="20211007 13:43:25.555"/>
</kw>
<status status="PASS" starttime="20211007 13:43:17.179" endtime="20211007 13:43:25.556"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:43:25.562" level="INFO">Running command 'ozone sh bucket info /77607-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:43:33.117" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:43:33.117" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211007 13:43:25.560" endtime="20211007 13:43:33.117"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:43:33.119" level="INFO">DISK</msg>
<status status="PASS" starttime="20211007 13:43:33.117" endtime="20211007 13:43:33.119"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:43:33.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:43:33.119" endtime="20211007 13:43:33.120"/>
</kw>
<status status="PASS" starttime="20211007 13:43:25.558" endtime="20211007 13:43:33.120"/>
</kw>
<msg timestamp="20211007 13:43:33.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:43:25.558" endtime="20211007 13:43:33.120"/>
</kw>
<msg timestamp="20211007 13:43:33.121" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211007 13:43:25.556" endtime="20211007 13:43:33.121"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211007 13:43:33.121" endtime="20211007 13:43:33.121"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:43:33.126" level="INFO">Running command 'ozone sh bucket info /77607-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:43:38.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:43:38.864" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211007 13:43:33.124" endtime="20211007 13:43:38.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:43:38.867" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211007 13:43:38.866" endtime="20211007 13:43:38.867"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:43:38.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:43:38.867" endtime="20211007 13:43:38.868"/>
</kw>
<status status="PASS" starttime="20211007 13:43:33.123" endtime="20211007 13:43:38.868"/>
</kw>
<msg timestamp="20211007 13:43:38.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:43:33.123" endtime="20211007 13:43:38.868"/>
</kw>
<msg timestamp="20211007 13:43:38.869" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211007 13:43:33.122" endtime="20211007 13:43:38.869"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211007 13:43:38.869" endtime="20211007 13:43:38.870"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:43:38.874" level="INFO">Running command 'ozone sh bucket info /77607-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:43:44.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:43:44.941" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211007 13:43:38.872" endtime="20211007 13:43:44.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:43:44.943" level="INFO">100</msg>
<status status="PASS" starttime="20211007 13:43:44.942" endtime="20211007 13:43:44.943"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:43:44.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:43:44.943" endtime="20211007 13:43:44.945"/>
</kw>
<status status="PASS" starttime="20211007 13:43:38.871" endtime="20211007 13:43:44.947"/>
</kw>
<msg timestamp="20211007 13:43:44.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:43:38.871" endtime="20211007 13:43:44.947"/>
</kw>
<msg timestamp="20211007 13:43:44.948" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211007 13:43:38.870" endtime="20211007 13:43:44.948"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211007 13:43:44.948" endtime="20211007 13:43:44.949"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:43:44.957" level="INFO">Running command 'ozone sh bucket setquota /77607-rpcwoscheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:43:52.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:43:52.597" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 13:43:44.953" endtime="20211007 13:43:52.597"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:43:52.599" level="INFO"/>
<status status="PASS" starttime="20211007 13:43:52.598" endtime="20211007 13:43:52.600"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:43:52.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:43:52.602" endtime="20211007 13:43:52.603"/>
</kw>
<status status="PASS" starttime="20211007 13:43:44.951" endtime="20211007 13:43:52.604"/>
</kw>
<msg timestamp="20211007 13:43:52.604" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:43:44.951" endtime="20211007 13:43:52.604"/>
</kw>
<status status="PASS" starttime="20211007 13:43:44.950" endtime="20211007 13:43:52.605"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:43:52.610" level="INFO">Running command 'ozone sh bucket info /77607-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:44:00.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:44:00.950" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211007 13:43:52.607" endtime="20211007 13:44:00.950"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:44:00.952" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211007 13:44:00.951" endtime="20211007 13:44:00.952"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:44:00.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:44:00.952" endtime="20211007 13:44:00.953"/>
</kw>
<status status="PASS" starttime="20211007 13:43:52.607" endtime="20211007 13:44:00.953"/>
</kw>
<msg timestamp="20211007 13:44:00.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:43:52.606" endtime="20211007 13:44:00.953"/>
</kw>
<msg timestamp="20211007 13:44:00.954" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211007 13:43:52.605" endtime="20211007 13:44:00.954"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211007 13:44:00.954" endtime="20211007 13:44:00.954"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:44:00.959" level="INFO">Running command 'ozone sh bucket info /77607-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:44:09.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:44:09.059" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211007 13:44:00.957" endtime="20211007 13:44:09.059"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:44:09.062" level="INFO">1000</msg>
<status status="PASS" starttime="20211007 13:44:09.060" endtime="20211007 13:44:09.062"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:44:09.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:44:09.062" endtime="20211007 13:44:09.064"/>
</kw>
<status status="PASS" starttime="20211007 13:44:00.956" endtime="20211007 13:44:09.064"/>
</kw>
<msg timestamp="20211007 13:44:09.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:44:00.956" endtime="20211007 13:44:09.065"/>
</kw>
<msg timestamp="20211007 13:44:09.067" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211007 13:44:00.955" endtime="20211007 13:44:09.067"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211007 13:44:09.068" endtime="20211007 13:44:09.069"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:44:09.077" level="INFO">Running command 'ozone sh bucket list /77607-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:44:17.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 13:44:17.829" level="INFO">${output} = 77607-rpcwoscheme</msg>
<status status="PASS" starttime="20211007 13:44:09.073" endtime="20211007 13:44:17.829"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 13:44:17.830" level="INFO">77607-rpcwoscheme</msg>
<status status="PASS" starttime="20211007 13:44:17.829" endtime="20211007 13:44:17.831"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 13:44:17.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 13:44:17.831" endtime="20211007 13:44:17.832"/>
</kw>
<status status="PASS" starttime="20211007 13:44:09.072" endtime="20211007 13:44:17.833"/>
</kw>
<msg timestamp="20211007 13:44:17.833" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 13:44:09.071" endtime="20211007 13:44:17.833"/>
</kw>
<msg timestamp="20211007 13:44:17.834" level="INFO">${result} = 77607-rpcwoscheme</msg>
<status status="PASS" starttime="20211007 13:44:09.069" endtime="20211007 13:44:17.834"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211007 13:44:17.834" endtime="20211007 13:44:17.835"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 13:44:17.843" level="INFO">Running command 'ozone sh key put /77607-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 13:47:28.510" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211007 13:44:17.840" endtime="20211007 13:47:28.511"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211007 13:47:28.511" endtime="20211007 13:47:28.511"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211007 13:47:28.511" endtime="20211007 13:47:28.511"/>
</kw>
<status status="FAIL" starttime="20211007 13:44:17.839" endtime="20211007 13:47:28.512"/>
</kw>
<msg timestamp="20211007 13:47:28.512" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211007 13:44:17.838" endtime="20211007 13:47:28.512"/>
</kw>
<status status="FAIL" starttime="20211007 13:44:17.837" endtime="20211007 13:47:28.513"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211007 13:47:28.513" endtime="20211007 13:47:28.513"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211007 13:47:28.513" endtime="20211007 13:47:28.513"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211007 13:47:28.514" endtime="20211007 13:47:28.514"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211007 13:47:28.514" endtime="20211007 13:47:28.514"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211007 13:47:28.514" endtime="20211007 13:47:28.514"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211007 13:47:28.514" endtime="20211007 13:47:28.514"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211007 13:47:28.514" endtime="20211007 13:47:28.514"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211007 13:47:28.515" endtime="20211007 13:47:28.515"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211007 13:47:28.515" endtime="20211007 13:47:28.515"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211007 13:47:28.515" endtime="20211007 13:47:28.515"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211007 13:47:28.515" endtime="20211007 13:47:28.515"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211007 13:47:28.515" endtime="20211007 13:47:28.516"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211007 13:47:28.516" endtime="20211007 13:47:28.516"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211007 13:47:28.516" endtime="20211007 13:47:28.516"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211007 13:47:28.516" endtime="20211007 13:47:28.516"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211007 13:47:28.516" endtime="20211007 13:47:28.516"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211007 13:47:28.517" endtime="20211007 13:47:28.517"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211007 13:47:28.517" endtime="20211007 13:47:28.517"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211007 13:47:28.518" endtime="20211007 13:47:28.518"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211007 13:47:28.518" endtime="20211007 13:47:28.518"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211007 13:47:28.518" endtime="20211007 13:47:28.518"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211007 13:47:28.519" endtime="20211007 13:47:28.519"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211007 13:47:28.519" endtime="20211007 13:47:28.519"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211007 13:47:28.519" endtime="20211007 13:47:28.519"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20211007 13:47:28.519" endtime="20211007 13:47:28.520"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211007 13:47:28.520" endtime="20211007 13:47:28.520"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211007 13:47:28.520" endtime="20211007 13:47:28.520"/>
</kw>
<status status="FAIL" starttime="20211007 13:44:17.836" endtime="20211007 13:47:28.520"/>
</kw>
<status status="FAIL" starttime="20211007 13:44:17.836" endtime="20211007 13:47:28.520"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211007 13:47:28.521" endtime="20211007 13:47:28.521"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211007 13:47:28.521" endtime="20211007 13:47:28.521"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211007 13:47:28.521" endtime="20211007 13:47:28.521"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211007 13:47:28.521" endtime="20211007 13:47:28.521"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211007 13:47:28.521" endtime="20211007 13:47:28.522"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211007 13:47:28.522" endtime="20211007 13:47:28.522"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211007 13:47:28.522" endtime="20211007 13:47:28.522"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211007 13:47:28.522" endtime="20211007 13:47:28.523"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211007 13:47:28.523" endtime="20211007 13:47:28.523"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211007 13:47:28.523" endtime="20211007 13:47:28.523"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211007 13:47:28.523" endtime="20211007 13:47:28.523"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211007 13:47:28.524" endtime="20211007 13:47:28.524"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211007 13:47:28.524" endtime="20211007 13:47:28.524"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211007 13:47:28.524" endtime="20211007 13:47:28.524"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211007 13:47:28.524" endtime="20211007 13:47:28.524"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211007 13:47:28.525" endtime="20211007 13:47:28.525"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211007 13:47:28.525" endtime="20211007 13:47:28.525"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211007 13:47:28.525" endtime="20211007 13:47:28.525"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211007 13:47:28.525" endtime="20211007 13:47:28.525"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211007 13:47:28.526" endtime="20211007 13:47:28.526"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211007 13:47:28.526" endtime="20211007 13:47:28.526"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211007 13:47:28.526" endtime="20211007 13:47:28.526"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211007 13:47:28.526" endtime="20211007 13:47:28.526"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211007 13:47:28.526" endtime="20211007 13:47:28.527"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211007 13:47:28.527" endtime="20211007 13:47:28.527"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211007 13:47:28.527" endtime="20211007 13:47:28.527"/>
</kw>
<status status="FAIL" starttime="20211007 13:42:28.581" endtime="20211007 13:47:28.527"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211007 13:42:28.509" endtime="20211007 13:47:28.528">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20211007 13:22:14.469" endtime="20211007 13:47:28.529"/>
</suite>
<status status="FAIL" starttime="20211007 12:57:35.771" endtime="20211007 13:47:28.534"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 12:57:30.250" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 12:57:30.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 12:57:30.255" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211007 12:57:30.246" endtime="20211007 12:57:30.255"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 12:57:30.256" level="INFO">scm</msg>
<status status="PASS" starttime="20211007 12:57:30.255" endtime="20211007 12:57:30.256"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 12:57:30.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 12:57:30.256" endtime="20211007 12:57:30.257"/>
</kw>
<status status="PASS" starttime="20211007 12:57:30.245" endtime="20211007 12:57:30.257"/>
</kw>
<msg timestamp="20211007 12:57:30.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 12:57:30.245" endtime="20211007 12:57:30.257"/>
</kw>
<msg timestamp="20211007 12:57:30.258" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211007 12:57:30.244" endtime="20211007 12:57:30.258"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211007 12:57:30.258" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211007 12:57:30.258" endtime="20211007 12:57:30.259"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211007 12:57:30.263" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211007 12:57:30.271" level="INFO">${rc} = 0</msg>
<msg timestamp="20211007 12:57:30.271" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211007 12:57:30.261" endtime="20211007 12:57:30.271"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211007 12:57:30.272" level="INFO"/>
<status status="PASS" starttime="20211007 12:57:30.271" endtime="20211007 12:57:30.272"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211007 12:57:30.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211007 12:57:30.272" endtime="20211007 12:57:30.273"/>
</kw>
<status status="PASS" starttime="20211007 12:57:30.261" endtime="20211007 12:57:30.274"/>
</kw>
<msg timestamp="20211007 12:57:30.274" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211007 12:57:30.260" endtime="20211007 12:57:30.274"/>
</kw>
<status status="PASS" starttime="20211007 12:57:30.260" endtime="20211007 12:57:30.274"/>
</kw>
<status status="PASS" starttime="20211007 12:57:30.259" endtime="20211007 12:57:30.274"/>
</kw>
<status status="PASS" starttime="20211007 12:57:30.243" endtime="20211007 12:57:30.274"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211007 12:57:30.242" endtime="20211007 12:57:30.274"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20211007 12:57:30.175" endtime="20211007 12:57:30.275"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="2992863"/>
</suite>
<statistics>
<total>
<stat pass="20" fail="10" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="20" fail="10" skip="0" id="s1" name="ozonesecure">ozonesecure</stat>
<stat pass="19" fail="10" skip="0" id="s1-s1" name="Basic">ozonesecure.Basic</stat>
<stat pass="1" fail="1" skip="0" id="s1-s1-s1" name="Basic">ozonesecure.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Getconf">ozonesecure.Basic.Getconf</stat>
<stat pass="10" fail="5" skip="0" id="s1-s1-s3" name="Links">ozonesecure.Basic.Links</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat pass="4" fail="3" skip="0" id="s1-s1-s5" name="Ozone-Shell">ozonesecure.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
