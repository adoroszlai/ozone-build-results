<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1.2 (Python 3.6.9 on linux)" generated="20211025 13:15:42.226" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:25:06.394" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:25:06.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:25:06.398" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211025 12:25:06.390" endtime="20211025 12:25:06.399"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:25:06.400" level="INFO">scm</msg>
<status status="PASS" starttime="20211025 12:25:06.399" endtime="20211025 12:25:06.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:25:06.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:25:06.400" endtime="20211025 12:25:06.401"/>
</kw>
<status status="PASS" starttime="20211025 12:25:06.389" endtime="20211025 12:25:06.401"/>
</kw>
<msg timestamp="20211025 12:25:06.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:25:06.389" endtime="20211025 12:25:06.401"/>
</kw>
<msg timestamp="20211025 12:25:06.402" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20211025 12:25:06.388" endtime="20211025 12:25:06.402"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:25:06.406" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:25:06.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:25:06.414" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:25:06.404" endtime="20211025 12:25:06.414"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:25:06.415" level="INFO"/>
<status status="PASS" starttime="20211025 12:25:06.415" endtime="20211025 12:25:06.416"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:25:06.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:25:06.416" endtime="20211025 12:25:06.416"/>
</kw>
<status status="PASS" starttime="20211025 12:25:06.404" endtime="20211025 12:25:06.417"/>
</kw>
<msg timestamp="20211025 12:25:06.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:25:06.403" endtime="20211025 12:25:06.417"/>
</kw>
<status status="PASS" starttime="20211025 12:25:06.403" endtime="20211025 12:25:06.417"/>
</kw>
<status status="PASS" starttime="20211025 12:25:06.402" endtime="20211025 12:25:06.417"/>
</kw>
<status status="PASS" starttime="20211025 12:25:06.386" endtime="20211025 12:25:06.417"/>
</kw>
<status status="PASS" starttime="20211025 12:25:06.386" endtime="20211025 12:25:06.417"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:25:06.421" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:25:06.567" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:25:06.567" level="INFO">${output} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20211025 12:25:06.419" endtime="20211025 12:25:06.567"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:25:06.569" level="INFO">HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 484

HTTP/1.1 200 OK
Date: Mon, 25 Oct 2021 12:25:06 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCRuwAok28Hftwwa/1u763aV0/kTVttbu1oba2EK4gcBjdpfuNej9zZtkbSY763/fffGwJIKZKzGBpbyL579c9EiU9
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1635200706554&amp;s=qYZBe+dZ/D3o9LjcvBv9/pJEjwG81kJgrWjAP0IZQMI="; Path=/; HttpOnly
Last-Modified: Mon, 25 Oct 2021 12:07:42 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20211025 12:25:06.568" endtime="20211025 12:25:06.569"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:25:06.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:25:06.570" endtime="20211025 12:25:06.570"/>
</kw>
<status status="PASS" starttime="20211025 12:25:06.419" endtime="20211025 12:25:06.571"/>
</kw>
<msg timestamp="20211025 12:25:06.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:25:06.418" endtime="20211025 12:25:06.571"/>
</kw>
<msg timestamp="20211025 12:25:06.571" level="INFO">${result} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20211025 12:25:06.418" endtime="20211025 12:25:06.572"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211025 12:25:06.572" endtime="20211025 12:25:06.572"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211025 12:25:06.385" endtime="20211025 12:25:06.573"/>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:25:06.582" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:25:06.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:25:06.587" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211025 12:25:06.579" endtime="20211025 12:25:06.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:25:06.590" level="INFO">scm</msg>
<status status="PASS" starttime="20211025 12:25:06.588" endtime="20211025 12:25:06.590"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:25:06.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:25:06.590" endtime="20211025 12:25:06.591"/>
</kw>
<status status="PASS" starttime="20211025 12:25:06.579" endtime="20211025 12:25:06.591"/>
</kw>
<msg timestamp="20211025 12:25:06.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:25:06.578" endtime="20211025 12:25:06.591"/>
</kw>
<msg timestamp="20211025 12:25:06.592" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211025 12:25:06.578" endtime="20211025 12:25:06.592"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211025 12:25:06.594" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211025 12:25:06.592" endtime="20211025 12:25:06.595"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:25:06.600" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:25:06.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:25:06.608" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:25:06.597" endtime="20211025 12:25:06.608"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:25:06.610" level="INFO"/>
<status status="PASS" starttime="20211025 12:25:06.610" endtime="20211025 12:25:06.611"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:25:06.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:25:06.611" endtime="20211025 12:25:06.612"/>
</kw>
<status status="PASS" starttime="20211025 12:25:06.596" endtime="20211025 12:25:06.612"/>
</kw>
<msg timestamp="20211025 12:25:06.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:25:06.596" endtime="20211025 12:25:06.612"/>
</kw>
<status status="PASS" starttime="20211025 12:25:06.595" endtime="20211025 12:25:06.612"/>
</kw>
<status status="PASS" starttime="20211025 12:25:06.595" endtime="20211025 12:25:06.612"/>
</kw>
<status status="PASS" starttime="20211025 12:25:06.577" endtime="20211025 12:25:06.613"/>
</kw>
<status status="PASS" starttime="20211025 12:25:06.576" endtime="20211025 12:25:06.613"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:25:06.617" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:30:06.576" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211025 12:25:06.615" endtime="20211025 12:30:06.576"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211025 12:30:06.577" endtime="20211025 12:30:06.577"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211025 12:30:06.577" endtime="20211025 12:30:06.577"/>
</kw>
<status status="FAIL" starttime="20211025 12:25:06.614" endtime="20211025 12:30:06.578"/>
</kw>
<msg timestamp="20211025 12:30:06.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211025 12:25:06.614" endtime="20211025 12:30:06.578"/>
</kw>
<status status="FAIL" starttime="20211025 12:25:06.613" endtime="20211025 12:30:06.579"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20211025 12:30:06.579" endtime="20211025 12:30:06.579"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Status: Success</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211025 12:30:06.579" endtime="20211025 12:30:06.579"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211025 12:25:06.575" endtime="20211025 12:30:06.580">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" starttime="20211025 12:25:06.352" endtime="20211025 12:30:06.581"/>
</suite>
<suite id="s1-s1-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s1-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:30:06.592" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:30:09.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:30:09.807" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211025 12:30:06.590" endtime="20211025 12:30:09.808"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:30:09.809" level="INFO">om</msg>
<status status="PASS" starttime="20211025 12:30:09.808" endtime="20211025 12:30:09.809"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:30:09.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:30:09.810" endtime="20211025 12:30:09.811"/>
</kw>
<status status="PASS" starttime="20211025 12:30:06.590" endtime="20211025 12:30:09.811"/>
</kw>
<msg timestamp="20211025 12:30:09.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:30:06.589" endtime="20211025 12:30:09.812"/>
</kw>
<msg timestamp="20211025 12:30:09.812" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211025 12:30:06.588" endtime="20211025 12:30:09.812"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211025 12:30:09.812" endtime="20211025 12:30:09.813"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:30:09.819" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:30:12.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:30:12.960" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211025 12:30:09.816" endtime="20211025 12:30:12.960"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:30:12.961" level="INFO">om</msg>
<status status="PASS" starttime="20211025 12:30:12.960" endtime="20211025 12:30:12.961"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:30:12.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:30:12.961" endtime="20211025 12:30:12.962"/>
</kw>
<status status="PASS" starttime="20211025 12:30:09.815" endtime="20211025 12:30:12.963"/>
</kw>
<msg timestamp="20211025 12:30:12.963" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:30:09.814" endtime="20211025 12:30:12.963"/>
</kw>
<msg timestamp="20211025 12:30:12.963" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211025 12:30:09.813" endtime="20211025 12:30:12.963"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211025 12:30:12.963" endtime="20211025 12:30:12.964"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211025 12:30:06.587" endtime="20211025 12:30:12.964"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:30:12.972" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:30:16.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:30:16.048" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211025 12:30:12.969" endtime="20211025 12:30:16.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:30:16.049" level="INFO">scm</msg>
<status status="PASS" starttime="20211025 12:30:16.048" endtime="20211025 12:30:16.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:30:16.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:30:16.049" endtime="20211025 12:30:16.050"/>
</kw>
<status status="PASS" starttime="20211025 12:30:12.968" endtime="20211025 12:30:16.050"/>
</kw>
<msg timestamp="20211025 12:30:16.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:30:12.968" endtime="20211025 12:30:16.051"/>
</kw>
<msg timestamp="20211025 12:30:16.051" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20211025 12:30:12.967" endtime="20211025 12:30:16.051"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211025 12:30:16.051" endtime="20211025 12:30:16.053"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:30:16.057" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:30:18.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:30:18.831" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211025 12:30:16.055" endtime="20211025 12:30:18.831"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:30:18.832" level="INFO">scm</msg>
<status status="PASS" starttime="20211025 12:30:18.831" endtime="20211025 12:30:18.832"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:30:18.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:30:18.833" endtime="20211025 12:30:18.833"/>
</kw>
<status status="PASS" starttime="20211025 12:30:16.054" endtime="20211025 12:30:18.834"/>
</kw>
<msg timestamp="20211025 12:30:18.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:30:16.053" endtime="20211025 12:30:18.834"/>
</kw>
<msg timestamp="20211025 12:30:18.834" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20211025 12:30:16.053" endtime="20211025 12:30:18.834"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211025 12:30:18.834" endtime="20211025 12:30:18.835"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211025 12:30:12.965" endtime="20211025 12:30:18.835"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:30:18.842" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:30:21.565" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:30:21.565" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211025 12:30:18.838" endtime="20211025 12:30:21.565"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:30:21.566" level="INFO">om</msg>
<status status="PASS" starttime="20211025 12:30:21.566" endtime="20211025 12:30:21.567"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:30:21.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:30:21.567" endtime="20211025 12:30:21.568"/>
</kw>
<status status="PASS" starttime="20211025 12:30:18.838" endtime="20211025 12:30:21.568"/>
</kw>
<msg timestamp="20211025 12:30:21.568" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:30:18.837" endtime="20211025 12:30:21.568"/>
</kw>
<msg timestamp="20211025 12:30:21.569" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211025 12:30:18.837" endtime="20211025 12:30:21.569"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211025 12:30:21.569" endtime="20211025 12:30:21.569"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211025 12:30:21.570" endtime="20211025 12:30:21.570"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:30:21.575" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:30:24.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:30:24.799" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211025 12:30:21.572" endtime="20211025 12:30:24.799"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:30:24.800" level="INFO">om</msg>
<status status="PASS" starttime="20211025 12:30:24.799" endtime="20211025 12:30:24.803"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:30:24.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:30:24.803" endtime="20211025 12:30:24.804"/>
</kw>
<status status="PASS" starttime="20211025 12:30:21.572" endtime="20211025 12:30:24.804"/>
</kw>
<msg timestamp="20211025 12:30:24.804" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:30:21.571" endtime="20211025 12:30:24.804"/>
</kw>
<msg timestamp="20211025 12:30:24.804" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211025 12:30:21.571" endtime="20211025 12:30:24.804"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211025 12:30:24.805" endtime="20211025 12:30:24.806"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211025 12:30:24.807" endtime="20211025 12:30:24.807"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211025 12:30:18.836" endtime="20211025 12:30:24.808"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:30:24.816" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:30:27.586" level="INFO">${rc} = 255</msg>
<msg timestamp="20211025 12:30:27.586" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211025 12:30:24.813" endtime="20211025 12:30:27.586"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:30:27.589" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211025 12:30:27.587" endtime="20211025 12:30:27.589"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:30:27.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:30:27.590" endtime="20211025 12:30:27.591"/>
</kw>
<msg timestamp="20211025 12:30:27.592" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211025 12:30:24.813" endtime="20211025 12:30:27.592"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211025 12:30:27.592" endtime="20211025 12:30:27.593"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:30:27.598" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:30:30.325" level="INFO">${rc} = 255</msg>
<msg timestamp="20211025 12:30:30.325" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211025 12:30:27.595" endtime="20211025 12:30:30.325"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:30:30.327" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211025 12:30:30.326" endtime="20211025 12:30:30.327"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:30:30.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:30:30.328" endtime="20211025 12:30:30.329"/>
</kw>
<msg timestamp="20211025 12:30:30.330" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211025 12:30:27.593" endtime="20211025 12:30:30.330"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211025 12:30:30.330" endtime="20211025 12:30:30.331"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211025 12:30:24.811" endtime="20211025 12:30:30.331"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20211025 12:30:06.583" endtime="20211025 12:30:30.334"/>
</suite>
<suite id="s1-s1-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211025 12:30:30.361" level="INFO">${random} = 98370</msg>
<status status="PASS" starttime="20211025 12:30:30.360" endtime="20211025 12:30:30.361"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211025 12:30:30.363" level="INFO">${source} = 98370-source</msg>
<status status="PASS" starttime="20211025 12:30:30.361" endtime="20211025 12:30:30.363"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211025 12:30:30.365" level="INFO">${target} = 98370-target</msg>
<status status="PASS" starttime="20211025 12:30:30.363" endtime="20211025 12:30:30.365"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:30:30.370" level="INFO">Running command 'ozone sh volume create 98370-source 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:30:38.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:30:38.574" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:30:30.367" endtime="20211025 12:30:38.574"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:30:38.576" level="INFO"/>
<status status="PASS" starttime="20211025 12:30:38.575" endtime="20211025 12:30:38.576"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:30:38.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:30:38.576" endtime="20211025 12:30:38.577"/>
</kw>
<status status="PASS" starttime="20211025 12:30:30.367" endtime="20211025 12:30:38.578"/>
</kw>
<msg timestamp="20211025 12:30:38.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:30:30.366" endtime="20211025 12:30:38.578"/>
</kw>
<status status="PASS" starttime="20211025 12:30:30.365" endtime="20211025 12:30:38.579"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:30:38.585" level="INFO">Running command 'ozone sh volume create 98370-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:30:46.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:30:46.880" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:30:38.581" endtime="20211025 12:30:46.880"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:30:46.881" level="INFO"/>
<status status="PASS" starttime="20211025 12:30:46.881" endtime="20211025 12:30:46.881"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:30:46.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:30:46.881" endtime="20211025 12:30:46.882"/>
</kw>
<status status="PASS" starttime="20211025 12:30:38.580" endtime="20211025 12:30:46.883"/>
</kw>
<msg timestamp="20211025 12:30:46.883" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:30:38.580" endtime="20211025 12:30:46.883"/>
</kw>
<status status="PASS" starttime="20211025 12:30:38.579" endtime="20211025 12:30:46.883"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:30:46.891" level="INFO">Running command 'ozone sh bucket create 98370-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:30:52.547" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:30:52.547" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:30:46.887" endtime="20211025 12:30:52.547"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:30:52.548" level="INFO"/>
<status status="PASS" starttime="20211025 12:30:52.548" endtime="20211025 12:30:52.548"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:30:52.549" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:30:52.549" endtime="20211025 12:30:52.549"/>
</kw>
<status status="PASS" starttime="20211025 12:30:46.887" endtime="20211025 12:30:52.550"/>
</kw>
<msg timestamp="20211025 12:30:52.550" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:30:46.885" endtime="20211025 12:30:52.550"/>
</kw>
<status status="PASS" starttime="20211025 12:30:46.885" endtime="20211025 12:30:52.550"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:30:52.555" level="INFO">Running command 'ozone sh key put 98370-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:34:04.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:34:04.937" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:30:52.553" endtime="20211025 12:34:04.937"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:34:04.938" level="INFO"/>
<status status="PASS" starttime="20211025 12:34:04.937" endtime="20211025 12:34:04.939"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:34:04.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:34:04.939" endtime="20211025 12:34:04.940"/>
</kw>
<status status="PASS" starttime="20211025 12:30:52.552" endtime="20211025 12:34:04.941"/>
</kw>
<msg timestamp="20211025 12:34:04.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:30:52.552" endtime="20211025 12:34:04.941"/>
</kw>
<status status="PASS" starttime="20211025 12:30:52.551" endtime="20211025 12:34:04.942"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:34:04.951" level="INFO">Running command 'ozone sh bucket create 98370-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:34:12.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:34:12.746" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:34:04.947" endtime="20211025 12:34:12.746"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:34:12.748" level="INFO"/>
<status status="PASS" starttime="20211025 12:34:12.747" endtime="20211025 12:34:12.748"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:34:12.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:34:12.748" endtime="20211025 12:34:12.749"/>
</kw>
<status status="PASS" starttime="20211025 12:34:04.946" endtime="20211025 12:34:12.749"/>
</kw>
<msg timestamp="20211025 12:34:12.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:34:04.946" endtime="20211025 12:34:12.750"/>
</kw>
<status status="PASS" starttime="20211025 12:34:04.945" endtime="20211025 12:34:12.750"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:34:12.757" level="INFO">Running command 'ozone sh bucket link 98370-source/readable-bucket 98370-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:34:19.962" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:34:19.963" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:34:12.755" endtime="20211025 12:34:19.963"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:34:19.966" level="INFO"/>
<status status="PASS" starttime="20211025 12:34:19.964" endtime="20211025 12:34:19.966"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:34:19.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:34:19.966" endtime="20211025 12:34:19.967"/>
</kw>
<status status="PASS" starttime="20211025 12:34:12.754" endtime="20211025 12:34:19.968"/>
</kw>
<msg timestamp="20211025 12:34:19.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:34:12.752" endtime="20211025 12:34:19.968"/>
</kw>
<status status="PASS" starttime="20211025 12:34:12.751" endtime="20211025 12:34:19.969"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:34:19.976" level="INFO">Running command 'ozone sh bucket link 98370-source/readable-bucket 98370-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:34:25.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:34:25.599" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:34:19.973" endtime="20211025 12:34:25.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:34:25.601" level="INFO"/>
<status status="PASS" starttime="20211025 12:34:25.600" endtime="20211025 12:34:25.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:34:25.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:34:25.601" endtime="20211025 12:34:25.602"/>
</kw>
<status status="PASS" starttime="20211025 12:34:19.972" endtime="20211025 12:34:25.602"/>
</kw>
<msg timestamp="20211025 12:34:25.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:34:19.971" endtime="20211025 12:34:25.602"/>
</kw>
<status status="PASS" starttime="20211025 12:34:19.970" endtime="20211025 12:34:25.603"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:34:25.607" level="INFO">Running command 'ozone sh bucket link 98370-source/unreadable-bucket 98370-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:34:33.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:34:33.400" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:34:25.605" endtime="20211025 12:34:33.400"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:34:33.401" level="INFO"/>
<status status="PASS" starttime="20211025 12:34:33.400" endtime="20211025 12:34:33.401"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:34:33.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:34:33.401" endtime="20211025 12:34:33.403"/>
</kw>
<status status="PASS" starttime="20211025 12:34:25.604" endtime="20211025 12:34:33.404"/>
</kw>
<msg timestamp="20211025 12:34:33.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:34:25.604" endtime="20211025 12:34:33.404"/>
</kw>
<status status="PASS" starttime="20211025 12:34:25.603" endtime="20211025 12:34:33.405"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:34:33.411" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 98370-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:34:41.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:34:41.033" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211025 12:34:33.408" endtime="20211025 12:34:41.033"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:34:41.034" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211025 12:34:41.034" endtime="20211025 12:34:41.035"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:34:41.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:34:41.035" endtime="20211025 12:34:41.035"/>
</kw>
<status status="PASS" starttime="20211025 12:34:33.407" endtime="20211025 12:34:41.036"/>
</kw>
<msg timestamp="20211025 12:34:41.036" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:34:33.406" endtime="20211025 12:34:41.036"/>
</kw>
<status status="PASS" starttime="20211025 12:34:33.405" endtime="20211025 12:34:41.036"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:34:41.040" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 98370-source 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:34:49.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:34:49.267" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211025 12:34:41.038" endtime="20211025 12:34:49.267"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:34:49.269" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211025 12:34:49.268" endtime="20211025 12:34:49.269"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:34:49.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:34:49.269" endtime="20211025 12:34:49.269"/>
</kw>
<status status="PASS" starttime="20211025 12:34:41.038" endtime="20211025 12:34:49.270"/>
</kw>
<msg timestamp="20211025 12:34:49.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:34:41.037" endtime="20211025 12:34:49.270"/>
</kw>
<status status="PASS" starttime="20211025 12:34:41.037" endtime="20211025 12:34:49.271"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:34:49.275" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 98370-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:34:56.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:34:56.078" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211025 12:34:49.273" endtime="20211025 12:34:56.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:34:56.079" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211025 12:34:56.079" endtime="20211025 12:34:56.079"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:34:56.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:34:56.080" endtime="20211025 12:34:56.080"/>
</kw>
<status status="PASS" starttime="20211025 12:34:49.273" endtime="20211025 12:34:56.081"/>
</kw>
<msg timestamp="20211025 12:34:56.081" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:34:49.272" endtime="20211025 12:34:56.081"/>
</kw>
<status status="PASS" starttime="20211025 12:34:49.271" endtime="20211025 12:34:56.081"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:34:56.085" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 98370-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:35:04.271" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:35:04.272" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211025 12:34:56.083" endtime="20211025 12:35:04.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:35:04.273" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211025 12:35:04.273" endtime="20211025 12:35:04.274"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:35:04.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:35:04.274" endtime="20211025 12:35:04.275"/>
</kw>
<status status="PASS" starttime="20211025 12:34:56.082" endtime="20211025 12:35:04.275"/>
</kw>
<msg timestamp="20211025 12:35:04.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:34:56.082" endtime="20211025 12:35:04.276"/>
</kw>
<status status="PASS" starttime="20211025 12:34:56.081" endtime="20211025 12:35:04.276"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:35:04.281" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 98370-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:35:12.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:35:12.110" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211025 12:35:04.279" endtime="20211025 12:35:12.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:35:12.112" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211025 12:35:12.111" endtime="20211025 12:35:12.112"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:35:12.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:35:12.113" endtime="20211025 12:35:12.114"/>
</kw>
<status status="PASS" starttime="20211025 12:35:04.278" endtime="20211025 12:35:12.114"/>
</kw>
<msg timestamp="20211025 12:35:12.115" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:35:04.278" endtime="20211025 12:35:12.115"/>
</kw>
<status status="PASS" starttime="20211025 12:35:04.276" endtime="20211025 12:35:12.116"/>
</kw>
<status status="PASS" starttime="20211025 12:30:46.884" endtime="20211025 12:35:12.116"/>
</kw>
<status status="PASS" starttime="20211025 12:30:46.884" endtime="20211025 12:35:12.116"/>
</kw>
<status status="PASS" starttime="20211025 12:30:30.359" endtime="20211025 12:35:12.117"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:35:12.128" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:35:12.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:35:12.134" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211025 12:35:12.125" endtime="20211025 12:35:12.134"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:35:12.136" level="INFO">scm</msg>
<status status="PASS" starttime="20211025 12:35:12.135" endtime="20211025 12:35:12.136"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:35:12.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:35:12.137" endtime="20211025 12:35:12.139"/>
</kw>
<status status="PASS" starttime="20211025 12:35:12.124" endtime="20211025 12:35:12.139"/>
</kw>
<msg timestamp="20211025 12:35:12.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:35:12.123" endtime="20211025 12:35:12.140"/>
</kw>
<msg timestamp="20211025 12:35:12.140" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211025 12:35:12.122" endtime="20211025 12:35:12.141"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211025 12:35:12.143" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211025 12:35:12.141" endtime="20211025 12:35:12.143"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:35:12.149" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:35:13.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:35:13.146" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:35:12.145" endtime="20211025 12:35:13.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:35:13.147" level="INFO"/>
<status status="PASS" starttime="20211025 12:35:13.146" endtime="20211025 12:35:13.147"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:35:13.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:35:13.148" endtime="20211025 12:35:13.148"/>
</kw>
<status status="PASS" starttime="20211025 12:35:12.145" endtime="20211025 12:35:13.149"/>
</kw>
<msg timestamp="20211025 12:35:13.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:35:12.145" endtime="20211025 12:35:13.149"/>
</kw>
<status status="PASS" starttime="20211025 12:35:12.144" endtime="20211025 12:35:13.149"/>
</kw>
<status status="PASS" starttime="20211025 12:35:12.143" endtime="20211025 12:35:13.149"/>
</kw>
<status status="PASS" starttime="20211025 12:35:12.121" endtime="20211025 12:35:13.150"/>
</kw>
<status status="PASS" starttime="20211025 12:35:12.120" endtime="20211025 12:35:13.150"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:35:13.154" level="INFO">Running command 'ozone sh bucket link 98370-source/no-such-bucket 98370-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:35:21.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:35:21.740" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:35:13.152" endtime="20211025 12:35:21.740"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:35:21.742" level="INFO"/>
<status status="PASS" starttime="20211025 12:35:21.741" endtime="20211025 12:35:21.742"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:35:21.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:35:21.742" endtime="20211025 12:35:21.743"/>
</kw>
<status status="PASS" starttime="20211025 12:35:13.151" endtime="20211025 12:35:21.743"/>
</kw>
<msg timestamp="20211025 12:35:21.744" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:35:13.151" endtime="20211025 12:35:21.744"/>
</kw>
<status status="PASS" starttime="20211025 12:35:13.150" endtime="20211025 12:35:21.744"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:35:21.748" level="INFO">Running command 'ozone sh key list 98370-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:35:29.239" level="INFO">${rc} = 255</msg>
<msg timestamp="20211025 12:35:29.239" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20211025 12:35:21.745" endtime="20211025 12:35:29.239"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:35:29.242" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20211025 12:35:29.241" endtime="20211025 12:35:29.243"/>
</kw>
<msg timestamp="20211025 12:35:29.244" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20211025 12:35:21.744" endtime="20211025 12:35:29.244"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211025 12:35:29.244" endtime="20211025 12:35:29.246"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211025 12:35:12.118" endtime="20211025 12:35:29.246"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:35:29.260" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:35:29.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:35:29.265" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211025 12:35:29.256" endtime="20211025 12:35:29.268"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:35:29.269" level="INFO">scm</msg>
<status status="PASS" starttime="20211025 12:35:29.268" endtime="20211025 12:35:29.269"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:35:29.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:35:29.269" endtime="20211025 12:35:29.270"/>
</kw>
<status status="PASS" starttime="20211025 12:35:29.255" endtime="20211025 12:35:29.270"/>
</kw>
<msg timestamp="20211025 12:35:29.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:35:29.254" endtime="20211025 12:35:29.270"/>
</kw>
<msg timestamp="20211025 12:35:29.271" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211025 12:35:29.253" endtime="20211025 12:35:29.271"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211025 12:35:29.272" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211025 12:35:29.271" endtime="20211025 12:35:29.272"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:35:29.277" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:35:29.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:35:29.288" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:35:29.275" endtime="20211025 12:35:29.288"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:35:29.290" level="INFO"/>
<status status="PASS" starttime="20211025 12:35:29.289" endtime="20211025 12:35:29.290"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:35:29.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:35:29.290" endtime="20211025 12:35:29.291"/>
</kw>
<status status="PASS" starttime="20211025 12:35:29.274" endtime="20211025 12:35:29.292"/>
</kw>
<msg timestamp="20211025 12:35:29.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:35:29.274" endtime="20211025 12:35:29.292"/>
</kw>
<status status="PASS" starttime="20211025 12:35:29.273" endtime="20211025 12:35:29.292"/>
</kw>
<status status="PASS" starttime="20211025 12:35:29.272" endtime="20211025 12:35:29.293"/>
</kw>
<status status="PASS" starttime="20211025 12:35:29.252" endtime="20211025 12:35:29.293"/>
</kw>
<status status="PASS" starttime="20211025 12:35:29.251" endtime="20211025 12:35:29.293"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:35:29.298" level="INFO">Running command 'ozone sh bucket link 98370-source/bucket1 98370-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:35:35.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:35:35.290" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:35:29.296" endtime="20211025 12:35:35.291"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:35:35.293" level="INFO"/>
<status status="PASS" starttime="20211025 12:35:35.292" endtime="20211025 12:35:35.294"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:35:35.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:35:35.294" endtime="20211025 12:35:35.296"/>
</kw>
<status status="PASS" starttime="20211025 12:35:29.295" endtime="20211025 12:35:35.296"/>
</kw>
<msg timestamp="20211025 12:35:35.297" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:35:29.294" endtime="20211025 12:35:35.297"/>
</kw>
<status status="PASS" starttime="20211025 12:35:29.293" endtime="20211025 12:35:35.297"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:35:35.304" level="INFO">Running command 'ozone sh bucket create 98370-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:35:43.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:35:43.234" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:35:35.301" endtime="20211025 12:35:43.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:35:43.236" level="INFO"/>
<status status="PASS" starttime="20211025 12:35:43.235" endtime="20211025 12:35:43.236"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:35:43.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:35:43.236" endtime="20211025 12:35:43.237"/>
</kw>
<status status="PASS" starttime="20211025 12:35:35.300" endtime="20211025 12:35:43.237"/>
</kw>
<msg timestamp="20211025 12:35:43.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:35:35.300" endtime="20211025 12:35:43.238"/>
</kw>
<status status="PASS" starttime="20211025 12:35:35.298" endtime="20211025 12:35:43.238"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:35:43.242" level="INFO">Running command 'ozone sh key put 98370-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:37:29.250" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20211025 12:35:43.240" endtime="20211025 12:37:29.250"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211025 12:37:29.251" endtime="20211025 12:37:29.251"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211025 12:37:29.251" endtime="20211025 12:37:29.252"/>
</kw>
<status status="FAIL" starttime="20211025 12:35:43.239" endtime="20211025 12:37:29.252"/>
</kw>
<msg timestamp="20211025 12:37:29.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211025 12:35:43.239" endtime="20211025 12:37:29.252"/>
</kw>
<status status="FAIL" starttime="20211025 12:35:43.238" endtime="20211025 12:37:29.252"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<status status="NOT RUN" starttime="20211025 12:37:29.253" endtime="20211025 12:37:29.253"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211025 12:35:29.249" endtime="20211025 12:37:29.253">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:37:29.262" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:37:29.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:37:29.267" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211025 12:37:29.260" endtime="20211025 12:37:29.267"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:37:29.269" level="INFO">scm</msg>
<status status="PASS" starttime="20211025 12:37:29.268" endtime="20211025 12:37:29.269"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:37:29.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:37:29.269" endtime="20211025 12:37:29.271"/>
</kw>
<status status="PASS" starttime="20211025 12:37:29.259" endtime="20211025 12:37:29.271"/>
</kw>
<msg timestamp="20211025 12:37:29.271" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:37:29.259" endtime="20211025 12:37:29.272"/>
</kw>
<msg timestamp="20211025 12:37:29.272" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211025 12:37:29.258" endtime="20211025 12:37:29.272"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211025 12:37:29.273" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211025 12:37:29.272" endtime="20211025 12:37:29.274"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:37:29.281" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:37:29.292" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:37:29.292" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:37:29.279" endtime="20211025 12:37:29.292"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:37:29.294" level="INFO"/>
<status status="PASS" starttime="20211025 12:37:29.293" endtime="20211025 12:37:29.294"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:37:29.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:37:29.294" endtime="20211025 12:37:29.295"/>
</kw>
<status status="PASS" starttime="20211025 12:37:29.276" endtime="20211025 12:37:29.295"/>
</kw>
<msg timestamp="20211025 12:37:29.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:37:29.276" endtime="20211025 12:37:29.296"/>
</kw>
<status status="PASS" starttime="20211025 12:37:29.275" endtime="20211025 12:37:29.296"/>
</kw>
<status status="PASS" starttime="20211025 12:37:29.274" endtime="20211025 12:37:29.296"/>
</kw>
<status status="PASS" starttime="20211025 12:37:29.257" endtime="20211025 12:37:29.296"/>
</kw>
<status status="PASS" starttime="20211025 12:37:29.255" endtime="20211025 12:37:29.296"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:37:29.300" level="INFO">Running command 'ozone sh key put 98370-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:39:29.256" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20211025 12:37:29.298" endtime="20211025 12:39:29.256"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211025 12:39:29.257" endtime="20211025 12:39:29.257"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211025 12:39:29.257" endtime="20211025 12:39:29.257"/>
</kw>
<status status="FAIL" starttime="20211025 12:37:29.298" endtime="20211025 12:39:29.258"/>
</kw>
<msg timestamp="20211025 12:39:29.258" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211025 12:37:29.297" endtime="20211025 12:39:29.258"/>
</kw>
<status status="FAIL" starttime="20211025 12:37:29.297" endtime="20211025 12:39:29.258"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211025 12:39:29.259" endtime="20211025 12:39:29.259"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211025 12:37:29.254" endtime="20211025 12:39:29.259">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:39:29.267" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:39:29.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:39:29.272" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211025 12:39:29.265" endtime="20211025 12:39:29.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:39:29.274" level="INFO">scm</msg>
<status status="PASS" starttime="20211025 12:39:29.273" endtime="20211025 12:39:29.274"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:39:29.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:39:29.275" endtime="20211025 12:39:29.276"/>
</kw>
<status status="PASS" starttime="20211025 12:39:29.264" endtime="20211025 12:39:29.277"/>
</kw>
<msg timestamp="20211025 12:39:29.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:39:29.263" endtime="20211025 12:39:29.278"/>
</kw>
<msg timestamp="20211025 12:39:29.279" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211025 12:39:29.262" endtime="20211025 12:39:29.279"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211025 12:39:29.280" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211025 12:39:29.279" endtime="20211025 12:39:29.280"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:39:29.287" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:39:29.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:39:29.297" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:39:29.284" endtime="20211025 12:39:29.297"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:39:29.300" level="INFO"/>
<status status="PASS" starttime="20211025 12:39:29.299" endtime="20211025 12:39:29.300"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:39:29.301" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:39:29.300" endtime="20211025 12:39:29.301"/>
</kw>
<status status="PASS" starttime="20211025 12:39:29.283" endtime="20211025 12:39:29.302"/>
</kw>
<msg timestamp="20211025 12:39:29.302" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:39:29.282" endtime="20211025 12:39:29.302"/>
</kw>
<status status="PASS" starttime="20211025 12:39:29.281" endtime="20211025 12:39:29.303"/>
</kw>
<status status="PASS" starttime="20211025 12:39:29.280" endtime="20211025 12:39:29.303"/>
</kw>
<status status="PASS" starttime="20211025 12:39:29.261" endtime="20211025 12:39:29.303"/>
</kw>
<status status="PASS" starttime="20211025 12:39:29.260" endtime="20211025 12:39:29.304"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:39:29.309" level="INFO">Running command 'ozone sh key list 98370-target/link1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:39:38.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:39:38.115" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20211025 12:39:29.307" endtime="20211025 12:39:38.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:39:38.117" level="INFO">key1</msg>
<status status="PASS" starttime="20211025 12:39:38.116" endtime="20211025 12:39:38.117"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:39:38.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:39:38.117" endtime="20211025 12:39:38.118"/>
</kw>
<status status="PASS" starttime="20211025 12:39:29.306" endtime="20211025 12:39:38.119"/>
</kw>
<msg timestamp="20211025 12:39:38.119" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:39:29.305" endtime="20211025 12:39:38.119"/>
</kw>
<msg timestamp="20211025 12:39:38.119" level="INFO">${target_list} = key1</msg>
<status status="PASS" starttime="20211025 12:39:29.304" endtime="20211025 12:39:38.119"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:39:38.124" level="INFO">Running command 'ozone sh key list 98370-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:39:46.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:39:46.281" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20211025 12:39:38.122" endtime="20211025 12:39:46.281"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:39:46.285" level="INFO">key1</msg>
<status status="PASS" starttime="20211025 12:39:46.282" endtime="20211025 12:39:46.285"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:39:46.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:39:46.285" endtime="20211025 12:39:46.286"/>
</kw>
<status status="PASS" starttime="20211025 12:39:38.121" endtime="20211025 12:39:46.287"/>
</kw>
<msg timestamp="20211025 12:39:46.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:39:38.120" endtime="20211025 12:39:46.287"/>
</kw>
<msg timestamp="20211025 12:39:46.288" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20211025 12:39:38.119" endtime="20211025 12:39:46.288"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211025 12:39:46.288" endtime="20211025 12:39:46.289"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211025 12:39:46.289" endtime="20211025 12:39:46.290"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20211025 12:39:46.291" level="FAIL">'key1' does not contain 'key2'</msg>
<status status="FAIL" starttime="20211025 12:39:46.290" endtime="20211025 12:39:46.291"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211025 12:39:29.260" endtime="20211025 12:39:46.292">'key1' does not contain 'key2'</status>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:39:46.301" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:39:46.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:39:46.307" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211025 12:39:46.298" endtime="20211025 12:39:46.307"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:39:46.309" level="INFO">scm</msg>
<status status="PASS" starttime="20211025 12:39:46.308" endtime="20211025 12:39:46.309"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:39:46.310" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:39:46.309" endtime="20211025 12:39:46.310"/>
</kw>
<status status="PASS" starttime="20211025 12:39:46.297" endtime="20211025 12:39:46.311"/>
</kw>
<msg timestamp="20211025 12:39:46.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:39:46.297" endtime="20211025 12:39:46.311"/>
</kw>
<msg timestamp="20211025 12:39:46.311" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211025 12:39:46.296" endtime="20211025 12:39:46.311"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211025 12:39:46.312" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211025 12:39:46.312" endtime="20211025 12:39:46.312"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:39:46.317" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:39:46.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:39:46.326" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:39:46.316" endtime="20211025 12:39:46.326"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:39:46.328" level="INFO"/>
<status status="PASS" starttime="20211025 12:39:46.327" endtime="20211025 12:39:46.328"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:39:46.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:39:46.328" endtime="20211025 12:39:46.329"/>
</kw>
<status status="PASS" starttime="20211025 12:39:46.315" endtime="20211025 12:39:46.329"/>
</kw>
<msg timestamp="20211025 12:39:46.329" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:39:46.314" endtime="20211025 12:39:46.330"/>
</kw>
<status status="PASS" starttime="20211025 12:39:46.313" endtime="20211025 12:39:46.330"/>
</kw>
<status status="PASS" starttime="20211025 12:39:46.312" endtime="20211025 12:39:46.330"/>
</kw>
<status status="PASS" starttime="20211025 12:39:46.295" endtime="20211025 12:39:46.330"/>
</kw>
<status status="PASS" starttime="20211025 12:39:46.294" endtime="20211025 12:39:46.330"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:39:46.335" level="INFO">Running command 'ozone sh key delete 98370-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:39:54.227" level="INFO">${rc} = 255</msg>
<msg timestamp="20211025 12:39:54.228" level="INFO">${output} = KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20211025 12:39:46.332" endtime="20211025 12:39:54.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:39:54.231" level="INFO">KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20211025 12:39:54.229" endtime="20211025 12:39:54.231"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:39:54.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20211025 12:39:54.233" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20211025 12:39:54.231" endtime="20211025 12:39:54.233"/>
</kw>
<status status="FAIL" starttime="20211025 12:39:46.332" endtime="20211025 12:39:54.234"/>
</kw>
<msg timestamp="20211025 12:39:54.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211025 12:39:46.331" endtime="20211025 12:39:54.234"/>
</kw>
<status status="FAIL" starttime="20211025 12:39:46.330" endtime="20211025 12:39:54.234"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211025 12:39:54.235" endtime="20211025 12:39:54.235"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211025 12:39:54.235" endtime="20211025 12:39:54.235"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211025 12:39:46.293" endtime="20211025 12:39:54.236">255 != 0</status>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:39:54.248" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:39:54.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:39:54.254" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211025 12:39:54.245" endtime="20211025 12:39:54.254"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:39:54.257" level="INFO">scm</msg>
<status status="PASS" starttime="20211025 12:39:54.255" endtime="20211025 12:39:54.257"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:39:54.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:39:54.258" endtime="20211025 12:39:54.259"/>
</kw>
<status status="PASS" starttime="20211025 12:39:54.244" endtime="20211025 12:39:54.260"/>
</kw>
<msg timestamp="20211025 12:39:54.260" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:39:54.243" endtime="20211025 12:39:54.260"/>
</kw>
<msg timestamp="20211025 12:39:54.260" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211025 12:39:54.242" endtime="20211025 12:39:54.260"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211025 12:39:54.262" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211025 12:39:54.261" endtime="20211025 12:39:54.262"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:39:54.268" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:39:54.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:39:54.282" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:39:54.266" endtime="20211025 12:39:54.282"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:39:54.285" level="INFO"/>
<status status="PASS" starttime="20211025 12:39:54.283" endtime="20211025 12:39:54.285"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:39:54.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:39:54.285" endtime="20211025 12:39:54.287"/>
</kw>
<status status="PASS" starttime="20211025 12:39:54.265" endtime="20211025 12:39:54.287"/>
</kw>
<msg timestamp="20211025 12:39:54.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:39:54.264" endtime="20211025 12:39:54.288"/>
</kw>
<status status="PASS" starttime="20211025 12:39:54.263" endtime="20211025 12:39:54.288"/>
</kw>
<status status="PASS" starttime="20211025 12:39:54.262" endtime="20211025 12:39:54.288"/>
</kw>
<status status="PASS" starttime="20211025 12:39:54.241" endtime="20211025 12:39:54.289"/>
</kw>
<status status="PASS" starttime="20211025 12:39:54.240" endtime="20211025 12:39:54.289"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:39:54.295" level="INFO">Running command 'ozone sh bucket list 98370-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:40:03.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:40:03.227" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "98370-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "202...</msg>
<status status="PASS" starttime="20211025 12:39:54.292" endtime="20211025 12:40:03.228"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:40:03.230" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "98370-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-25T12:35:21.526Z",
  "modificationTime" : "2021-10-25T12:35:21.526Z",
  "sourceVolume" : "98370-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "98370-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-25T12:34:33.300Z",
  "modificationTime" : "2021-10-25T12:35:12.021Z",
  "sourceVolume" : "98370-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "98370-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-25T12:35:35.220Z",
  "modificationTime" : "2021-10-25T12:35:35.220Z",
  "sourceVolume" : "98370-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "98370-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-25T12:34:19.883Z",
  "modificationTime" : "2021-10-25T12:35:04.124Z",
  "sourceVolume" : "98370-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "98370-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-25T12:34:25.496Z",
  "modificationTime" : "2021-10-25T12:34:25.496Z",
  "sourceVolume" : "98370-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
} ]</msg>
<status status="PASS" starttime="20211025 12:40:03.228" endtime="20211025 12:40:03.230"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:40:03.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:40:03.230" endtime="20211025 12:40:03.232"/>
</kw>
<status status="PASS" starttime="20211025 12:39:54.291" endtime="20211025 12:40:03.232"/>
</kw>
<msg timestamp="20211025 12:40:03.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:39:54.291" endtime="20211025 12:40:03.233"/>
</kw>
<msg timestamp="20211025 12:40:03.233" level="INFO">${result} = [ {
  "metadata" : { },
  "volumeName" : "98370-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "202...</msg>
<status status="PASS" starttime="20211025 12:39:54.289" endtime="20211025 12:40:03.233"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211025 12:40:03.234" endtime="20211025 12:40:03.235"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211025 12:40:03.235" endtime="20211025 12:40:03.236"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211025 12:39:54.238" endtime="20211025 12:40:03.237"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:40:03.247" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:40:03.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:40:03.253" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211025 12:40:03.243" endtime="20211025 12:40:03.253"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:40:03.254" level="INFO">scm</msg>
<status status="PASS" starttime="20211025 12:40:03.253" endtime="20211025 12:40:03.254"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:40:03.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:40:03.255" endtime="20211025 12:40:03.255"/>
</kw>
<status status="PASS" starttime="20211025 12:40:03.242" endtime="20211025 12:40:03.256"/>
</kw>
<msg timestamp="20211025 12:40:03.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:40:03.242" endtime="20211025 12:40:03.256"/>
</kw>
<msg timestamp="20211025 12:40:03.257" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211025 12:40:03.241" endtime="20211025 12:40:03.257"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211025 12:40:03.258" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211025 12:40:03.257" endtime="20211025 12:40:03.258"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:40:03.264" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:40:03.277" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:40:03.277" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:40:03.261" endtime="20211025 12:40:03.278"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:40:03.280" level="INFO"/>
<status status="PASS" starttime="20211025 12:40:03.278" endtime="20211025 12:40:03.280"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:40:03.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:40:03.280" endtime="20211025 12:40:03.282"/>
</kw>
<status status="PASS" starttime="20211025 12:40:03.260" endtime="20211025 12:40:03.282"/>
</kw>
<msg timestamp="20211025 12:40:03.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:40:03.260" endtime="20211025 12:40:03.283"/>
</kw>
<status status="PASS" starttime="20211025 12:40:03.259" endtime="20211025 12:40:03.283"/>
</kw>
<status status="PASS" starttime="20211025 12:40:03.258" endtime="20211025 12:40:03.283"/>
</kw>
<status status="PASS" starttime="20211025 12:40:03.241" endtime="20211025 12:40:03.284"/>
</kw>
<status status="PASS" starttime="20211025 12:40:03.240" endtime="20211025 12:40:03.284"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:40:03.289" level="INFO">Running command 'ozone sh bucket info 98370-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:40:12.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:40:12.238" level="INFO">${output} = {
  "volumeName" : "98370-target",
  "bucketName" : "link1",
  "sourceVolume" : "98370-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-10-25T12:35:35.220Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20211025 12:40:03.287" endtime="20211025 12:40:12.238"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:40:12.239" level="INFO">{
  "volumeName" : "98370-target",
  "bucketName" : "link1",
  "sourceVolume" : "98370-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-10-25T12:35:35.220Z",
  "modificationTime" : "2021-10-25T12:35:35.220Z"
}</msg>
<status status="PASS" starttime="20211025 12:40:12.239" endtime="20211025 12:40:12.240"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:40:12.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:40:12.240" endtime="20211025 12:40:12.241"/>
</kw>
<status status="PASS" starttime="20211025 12:40:03.286" endtime="20211025 12:40:12.241"/>
</kw>
<msg timestamp="20211025 12:40:12.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:40:03.285" endtime="20211025 12:40:12.241"/>
</kw>
<msg timestamp="20211025 12:40:12.242" level="INFO">${result} = {
  "volumeName" : "98370-target",
  "bucketName" : "link1",
  "sourceVolume" : "98370-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-10-25T12:35:35.220Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20211025 12:40:03.284" endtime="20211025 12:40:12.242"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${source}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211025 12:40:12.242" endtime="20211025 12:40:12.243"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bucket1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211025 12:40:12.243" endtime="20211025 12:40:12.243"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${target}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211025 12:40:12.243" endtime="20211025 12:40:12.244"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211025 12:40:12.244" endtime="20211025 12:40:12.245"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>modificationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211025 12:40:12.245" endtime="20211025 12:40:12.245"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211025 12:40:12.246" endtime="20211025 12:40:12.246"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>metadata</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211025 12:40:12.246" endtime="20211025 12:40:12.247"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211025 12:40:03.238" endtime="20211025 12:40:12.247"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:40:12.255" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:40:12.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:40:12.260" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211025 12:40:12.252" endtime="20211025 12:40:12.260"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:40:12.261" level="INFO">scm</msg>
<status status="PASS" starttime="20211025 12:40:12.260" endtime="20211025 12:40:12.261"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:40:12.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:40:12.262" endtime="20211025 12:40:12.262"/>
</kw>
<status status="PASS" starttime="20211025 12:40:12.251" endtime="20211025 12:40:12.263"/>
</kw>
<msg timestamp="20211025 12:40:12.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:40:12.251" endtime="20211025 12:40:12.263"/>
</kw>
<msg timestamp="20211025 12:40:12.263" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211025 12:40:12.250" endtime="20211025 12:40:12.263"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211025 12:40:12.264" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211025 12:40:12.264" endtime="20211025 12:40:12.264"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:40:12.271" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:40:12.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:40:12.281" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:40:12.268" endtime="20211025 12:40:12.282"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:40:12.283" level="INFO"/>
<status status="PASS" starttime="20211025 12:40:12.282" endtime="20211025 12:40:12.283"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:40:12.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:40:12.283" endtime="20211025 12:40:12.284"/>
</kw>
<status status="PASS" starttime="20211025 12:40:12.268" endtime="20211025 12:40:12.285"/>
</kw>
<msg timestamp="20211025 12:40:12.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:40:12.267" endtime="20211025 12:40:12.285"/>
</kw>
<status status="PASS" starttime="20211025 12:40:12.265" endtime="20211025 12:40:12.285"/>
</kw>
<status status="PASS" starttime="20211025 12:40:12.265" endtime="20211025 12:40:12.286"/>
</kw>
<status status="PASS" starttime="20211025 12:40:12.249" endtime="20211025 12:40:12.286"/>
</kw>
<status status="PASS" starttime="20211025 12:40:12.249" endtime="20211025 12:40:12.286"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:40:12.291" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 98370-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:40:19.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:40:19.421" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211025 12:40:12.288" endtime="20211025 12:40:19.421"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:40:19.424" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211025 12:40:19.422" endtime="20211025 12:40:19.424"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:40:19.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:40:19.425" endtime="20211025 12:40:19.426"/>
</kw>
<status status="PASS" starttime="20211025 12:40:12.288" endtime="20211025 12:40:19.428"/>
</kw>
<msg timestamp="20211025 12:40:19.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:40:12.287" endtime="20211025 12:40:19.428"/>
</kw>
<status status="PASS" starttime="20211025 12:40:12.287" endtime="20211025 12:40:19.429"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:40:19.443" level="INFO">Running command 'ozone sh bucket getacl 98370-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:40:27.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:40:27.241" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20211025 12:40:19.438" endtime="20211025 12:40:27.241"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:40:27.244" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20211025 12:40:27.242" endtime="20211025 12:40:27.244"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:40:27.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:40:27.244" endtime="20211025 12:40:27.246"/>
</kw>
<status status="PASS" starttime="20211025 12:40:19.436" endtime="20211025 12:40:27.246"/>
</kw>
<msg timestamp="20211025 12:40:27.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:40:19.435" endtime="20211025 12:40:27.247"/>
</kw>
<msg timestamp="20211025 12:40:27.248" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20211025 12:40:19.432" endtime="20211025 12:40:27.248"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211025 12:40:27.248" endtime="20211025 12:40:27.249"/>
</kw>
<status status="PASS" starttime="20211025 12:40:19.429" endtime="20211025 12:40:27.250"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:40:27.259" level="INFO">Running command 'ozone sh bucket getacl 98370-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:40:35.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:40:35.895" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:40:27.256" endtime="20211025 12:40:35.895"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:40:35.900" level="INFO"/>
<status status="PASS" starttime="20211025 12:40:35.896" endtime="20211025 12:40:35.900"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:40:35.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:40:35.900" endtime="20211025 12:40:35.902"/>
</kw>
<status status="PASS" starttime="20211025 12:40:27.255" endtime="20211025 12:40:35.903"/>
</kw>
<msg timestamp="20211025 12:40:35.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:40:27.254" endtime="20211025 12:40:35.904"/>
</kw>
<msg timestamp="20211025 12:40:35.904" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20211025 12:40:27.253" endtime="20211025 12:40:35.904"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211025 12:40:35.904" endtime="20211025 12:40:35.906"/>
</kw>
<status status="PASS" starttime="20211025 12:40:27.250" endtime="20211025 12:40:35.907"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:40:35.911" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 98370-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:40:44.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:40:44.314" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211025 12:40:35.910" endtime="20211025 12:40:44.314"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:40:44.315" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211025 12:40:44.314" endtime="20211025 12:40:44.316"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:40:44.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:40:44.316" endtime="20211025 12:40:44.317"/>
</kw>
<status status="PASS" starttime="20211025 12:40:35.909" endtime="20211025 12:40:44.317"/>
</kw>
<msg timestamp="20211025 12:40:44.317" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:40:35.909" endtime="20211025 12:40:44.318"/>
</kw>
<status status="PASS" starttime="20211025 12:40:35.907" endtime="20211025 12:40:44.318"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:40:44.326" level="INFO">Running command 'ozone sh bucket getacl 98370-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:40:52.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:40:52.383" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:40:44.323" endtime="20211025 12:40:52.383"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:40:52.386" level="INFO"/>
<status status="PASS" starttime="20211025 12:40:52.384" endtime="20211025 12:40:52.386"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:40:52.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:40:52.387" endtime="20211025 12:40:52.388"/>
</kw>
<status status="PASS" starttime="20211025 12:40:44.322" endtime="20211025 12:40:52.389"/>
</kw>
<msg timestamp="20211025 12:40:52.389" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:40:44.321" endtime="20211025 12:40:52.389"/>
</kw>
<msg timestamp="20211025 12:40:52.390" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20211025 12:40:44.320" endtime="20211025 12:40:52.390"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211025 12:40:52.391" endtime="20211025 12:40:52.392"/>
</kw>
<status status="PASS" starttime="20211025 12:40:44.318" endtime="20211025 12:40:52.392"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:40:52.405" level="INFO">Running command 'ozone sh bucket getacl 98370-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:41:00.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:41:00.394" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20211025 12:40:52.401" endtime="20211025 12:41:00.394"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:41:00.397" level="INFO">READ</msg>
<status status="PASS" starttime="20211025 12:41:00.395" endtime="20211025 12:41:00.397"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:41:00.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:41:00.397" endtime="20211025 12:41:00.399"/>
</kw>
<status status="PASS" starttime="20211025 12:40:52.399" endtime="20211025 12:41:00.399"/>
</kw>
<msg timestamp="20211025 12:41:00.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:40:52.398" endtime="20211025 12:41:00.400"/>
</kw>
<msg timestamp="20211025 12:41:00.400" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20211025 12:40:52.396" endtime="20211025 12:41:00.400"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211025 12:41:00.401" endtime="20211025 12:41:00.401"/>
</kw>
<status status="PASS" starttime="20211025 12:40:52.392" endtime="20211025 12:41:00.402"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211025 12:40:12.248" endtime="20211025 12:41:00.402"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:41:00.413" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:41:00.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:41:00.418" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211025 12:41:00.409" endtime="20211025 12:41:00.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:41:00.420" level="INFO">scm</msg>
<status status="PASS" starttime="20211025 12:41:00.419" endtime="20211025 12:41:00.420"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:41:00.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:41:00.421" endtime="20211025 12:41:00.422"/>
</kw>
<status status="PASS" starttime="20211025 12:41:00.408" endtime="20211025 12:41:00.422"/>
</kw>
<msg timestamp="20211025 12:41:00.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:41:00.408" endtime="20211025 12:41:00.423"/>
</kw>
<msg timestamp="20211025 12:41:00.423" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211025 12:41:00.407" endtime="20211025 12:41:00.423"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211025 12:41:00.425" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211025 12:41:00.424" endtime="20211025 12:41:00.425"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:41:00.430" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:41:01.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:41:01.431" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:41:00.428" endtime="20211025 12:41:01.431"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:41:01.433" level="INFO"/>
<status status="PASS" starttime="20211025 12:41:01.432" endtime="20211025 12:41:01.433"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:41:01.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:41:01.434" endtime="20211025 12:41:01.434"/>
</kw>
<status status="PASS" starttime="20211025 12:41:00.427" endtime="20211025 12:41:01.435"/>
</kw>
<msg timestamp="20211025 12:41:01.435" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:41:00.427" endtime="20211025 12:41:01.435"/>
</kw>
<status status="PASS" starttime="20211025 12:41:00.426" endtime="20211025 12:41:01.435"/>
</kw>
<status status="PASS" starttime="20211025 12:41:00.425" endtime="20211025 12:41:01.436"/>
</kw>
<status status="PASS" starttime="20211025 12:41:00.406" endtime="20211025 12:41:01.436"/>
</kw>
<status status="PASS" starttime="20211025 12:41:00.405" endtime="20211025 12:41:01.436"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:41:01.440" level="INFO">Running command 'ozone sh bucket link 98370-source/bucket2 98370-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:41:09.670" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:41:09.670" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:41:01.438" endtime="20211025 12:41:09.670"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:41:09.673" level="INFO"/>
<status status="PASS" starttime="20211025 12:41:09.672" endtime="20211025 12:41:09.673"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:41:09.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:41:09.673" endtime="20211025 12:41:09.675"/>
</kw>
<status status="PASS" starttime="20211025 12:41:01.437" endtime="20211025 12:41:09.675"/>
</kw>
<msg timestamp="20211025 12:41:09.675" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:41:01.437" endtime="20211025 12:41:09.675"/>
</kw>
<status status="PASS" starttime="20211025 12:41:01.436" endtime="20211025 12:41:09.676"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:41:09.681" level="INFO">Running command 'ozone sh bucket create 98370-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:41:15.951" level="INFO">${rc} = 255</msg>
<msg timestamp="20211025 12:41:15.951" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211025 12:41:09.678" endtime="20211025 12:41:15.951"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:41:15.952" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211025 12:41:15.952" endtime="20211025 12:41:15.952"/>
</kw>
<msg timestamp="20211025 12:41:15.953" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211025 12:41:09.676" endtime="20211025 12:41:15.953"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211025 12:41:15.953" endtime="20211025 12:41:15.955"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:41:15.960" level="INFO">Running command 'ozone sh bucket create 98370-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:41:23.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:41:23.767" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:41:15.957" endtime="20211025 12:41:23.767"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:41:23.769" level="INFO"/>
<status status="PASS" starttime="20211025 12:41:23.768" endtime="20211025 12:41:23.769"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:41:23.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:41:23.769" endtime="20211025 12:41:23.770"/>
</kw>
<status status="PASS" starttime="20211025 12:41:15.957" endtime="20211025 12:41:23.771"/>
</kw>
<msg timestamp="20211025 12:41:23.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:41:15.956" endtime="20211025 12:41:23.772"/>
</kw>
<status status="PASS" starttime="20211025 12:41:15.956" endtime="20211025 12:41:23.772"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:41:23.777" level="INFO">Running command 'ozone sh bucket link 98370-source/bucket1 98370-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:41:31.561" level="INFO">${rc} = 255</msg>
<msg timestamp="20211025 12:41:31.561" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211025 12:41:23.775" endtime="20211025 12:41:31.561"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:41:31.562" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211025 12:41:31.561" endtime="20211025 12:41:31.562"/>
</kw>
<msg timestamp="20211025 12:41:31.563" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211025 12:41:23.773" endtime="20211025 12:41:31.563"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211025 12:41:31.563" endtime="20211025 12:41:31.564"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211025 12:41:00.403" endtime="20211025 12:41:31.564"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:41:31.576" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:41:31.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:41:31.583" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211025 12:41:31.573" endtime="20211025 12:41:31.583"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:41:31.586" level="INFO">scm</msg>
<status status="PASS" starttime="20211025 12:41:31.584" endtime="20211025 12:41:31.586"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:41:31.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:41:31.587" endtime="20211025 12:41:31.589"/>
</kw>
<status status="PASS" starttime="20211025 12:41:31.572" endtime="20211025 12:41:31.590"/>
</kw>
<msg timestamp="20211025 12:41:31.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:41:31.571" endtime="20211025 12:41:31.590"/>
</kw>
<msg timestamp="20211025 12:41:31.590" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211025 12:41:31.570" endtime="20211025 12:41:31.590"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211025 12:41:31.592" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211025 12:41:31.591" endtime="20211025 12:41:31.592"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:41:31.602" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:41:31.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:41:31.615" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:41:31.598" endtime="20211025 12:41:31.615"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:41:31.618" level="INFO"/>
<status status="PASS" starttime="20211025 12:41:31.616" endtime="20211025 12:41:31.618"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:41:31.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:41:31.619" endtime="20211025 12:41:31.620"/>
</kw>
<status status="PASS" starttime="20211025 12:41:31.596" endtime="20211025 12:41:31.620"/>
</kw>
<msg timestamp="20211025 12:41:31.621" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:41:31.595" endtime="20211025 12:41:31.621"/>
</kw>
<status status="PASS" starttime="20211025 12:41:31.593" endtime="20211025 12:41:31.622"/>
</kw>
<status status="PASS" starttime="20211025 12:41:31.592" endtime="20211025 12:41:31.622"/>
</kw>
<status status="PASS" starttime="20211025 12:41:31.569" endtime="20211025 12:41:31.622"/>
</kw>
<status status="PASS" starttime="20211025 12:41:31.567" endtime="20211025 12:41:31.623"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:41:31.631" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:41:31.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:41:31.636" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:41:31.628" endtime="20211025 12:41:31.636"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:41:31.638" level="INFO"/>
<status status="PASS" starttime="20211025 12:41:31.637" endtime="20211025 12:41:31.638"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:41:31.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:41:31.638" endtime="20211025 12:41:31.639"/>
</kw>
<status status="PASS" starttime="20211025 12:41:31.626" endtime="20211025 12:41:31.639"/>
</kw>
<msg timestamp="20211025 12:41:31.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:41:31.625" endtime="20211025 12:41:31.640"/>
</kw>
<status status="PASS" starttime="20211025 12:41:31.625" endtime="20211025 12:41:31.640"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:41:31.649" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:41:31.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:41:31.653" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211025 12:41:31.646" endtime="20211025 12:41:31.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:41:31.654" level="INFO">scm</msg>
<status status="PASS" starttime="20211025 12:41:31.654" endtime="20211025 12:41:31.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:41:31.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:41:31.654" endtime="20211025 12:41:31.655"/>
</kw>
<status status="PASS" starttime="20211025 12:41:31.644" endtime="20211025 12:41:31.656"/>
</kw>
<msg timestamp="20211025 12:41:31.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:41:31.643" endtime="20211025 12:41:31.656"/>
</kw>
<msg timestamp="20211025 12:41:31.657" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211025 12:41:31.642" endtime="20211025 12:41:31.657"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211025 12:41:31.658" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211025 12:41:31.657" endtime="20211025 12:41:31.658"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:41:31.664" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:41:31.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:41:31.675" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:41:31.661" endtime="20211025 12:41:31.675"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:41:31.677" level="INFO"/>
<status status="PASS" starttime="20211025 12:41:31.676" endtime="20211025 12:41:31.677"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:41:31.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:41:31.677" endtime="20211025 12:41:31.678"/>
</kw>
<status status="PASS" starttime="20211025 12:41:31.660" endtime="20211025 12:41:31.679"/>
</kw>
<msg timestamp="20211025 12:41:31.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:41:31.660" endtime="20211025 12:41:31.680"/>
</kw>
<status status="PASS" starttime="20211025 12:41:31.659" endtime="20211025 12:41:31.680"/>
</kw>
<status status="PASS" starttime="20211025 12:41:31.658" endtime="20211025 12:41:31.680"/>
</kw>
<status status="PASS" starttime="20211025 12:41:31.641" endtime="20211025 12:41:31.680"/>
</kw>
<status status="PASS" starttime="20211025 12:41:31.640" endtime="20211025 12:41:31.680"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:41:31.686" level="INFO">Running command 'ozone sh key list 98370-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:41:40.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:41:40.408" level="INFO">${output} = [ {
  "volumeName" : "98370-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-10-25T12:31:00.545Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20211025 12:41:31.682" endtime="20211025 12:41:40.408"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:41:40.409" level="INFO">[ {
  "volumeName" : "98370-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-10-25T12:31:00.545Z",
  "modificationTime" : "2021-10-25T12:34:04.201Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "replicationType" : "RATIS",
  "replicationFactor" : 3
} ]</msg>
<status status="PASS" starttime="20211025 12:41:40.409" endtime="20211025 12:41:40.410"/>
</kw>
<msg timestamp="20211025 12:41:40.410" level="INFO">${result} = [ {
  "volumeName" : "98370-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-10-25T12:31:00.545Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20211025 12:41:31.681" endtime="20211025 12:41:40.410"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211025 12:41:40.411" endtime="20211025 12:41:40.411"/>
</kw>
<status status="PASS" starttime="20211025 12:41:31.624" endtime="20211025 12:41:40.411"/>
</kw>
<status status="PASS" starttime="20211025 12:41:31.623" endtime="20211025 12:41:40.412"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211025 12:41:31.566" endtime="20211025 12:41:40.412"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:41:40.419" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:41:40.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:41:40.425" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211025 12:41:40.417" endtime="20211025 12:41:40.425"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:41:40.426" level="INFO">scm</msg>
<status status="PASS" starttime="20211025 12:41:40.426" endtime="20211025 12:41:40.427"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:41:40.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:41:40.427" endtime="20211025 12:41:40.428"/>
</kw>
<status status="PASS" starttime="20211025 12:41:40.416" endtime="20211025 12:41:40.428"/>
</kw>
<msg timestamp="20211025 12:41:40.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:41:40.416" endtime="20211025 12:41:40.429"/>
</kw>
<msg timestamp="20211025 12:41:40.429" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211025 12:41:40.416" endtime="20211025 12:41:40.429"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211025 12:41:40.431" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211025 12:41:40.430" endtime="20211025 12:41:40.431"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:41:40.438" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:41:40.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:41:40.453" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:41:40.435" endtime="20211025 12:41:40.453"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:41:40.455" level="INFO"/>
<status status="PASS" starttime="20211025 12:41:40.453" endtime="20211025 12:41:40.455"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:41:40.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:41:40.455" endtime="20211025 12:41:40.456"/>
</kw>
<status status="PASS" starttime="20211025 12:41:40.434" endtime="20211025 12:41:40.456"/>
</kw>
<msg timestamp="20211025 12:41:40.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:41:40.433" endtime="20211025 12:41:40.457"/>
</kw>
<status status="PASS" starttime="20211025 12:41:40.432" endtime="20211025 12:41:40.457"/>
</kw>
<status status="PASS" starttime="20211025 12:41:40.431" endtime="20211025 12:41:40.457"/>
</kw>
<status status="PASS" starttime="20211025 12:41:40.415" endtime="20211025 12:41:40.457"/>
</kw>
<status status="PASS" starttime="20211025 12:41:40.414" endtime="20211025 12:41:40.457"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:41:40.465" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:41:40.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:41:40.472" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:41:40.462" endtime="20211025 12:41:40.472"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:41:40.474" level="INFO"/>
<status status="PASS" starttime="20211025 12:41:40.473" endtime="20211025 12:41:40.474"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:41:40.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:41:40.475" endtime="20211025 12:41:40.476"/>
</kw>
<status status="PASS" starttime="20211025 12:41:40.461" endtime="20211025 12:41:40.477"/>
</kw>
<msg timestamp="20211025 12:41:40.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:41:40.461" endtime="20211025 12:41:40.477"/>
</kw>
<status status="PASS" starttime="20211025 12:41:40.459" endtime="20211025 12:41:40.477"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:41:40.485" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:41:40.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:41:40.491" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211025 12:41:40.482" endtime="20211025 12:41:40.491"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:41:40.492" level="INFO">scm</msg>
<status status="PASS" starttime="20211025 12:41:40.491" endtime="20211025 12:41:40.493"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:41:40.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:41:40.493" endtime="20211025 12:41:40.493"/>
</kw>
<status status="PASS" starttime="20211025 12:41:40.481" endtime="20211025 12:41:40.494"/>
</kw>
<msg timestamp="20211025 12:41:40.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:41:40.481" endtime="20211025 12:41:40.494"/>
</kw>
<msg timestamp="20211025 12:41:40.495" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211025 12:41:40.480" endtime="20211025 12:41:40.495"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211025 12:41:40.496" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211025 12:41:40.495" endtime="20211025 12:41:40.496"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:41:40.502" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:41:40.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:41:40.511" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:41:40.499" endtime="20211025 12:41:40.511"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:41:40.512" level="INFO"/>
<status status="PASS" starttime="20211025 12:41:40.512" endtime="20211025 12:41:40.513"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:41:40.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:41:40.513" endtime="20211025 12:41:40.514"/>
</kw>
<status status="PASS" starttime="20211025 12:41:40.498" endtime="20211025 12:41:40.515"/>
</kw>
<msg timestamp="20211025 12:41:40.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:41:40.498" endtime="20211025 12:41:40.515"/>
</kw>
<status status="PASS" starttime="20211025 12:41:40.497" endtime="20211025 12:41:40.515"/>
</kw>
<status status="PASS" starttime="20211025 12:41:40.496" endtime="20211025 12:41:40.516"/>
</kw>
<status status="PASS" starttime="20211025 12:41:40.478" endtime="20211025 12:41:40.516"/>
</kw>
<status status="PASS" starttime="20211025 12:41:40.477" endtime="20211025 12:41:40.516"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:41:40.519" level="INFO">Running command 'ozone sh key list 98370-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:41:48.603" level="INFO">${rc} = 255</msg>
<msg timestamp="20211025 12:41:48.603" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 98370-target unreadable-link null</msg>
<status status="PASS" starttime="20211025 12:41:40.517" endtime="20211025 12:41:48.603"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:41:48.605" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 98370-target unreadable-link null</msg>
<status status="PASS" starttime="20211025 12:41:48.604" endtime="20211025 12:41:48.606"/>
</kw>
<msg timestamp="20211025 12:41:48.606" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 98370-target unreadable-link null</msg>
<status status="PASS" starttime="20211025 12:41:40.516" endtime="20211025 12:41:48.606"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211025 12:41:48.607" endtime="20211025 12:41:48.608"/>
</kw>
<status status="PASS" starttime="20211025 12:41:40.458" endtime="20211025 12:41:48.608"/>
</kw>
<status status="PASS" starttime="20211025 12:41:40.458" endtime="20211025 12:41:48.608"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211025 12:41:40.413" endtime="20211025 12:41:48.609"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:41:48.623" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:41:48.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:41:48.628" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211025 12:41:48.619" endtime="20211025 12:41:48.628"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:41:48.630" level="INFO">scm</msg>
<status status="PASS" starttime="20211025 12:41:48.629" endtime="20211025 12:41:48.630"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:41:48.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:41:48.630" endtime="20211025 12:41:48.631"/>
</kw>
<status status="PASS" starttime="20211025 12:41:48.618" endtime="20211025 12:41:48.632"/>
</kw>
<msg timestamp="20211025 12:41:48.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:41:48.618" endtime="20211025 12:41:48.632"/>
</kw>
<msg timestamp="20211025 12:41:48.632" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211025 12:41:48.616" endtime="20211025 12:41:48.632"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211025 12:41:48.633" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211025 12:41:48.632" endtime="20211025 12:41:48.633"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:41:48.640" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:41:48.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:41:48.653" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:41:48.636" endtime="20211025 12:41:48.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:41:48.655" level="INFO"/>
<status status="PASS" starttime="20211025 12:41:48.654" endtime="20211025 12:41:48.655"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:41:48.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:41:48.655" endtime="20211025 12:41:48.656"/>
</kw>
<status status="PASS" starttime="20211025 12:41:48.635" endtime="20211025 12:41:48.657"/>
</kw>
<msg timestamp="20211025 12:41:48.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:41:48.635" endtime="20211025 12:41:48.657"/>
</kw>
<status status="PASS" starttime="20211025 12:41:48.634" endtime="20211025 12:41:48.657"/>
</kw>
<status status="PASS" starttime="20211025 12:41:48.633" endtime="20211025 12:41:48.657"/>
</kw>
<status status="PASS" starttime="20211025 12:41:48.615" endtime="20211025 12:41:48.658"/>
</kw>
<status status="PASS" starttime="20211025 12:41:48.614" endtime="20211025 12:41:48.658"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:41:48.665" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:41:48.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:41:48.672" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:41:48.662" endtime="20211025 12:41:48.672"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:41:48.674" level="INFO"/>
<status status="PASS" starttime="20211025 12:41:48.673" endtime="20211025 12:41:48.674"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:41:48.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:41:48.674" endtime="20211025 12:41:48.675"/>
</kw>
<status status="PASS" starttime="20211025 12:41:48.661" endtime="20211025 12:41:48.676"/>
</kw>
<msg timestamp="20211025 12:41:48.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:41:48.661" endtime="20211025 12:41:48.676"/>
</kw>
<status status="PASS" starttime="20211025 12:41:48.660" endtime="20211025 12:41:48.677"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:41:48.684" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:41:48.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:41:48.689" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211025 12:41:48.681" endtime="20211025 12:41:48.689"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:41:48.691" level="INFO">scm</msg>
<status status="PASS" starttime="20211025 12:41:48.689" endtime="20211025 12:41:48.691"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:41:48.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:41:48.692" endtime="20211025 12:41:48.694"/>
</kw>
<status status="PASS" starttime="20211025 12:41:48.680" endtime="20211025 12:41:48.694"/>
</kw>
<msg timestamp="20211025 12:41:48.695" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:41:48.680" endtime="20211025 12:41:48.695"/>
</kw>
<msg timestamp="20211025 12:41:48.695" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211025 12:41:48.678" endtime="20211025 12:41:48.696"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211025 12:41:48.697" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211025 12:41:48.696" endtime="20211025 12:41:48.697"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:41:48.704" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:41:48.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:41:48.716" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:41:48.701" endtime="20211025 12:41:48.716"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:41:48.718" level="INFO"/>
<status status="PASS" starttime="20211025 12:41:48.717" endtime="20211025 12:41:48.718"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:41:48.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:41:48.718" endtime="20211025 12:41:48.719"/>
</kw>
<status status="PASS" starttime="20211025 12:41:48.700" endtime="20211025 12:41:48.720"/>
</kw>
<msg timestamp="20211025 12:41:48.720" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:41:48.700" endtime="20211025 12:41:48.720"/>
</kw>
<status status="PASS" starttime="20211025 12:41:48.699" endtime="20211025 12:41:48.720"/>
</kw>
<status status="PASS" starttime="20211025 12:41:48.698" endtime="20211025 12:41:48.720"/>
</kw>
<status status="PASS" starttime="20211025 12:41:48.677" endtime="20211025 12:41:48.721"/>
</kw>
<status status="PASS" starttime="20211025 12:41:48.677" endtime="20211025 12:41:48.721"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:41:48.726" level="INFO">Running command 'ozone sh bucket info 98370-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:41:57.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:41:57.940" level="INFO">${output} = {
  "volumeName" : "98370-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "98370-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-10-25T12:34:33.300Z...</msg>
<status status="PASS" starttime="20211025 12:41:48.723" endtime="20211025 12:41:57.940"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:41:57.943" level="INFO">{
  "volumeName" : "98370-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "98370-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-10-25T12:34:33.300Z",
  "modificationTime" : "2021-10-25T12:35:12.021Z"
}</msg>
<status status="PASS" starttime="20211025 12:41:57.941" endtime="20211025 12:41:57.943"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:41:57.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:41:57.944" endtime="20211025 12:41:57.945"/>
</kw>
<status status="PASS" starttime="20211025 12:41:48.723" endtime="20211025 12:41:57.946"/>
</kw>
<msg timestamp="20211025 12:41:57.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:41:48.722" endtime="20211025 12:41:57.946"/>
</kw>
<msg timestamp="20211025 12:41:57.947" level="INFO">${result} = {
  "volumeName" : "98370-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "98370-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-10-25T12:34:33.300Z...</msg>
<status status="PASS" starttime="20211025 12:41:48.721" endtime="20211025 12:41:57.947"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211025 12:41:57.947" endtime="20211025 12:41:57.948"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211025 12:41:57.949" endtime="20211025 12:41:57.950"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:41:57.955" level="INFO">Running command 'ozone sh key list 98370-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:42:06.335" level="INFO">${rc} = 255</msg>
<msg timestamp="20211025 12:42:06.336" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 98370-source unreadable-bucket </msg>
<status status="PASS" starttime="20211025 12:41:57.952" endtime="20211025 12:42:06.336"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:42:06.338" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 98370-source unreadable-bucket </msg>
<status status="PASS" starttime="20211025 12:42:06.337" endtime="20211025 12:42:06.338"/>
</kw>
<msg timestamp="20211025 12:42:06.338" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 98370-source unreadable-bucket </msg>
<status status="PASS" starttime="20211025 12:41:57.951" endtime="20211025 12:42:06.338"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211025 12:42:06.338" endtime="20211025 12:42:06.339"/>
</kw>
<status status="PASS" starttime="20211025 12:41:48.659" endtime="20211025 12:42:06.339"/>
</kw>
<status status="PASS" starttime="20211025 12:41:48.658" endtime="20211025 12:42:06.339"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211025 12:41:48.612" endtime="20211025 12:42:06.340"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:42:06.348" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:42:06.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:42:06.355" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211025 12:42:06.346" endtime="20211025 12:42:06.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:42:06.357" level="INFO">scm</msg>
<status status="PASS" starttime="20211025 12:42:06.356" endtime="20211025 12:42:06.357"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:42:06.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:42:06.358" endtime="20211025 12:42:06.359"/>
</kw>
<status status="PASS" starttime="20211025 12:42:06.345" endtime="20211025 12:42:06.360"/>
</kw>
<msg timestamp="20211025 12:42:06.360" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:42:06.345" endtime="20211025 12:42:06.360"/>
</kw>
<msg timestamp="20211025 12:42:06.361" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211025 12:42:06.344" endtime="20211025 12:42:06.361"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211025 12:42:06.362" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211025 12:42:06.361" endtime="20211025 12:42:06.362"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:42:06.370" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:42:06.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:42:06.381" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:42:06.367" endtime="20211025 12:42:06.381"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:42:06.383" level="INFO"/>
<status status="PASS" starttime="20211025 12:42:06.382" endtime="20211025 12:42:06.384"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:42:06.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:42:06.384" endtime="20211025 12:42:06.386"/>
</kw>
<status status="PASS" starttime="20211025 12:42:06.366" endtime="20211025 12:42:06.386"/>
</kw>
<msg timestamp="20211025 12:42:06.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:42:06.365" endtime="20211025 12:42:06.387"/>
</kw>
<status status="PASS" starttime="20211025 12:42:06.364" endtime="20211025 12:42:06.387"/>
</kw>
<status status="PASS" starttime="20211025 12:42:06.363" endtime="20211025 12:42:06.387"/>
</kw>
<status status="PASS" starttime="20211025 12:42:06.343" endtime="20211025 12:42:06.387"/>
</kw>
<status status="PASS" starttime="20211025 12:42:06.342" endtime="20211025 12:42:06.387"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:42:06.393" level="INFO">Running command 'ozone sh bucket link 98370-target/loop1 98370-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:42:13.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:42:13.993" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:42:06.390" endtime="20211025 12:42:13.993"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:42:13.995" level="INFO"/>
<status status="PASS" starttime="20211025 12:42:13.994" endtime="20211025 12:42:13.996"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:42:13.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:42:13.996" endtime="20211025 12:42:13.997"/>
</kw>
<status status="PASS" starttime="20211025 12:42:06.389" endtime="20211025 12:42:13.998"/>
</kw>
<msg timestamp="20211025 12:42:13.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:42:06.389" endtime="20211025 12:42:13.998"/>
</kw>
<status status="PASS" starttime="20211025 12:42:06.388" endtime="20211025 12:42:13.999"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:42:14.005" level="INFO">Running command 'ozone sh bucket link 98370-target/loop2 98370-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:42:20.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:42:20.448" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:42:14.002" endtime="20211025 12:42:20.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:42:20.449" level="INFO"/>
<status status="PASS" starttime="20211025 12:42:20.449" endtime="20211025 12:42:20.449"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:42:20.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:42:20.450" endtime="20211025 12:42:20.451"/>
</kw>
<status status="PASS" starttime="20211025 12:42:14.001" endtime="20211025 12:42:20.451"/>
</kw>
<msg timestamp="20211025 12:42:20.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:42:14.000" endtime="20211025 12:42:20.451"/>
</kw>
<status status="PASS" starttime="20211025 12:42:13.999" endtime="20211025 12:42:20.452"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:42:20.456" level="INFO">Running command 'ozone sh bucket link 98370-target/loop3 98370-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:42:27.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:42:27.848" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:42:20.453" endtime="20211025 12:42:27.849"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:42:27.850" level="INFO"/>
<status status="PASS" starttime="20211025 12:42:27.849" endtime="20211025 12:42:27.850"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:42:27.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:42:27.850" endtime="20211025 12:42:27.851"/>
</kw>
<status status="PASS" starttime="20211025 12:42:20.453" endtime="20211025 12:42:27.851"/>
</kw>
<msg timestamp="20211025 12:42:27.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:42:20.453" endtime="20211025 12:42:27.852"/>
</kw>
<status status="PASS" starttime="20211025 12:42:20.452" endtime="20211025 12:42:27.852"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:42:27.855" level="INFO">Running command 'ozone sh key list 98370-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:42:35.374" level="INFO">${rc} = 255</msg>
<msg timestamp="20211025 12:42:35.374" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20211025 12:42:27.853" endtime="20211025 12:42:35.374"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:42:35.376" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20211025 12:42:35.375" endtime="20211025 12:42:35.377"/>
</kw>
<msg timestamp="20211025 12:42:35.377" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20211025 12:42:27.852" endtime="20211025 12:42:35.377"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211025 12:42:35.378" endtime="20211025 12:42:35.379"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211025 12:42:06.341" endtime="20211025 12:42:35.379"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:42:35.390" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:42:35.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:42:35.392" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211025 12:42:35.386" endtime="20211025 12:42:35.392"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:42:35.394" level="INFO">scm</msg>
<status status="PASS" starttime="20211025 12:42:35.393" endtime="20211025 12:42:35.394"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:42:35.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:42:35.394" endtime="20211025 12:42:35.395"/>
</kw>
<status status="PASS" starttime="20211025 12:42:35.385" endtime="20211025 12:42:35.396"/>
</kw>
<msg timestamp="20211025 12:42:35.396" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:42:35.384" endtime="20211025 12:42:35.396"/>
</kw>
<msg timestamp="20211025 12:42:35.396" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211025 12:42:35.384" endtime="20211025 12:42:35.396"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211025 12:42:35.397" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211025 12:42:35.397" endtime="20211025 12:42:35.397"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:42:35.402" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:42:35.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:42:35.412" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:42:35.400" endtime="20211025 12:42:35.413"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:42:35.414" level="INFO"/>
<status status="PASS" starttime="20211025 12:42:35.413" endtime="20211025 12:42:35.414"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:42:35.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:42:35.415" endtime="20211025 12:42:35.416"/>
</kw>
<status status="PASS" starttime="20211025 12:42:35.399" endtime="20211025 12:42:35.416"/>
</kw>
<msg timestamp="20211025 12:42:35.416" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:42:35.399" endtime="20211025 12:42:35.416"/>
</kw>
<status status="PASS" starttime="20211025 12:42:35.398" endtime="20211025 12:42:35.417"/>
</kw>
<status status="PASS" starttime="20211025 12:42:35.398" endtime="20211025 12:42:35.417"/>
</kw>
<status status="PASS" starttime="20211025 12:42:35.383" endtime="20211025 12:42:35.417"/>
</kw>
<status status="PASS" starttime="20211025 12:42:35.382" endtime="20211025 12:42:35.417"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:42:35.423" level="INFO">Running command 'ozone sh bucket link 98370-source/bucket1 98370-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:42:42.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:42:42.976" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:42:35.420" endtime="20211025 12:42:42.976"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:42:42.977" level="INFO"/>
<status status="PASS" starttime="20211025 12:42:42.977" endtime="20211025 12:42:42.978"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:42:42.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:42:42.978" endtime="20211025 12:42:42.979"/>
</kw>
<status status="PASS" starttime="20211025 12:42:35.419" endtime="20211025 12:42:42.979"/>
</kw>
<msg timestamp="20211025 12:42:42.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:42:35.419" endtime="20211025 12:42:42.979"/>
</kw>
<status status="PASS" starttime="20211025 12:42:35.418" endtime="20211025 12:42:42.979"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:42:42.985" level="INFO">Running command 'ozone sh key put 98370-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:44:35.381" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20211025 12:42:42.981" endtime="20211025 12:44:35.381"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211025 12:44:35.382" endtime="20211025 12:44:35.382"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211025 12:44:35.382" endtime="20211025 12:44:35.382"/>
</kw>
<status status="FAIL" starttime="20211025 12:42:42.981" endtime="20211025 12:44:35.383"/>
</kw>
<msg timestamp="20211025 12:44:35.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211025 12:42:42.980" endtime="20211025 12:44:35.383"/>
</kw>
<status status="FAIL" starttime="20211025 12:42:42.980" endtime="20211025 12:44:35.383"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<status status="NOT RUN" starttime="20211025 12:44:35.384" endtime="20211025 12:44:35.384"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211025 12:42:35.380" endtime="20211025 12:44:35.384">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:44:35.391" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:44:35.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:44:35.399" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211025 12:44:35.389" endtime="20211025 12:44:35.399"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:44:35.400" level="INFO">scm</msg>
<status status="PASS" starttime="20211025 12:44:35.400" endtime="20211025 12:44:35.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:44:35.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:44:35.401" endtime="20211025 12:44:35.401"/>
</kw>
<status status="PASS" starttime="20211025 12:44:35.388" endtime="20211025 12:44:35.402"/>
</kw>
<msg timestamp="20211025 12:44:35.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:44:35.388" endtime="20211025 12:44:35.402"/>
</kw>
<msg timestamp="20211025 12:44:35.402" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211025 12:44:35.387" endtime="20211025 12:44:35.402"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211025 12:44:35.403" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211025 12:44:35.402" endtime="20211025 12:44:35.404"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:44:35.411" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:44:35.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:44:35.421" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:44:35.408" endtime="20211025 12:44:35.421"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:44:35.423" level="INFO"/>
<status status="PASS" starttime="20211025 12:44:35.422" endtime="20211025 12:44:35.423"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:44:35.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:44:35.424" endtime="20211025 12:44:35.425"/>
</kw>
<status status="PASS" starttime="20211025 12:44:35.407" endtime="20211025 12:44:35.425"/>
</kw>
<msg timestamp="20211025 12:44:35.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:44:35.406" endtime="20211025 12:44:35.426"/>
</kw>
<status status="PASS" starttime="20211025 12:44:35.405" endtime="20211025 12:44:35.426"/>
</kw>
<status status="PASS" starttime="20211025 12:44:35.404" endtime="20211025 12:44:35.426"/>
</kw>
<status status="PASS" starttime="20211025 12:44:35.387" endtime="20211025 12:44:35.427"/>
</kw>
<status status="PASS" starttime="20211025 12:44:35.386" endtime="20211025 12:44:35.427"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:44:35.433" level="INFO">Running command 'ozone sh bucket delete 98370-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:44:43.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:44:43.697" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:44:35.431" endtime="20211025 12:44:43.697"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:44:43.699" level="INFO"/>
<status status="PASS" starttime="20211025 12:44:43.698" endtime="20211025 12:44:43.699"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:44:43.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:44:43.699" endtime="20211025 12:44:43.700"/>
</kw>
<status status="PASS" starttime="20211025 12:44:35.429" endtime="20211025 12:44:43.700"/>
</kw>
<msg timestamp="20211025 12:44:43.700" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:44:35.429" endtime="20211025 12:44:43.700"/>
</kw>
<status status="PASS" starttime="20211025 12:44:35.428" endtime="20211025 12:44:43.701"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:44:43.707" level="INFO">Running command 'ozone sh bucket list 98370-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:44:53.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:44:53.600" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "98370-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-2...</msg>
<status status="PASS" starttime="20211025 12:44:43.703" endtime="20211025 12:44:53.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:44:53.601" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "98370-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-25T12:41:23.689Z",
  "modificationTime" : "2021-10-25T12:41:23.689Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "98370-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-25T12:35:21.526Z",
  "modificationTime" : "2021-10-25T12:35:21.526Z",
  "sourceVolume" : "98370-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "98370-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-25T12:34:33.300Z",
  "modificationTime" : "2021-10-25T12:35:12.021Z",
  "sourceVolume" : "98370-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "98370-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-25T12:41:09.267Z",
  "modificationTime" : "2021-10-25T12:41:09.267Z",
  "sourceVolume" : "98370-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "98370-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-25T12:42:42.697Z",
  "modificationTime" : "2021-10-25T12:42:42.697Z",
  "sourceVolume" : "98370-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "98370-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-25T12:42:27.773Z",
  "modificationTime" : "2021-10-25T12:42:27.773Z",
  "sourceVolume" : "98370-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "98370-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-25T12:42:13.701Z",
  "modificationTime" : "2021-10-25T12:42:13.701Z",
  "sourceVolume" : "98370-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "98370-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-25T12:42:20.371Z",
  "modificationTime" : "2021-10-25T12:42:20.371Z",
  "sourceVolume" : "98370-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "98370-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-25T12:34:19.883Z",
  "modificationTime" : "2021-10-25T12:35:04.124Z",
  "sourceVolume" : "98370-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "98370-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-25T12:34:25.496Z",
  "modificationTime" : "2021-10-25T12:34:25.496Z",
  "sourceVolume" : "98370-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
} ]</msg>
<status status="PASS" starttime="20211025 12:44:53.600" endtime="20211025 12:44:53.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:44:53.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:44:53.601" endtime="20211025 12:44:53.603"/>
</kw>
<status status="PASS" starttime="20211025 12:44:43.703" endtime="20211025 12:44:53.603"/>
</kw>
<msg timestamp="20211025 12:44:53.603" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:44:43.702" endtime="20211025 12:44:53.604"/>
</kw>
<msg timestamp="20211025 12:44:53.605" level="INFO">${bucket_list} = [ {
  "metadata" : { },
  "volumeName" : "98370-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-2...</msg>
<status status="PASS" starttime="20211025 12:44:43.701" endtime="20211025 12:44:53.605"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211025 12:44:53.605" endtime="20211025 12:44:53.606"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:44:53.611" level="INFO">Running command 'ozone sh key list 98370-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:45:03.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:45:03.954" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20211025 12:44:53.608" endtime="20211025 12:45:03.954"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:45:03.955" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20211025 12:45:03.955" endtime="20211025 12:45:03.955"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:45:03.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:45:03.956" endtime="20211025 12:45:03.956"/>
</kw>
<status status="PASS" starttime="20211025 12:44:53.607" endtime="20211025 12:45:03.957"/>
</kw>
<msg timestamp="20211025 12:45:03.957" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:44:53.607" endtime="20211025 12:45:03.957"/>
</kw>
<msg timestamp="20211025 12:45:03.958" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20211025 12:44:53.606" endtime="20211025 12:45:03.958"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211025 12:45:03.958" endtime="20211025 12:45:03.958"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211025 12:44:35.385" endtime="20211025 12:45:03.959"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="FAIL" starttime="20211025 12:30:30.338" endtime="20211025 12:45:03.963"/>
</suite>
<suite id="s1-s1-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211025 12:45:04.036" level="INFO">${random} = 59535</msg>
<status status="PASS" starttime="20211025 12:45:04.034" endtime="20211025 12:45:04.036"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211025 12:45:04.038" level="INFO">${prefix} = 59535</msg>
<status status="PASS" starttime="20211025 12:45:04.036" endtime="20211025 12:45:04.038"/>
</kw>
<status status="PASS" starttime="20211025 12:45:04.033" endtime="20211025 12:45:04.038"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:45:04.049" level="INFO">Running command 'ozone sh volume info /59535-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:45:12.891" level="INFO">${rc} = 255</msg>
<msg timestamp="20211025 12:45:12.891" level="INFO">${output} = VOLUME_NOT_FOUND Volume 59535-rpcbasic is not found</msg>
<status status="PASS" starttime="20211025 12:45:04.044" endtime="20211025 12:45:12.892"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:45:12.894" level="INFO">VOLUME_NOT_FOUND Volume 59535-rpcbasic is not found</msg>
<status status="PASS" starttime="20211025 12:45:12.893" endtime="20211025 12:45:12.895"/>
</kw>
<msg timestamp="20211025 12:45:12.895" level="INFO">${result} = VOLUME_NOT_FOUND Volume 59535-rpcbasic is not found</msg>
<status status="PASS" starttime="20211025 12:45:04.043" endtime="20211025 12:45:12.895"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211025 12:45:12.896" endtime="20211025 12:45:12.897"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:45:12.904" level="INFO">Running command 'ozone sh volume create /59535-rpcbasic --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:45:19.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:45:19.848" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:45:12.900" endtime="20211025 12:45:19.848"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:45:19.849" level="INFO"/>
<status status="PASS" starttime="20211025 12:45:19.848" endtime="20211025 12:45:19.850"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:45:19.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:45:19.850" endtime="20211025 12:45:19.851"/>
</kw>
<status status="PASS" starttime="20211025 12:45:12.899" endtime="20211025 12:45:19.851"/>
</kw>
<msg timestamp="20211025 12:45:19.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:45:12.899" endtime="20211025 12:45:19.852"/>
</kw>
<msg timestamp="20211025 12:45:19.852" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211025 12:45:12.897" endtime="20211025 12:45:19.852"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211025 12:45:19.853" endtime="20211025 12:45:19.854"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:45:19.863" level="INFO">Running command 'ozone sh volume list / | jq -r '.[] | select(.name=="59535-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:45:28.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:45:28.255" level="INFO">${output} = {
  "metadata": {},
  "name": "59535-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211025 12:45:19.859" endtime="20211025 12:45:28.255"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:45:28.257" level="INFO">{
  "metadata": {},
  "name": "59535-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-25T12:45:19.576Z",
  "modificationTime": "2021-10-25T12:45:19.576Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211025 12:45:28.256" endtime="20211025 12:45:28.257"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:45:28.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:45:28.258" endtime="20211025 12:45:28.260"/>
</kw>
<status status="PASS" starttime="20211025 12:45:19.857" endtime="20211025 12:45:28.260"/>
</kw>
<msg timestamp="20211025 12:45:28.260" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:45:19.856" endtime="20211025 12:45:28.261"/>
</kw>
<msg timestamp="20211025 12:45:28.261" level="INFO">${result} = {
  "metadata": {},
  "name": "59535-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211025 12:45:19.854" endtime="20211025 12:45:28.261"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211025 12:45:28.262" endtime="20211025 12:45:28.263"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:45:28.268" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="59535-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:45:36.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:45:36.603" level="INFO">${output} = {
  "metadata": {},
  "name": "59535-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211025 12:45:28.266" endtime="20211025 12:45:36.603"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:45:36.606" level="INFO">{
  "metadata": {},
  "name": "59535-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-25T12:45:19.576Z",
  "modificationTime": "2021-10-25T12:45:19.576Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211025 12:45:36.604" endtime="20211025 12:45:36.606"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:45:36.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:45:36.606" endtime="20211025 12:45:36.607"/>
</kw>
<status status="PASS" starttime="20211025 12:45:28.265" endtime="20211025 12:45:36.608"/>
</kw>
<msg timestamp="20211025 12:45:36.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:45:28.264" endtime="20211025 12:45:36.609"/>
</kw>
<msg timestamp="20211025 12:45:36.609" level="INFO">${result} = {
  "metadata": {},
  "name": "59535-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211025 12:45:28.263" endtime="20211025 12:45:36.609"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211025 12:45:36.610" endtime="20211025 12:45:36.612"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:45:36.618" level="INFO">Running command 'ozone sh volume setquota /59535-rpcbasic --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:45:42.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:45:42.798" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:45:36.615" endtime="20211025 12:45:42.798"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:45:42.800" level="INFO"/>
<status status="PASS" starttime="20211025 12:45:42.799" endtime="20211025 12:45:42.800"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:45:42.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:45:42.800" endtime="20211025 12:45:42.801"/>
</kw>
<status status="PASS" starttime="20211025 12:45:36.614" endtime="20211025 12:45:42.801"/>
</kw>
<msg timestamp="20211025 12:45:42.801" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:45:36.614" endtime="20211025 12:45:42.801"/>
</kw>
<status status="PASS" starttime="20211025 12:45:36.612" endtime="20211025 12:45:42.802"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:45:42.809" level="INFO">Running command 'ozone sh volume info /59535-rpcbasic | jq -r '. | select(.name=="59535-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:45:51.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:45:51.811" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211025 12:45:42.806" endtime="20211025 12:45:51.811"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:45:51.812" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211025 12:45:51.812" endtime="20211025 12:45:51.813"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:45:51.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:45:51.813" endtime="20211025 12:45:51.813"/>
</kw>
<status status="PASS" starttime="20211025 12:45:42.805" endtime="20211025 12:45:51.814"/>
</kw>
<msg timestamp="20211025 12:45:51.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:45:42.805" endtime="20211025 12:45:51.814"/>
</kw>
<msg timestamp="20211025 12:45:51.815" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211025 12:45:42.802" endtime="20211025 12:45:51.815"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211025 12:45:51.815" endtime="20211025 12:45:51.815"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:45:51.824" level="INFO">Running command 'ozone sh bucket create /59535-rpcbasic/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:46:00.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:46:00.759" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:45:51.819" endtime="20211025 12:46:00.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:46:00.762" level="INFO"/>
<status status="PASS" starttime="20211025 12:46:00.760" endtime="20211025 12:46:00.763"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:46:00.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:46:00.763" endtime="20211025 12:46:00.764"/>
</kw>
<status status="PASS" starttime="20211025 12:45:51.818" endtime="20211025 12:46:00.765"/>
</kw>
<msg timestamp="20211025 12:46:00.765" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:45:51.817" endtime="20211025 12:46:00.765"/>
</kw>
<status status="PASS" starttime="20211025 12:45:51.815" endtime="20211025 12:46:00.766"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:46:00.774" level="INFO">Running command 'ozone sh bucket info /59535-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:46:08.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:46:08.128" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211025 12:46:00.771" endtime="20211025 12:46:08.128"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:46:08.129" level="INFO">DISK</msg>
<status status="PASS" starttime="20211025 12:46:08.128" endtime="20211025 12:46:08.129"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:46:08.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:46:08.130" endtime="20211025 12:46:08.130"/>
</kw>
<status status="PASS" starttime="20211025 12:46:00.769" endtime="20211025 12:46:08.131"/>
</kw>
<msg timestamp="20211025 12:46:08.131" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:46:00.768" endtime="20211025 12:46:08.131"/>
</kw>
<msg timestamp="20211025 12:46:08.131" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211025 12:46:00.766" endtime="20211025 12:46:08.131"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211025 12:46:08.131" endtime="20211025 12:46:08.132"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:46:08.136" level="INFO">Running command 'ozone sh bucket info /59535-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:46:16.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:46:16.211" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211025 12:46:08.134" endtime="20211025 12:46:16.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:46:16.213" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211025 12:46:16.212" endtime="20211025 12:46:16.213"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:46:16.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:46:16.213" endtime="20211025 12:46:16.214"/>
</kw>
<status status="PASS" starttime="20211025 12:46:08.133" endtime="20211025 12:46:16.214"/>
</kw>
<msg timestamp="20211025 12:46:16.214" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:46:08.133" endtime="20211025 12:46:16.214"/>
</kw>
<msg timestamp="20211025 12:46:16.215" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211025 12:46:08.132" endtime="20211025 12:46:16.215"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211025 12:46:16.215" endtime="20211025 12:46:16.215"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:46:16.220" level="INFO">Running command 'ozone sh bucket info /59535-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:46:22.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:46:22.675" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211025 12:46:16.218" endtime="20211025 12:46:22.675"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:46:22.678" level="INFO">100</msg>
<status status="PASS" starttime="20211025 12:46:22.676" endtime="20211025 12:46:22.678"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:46:22.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:46:22.678" endtime="20211025 12:46:22.679"/>
</kw>
<status status="PASS" starttime="20211025 12:46:16.217" endtime="20211025 12:46:22.680"/>
</kw>
<msg timestamp="20211025 12:46:22.680" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:46:16.217" endtime="20211025 12:46:22.681"/>
</kw>
<msg timestamp="20211025 12:46:22.681" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211025 12:46:16.216" endtime="20211025 12:46:22.681"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211025 12:46:22.681" endtime="20211025 12:46:22.682"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:46:22.690" level="INFO">Running command 'ozone sh bucket setquota /59535-rpcbasic/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:46:30.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:46:30.160" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:46:22.686" endtime="20211025 12:46:30.160"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:46:30.164" level="INFO"/>
<status status="PASS" starttime="20211025 12:46:30.161" endtime="20211025 12:46:30.164"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:46:30.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:46:30.164" endtime="20211025 12:46:30.165"/>
</kw>
<status status="PASS" starttime="20211025 12:46:22.684" endtime="20211025 12:46:30.166"/>
</kw>
<msg timestamp="20211025 12:46:30.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:46:22.684" endtime="20211025 12:46:30.166"/>
</kw>
<status status="PASS" starttime="20211025 12:46:22.682" endtime="20211025 12:46:30.166"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:46:30.173" level="INFO">Running command 'ozone sh bucket info /59535-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:46:38.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:46:38.690" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211025 12:46:30.170" endtime="20211025 12:46:38.690"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:46:38.692" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211025 12:46:38.691" endtime="20211025 12:46:38.693"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:46:38.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:46:38.693" endtime="20211025 12:46:38.694"/>
</kw>
<status status="PASS" starttime="20211025 12:46:30.168" endtime="20211025 12:46:38.695"/>
</kw>
<msg timestamp="20211025 12:46:38.695" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:46:30.168" endtime="20211025 12:46:38.695"/>
</kw>
<msg timestamp="20211025 12:46:38.696" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211025 12:46:30.167" endtime="20211025 12:46:38.696"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211025 12:46:38.697" endtime="20211025 12:46:38.698"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:46:38.706" level="INFO">Running command 'ozone sh bucket info /59535-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:46:46.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:46:46.811" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211025 12:46:38.703" endtime="20211025 12:46:46.811"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:46:46.813" level="INFO">1000</msg>
<status status="PASS" starttime="20211025 12:46:46.812" endtime="20211025 12:46:46.813"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:46:46.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:46:46.813" endtime="20211025 12:46:46.814"/>
</kw>
<status status="PASS" starttime="20211025 12:46:38.702" endtime="20211025 12:46:46.814"/>
</kw>
<msg timestamp="20211025 12:46:46.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:46:38.701" endtime="20211025 12:46:46.814"/>
</kw>
<msg timestamp="20211025 12:46:46.815" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211025 12:46:38.699" endtime="20211025 12:46:46.815"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211025 12:46:46.815" endtime="20211025 12:46:46.816"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:46:46.823" level="INFO">Running command 'ozone sh bucket list /59535-rpcbasic/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:46:55.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:46:55.571" level="INFO">${output} = 59535-rpcbasic</msg>
<status status="PASS" starttime="20211025 12:46:46.820" endtime="20211025 12:46:55.571"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:46:55.572" level="INFO">59535-rpcbasic</msg>
<status status="PASS" starttime="20211025 12:46:55.571" endtime="20211025 12:46:55.572"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:46:55.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:46:55.573" endtime="20211025 12:46:55.574"/>
</kw>
<status status="PASS" starttime="20211025 12:46:46.819" endtime="20211025 12:46:55.575"/>
</kw>
<msg timestamp="20211025 12:46:55.575" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:46:46.819" endtime="20211025 12:46:55.575"/>
</kw>
<msg timestamp="20211025 12:46:55.576" level="INFO">${result} = 59535-rpcbasic</msg>
<status status="PASS" starttime="20211025 12:46:46.817" endtime="20211025 12:46:55.576"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211025 12:46:55.576" endtime="20211025 12:46:55.577"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:46:55.585" level="INFO">Running command 'ozone sh key put /59535-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:50:04.039" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211025 12:46:55.581" endtime="20211025 12:50:04.040"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211025 12:50:04.040" endtime="20211025 12:50:04.040"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211025 12:50:04.040" endtime="20211025 12:50:04.041"/>
</kw>
<status status="FAIL" starttime="20211025 12:46:55.580" endtime="20211025 12:50:04.041"/>
</kw>
<msg timestamp="20211025 12:50:04.041" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211025 12:46:55.580" endtime="20211025 12:50:04.041"/>
</kw>
<status status="FAIL" starttime="20211025 12:46:55.578" endtime="20211025 12:50:04.042"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211025 12:50:04.042" endtime="20211025 12:50:04.042"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211025 12:50:04.042" endtime="20211025 12:50:04.042"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211025 12:50:04.042" endtime="20211025 12:50:04.042"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211025 12:50:04.043" endtime="20211025 12:50:04.043"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211025 12:50:04.043" endtime="20211025 12:50:04.043"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211025 12:50:04.043" endtime="20211025 12:50:04.043"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211025 12:50:04.043" endtime="20211025 12:50:04.043"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211025 12:50:04.044" endtime="20211025 12:50:04.044"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211025 12:50:04.044" endtime="20211025 12:50:04.044"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211025 12:50:04.044" endtime="20211025 12:50:04.044"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211025 12:50:04.044" endtime="20211025 12:50:04.044"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211025 12:50:04.045" endtime="20211025 12:50:04.045"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211025 12:50:04.045" endtime="20211025 12:50:04.045"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211025 12:50:04.045" endtime="20211025 12:50:04.045"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211025 12:50:04.045" endtime="20211025 12:50:04.045"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211025 12:50:04.045" endtime="20211025 12:50:04.045"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211025 12:50:04.046" endtime="20211025 12:50:04.046"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211025 12:50:04.046" endtime="20211025 12:50:04.046"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211025 12:50:04.046" endtime="20211025 12:50:04.046"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211025 12:50:04.048" endtime="20211025 12:50:04.048"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211025 12:50:04.048" endtime="20211025 12:50:04.049"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211025 12:50:04.049" endtime="20211025 12:50:04.050"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211025 12:50:04.050" endtime="20211025 12:50:04.050"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211025 12:50:04.050" endtime="20211025 12:50:04.051"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211025 12:50:04.051" endtime="20211025 12:50:04.051"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211025 12:50:04.051" endtime="20211025 12:50:04.051"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211025 12:50:04.051" endtime="20211025 12:50:04.051"/>
</kw>
<status status="FAIL" starttime="20211025 12:46:55.577" endtime="20211025 12:50:04.052"/>
</kw>
<status status="FAIL" starttime="20211025 12:46:55.577" endtime="20211025 12:50:04.053"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211025 12:50:04.053" endtime="20211025 12:50:04.054"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211025 12:50:04.054" endtime="20211025 12:50:04.054"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211025 12:50:04.054" endtime="20211025 12:50:04.055"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211025 12:50:04.055" endtime="20211025 12:50:04.055"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211025 12:50:04.055" endtime="20211025 12:50:04.056"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211025 12:50:04.056" endtime="20211025 12:50:04.056"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211025 12:50:04.056" endtime="20211025 12:50:04.056"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211025 12:50:04.056" endtime="20211025 12:50:04.057"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211025 12:50:04.058" endtime="20211025 12:50:04.058"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211025 12:50:04.058" endtime="20211025 12:50:04.059"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211025 12:50:04.059" endtime="20211025 12:50:04.059"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211025 12:50:04.059" endtime="20211025 12:50:04.059"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211025 12:50:04.059" endtime="20211025 12:50:04.062"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211025 12:50:04.062" endtime="20211025 12:50:04.062"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211025 12:50:04.062" endtime="20211025 12:50:04.062"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211025 12:50:04.062" endtime="20211025 12:50:04.063"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211025 12:50:04.063" endtime="20211025 12:50:04.063"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211025 12:50:04.063" endtime="20211025 12:50:04.063"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211025 12:50:04.063" endtime="20211025 12:50:04.063"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211025 12:50:04.063" endtime="20211025 12:50:04.064"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211025 12:50:04.064" endtime="20211025 12:50:04.064"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211025 12:50:04.064" endtime="20211025 12:50:04.064"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211025 12:50:04.065" endtime="20211025 12:50:04.065"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211025 12:50:04.065" endtime="20211025 12:50:04.065"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211025 12:50:04.065" endtime="20211025 12:50:04.065"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211025 12:50:04.065" endtime="20211025 12:50:04.065"/>
</kw>
<status status="FAIL" starttime="20211025 12:45:04.040" endtime="20211025 12:50:04.066"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211025 12:45:04.039" endtime="20211025 12:50:04.066">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20211025 12:45:03.978" endtime="20211025 12:50:04.072"/>
</suite>
<suite id="s1-s1-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211025 12:50:04.094" level="INFO">${random} = 07428</msg>
<status status="PASS" starttime="20211025 12:50:04.093" endtime="20211025 12:50:04.094"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211025 12:50:04.095" level="INFO">${prefix} = 07428</msg>
<status status="PASS" starttime="20211025 12:50:04.094" endtime="20211025 12:50:04.095"/>
</kw>
<status status="PASS" starttime="20211025 12:50:04.093" endtime="20211025 12:50:04.095"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:50:04.104" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:50:04.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:50:04.110" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211025 12:50:04.101" endtime="20211025 12:50:04.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:50:04.113" level="INFO">scm</msg>
<status status="PASS" starttime="20211025 12:50:04.111" endtime="20211025 12:50:04.113"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:50:04.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:50:04.113" endtime="20211025 12:50:04.115"/>
</kw>
<status status="PASS" starttime="20211025 12:50:04.100" endtime="20211025 12:50:04.115"/>
</kw>
<msg timestamp="20211025 12:50:04.115" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:50:04.100" endtime="20211025 12:50:04.115"/>
</kw>
<msg timestamp="20211025 12:50:04.116" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211025 12:50:04.100" endtime="20211025 12:50:04.116"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211025 12:50:04.118" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211025 12:50:04.116" endtime="20211025 12:50:04.119"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:50:04.125" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:50:05.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:50:05.128" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:50:04.122" endtime="20211025 12:50:05.128"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:50:05.130" level="INFO"/>
<status status="PASS" starttime="20211025 12:50:05.129" endtime="20211025 12:50:05.130"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:50:05.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:50:05.130" endtime="20211025 12:50:05.131"/>
</kw>
<status status="PASS" starttime="20211025 12:50:04.120" endtime="20211025 12:50:05.131"/>
</kw>
<msg timestamp="20211025 12:50:05.131" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:50:04.120" endtime="20211025 12:50:05.131"/>
</kw>
<status status="PASS" starttime="20211025 12:50:04.119" endtime="20211025 12:50:05.132"/>
</kw>
<status status="PASS" starttime="20211025 12:50:04.119" endtime="20211025 12:50:05.132"/>
</kw>
<status status="PASS" starttime="20211025 12:50:04.099" endtime="20211025 12:50:05.132"/>
</kw>
<status status="PASS" starttime="20211025 12:50:04.099" endtime="20211025 12:50:05.132"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:50:05.136" level="INFO">Running command 'ozone sh volume info o3://om:9862/07428-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:50:14.579" level="INFO">${rc} = 255</msg>
<msg timestamp="20211025 12:50:14.579" level="INFO">${output} = VOLUME_NOT_FOUND Volume 07428-rpcwoport is not found</msg>
<status status="PASS" starttime="20211025 12:50:05.134" endtime="20211025 12:50:14.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:50:14.580" level="INFO">VOLUME_NOT_FOUND Volume 07428-rpcwoport is not found</msg>
<status status="PASS" starttime="20211025 12:50:14.579" endtime="20211025 12:50:14.580"/>
</kw>
<msg timestamp="20211025 12:50:14.581" level="INFO">${result} = VOLUME_NOT_FOUND Volume 07428-rpcwoport is not found</msg>
<status status="PASS" starttime="20211025 12:50:05.133" endtime="20211025 12:50:14.581"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211025 12:50:14.581" endtime="20211025 12:50:14.582"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:50:14.587" level="INFO">Running command 'ozone sh volume create o3://om:9862/07428-rpcwoport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:50:22.908" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:50:22.908" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:50:14.584" endtime="20211025 12:50:22.908"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:50:22.910" level="INFO"/>
<status status="PASS" starttime="20211025 12:50:22.909" endtime="20211025 12:50:22.910"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:50:22.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:50:22.910" endtime="20211025 12:50:22.911"/>
</kw>
<status status="PASS" starttime="20211025 12:50:14.584" endtime="20211025 12:50:22.912"/>
</kw>
<msg timestamp="20211025 12:50:22.912" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:50:14.583" endtime="20211025 12:50:22.912"/>
</kw>
<msg timestamp="20211025 12:50:22.913" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211025 12:50:14.582" endtime="20211025 12:50:22.913"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211025 12:50:22.913" endtime="20211025 12:50:22.914"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:50:22.919" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '.[] | select(.name=="07428-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:50:31.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:50:31.343" level="INFO">${output} = {
  "metadata": {},
  "name": "07428-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211025 12:50:22.917" endtime="20211025 12:50:31.343"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:50:31.346" level="INFO">{
  "metadata": {},
  "name": "07428-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-25T12:50:22.552Z",
  "modificationTime": "2021-10-25T12:50:22.552Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211025 12:50:31.344" endtime="20211025 12:50:31.347"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:50:31.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:50:31.347" endtime="20211025 12:50:31.349"/>
</kw>
<status status="PASS" starttime="20211025 12:50:22.916" endtime="20211025 12:50:31.349"/>
</kw>
<msg timestamp="20211025 12:50:31.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:50:22.916" endtime="20211025 12:50:31.350"/>
</kw>
<msg timestamp="20211025 12:50:31.351" level="INFO">${result} = {
  "metadata": {},
  "name": "07428-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211025 12:50:22.914" endtime="20211025 12:50:31.351"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211025 12:50:31.351" endtime="20211025 12:50:31.352"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:50:31.359" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="07428-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:50:40.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:50:40.066" level="INFO">${output} = {
  "metadata": {},
  "name": "07428-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211025 12:50:31.356" endtime="20211025 12:50:40.067"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:50:40.069" level="INFO">{
  "metadata": {},
  "name": "07428-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-25T12:50:22.552Z",
  "modificationTime": "2021-10-25T12:50:22.552Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211025 12:50:40.067" endtime="20211025 12:50:40.069"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:50:40.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:50:40.069" endtime="20211025 12:50:40.070"/>
</kw>
<status status="PASS" starttime="20211025 12:50:31.354" endtime="20211025 12:50:40.071"/>
</kw>
<msg timestamp="20211025 12:50:40.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:50:31.354" endtime="20211025 12:50:40.071"/>
</kw>
<msg timestamp="20211025 12:50:40.072" level="INFO">${result} = {
  "metadata": {},
  "name": "07428-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211025 12:50:31.352" endtime="20211025 12:50:40.072"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211025 12:50:40.072" endtime="20211025 12:50:40.073"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:50:40.080" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/07428-rpcwoport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:50:48.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:50:48.513" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:50:40.077" endtime="20211025 12:50:48.513"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:50:48.516" level="INFO"/>
<status status="PASS" starttime="20211025 12:50:48.514" endtime="20211025 12:50:48.516"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:50:48.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:50:48.516" endtime="20211025 12:50:48.517"/>
</kw>
<status status="PASS" starttime="20211025 12:50:40.075" endtime="20211025 12:50:48.517"/>
</kw>
<msg timestamp="20211025 12:50:48.517" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:50:40.075" endtime="20211025 12:50:48.518"/>
</kw>
<status status="PASS" starttime="20211025 12:50:40.073" endtime="20211025 12:50:48.518"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:50:48.524" level="INFO">Running command 'ozone sh volume info o3://om:9862/07428-rpcwoport | jq -r '. | select(.name=="07428-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:50:56.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:50:56.421" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211025 12:50:48.522" endtime="20211025 12:50:56.421"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:50:56.422" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211025 12:50:56.421" endtime="20211025 12:50:56.422"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:50:56.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:50:56.423" endtime="20211025 12:50:56.423"/>
</kw>
<status status="PASS" starttime="20211025 12:50:48.520" endtime="20211025 12:50:56.424"/>
</kw>
<msg timestamp="20211025 12:50:56.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:50:48.520" endtime="20211025 12:50:56.424"/>
</kw>
<msg timestamp="20211025 12:50:56.425" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211025 12:50:48.518" endtime="20211025 12:50:56.425"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211025 12:50:56.425" endtime="20211025 12:50:56.426"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:50:56.431" level="INFO">Running command 'ozone sh bucket create o3://om:9862/07428-rpcwoport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:51:04.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:51:04.798" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:50:56.428" endtime="20211025 12:51:04.798"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:51:04.801" level="INFO"/>
<status status="PASS" starttime="20211025 12:51:04.799" endtime="20211025 12:51:04.802"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:51:04.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:51:04.803" endtime="20211025 12:51:04.805"/>
</kw>
<status status="PASS" starttime="20211025 12:50:56.427" endtime="20211025 12:51:04.806"/>
</kw>
<msg timestamp="20211025 12:51:04.806" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:50:56.427" endtime="20211025 12:51:04.807"/>
</kw>
<status status="PASS" starttime="20211025 12:50:56.426" endtime="20211025 12:51:04.808"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:51:04.818" level="INFO">Running command 'ozone sh bucket info o3://om:9862/07428-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:51:13.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:51:13.377" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211025 12:51:04.814" endtime="20211025 12:51:13.378"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:51:13.380" level="INFO">DISK</msg>
<status status="PASS" starttime="20211025 12:51:13.378" endtime="20211025 12:51:13.380"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:51:13.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:51:13.380" endtime="20211025 12:51:13.381"/>
</kw>
<status status="PASS" starttime="20211025 12:51:04.812" endtime="20211025 12:51:13.381"/>
</kw>
<msg timestamp="20211025 12:51:13.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:51:04.811" endtime="20211025 12:51:13.381"/>
</kw>
<msg timestamp="20211025 12:51:13.382" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211025 12:51:04.808" endtime="20211025 12:51:13.382"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211025 12:51:13.382" endtime="20211025 12:51:13.382"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:51:13.387" level="INFO">Running command 'ozone sh bucket info o3://om:9862/07428-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:51:22.614" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:51:22.614" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211025 12:51:13.385" endtime="20211025 12:51:22.614"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:51:22.615" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211025 12:51:22.614" endtime="20211025 12:51:22.615"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:51:22.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:51:22.616" endtime="20211025 12:51:22.616"/>
</kw>
<status status="PASS" starttime="20211025 12:51:13.384" endtime="20211025 12:51:22.617"/>
</kw>
<msg timestamp="20211025 12:51:22.618" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:51:13.383" endtime="20211025 12:51:22.618"/>
</kw>
<msg timestamp="20211025 12:51:22.618" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211025 12:51:13.382" endtime="20211025 12:51:22.618"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211025 12:51:22.619" endtime="20211025 12:51:22.619"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:51:22.625" level="INFO">Running command 'ozone sh bucket info o3://om:9862/07428-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:51:31.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:51:31.295" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211025 12:51:22.622" endtime="20211025 12:51:31.295"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:51:31.296" level="INFO">100</msg>
<status status="PASS" starttime="20211025 12:51:31.295" endtime="20211025 12:51:31.296"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:51:31.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:51:31.297" endtime="20211025 12:51:31.298"/>
</kw>
<status status="PASS" starttime="20211025 12:51:22.621" endtime="20211025 12:51:31.298"/>
</kw>
<msg timestamp="20211025 12:51:31.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:51:22.621" endtime="20211025 12:51:31.298"/>
</kw>
<msg timestamp="20211025 12:51:31.299" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211025 12:51:22.619" endtime="20211025 12:51:31.299"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211025 12:51:31.299" endtime="20211025 12:51:31.300"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:51:31.305" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/07428-rpcwoport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:51:39.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:51:39.252" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:51:31.302" endtime="20211025 12:51:39.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:51:39.254" level="INFO"/>
<status status="PASS" starttime="20211025 12:51:39.253" endtime="20211025 12:51:39.254"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:51:39.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:51:39.255" endtime="20211025 12:51:39.256"/>
</kw>
<status status="PASS" starttime="20211025 12:51:31.302" endtime="20211025 12:51:39.256"/>
</kw>
<msg timestamp="20211025 12:51:39.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:51:31.301" endtime="20211025 12:51:39.257"/>
</kw>
<status status="PASS" starttime="20211025 12:51:31.300" endtime="20211025 12:51:39.257"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:51:39.264" level="INFO">Running command 'ozone sh bucket info o3://om:9862/07428-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:51:47.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:51:47.591" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211025 12:51:39.262" endtime="20211025 12:51:47.591"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:51:47.593" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211025 12:51:47.592" endtime="20211025 12:51:47.593"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:51:47.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:51:47.593" endtime="20211025 12:51:47.594"/>
</kw>
<status status="PASS" starttime="20211025 12:51:39.260" endtime="20211025 12:51:47.594"/>
</kw>
<msg timestamp="20211025 12:51:47.595" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:51:39.259" endtime="20211025 12:51:47.595"/>
</kw>
<msg timestamp="20211025 12:51:47.596" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211025 12:51:39.257" endtime="20211025 12:51:47.596"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211025 12:51:47.596" endtime="20211025 12:51:47.597"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:51:47.603" level="INFO">Running command 'ozone sh bucket info o3://om:9862/07428-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:51:55.949" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:51:55.950" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211025 12:51:47.600" endtime="20211025 12:51:55.950"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:51:55.953" level="INFO">1000</msg>
<status status="PASS" starttime="20211025 12:51:55.951" endtime="20211025 12:51:55.953"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:51:55.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:51:55.954" endtime="20211025 12:51:55.955"/>
</kw>
<status status="PASS" starttime="20211025 12:51:47.599" endtime="20211025 12:51:55.956"/>
</kw>
<msg timestamp="20211025 12:51:55.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:51:47.598" endtime="20211025 12:51:55.957"/>
</kw>
<msg timestamp="20211025 12:51:55.957" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211025 12:51:47.597" endtime="20211025 12:51:55.958"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211025 12:51:55.958" endtime="20211025 12:51:55.960"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:51:55.970" level="INFO">Running command 'ozone sh bucket list o3://om:9862/07428-rpcwoport/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:52:04.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:52:04.836" level="INFO">${output} = 07428-rpcwoport</msg>
<status status="PASS" starttime="20211025 12:51:55.967" endtime="20211025 12:52:04.836"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:52:04.837" level="INFO">07428-rpcwoport</msg>
<status status="PASS" starttime="20211025 12:52:04.836" endtime="20211025 12:52:04.837"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:52:04.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:52:04.837" endtime="20211025 12:52:04.838"/>
</kw>
<status status="PASS" starttime="20211025 12:51:55.965" endtime="20211025 12:52:04.839"/>
</kw>
<msg timestamp="20211025 12:52:04.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:51:55.963" endtime="20211025 12:52:04.839"/>
</kw>
<msg timestamp="20211025 12:52:04.840" level="INFO">${result} = 07428-rpcwoport</msg>
<status status="PASS" starttime="20211025 12:51:55.960" endtime="20211025 12:52:04.840"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211025 12:52:04.841" endtime="20211025 12:52:04.842"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:52:04.851" level="INFO">Running command 'ozone sh key put o3://om:9862/07428-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:55:04.096" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211025 12:52:04.847" endtime="20211025 12:55:04.096"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211025 12:55:04.097" endtime="20211025 12:55:04.097"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211025 12:55:04.097" endtime="20211025 12:55:04.097"/>
</kw>
<status status="FAIL" starttime="20211025 12:52:04.846" endtime="20211025 12:55:04.097"/>
</kw>
<msg timestamp="20211025 12:55:04.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211025 12:52:04.846" endtime="20211025 12:55:04.098"/>
</kw>
<status status="FAIL" starttime="20211025 12:52:04.844" endtime="20211025 12:55:04.098"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211025 12:55:04.098" endtime="20211025 12:55:04.098"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211025 12:55:04.098" endtime="20211025 12:55:04.098"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211025 12:55:04.099" endtime="20211025 12:55:04.099"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211025 12:55:04.099" endtime="20211025 12:55:04.099"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211025 12:55:04.099" endtime="20211025 12:55:04.099"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211025 12:55:04.099" endtime="20211025 12:55:04.099"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211025 12:55:04.099" endtime="20211025 12:55:04.100"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211025 12:55:04.100" endtime="20211025 12:55:04.102"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211025 12:55:04.103" endtime="20211025 12:55:04.103"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211025 12:55:04.103" endtime="20211025 12:55:04.103"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211025 12:55:04.103" endtime="20211025 12:55:04.103"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211025 12:55:04.103" endtime="20211025 12:55:04.103"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211025 12:55:04.103" endtime="20211025 12:55:04.103"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211025 12:55:04.104" endtime="20211025 12:55:04.104"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211025 12:55:04.104" endtime="20211025 12:55:04.104"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211025 12:55:04.104" endtime="20211025 12:55:04.104"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211025 12:55:04.104" endtime="20211025 12:55:04.104"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211025 12:55:04.105" endtime="20211025 12:55:04.105"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211025 12:55:04.105" endtime="20211025 12:55:04.105"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211025 12:55:04.105" endtime="20211025 12:55:04.105"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211025 12:55:04.105" endtime="20211025 12:55:04.105"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211025 12:55:04.105" endtime="20211025 12:55:04.105"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211025 12:55:04.105" endtime="20211025 12:55:04.106"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211025 12:55:04.106" endtime="20211025 12:55:04.106"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211025 12:55:04.106" endtime="20211025 12:55:04.106"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211025 12:55:04.106" endtime="20211025 12:55:04.106"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211025 12:55:04.106" endtime="20211025 12:55:04.106"/>
</kw>
<status status="FAIL" starttime="20211025 12:52:04.843" endtime="20211025 12:55:04.107"/>
</kw>
<status status="FAIL" starttime="20211025 12:52:04.842" endtime="20211025 12:55:04.107"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211025 12:55:04.107" endtime="20211025 12:55:04.107"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211025 12:55:04.107" endtime="20211025 12:55:04.107"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211025 12:55:04.108" endtime="20211025 12:55:04.108"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211025 12:55:04.108" endtime="20211025 12:55:04.108"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211025 12:55:04.108" endtime="20211025 12:55:04.108"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211025 12:55:04.108" endtime="20211025 12:55:04.108"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211025 12:55:04.108" endtime="20211025 12:55:04.108"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211025 12:55:04.109" endtime="20211025 12:55:04.109"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211025 12:55:04.109" endtime="20211025 12:55:04.109"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211025 12:55:04.109" endtime="20211025 12:55:04.109"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211025 12:55:04.109" endtime="20211025 12:55:04.109"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211025 12:55:04.109" endtime="20211025 12:55:04.109"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211025 12:55:04.110" endtime="20211025 12:55:04.110"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211025 12:55:04.110" endtime="20211025 12:55:04.110"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211025 12:55:04.110" endtime="20211025 12:55:04.110"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211025 12:55:04.110" endtime="20211025 12:55:04.110"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211025 12:55:04.111" endtime="20211025 12:55:04.111"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211025 12:55:04.111" endtime="20211025 12:55:04.111"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211025 12:55:04.111" endtime="20211025 12:55:04.111"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211025 12:55:04.111" endtime="20211025 12:55:04.112"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211025 12:55:04.112" endtime="20211025 12:55:04.112"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211025 12:55:04.112" endtime="20211025 12:55:04.112"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211025 12:55:04.113" endtime="20211025 12:55:04.113"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211025 12:55:04.113" endtime="20211025 12:55:04.113"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211025 12:55:04.113" endtime="20211025 12:55:04.113"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211025 12:55:04.113" endtime="20211025 12:55:04.113"/>
</kw>
<status status="FAIL" starttime="20211025 12:50:05.132" endtime="20211025 12:55:04.114"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211025 12:50:04.095" endtime="20211025 12:55:04.114">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:55:04.126" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:55:04.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:55:04.131" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211025 12:55:04.123" endtime="20211025 12:55:04.131"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:55:04.134" level="INFO">scm</msg>
<status status="PASS" starttime="20211025 12:55:04.132" endtime="20211025 12:55:04.134"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:55:04.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:55:04.134" endtime="20211025 12:55:04.135"/>
</kw>
<status status="PASS" starttime="20211025 12:55:04.120" endtime="20211025 12:55:04.136"/>
</kw>
<msg timestamp="20211025 12:55:04.136" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:55:04.120" endtime="20211025 12:55:04.136"/>
</kw>
<msg timestamp="20211025 12:55:04.137" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211025 12:55:04.120" endtime="20211025 12:55:04.137"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211025 12:55:04.138" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211025 12:55:04.137" endtime="20211025 12:55:04.138"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:55:04.162" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:55:04.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:55:04.178" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:55:04.142" endtime="20211025 12:55:04.178"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:55:04.183" level="INFO"/>
<status status="PASS" starttime="20211025 12:55:04.179" endtime="20211025 12:55:04.183"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:55:04.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:55:04.183" endtime="20211025 12:55:04.184"/>
</kw>
<status status="PASS" starttime="20211025 12:55:04.141" endtime="20211025 12:55:04.184"/>
</kw>
<msg timestamp="20211025 12:55:04.185" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:55:04.140" endtime="20211025 12:55:04.185"/>
</kw>
<status status="PASS" starttime="20211025 12:55:04.139" endtime="20211025 12:55:04.185"/>
</kw>
<status status="PASS" starttime="20211025 12:55:04.139" endtime="20211025 12:55:04.185"/>
</kw>
<status status="PASS" starttime="20211025 12:55:04.119" endtime="20211025 12:55:04.185"/>
</kw>
<status status="PASS" starttime="20211025 12:55:04.118" endtime="20211025 12:55:04.185"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:55:04.191" level="INFO">Running command 'ozone sh volume create o3://om:9862/07428-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:55:12.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:55:12.171" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:55:04.189" endtime="20211025 12:55:12.171"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:55:12.172" level="INFO"/>
<status status="PASS" starttime="20211025 12:55:12.171" endtime="20211025 12:55:12.172"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:55:12.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:55:12.173" endtime="20211025 12:55:12.173"/>
</kw>
<status status="PASS" starttime="20211025 12:55:04.188" endtime="20211025 12:55:12.174"/>
</kw>
<msg timestamp="20211025 12:55:12.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:55:04.188" endtime="20211025 12:55:12.174"/>
</kw>
<status status="PASS" starttime="20211025 12:55:04.187" endtime="20211025 12:55:12.174"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:55:12.180" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/07428-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:55:19.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:55:19.701" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211025 12:55:12.177" endtime="20211025 12:55:19.701"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:55:19.702" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211025 12:55:19.701" endtime="20211025 12:55:19.702"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:55:19.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:55:19.702" endtime="20211025 12:55:19.704"/>
</kw>
<status status="PASS" starttime="20211025 12:55:12.176" endtime="20211025 12:55:19.704"/>
</kw>
<msg timestamp="20211025 12:55:19.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:55:12.176" endtime="20211025 12:55:19.705"/>
</kw>
<msg timestamp="20211025 12:55:19.706" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211025 12:55:12.175" endtime="20211025 12:55:19.706"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211025 12:55:19.706" endtime="20211025 12:55:19.708"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:55:19.716" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/07428-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:55:25.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:55:25.495" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211025 12:55:19.713" endtime="20211025 12:55:25.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:55:25.498" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211025 12:55:25.496" endtime="20211025 12:55:25.498"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:55:25.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:55:25.499" endtime="20211025 12:55:25.500"/>
</kw>
<status status="PASS" starttime="20211025 12:55:19.712" endtime="20211025 12:55:25.501"/>
</kw>
<msg timestamp="20211025 12:55:25.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:55:19.710" endtime="20211025 12:55:25.501"/>
</kw>
<msg timestamp="20211025 12:55:25.502" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211025 12:55:19.708" endtime="20211025 12:55:25.502"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:55:25.510" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/07428-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:55:31.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:55:31.779" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211025 12:55:25.507" endtime="20211025 12:55:31.779"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:55:31.782" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211025 12:55:31.781" endtime="20211025 12:55:31.783"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:55:31.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:55:31.783" endtime="20211025 12:55:31.785"/>
</kw>
<status status="PASS" starttime="20211025 12:55:25.506" endtime="20211025 12:55:31.786"/>
</kw>
<msg timestamp="20211025 12:55:31.786" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:55:25.505" endtime="20211025 12:55:31.786"/>
</kw>
<msg timestamp="20211025 12:55:31.786" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211025 12:55:25.503" endtime="20211025 12:55:31.786"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211025 12:55:31.787" endtime="20211025 12:55:31.789"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:55:31.796" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/07428-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:55:39.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:55:39.619" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211025 12:55:31.793" endtime="20211025 12:55:39.619"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:55:39.621" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211025 12:55:39.620" endtime="20211025 12:55:39.621"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:55:39.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:55:39.621" endtime="20211025 12:55:39.622"/>
</kw>
<status status="PASS" starttime="20211025 12:55:31.792" endtime="20211025 12:55:39.622"/>
</kw>
<msg timestamp="20211025 12:55:39.622" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:55:31.791" endtime="20211025 12:55:39.623"/>
</kw>
<msg timestamp="20211025 12:55:39.624" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211025 12:55:31.789" endtime="20211025 12:55:39.624"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:55:39.630" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/07428-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:55:48.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:55:48.413" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211025 12:55:39.626" endtime="20211025 12:55:48.413"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:55:48.414" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211025 12:55:48.413" endtime="20211025 12:55:48.414"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:55:48.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:55:48.414" endtime="20211025 12:55:48.415"/>
</kw>
<status status="PASS" starttime="20211025 12:55:39.626" endtime="20211025 12:55:48.416"/>
</kw>
<msg timestamp="20211025 12:55:48.416" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:55:39.625" endtime="20211025 12:55:48.416"/>
</kw>
<msg timestamp="20211025 12:55:48.416" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211025 12:55:39.624" endtime="20211025 12:55:48.416"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211025 12:55:48.416" endtime="20211025 12:55:48.417"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:55:48.425" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/07428-rpcwoport2 -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:55:56.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:55:56.431" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211025 12:55:48.421" endtime="20211025 12:55:56.431"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:55:56.432" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211025 12:55:56.431" endtime="20211025 12:55:56.432"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:55:56.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:55:56.432" endtime="20211025 12:55:56.433"/>
</kw>
<status status="PASS" starttime="20211025 12:55:48.420" endtime="20211025 12:55:56.433"/>
</kw>
<msg timestamp="20211025 12:55:56.433" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:55:48.419" endtime="20211025 12:55:56.434"/>
</kw>
<msg timestamp="20211025 12:55:56.434" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211025 12:55:48.418" endtime="20211025 12:55:56.434"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:55:56.441" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/07428-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:56:05.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:56:05.019" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211025 12:55:56.437" endtime="20211025 12:56:05.019"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:56:05.020" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211025 12:56:05.020" endtime="20211025 12:56:05.021"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:56:05.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:56:05.021" endtime="20211025 12:56:05.022"/>
</kw>
<status status="PASS" starttime="20211025 12:55:56.436" endtime="20211025 12:56:05.023"/>
</kw>
<msg timestamp="20211025 12:56:05.023" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:55:56.435" endtime="20211025 12:56:05.023"/>
</kw>
<msg timestamp="20211025 12:56:05.023" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211025 12:55:56.434" endtime="20211025 12:56:05.023"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211025 12:56:05.024" endtime="20211025 12:56:05.024"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211025 12:56:05.024" endtime="20211025 12:56:05.025"/>
</kw>
<status status="PASS" starttime="20211025 12:55:04.186" endtime="20211025 12:56:05.025"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211025 12:55:04.116" endtime="20211025 12:56:05.026"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:56:05.036" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:56:05.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:56:05.043" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211025 12:56:05.032" endtime="20211025 12:56:05.043"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:56:05.044" level="INFO">scm</msg>
<status status="PASS" starttime="20211025 12:56:05.043" endtime="20211025 12:56:05.045"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:56:05.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:56:05.045" endtime="20211025 12:56:05.046"/>
</kw>
<status status="PASS" starttime="20211025 12:56:05.031" endtime="20211025 12:56:05.047"/>
</kw>
<msg timestamp="20211025 12:56:05.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:56:05.030" endtime="20211025 12:56:05.047"/>
</kw>
<msg timestamp="20211025 12:56:05.050" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211025 12:56:05.029" endtime="20211025 12:56:05.050"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211025 12:56:05.051" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211025 12:56:05.050" endtime="20211025 12:56:05.051"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:56:05.056" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:56:06.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:56:06.065" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:56:05.054" endtime="20211025 12:56:06.065"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:56:06.067" level="INFO"/>
<status status="PASS" starttime="20211025 12:56:06.066" endtime="20211025 12:56:06.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:56:06.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:56:06.067" endtime="20211025 12:56:06.068"/>
</kw>
<status status="PASS" starttime="20211025 12:56:05.053" endtime="20211025 12:56:06.069"/>
</kw>
<msg timestamp="20211025 12:56:06.069" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:56:05.053" endtime="20211025 12:56:06.069"/>
</kw>
<status status="PASS" starttime="20211025 12:56:05.052" endtime="20211025 12:56:06.069"/>
</kw>
<status status="PASS" starttime="20211025 12:56:05.051" endtime="20211025 12:56:06.069"/>
</kw>
<status status="PASS" starttime="20211025 12:56:05.028" endtime="20211025 12:56:06.070"/>
</kw>
<status status="PASS" starttime="20211025 12:56:05.028" endtime="20211025 12:56:06.070"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:56:06.077" level="INFO">Running command 'ozone sh bucket create o3://om:9862/07428-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:56:13.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:56:13.221" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:56:06.073" endtime="20211025 12:56:13.221"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:56:13.223" level="INFO"/>
<status status="PASS" starttime="20211025 12:56:13.222" endtime="20211025 12:56:13.223"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:56:13.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:56:13.223" endtime="20211025 12:56:13.224"/>
</kw>
<status status="PASS" starttime="20211025 12:56:06.072" endtime="20211025 12:56:13.224"/>
</kw>
<msg timestamp="20211025 12:56:13.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:56:06.072" endtime="20211025 12:56:13.224"/>
</kw>
<status status="PASS" starttime="20211025 12:56:06.071" endtime="20211025 12:56:13.225"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:56:13.230" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/07428-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:56:20.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:56:20.260" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211025 12:56:13.227" endtime="20211025 12:56:20.260"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:56:20.262" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211025 12:56:20.261" endtime="20211025 12:56:20.262"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:56:20.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:56:20.262" endtime="20211025 12:56:20.263"/>
</kw>
<status status="PASS" starttime="20211025 12:56:13.226" endtime="20211025 12:56:20.263"/>
</kw>
<msg timestamp="20211025 12:56:20.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:56:13.226" endtime="20211025 12:56:20.263"/>
</kw>
<msg timestamp="20211025 12:56:20.264" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211025 12:56:13.225" endtime="20211025 12:56:20.264"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211025 12:56:20.264" endtime="20211025 12:56:20.265"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:56:20.272" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/07428-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:56:26.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:56:26.712" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20211025 12:56:20.267" endtime="20211025 12:56:26.712"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:56:26.713" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20211025 12:56:26.712" endtime="20211025 12:56:26.713"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:56:26.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:56:26.713" endtime="20211025 12:56:26.714"/>
</kw>
<status status="PASS" starttime="20211025 12:56:20.266" endtime="20211025 12:56:26.714"/>
</kw>
<msg timestamp="20211025 12:56:26.715" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:56:20.266" endtime="20211025 12:56:26.715"/>
</kw>
<msg timestamp="20211025 12:56:26.715" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20211025 12:56:20.265" endtime="20211025 12:56:26.715"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:56:26.720" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/07428-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:56:34.870" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:56:34.870" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211025 12:56:26.718" endtime="20211025 12:56:34.870"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:56:34.873" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211025 12:56:34.872" endtime="20211025 12:56:34.874"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:56:34.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:56:34.874" endtime="20211025 12:56:34.875"/>
</kw>
<status status="PASS" starttime="20211025 12:56:26.717" endtime="20211025 12:56:34.876"/>
</kw>
<msg timestamp="20211025 12:56:34.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:56:26.716" endtime="20211025 12:56:34.876"/>
</kw>
<msg timestamp="20211025 12:56:34.877" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211025 12:56:26.716" endtime="20211025 12:56:34.877"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211025 12:56:34.877" endtime="20211025 12:56:34.880"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:56:34.888" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/07428-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:56:42.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:56:42.845" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211025 12:56:34.884" endtime="20211025 12:56:42.845"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:56:42.847" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211025 12:56:42.846" endtime="20211025 12:56:42.847"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:56:42.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:56:42.847" endtime="20211025 12:56:42.849"/>
</kw>
<status status="PASS" starttime="20211025 12:56:34.883" endtime="20211025 12:56:42.850"/>
</kw>
<msg timestamp="20211025 12:56:42.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:56:34.882" endtime="20211025 12:56:42.850"/>
</kw>
<msg timestamp="20211025 12:56:42.851" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211025 12:56:34.880" endtime="20211025 12:56:42.851"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:56:42.858" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/07428-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:56:51.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:56:51.518" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211025 12:56:42.855" endtime="20211025 12:56:51.518"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:56:51.520" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211025 12:56:51.519" endtime="20211025 12:56:51.520"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:56:51.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:56:51.520" endtime="20211025 12:56:51.521"/>
</kw>
<status status="PASS" starttime="20211025 12:56:42.854" endtime="20211025 12:56:51.522"/>
</kw>
<msg timestamp="20211025 12:56:51.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:56:42.853" endtime="20211025 12:56:51.522"/>
</kw>
<msg timestamp="20211025 12:56:51.523" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211025 12:56:42.851" endtime="20211025 12:56:51.523"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211025 12:56:51.523" endtime="20211025 12:56:51.524"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:56:51.530" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/07428-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:56:58.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:56:58.687" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211025 12:56:51.527" endtime="20211025 12:56:58.687"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:56:58.688" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211025 12:56:58.688" endtime="20211025 12:56:58.688"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:56:58.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:56:58.689" endtime="20211025 12:56:58.689"/>
</kw>
<status status="PASS" starttime="20211025 12:56:51.527" endtime="20211025 12:56:58.690"/>
</kw>
<msg timestamp="20211025 12:56:58.690" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:56:51.526" endtime="20211025 12:56:58.690"/>
</kw>
<msg timestamp="20211025 12:56:58.690" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211025 12:56:51.524" endtime="20211025 12:56:58.690"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:56:58.697" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/07428-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:57:07.271" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:57:07.271" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211025 12:56:58.693" endtime="20211025 12:57:07.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:57:07.273" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211025 12:57:07.272" endtime="20211025 12:57:07.273"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:57:07.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:57:07.273" endtime="20211025 12:57:07.274"/>
</kw>
<status status="PASS" starttime="20211025 12:56:58.692" endtime="20211025 12:57:07.274"/>
</kw>
<msg timestamp="20211025 12:57:07.274" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:56:58.692" endtime="20211025 12:57:07.275"/>
</kw>
<msg timestamp="20211025 12:57:07.275" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211025 12:56:58.691" endtime="20211025 12:57:07.275"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211025 12:57:07.276" endtime="20211025 12:57:07.276"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211025 12:57:07.276" endtime="20211025 12:57:07.277"/>
</kw>
<status status="PASS" starttime="20211025 12:56:06.070" endtime="20211025 12:57:07.277"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211025 12:56:05.027" endtime="20211025 12:57:07.278"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:57:07.285" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:57:07.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:57:07.290" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211025 12:57:07.283" endtime="20211025 12:57:07.290"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:57:07.292" level="INFO">scm</msg>
<status status="PASS" starttime="20211025 12:57:07.291" endtime="20211025 12:57:07.292"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:57:07.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:57:07.292" endtime="20211025 12:57:07.294"/>
</kw>
<status status="PASS" starttime="20211025 12:57:07.282" endtime="20211025 12:57:07.294"/>
</kw>
<msg timestamp="20211025 12:57:07.295" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:57:07.282" endtime="20211025 12:57:07.295"/>
</kw>
<msg timestamp="20211025 12:57:07.295" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211025 12:57:07.281" endtime="20211025 12:57:07.295"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211025 12:57:07.296" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211025 12:57:07.295" endtime="20211025 12:57:07.296"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:57:07.302" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:57:07.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:57:07.313" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:57:07.300" endtime="20211025 12:57:07.313"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:57:07.315" level="INFO"/>
<status status="PASS" starttime="20211025 12:57:07.314" endtime="20211025 12:57:07.315"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:57:07.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:57:07.315" endtime="20211025 12:57:07.316"/>
</kw>
<status status="PASS" starttime="20211025 12:57:07.299" endtime="20211025 12:57:07.317"/>
</kw>
<msg timestamp="20211025 12:57:07.317" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:57:07.298" endtime="20211025 12:57:07.317"/>
</kw>
<status status="PASS" starttime="20211025 12:57:07.297" endtime="20211025 12:57:07.317"/>
</kw>
<status status="PASS" starttime="20211025 12:57:07.297" endtime="20211025 12:57:07.317"/>
</kw>
<status status="PASS" starttime="20211025 12:57:07.280" endtime="20211025 12:57:07.318"/>
</kw>
<status status="PASS" starttime="20211025 12:57:07.279" endtime="20211025 12:57:07.318"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:57:07.324" level="INFO">Running command 'ozone sh key put o3://om:9862/07428-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 13:00:19.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 13:00:19.937" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:57:07.321" endtime="20211025 13:00:19.937"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 13:00:19.939" level="INFO"/>
<status status="PASS" starttime="20211025 13:00:19.938" endtime="20211025 13:00:19.939"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 13:00:19.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 13:00:19.939" endtime="20211025 13:00:19.940"/>
</kw>
<status status="PASS" starttime="20211025 12:57:07.321" endtime="20211025 13:00:19.941"/>
</kw>
<msg timestamp="20211025 13:00:19.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:57:07.320" endtime="20211025 13:00:19.941"/>
</kw>
<status status="PASS" starttime="20211025 12:57:07.319" endtime="20211025 13:00:19.941"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 13:00:19.949" level="INFO">Running command 'ozone sh key getacl o3://om:9862/07428-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 13:00:28.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 13:00:28.811" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211025 13:00:19.945" endtime="20211025 13:00:28.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 13:00:28.815" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211025 13:00:28.813" endtime="20211025 13:00:28.815"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 13:00:28.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 13:00:28.816" endtime="20211025 13:00:28.818"/>
</kw>
<status status="PASS" starttime="20211025 13:00:19.944" endtime="20211025 13:00:28.819"/>
</kw>
<msg timestamp="20211025 13:00:28.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 13:00:19.943" endtime="20211025 13:00:28.819"/>
</kw>
<msg timestamp="20211025 13:00:28.820" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211025 13:00:19.941" endtime="20211025 13:00:28.820"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211025 13:00:28.821" endtime="20211025 13:00:28.822"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 13:00:28.830" level="INFO">Running command 'ozone sh key addacl o3://om:9862/07428-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 13:00:36.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 13:00:36.530" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211025 13:00:28.826" endtime="20211025 13:00:36.530"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 13:00:36.532" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211025 13:00:36.531" endtime="20211025 13:00:36.533"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 13:00:36.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 13:00:36.533" endtime="20211025 13:00:36.534"/>
</kw>
<status status="PASS" starttime="20211025 13:00:28.825" endtime="20211025 13:00:36.535"/>
</kw>
<msg timestamp="20211025 13:00:36.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 13:00:28.824" endtime="20211025 13:00:36.535"/>
</kw>
<msg timestamp="20211025 13:00:36.536" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211025 13:00:28.823" endtime="20211025 13:00:36.536"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 13:00:36.543" level="INFO">Running command 'ozone sh key getacl o3://om:9862/07428-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 13:00:45.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 13:00:45.113" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211025 13:00:36.539" endtime="20211025 13:00:45.113"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 13:00:45.115" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211025 13:00:45.114" endtime="20211025 13:00:45.115"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 13:00:45.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 13:00:45.115" endtime="20211025 13:00:45.116"/>
</kw>
<status status="PASS" starttime="20211025 13:00:36.538" endtime="20211025 13:00:45.117"/>
</kw>
<msg timestamp="20211025 13:00:45.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 13:00:36.538" endtime="20211025 13:00:45.117"/>
</kw>
<msg timestamp="20211025 13:00:45.118" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211025 13:00:36.536" endtime="20211025 13:00:45.118"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211025 13:00:45.118" endtime="20211025 13:00:45.120"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 13:00:45.126" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/07428-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 13:00:52.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 13:00:52.918" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211025 13:00:45.123" endtime="20211025 13:00:52.918"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 13:00:52.920" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211025 13:00:52.919" endtime="20211025 13:00:52.920"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 13:00:52.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 13:00:52.920" endtime="20211025 13:00:52.921"/>
</kw>
<status status="PASS" starttime="20211025 13:00:45.122" endtime="20211025 13:00:52.921"/>
</kw>
<msg timestamp="20211025 13:00:52.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 13:00:45.121" endtime="20211025 13:00:52.921"/>
</kw>
<msg timestamp="20211025 13:00:52.922" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211025 13:00:45.120" endtime="20211025 13:00:52.922"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 13:00:52.926" level="INFO">Running command 'ozone sh key getacl o3://om:9862/07428-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 13:00:58.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 13:00:58.899" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211025 13:00:52.924" endtime="20211025 13:00:58.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 13:00:58.900" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20211025 13:00:58.900" endtime="20211025 13:00:58.901"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 13:00:58.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 13:00:58.901" endtime="20211025 13:00:58.901"/>
</kw>
<status status="PASS" starttime="20211025 13:00:52.923" endtime="20211025 13:00:58.902"/>
</kw>
<msg timestamp="20211025 13:00:58.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 13:00:52.923" endtime="20211025 13:00:58.902"/>
</kw>
<msg timestamp="20211025 13:00:58.902" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211025 13:00:52.922" endtime="20211025 13:00:58.902"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211025 13:00:58.903" endtime="20211025 13:00:58.903"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 13:00:58.908" level="INFO">Running command 'ozone sh key setacl o3://om:9862/07428-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 13:01:05.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 13:01:05.746" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211025 13:00:58.906" endtime="20211025 13:01:05.746"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 13:01:05.748" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211025 13:01:05.747" endtime="20211025 13:01:05.748"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 13:01:05.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 13:01:05.748" endtime="20211025 13:01:05.749"/>
</kw>
<status status="PASS" starttime="20211025 13:00:58.905" endtime="20211025 13:01:05.749"/>
</kw>
<msg timestamp="20211025 13:01:05.749" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 13:00:58.905" endtime="20211025 13:01:05.749"/>
</kw>
<msg timestamp="20211025 13:01:05.750" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211025 13:00:58.904" endtime="20211025 13:01:05.750"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 13:01:05.754" level="INFO">Running command 'ozone sh key getacl o3://om:9862/07428-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 13:01:14.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 13:01:14.305" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211025 13:01:05.752" endtime="20211025 13:01:14.305"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 13:01:14.307" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211025 13:01:14.306" endtime="20211025 13:01:14.307"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 13:01:14.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 13:01:14.307" endtime="20211025 13:01:14.307"/>
</kw>
<status status="PASS" starttime="20211025 13:01:05.751" endtime="20211025 13:01:14.308"/>
</kw>
<msg timestamp="20211025 13:01:14.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 13:01:05.751" endtime="20211025 13:01:14.308"/>
</kw>
<msg timestamp="20211025 13:01:14.308" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211025 13:01:05.750" endtime="20211025 13:01:14.308"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211025 13:01:14.309" endtime="20211025 13:01:14.309"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211025 13:01:14.309" endtime="20211025 13:01:14.310"/>
</kw>
<status status="PASS" starttime="20211025 12:57:07.318" endtime="20211025 13:01:14.310"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211025 12:57:07.278" endtime="20211025 13:01:14.311"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient prefix acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 13:01:14.322" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 13:01:14.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 13:01:14.327" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211025 13:01:14.319" endtime="20211025 13:01:14.327"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 13:01:14.329" level="INFO">scm</msg>
<status status="PASS" starttime="20211025 13:01:14.328" endtime="20211025 13:01:14.329"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 13:01:14.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 13:01:14.330" endtime="20211025 13:01:14.331"/>
</kw>
<status status="PASS" starttime="20211025 13:01:14.318" endtime="20211025 13:01:14.332"/>
</kw>
<msg timestamp="20211025 13:01:14.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 13:01:14.317" endtime="20211025 13:01:14.333"/>
</kw>
<msg timestamp="20211025 13:01:14.333" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211025 13:01:14.316" endtime="20211025 13:01:14.333"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211025 13:01:14.335" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211025 13:01:14.334" endtime="20211025 13:01:14.335"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 13:01:14.340" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 13:01:15.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 13:01:15.355" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 13:01:14.338" endtime="20211025 13:01:15.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 13:01:15.356" level="INFO"/>
<status status="PASS" starttime="20211025 13:01:15.355" endtime="20211025 13:01:15.356"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 13:01:15.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 13:01:15.357" endtime="20211025 13:01:15.357"/>
</kw>
<status status="PASS" starttime="20211025 13:01:14.337" endtime="20211025 13:01:15.358"/>
</kw>
<msg timestamp="20211025 13:01:15.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 13:01:14.337" endtime="20211025 13:01:15.358"/>
</kw>
<status status="PASS" starttime="20211025 13:01:14.336" endtime="20211025 13:01:15.358"/>
</kw>
<status status="PASS" starttime="20211025 13:01:14.335" endtime="20211025 13:01:15.358"/>
</kw>
<status status="PASS" starttime="20211025 13:01:14.315" endtime="20211025 13:01:15.359"/>
</kw>
<status status="PASS" starttime="20211025 13:01:14.314" endtime="20211025 13:01:15.359"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 13:01:15.365" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/07428-rpcwoport2/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 13:01:22.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 13:01:22.625" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211025 13:01:15.362" endtime="20211025 13:01:22.625"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 13:01:22.628" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211025 13:01:22.626" endtime="20211025 13:01:22.628"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 13:01:22.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 13:01:22.629" endtime="20211025 13:01:22.629"/>
</kw>
<status status="PASS" starttime="20211025 13:01:15.361" endtime="20211025 13:01:22.634"/>
</kw>
<msg timestamp="20211025 13:01:22.634" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 13:01:15.361" endtime="20211025 13:01:22.634"/>
</kw>
<status status="PASS" starttime="20211025 13:01:15.360" endtime="20211025 13:01:22.634"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 13:01:22.643" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/07428-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 13:01:30.921" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 13:01:30.921" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211025 13:01:22.639" endtime="20211025 13:01:30.922"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 13:01:30.925" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211025 13:01:30.923" endtime="20211025 13:01:30.925"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 13:01:30.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 13:01:30.926" endtime="20211025 13:01:30.927"/>
</kw>
<status status="PASS" starttime="20211025 13:01:22.637" endtime="20211025 13:01:30.928"/>
</kw>
<msg timestamp="20211025 13:01:30.928" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 13:01:22.637" endtime="20211025 13:01:30.928"/>
</kw>
<msg timestamp="20211025 13:01:30.929" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211025 13:01:22.635" endtime="20211025 13:01:30.929"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211025 13:01:30.929" endtime="20211025 13:01:30.931"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 13:01:30.938" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/07428-rpcwoport2/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 13:01:38.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 13:01:38.584" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20211025 13:01:30.935" endtime="20211025 13:01:38.584"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 13:01:38.586" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20211025 13:01:38.584" endtime="20211025 13:01:38.587"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 13:01:38.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 13:01:38.587" endtime="20211025 13:01:38.590"/>
</kw>
<status status="PASS" starttime="20211025 13:01:30.934" endtime="20211025 13:01:38.591"/>
</kw>
<msg timestamp="20211025 13:01:38.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 13:01:30.933" endtime="20211025 13:01:38.591"/>
</kw>
<msg timestamp="20211025 13:01:38.592" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20211025 13:01:30.931" endtime="20211025 13:01:38.592"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 13:01:38.600" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/07428-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 13:01:46.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 13:01:46.851" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211025 13:01:38.596" endtime="20211025 13:01:46.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 13:01:46.853" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211025 13:01:46.851" endtime="20211025 13:01:46.853"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 13:01:46.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 13:01:46.853" endtime="20211025 13:01:46.855"/>
</kw>
<status status="PASS" starttime="20211025 13:01:38.595" endtime="20211025 13:01:46.855"/>
</kw>
<msg timestamp="20211025 13:01:46.856" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 13:01:38.594" endtime="20211025 13:01:46.856"/>
</kw>
<msg timestamp="20211025 13:01:46.856" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211025 13:01:38.592" endtime="20211025 13:01:46.857"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211025 13:01:46.857" endtime="20211025 13:01:46.859"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 13:01:46.868" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/07428-rpcwoport2/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 13:01:54.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 13:01:54.835" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211025 13:01:46.864" endtime="20211025 13:01:54.835"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 13:01:54.836" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211025 13:01:54.836" endtime="20211025 13:01:54.837"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 13:01:54.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 13:01:54.837" endtime="20211025 13:01:54.838"/>
</kw>
<status status="PASS" starttime="20211025 13:01:46.862" endtime="20211025 13:01:54.838"/>
</kw>
<msg timestamp="20211025 13:01:54.838" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 13:01:46.861" endtime="20211025 13:01:54.838"/>
</kw>
<msg timestamp="20211025 13:01:54.839" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211025 13:01:46.859" endtime="20211025 13:01:54.839"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 13:01:54.843" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/07428-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 13:02:02.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 13:02:02.412" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20211025 13:01:54.841" endtime="20211025 13:02:02.412"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 13:02:02.415" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211025 13:02:02.413" endtime="20211025 13:02:02.415"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 13:02:02.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 13:02:02.415" endtime="20211025 13:02:02.417"/>
</kw>
<status status="PASS" starttime="20211025 13:01:54.840" endtime="20211025 13:02:02.417"/>
</kw>
<msg timestamp="20211025 13:02:02.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 13:01:54.840" endtime="20211025 13:02:02.418"/>
</kw>
<msg timestamp="20211025 13:02:02.418" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20211025 13:01:54.839" endtime="20211025 13:02:02.418"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211025 13:02:02.419" endtime="20211025 13:02:02.420"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211025 13:02:02.420" endtime="20211025 13:02:02.421"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 13:02:02.428" level="INFO">Running command 'ozone sh key put o3://om:9862/07428-rpcwoport2/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 13:05:14.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 13:05:14.053" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 13:02:02.425" endtime="20211025 13:05:14.053"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 13:05:14.056" level="INFO"/>
<status status="PASS" starttime="20211025 13:05:14.054" endtime="20211025 13:05:14.056"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 13:05:14.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 13:05:14.056" endtime="20211025 13:05:14.057"/>
</kw>
<status status="PASS" starttime="20211025 13:02:02.424" endtime="20211025 13:05:14.058"/>
</kw>
<msg timestamp="20211025 13:05:14.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 13:02:02.423" endtime="20211025 13:05:14.060"/>
</kw>
<status status="PASS" starttime="20211025 13:02:02.421" endtime="20211025 13:05:14.060"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 13:05:14.068" level="INFO">Running command 'ozone sh key getacl o3://om:9862/07428-rpcwoport2/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 13:05:22.617" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 13:05:22.617" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211025 13:05:14.064" endtime="20211025 13:05:22.618"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 13:05:22.619" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211025 13:05:22.618" endtime="20211025 13:05:22.619"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 13:05:22.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 13:05:22.619" endtime="20211025 13:05:22.620"/>
</kw>
<status status="PASS" starttime="20211025 13:05:14.063" endtime="20211025 13:05:22.620"/>
</kw>
<msg timestamp="20211025 13:05:22.621" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 13:05:14.062" endtime="20211025 13:05:22.621"/>
</kw>
<msg timestamp="20211025 13:05:22.621" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211025 13:05:14.061" endtime="20211025 13:05:22.621"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211025 13:05:22.621" endtime="20211025 13:05:22.622"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211025 13:05:22.622" endtime="20211025 13:05:22.623"/>
</kw>
<status status="PASS" starttime="20211025 13:01:15.359" endtime="20211025 13:05:22.623"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211025 13:01:14.312" endtime="20211025 13:05:22.624"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 13:05:22.636" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 13:05:22.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 13:05:22.642" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211025 13:05:22.632" endtime="20211025 13:05:22.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 13:05:22.645" level="INFO">scm</msg>
<status status="PASS" starttime="20211025 13:05:22.643" endtime="20211025 13:05:22.645"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 13:05:22.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 13:05:22.646" endtime="20211025 13:05:22.647"/>
</kw>
<status status="PASS" starttime="20211025 13:05:22.630" endtime="20211025 13:05:22.648"/>
</kw>
<msg timestamp="20211025 13:05:22.648" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 13:05:22.630" endtime="20211025 13:05:22.648"/>
</kw>
<msg timestamp="20211025 13:05:22.648" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211025 13:05:22.629" endtime="20211025 13:05:22.649"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211025 13:05:22.650" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211025 13:05:22.649" endtime="20211025 13:05:22.650"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 13:05:22.656" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 13:05:22.667" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 13:05:22.668" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 13:05:22.653" endtime="20211025 13:05:22.668"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 13:05:22.669" level="INFO"/>
<status status="PASS" starttime="20211025 13:05:22.668" endtime="20211025 13:05:22.669"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 13:05:22.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 13:05:22.669" endtime="20211025 13:05:22.670"/>
</kw>
<status status="PASS" starttime="20211025 13:05:22.652" endtime="20211025 13:05:22.670"/>
</kw>
<msg timestamp="20211025 13:05:22.670" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 13:05:22.652" endtime="20211025 13:05:22.670"/>
</kw>
<status status="PASS" starttime="20211025 13:05:22.651" endtime="20211025 13:05:22.670"/>
</kw>
<status status="PASS" starttime="20211025 13:05:22.650" endtime="20211025 13:05:22.671"/>
</kw>
<status status="PASS" starttime="20211025 13:05:22.628" endtime="20211025 13:05:22.671"/>
</kw>
<status status="PASS" starttime="20211025 13:05:22.627" endtime="20211025 13:05:22.671"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 13:05:22.678" level="INFO">Running command 'ozone sh volume info o3:///07428-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 13:05:28.695" level="INFO">${rc} = 255</msg>
<msg timestamp="20211025 13:05:28.696" level="INFO">${output} = VOLUME_NOT_FOUND Volume 07428-rpcwport is not found</msg>
<status status="PASS" starttime="20211025 13:05:22.674" endtime="20211025 13:05:28.696"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 13:05:28.697" level="INFO">VOLUME_NOT_FOUND Volume 07428-rpcwport is not found</msg>
<status status="PASS" starttime="20211025 13:05:28.696" endtime="20211025 13:05:28.697"/>
</kw>
<msg timestamp="20211025 13:05:28.698" level="INFO">${result} = VOLUME_NOT_FOUND Volume 07428-rpcwport is not found</msg>
<status status="PASS" starttime="20211025 13:05:22.673" endtime="20211025 13:05:28.698"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211025 13:05:28.699" endtime="20211025 13:05:28.699"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 13:05:28.706" level="INFO">Running command 'ozone sh volume create o3:///07428-rpcwport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 13:05:37.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 13:05:37.151" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 13:05:28.703" endtime="20211025 13:05:37.151"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 13:05:37.153" level="INFO"/>
<status status="PASS" starttime="20211025 13:05:37.152" endtime="20211025 13:05:37.153"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 13:05:37.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 13:05:37.153" endtime="20211025 13:05:37.154"/>
</kw>
<status status="PASS" starttime="20211025 13:05:28.702" endtime="20211025 13:05:37.154"/>
</kw>
<msg timestamp="20211025 13:05:37.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 13:05:28.701" endtime="20211025 13:05:37.155"/>
</kw>
<msg timestamp="20211025 13:05:37.155" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211025 13:05:28.699" endtime="20211025 13:05:37.156"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211025 13:05:37.156" endtime="20211025 13:05:37.157"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 13:05:37.163" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '.[] | select(.name=="07428-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 13:05:43.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 13:05:43.951" level="INFO">${output} = {
  "metadata": {},
  "name": "07428-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211025 13:05:37.160" endtime="20211025 13:05:43.951"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 13:05:43.953" level="INFO">{
  "metadata": {},
  "name": "07428-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-25T13:05:36.811Z",
  "modificationTime": "2021-10-25T13:05:36.811Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211025 13:05:43.952" endtime="20211025 13:05:43.953"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 13:05:43.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 13:05:43.954" endtime="20211025 13:05:43.955"/>
</kw>
<status status="PASS" starttime="20211025 13:05:37.159" endtime="20211025 13:05:43.956"/>
</kw>
<msg timestamp="20211025 13:05:43.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 13:05:37.158" endtime="20211025 13:05:43.957"/>
</kw>
<msg timestamp="20211025 13:05:43.958" level="INFO">${result} = {
  "metadata": {},
  "name": "07428-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211025 13:05:37.157" endtime="20211025 13:05:43.958"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211025 13:05:43.958" endtime="20211025 13:05:43.959"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 13:05:43.968" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="07428-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 13:05:54.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 13:05:54.180" level="INFO">${output} = {
  "metadata": {},
  "name": "07428-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211025 13:05:43.964" endtime="20211025 13:05:54.181"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 13:05:54.183" level="INFO">{
  "metadata": {},
  "name": "07428-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-25T13:05:36.811Z",
  "modificationTime": "2021-10-25T13:05:36.811Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211025 13:05:54.181" endtime="20211025 13:05:54.183"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 13:05:54.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 13:05:54.183" endtime="20211025 13:05:54.185"/>
</kw>
<status status="PASS" starttime="20211025 13:05:43.962" endtime="20211025 13:05:54.186"/>
</kw>
<msg timestamp="20211025 13:05:54.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 13:05:43.961" endtime="20211025 13:05:54.186"/>
</kw>
<msg timestamp="20211025 13:05:54.186" level="INFO">${result} = {
  "metadata": {},
  "name": "07428-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211025 13:05:43.960" endtime="20211025 13:05:54.186"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211025 13:05:54.186" endtime="20211025 13:05:54.187"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 13:05:54.199" level="INFO">Running command 'ozone sh volume setquota o3:///07428-rpcwport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 13:06:02.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 13:06:02.243" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 13:05:54.191" endtime="20211025 13:06:02.244"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 13:06:02.245" level="INFO"/>
<status status="PASS" starttime="20211025 13:06:02.244" endtime="20211025 13:06:02.245"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 13:06:02.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 13:06:02.246" endtime="20211025 13:06:02.247"/>
</kw>
<status status="PASS" starttime="20211025 13:05:54.190" endtime="20211025 13:06:02.248"/>
</kw>
<msg timestamp="20211025 13:06:02.248" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 13:05:54.189" endtime="20211025 13:06:02.248"/>
</kw>
<status status="PASS" starttime="20211025 13:05:54.187" endtime="20211025 13:06:02.249"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 13:06:02.258" level="INFO">Running command 'ozone sh volume info o3:///07428-rpcwport | jq -r '. | select(.name=="07428-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 13:06:10.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 13:06:10.900" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211025 13:06:02.255" endtime="20211025 13:06:10.900"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 13:06:10.902" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211025 13:06:10.901" endtime="20211025 13:06:10.902"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 13:06:10.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 13:06:10.903" endtime="20211025 13:06:10.904"/>
</kw>
<status status="PASS" starttime="20211025 13:06:02.254" endtime="20211025 13:06:10.904"/>
</kw>
<msg timestamp="20211025 13:06:10.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 13:06:02.254" endtime="20211025 13:06:10.905"/>
</kw>
<msg timestamp="20211025 13:06:10.905" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211025 13:06:02.249" endtime="20211025 13:06:10.905"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211025 13:06:10.905" endtime="20211025 13:06:10.906"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 13:06:10.914" level="INFO">Running command 'ozone sh bucket create o3:///07428-rpcwport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 13:06:19.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 13:06:19.390" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 13:06:10.909" endtime="20211025 13:06:19.390"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 13:06:19.393" level="INFO"/>
<status status="PASS" starttime="20211025 13:06:19.391" endtime="20211025 13:06:19.393"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 13:06:19.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 13:06:19.393" endtime="20211025 13:06:19.395"/>
</kw>
<status status="PASS" starttime="20211025 13:06:10.908" endtime="20211025 13:06:19.395"/>
</kw>
<msg timestamp="20211025 13:06:19.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 13:06:10.908" endtime="20211025 13:06:19.396"/>
</kw>
<status status="PASS" starttime="20211025 13:06:10.906" endtime="20211025 13:06:19.396"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 13:06:19.405" level="INFO">Running command 'ozone sh bucket info o3:///07428-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 13:06:27.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 13:06:27.792" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211025 13:06:19.401" endtime="20211025 13:06:27.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 13:06:27.794" level="INFO">DISK</msg>
<status status="PASS" starttime="20211025 13:06:27.793" endtime="20211025 13:06:27.794"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 13:06:27.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 13:06:27.794" endtime="20211025 13:06:27.795"/>
</kw>
<status status="PASS" starttime="20211025 13:06:19.400" endtime="20211025 13:06:27.796"/>
</kw>
<msg timestamp="20211025 13:06:27.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 13:06:19.399" endtime="20211025 13:06:27.796"/>
</kw>
<msg timestamp="20211025 13:06:27.796" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211025 13:06:19.397" endtime="20211025 13:06:27.796"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211025 13:06:27.797" endtime="20211025 13:06:27.797"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 13:06:27.804" level="INFO">Running command 'ozone sh bucket info o3:///07428-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 13:06:36.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 13:06:36.094" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211025 13:06:27.801" endtime="20211025 13:06:36.094"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 13:06:36.097" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211025 13:06:36.094" endtime="20211025 13:06:36.097"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 13:06:36.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 13:06:36.098" endtime="20211025 13:06:36.099"/>
</kw>
<status status="PASS" starttime="20211025 13:06:27.800" endtime="20211025 13:06:36.100"/>
</kw>
<msg timestamp="20211025 13:06:36.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 13:06:27.798" endtime="20211025 13:06:36.100"/>
</kw>
<msg timestamp="20211025 13:06:36.100" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211025 13:06:27.797" endtime="20211025 13:06:36.100"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211025 13:06:36.100" endtime="20211025 13:06:36.101"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 13:06:36.109" level="INFO">Running command 'ozone sh bucket info o3:///07428-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 13:06:44.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 13:06:44.789" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211025 13:06:36.106" endtime="20211025 13:06:44.789"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 13:06:44.791" level="INFO">100</msg>
<status status="PASS" starttime="20211025 13:06:44.790" endtime="20211025 13:06:44.791"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 13:06:44.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 13:06:44.792" endtime="20211025 13:06:44.794"/>
</kw>
<status status="PASS" starttime="20211025 13:06:36.104" endtime="20211025 13:06:44.795"/>
</kw>
<msg timestamp="20211025 13:06:44.795" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 13:06:36.104" endtime="20211025 13:06:44.795"/>
</kw>
<msg timestamp="20211025 13:06:44.796" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211025 13:06:36.101" endtime="20211025 13:06:44.797"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211025 13:06:44.797" endtime="20211025 13:06:44.798"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 13:06:44.805" level="INFO">Running command 'ozone sh bucket setquota o3:///07428-rpcwport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 13:06:52.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 13:06:52.850" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 13:06:44.801" endtime="20211025 13:06:52.850"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 13:06:52.852" level="INFO"/>
<status status="PASS" starttime="20211025 13:06:52.851" endtime="20211025 13:06:52.852"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 13:06:52.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 13:06:52.852" endtime="20211025 13:06:52.854"/>
</kw>
<status status="PASS" starttime="20211025 13:06:44.800" endtime="20211025 13:06:52.855"/>
</kw>
<msg timestamp="20211025 13:06:52.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 13:06:44.800" endtime="20211025 13:06:52.855"/>
</kw>
<status status="PASS" starttime="20211025 13:06:44.798" endtime="20211025 13:06:52.856"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 13:06:52.863" level="INFO">Running command 'ozone sh bucket info o3:///07428-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 13:07:00.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 13:07:00.415" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211025 13:06:52.860" endtime="20211025 13:07:00.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 13:07:00.417" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211025 13:07:00.416" endtime="20211025 13:07:00.417"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 13:07:00.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 13:07:00.417" endtime="20211025 13:07:00.418"/>
</kw>
<status status="PASS" starttime="20211025 13:06:52.859" endtime="20211025 13:07:00.419"/>
</kw>
<msg timestamp="20211025 13:07:00.419" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 13:06:52.858" endtime="20211025 13:07:00.419"/>
</kw>
<msg timestamp="20211025 13:07:00.420" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211025 13:06:52.856" endtime="20211025 13:07:00.420"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211025 13:07:00.420" endtime="20211025 13:07:00.421"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 13:07:00.428" level="INFO">Running command 'ozone sh bucket info o3:///07428-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 13:07:08.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 13:07:08.683" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211025 13:07:00.425" endtime="20211025 13:07:08.683"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 13:07:08.684" level="INFO">1000</msg>
<status status="PASS" starttime="20211025 13:07:08.683" endtime="20211025 13:07:08.684"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 13:07:08.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 13:07:08.685" endtime="20211025 13:07:08.685"/>
</kw>
<status status="PASS" starttime="20211025 13:07:00.423" endtime="20211025 13:07:08.686"/>
</kw>
<msg timestamp="20211025 13:07:08.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 13:07:00.423" endtime="20211025 13:07:08.686"/>
</kw>
<msg timestamp="20211025 13:07:08.686" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211025 13:07:00.421" endtime="20211025 13:07:08.686"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211025 13:07:08.686" endtime="20211025 13:07:08.687"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 13:07:08.693" level="INFO">Running command 'ozone sh bucket list o3:///07428-rpcwport/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 13:07:18.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 13:07:18.093" level="INFO">${output} = 07428-rpcwport</msg>
<status status="PASS" starttime="20211025 13:07:08.689" endtime="20211025 13:07:18.093"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 13:07:18.095" level="INFO">07428-rpcwport</msg>
<status status="PASS" starttime="20211025 13:07:18.094" endtime="20211025 13:07:18.095"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 13:07:18.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 13:07:18.095" endtime="20211025 13:07:18.096"/>
</kw>
<status status="PASS" starttime="20211025 13:07:08.689" endtime="20211025 13:07:18.096"/>
</kw>
<msg timestamp="20211025 13:07:18.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 13:07:08.688" endtime="20211025 13:07:18.097"/>
</kw>
<msg timestamp="20211025 13:07:18.097" level="INFO">${result} = 07428-rpcwport</msg>
<status status="PASS" starttime="20211025 13:07:08.687" endtime="20211025 13:07:18.097"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211025 13:07:18.097" endtime="20211025 13:07:18.098"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 13:07:18.110" level="INFO">Running command 'ozone sh key put o3:///07428-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 13:10:22.627" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211025 13:07:18.105" endtime="20211025 13:10:22.627"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211025 13:10:22.628" endtime="20211025 13:10:22.628"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211025 13:10:22.628" endtime="20211025 13:10:22.629"/>
</kw>
<status status="FAIL" starttime="20211025 13:07:18.103" endtime="20211025 13:10:22.629"/>
</kw>
<msg timestamp="20211025 13:10:22.629" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211025 13:07:18.102" endtime="20211025 13:10:22.630"/>
</kw>
<status status="FAIL" starttime="20211025 13:07:18.100" endtime="20211025 13:10:22.630"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211025 13:10:22.630" endtime="20211025 13:10:22.630"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211025 13:10:22.630" endtime="20211025 13:10:22.630"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211025 13:10:22.631" endtime="20211025 13:10:22.631"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211025 13:10:22.631" endtime="20211025 13:10:22.631"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211025 13:10:22.631" endtime="20211025 13:10:22.631"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211025 13:10:22.631" endtime="20211025 13:10:22.631"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211025 13:10:22.631" endtime="20211025 13:10:22.632"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211025 13:10:22.632" endtime="20211025 13:10:22.632"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211025 13:10:22.632" endtime="20211025 13:10:22.632"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211025 13:10:22.632" endtime="20211025 13:10:22.633"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211025 13:10:22.633" endtime="20211025 13:10:22.633"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211025 13:10:22.633" endtime="20211025 13:10:22.633"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211025 13:10:22.634" endtime="20211025 13:10:22.634"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211025 13:10:22.634" endtime="20211025 13:10:22.634"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211025 13:10:22.634" endtime="20211025 13:10:22.635"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211025 13:10:22.635" endtime="20211025 13:10:22.635"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211025 13:10:22.635" endtime="20211025 13:10:22.636"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211025 13:10:22.636" endtime="20211025 13:10:22.636"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211025 13:10:22.637" endtime="20211025 13:10:22.637"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211025 13:10:22.637" endtime="20211025 13:10:22.637"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211025 13:10:22.638" endtime="20211025 13:10:22.638"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211025 13:10:22.638" endtime="20211025 13:10:22.638"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211025 13:10:22.639" endtime="20211025 13:10:22.639"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211025 13:10:22.639" endtime="20211025 13:10:22.639"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211025 13:10:22.640" endtime="20211025 13:10:22.640"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211025 13:10:22.640" endtime="20211025 13:10:22.641"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211025 13:10:22.641" endtime="20211025 13:10:22.641"/>
</kw>
<status status="FAIL" starttime="20211025 13:07:18.099" endtime="20211025 13:10:22.642"/>
</kw>
<status status="FAIL" starttime="20211025 13:07:18.098" endtime="20211025 13:10:22.642"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211025 13:10:22.642" endtime="20211025 13:10:22.642"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211025 13:10:22.642" endtime="20211025 13:10:22.642"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211025 13:10:22.643" endtime="20211025 13:10:22.643"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211025 13:10:22.643" endtime="20211025 13:10:22.643"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211025 13:10:22.643" endtime="20211025 13:10:22.644"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211025 13:10:22.644" endtime="20211025 13:10:22.644"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211025 13:10:22.644" endtime="20211025 13:10:22.644"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211025 13:10:22.644" endtime="20211025 13:10:22.644"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211025 13:10:22.645" endtime="20211025 13:10:22.645"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211025 13:10:22.645" endtime="20211025 13:10:22.645"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211025 13:10:22.645" endtime="20211025 13:10:22.645"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211025 13:10:22.646" endtime="20211025 13:10:22.646"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211025 13:10:22.647" endtime="20211025 13:10:22.647"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211025 13:10:22.647" endtime="20211025 13:10:22.647"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211025 13:10:22.647" endtime="20211025 13:10:22.647"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211025 13:10:22.647" endtime="20211025 13:10:22.647"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211025 13:10:22.648" endtime="20211025 13:10:22.648"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211025 13:10:22.648" endtime="20211025 13:10:22.648"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211025 13:10:22.648" endtime="20211025 13:10:22.649"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211025 13:10:22.649" endtime="20211025 13:10:22.649"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211025 13:10:22.649" endtime="20211025 13:10:22.649"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211025 13:10:22.649" endtime="20211025 13:10:22.649"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211025 13:10:22.649" endtime="20211025 13:10:22.649"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211025 13:10:22.650" endtime="20211025 13:10:22.650"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211025 13:10:22.650" endtime="20211025 13:10:22.650"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211025 13:10:22.650" endtime="20211025 13:10:22.650"/>
</kw>
<status status="FAIL" starttime="20211025 13:05:22.671" endtime="20211025 13:10:22.651"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211025 13:05:22.625" endtime="20211025 13:10:22.651">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t7" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 13:10:22.659" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 13:10:22.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 13:10:22.663" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211025 13:10:22.656" endtime="20211025 13:10:22.663"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 13:10:22.665" level="INFO">scm</msg>
<status status="PASS" starttime="20211025 13:10:22.664" endtime="20211025 13:10:22.665"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 13:10:22.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 13:10:22.666" endtime="20211025 13:10:22.667"/>
</kw>
<status status="PASS" starttime="20211025 13:10:22.656" endtime="20211025 13:10:22.668"/>
</kw>
<msg timestamp="20211025 13:10:22.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 13:10:22.655" endtime="20211025 13:10:22.668"/>
</kw>
<msg timestamp="20211025 13:10:22.668" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211025 13:10:22.655" endtime="20211025 13:10:22.668"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211025 13:10:22.669" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211025 13:10:22.669" endtime="20211025 13:10:22.669"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 13:10:22.675" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 13:10:23.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 13:10:23.488" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 13:10:22.672" endtime="20211025 13:10:23.488"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 13:10:23.489" level="INFO"/>
<status status="PASS" starttime="20211025 13:10:23.488" endtime="20211025 13:10:23.489"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 13:10:23.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 13:10:23.490" endtime="20211025 13:10:23.491"/>
</kw>
<status status="PASS" starttime="20211025 13:10:22.672" endtime="20211025 13:10:23.491"/>
</kw>
<msg timestamp="20211025 13:10:23.491" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 13:10:22.671" endtime="20211025 13:10:23.491"/>
</kw>
<status status="PASS" starttime="20211025 13:10:22.670" endtime="20211025 13:10:23.491"/>
</kw>
<status status="PASS" starttime="20211025 13:10:22.670" endtime="20211025 13:10:23.492"/>
</kw>
<status status="PASS" starttime="20211025 13:10:22.654" endtime="20211025 13:10:23.492"/>
</kw>
<status status="PASS" starttime="20211025 13:10:22.654" endtime="20211025 13:10:23.492"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 13:10:23.497" level="INFO">Running command 'ozone sh volume info /07428-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 13:10:29.882" level="INFO">${rc} = 255</msg>
<msg timestamp="20211025 13:10:29.882" level="INFO">${output} = VOLUME_NOT_FOUND Volume 07428-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20211025 13:10:23.495" endtime="20211025 13:10:29.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 13:10:29.884" level="INFO">VOLUME_NOT_FOUND Volume 07428-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20211025 13:10:29.883" endtime="20211025 13:10:29.884"/>
</kw>
<msg timestamp="20211025 13:10:29.885" level="INFO">${result} = VOLUME_NOT_FOUND Volume 07428-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20211025 13:10:23.494" endtime="20211025 13:10:29.885"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211025 13:10:29.886" endtime="20211025 13:10:29.886"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 13:10:29.895" level="INFO">Running command 'ozone sh volume create /07428-rpcwoscheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 13:10:37.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 13:10:37.470" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 13:10:29.891" endtime="20211025 13:10:37.470"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 13:10:37.471" level="INFO"/>
<status status="PASS" starttime="20211025 13:10:37.470" endtime="20211025 13:10:37.471"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 13:10:37.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 13:10:37.472" endtime="20211025 13:10:37.472"/>
</kw>
<status status="PASS" starttime="20211025 13:10:29.890" endtime="20211025 13:10:37.472"/>
</kw>
<msg timestamp="20211025 13:10:37.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 13:10:29.889" endtime="20211025 13:10:37.473"/>
</kw>
<msg timestamp="20211025 13:10:37.473" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211025 13:10:29.887" endtime="20211025 13:10:37.473"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211025 13:10:37.473" endtime="20211025 13:10:37.474"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 13:10:37.482" level="INFO">Running command 'ozone sh volume list / | jq -r '.[] | select(.name=="07428-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 13:10:46.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 13:10:46.114" level="INFO">${output} = {
  "metadata": {},
  "name": "07428-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211025 13:10:37.479" endtime="20211025 13:10:46.114"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 13:10:46.116" level="INFO">{
  "metadata": {},
  "name": "07428-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-25T13:10:37.398Z",
  "modificationTime": "2021-10-25T13:10:37.398Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211025 13:10:46.115" endtime="20211025 13:10:46.117"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 13:10:46.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 13:10:46.117" endtime="20211025 13:10:46.118"/>
</kw>
<status status="PASS" starttime="20211025 13:10:37.477" endtime="20211025 13:10:46.119"/>
</kw>
<msg timestamp="20211025 13:10:46.119" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 13:10:37.477" endtime="20211025 13:10:46.119"/>
</kw>
<msg timestamp="20211025 13:10:46.120" level="INFO">${result} = {
  "metadata": {},
  "name": "07428-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211025 13:10:37.474" endtime="20211025 13:10:46.120"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211025 13:10:46.120" endtime="20211025 13:10:46.121"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 13:10:46.127" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="07428-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 13:10:54.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 13:10:54.265" level="INFO">${output} = {
  "metadata": {},
  "name": "07428-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211025 13:10:46.124" endtime="20211025 13:10:54.265"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 13:10:54.267" level="INFO">{
  "metadata": {},
  "name": "07428-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-25T13:10:37.398Z",
  "modificationTime": "2021-10-25T13:10:37.398Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211025 13:10:54.266" endtime="20211025 13:10:54.267"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 13:10:54.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 13:10:54.268" endtime="20211025 13:10:54.268"/>
</kw>
<status status="PASS" starttime="20211025 13:10:46.123" endtime="20211025 13:10:54.269"/>
</kw>
<msg timestamp="20211025 13:10:54.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 13:10:46.123" endtime="20211025 13:10:54.269"/>
</kw>
<msg timestamp="20211025 13:10:54.269" level="INFO">${result} = {
  "metadata": {},
  "name": "07428-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211025 13:10:46.121" endtime="20211025 13:10:54.269"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211025 13:10:54.269" endtime="20211025 13:10:54.270"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 13:10:54.275" level="INFO">Running command 'ozone sh volume setquota /07428-rpcwoscheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 13:11:01.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 13:11:01.759" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 13:10:54.272" endtime="20211025 13:11:01.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 13:11:01.761" level="INFO"/>
<status status="PASS" starttime="20211025 13:11:01.760" endtime="20211025 13:11:01.761"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 13:11:01.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 13:11:01.761" endtime="20211025 13:11:01.762"/>
</kw>
<status status="PASS" starttime="20211025 13:10:54.271" endtime="20211025 13:11:01.762"/>
</kw>
<msg timestamp="20211025 13:11:01.762" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 13:10:54.271" endtime="20211025 13:11:01.763"/>
</kw>
<status status="PASS" starttime="20211025 13:10:54.270" endtime="20211025 13:11:01.763"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 13:11:01.768" level="INFO">Running command 'ozone sh volume info /07428-rpcwoscheme | jq -r '. | select(.name=="07428-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 13:11:10.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 13:11:10.507" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211025 13:11:01.765" endtime="20211025 13:11:10.507"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 13:11:10.509" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211025 13:11:10.508" endtime="20211025 13:11:10.509"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 13:11:10.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 13:11:10.509" endtime="20211025 13:11:10.510"/>
</kw>
<status status="PASS" starttime="20211025 13:11:01.765" endtime="20211025 13:11:10.510"/>
</kw>
<msg timestamp="20211025 13:11:10.511" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 13:11:01.764" endtime="20211025 13:11:10.511"/>
</kw>
<msg timestamp="20211025 13:11:10.511" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211025 13:11:01.763" endtime="20211025 13:11:10.511"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211025 13:11:10.511" endtime="20211025 13:11:10.512"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 13:11:10.520" level="INFO">Running command 'ozone sh bucket create /07428-rpcwoscheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 13:11:18.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 13:11:18.624" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 13:11:10.514" endtime="20211025 13:11:18.624"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 13:11:18.625" level="INFO"/>
<status status="PASS" starttime="20211025 13:11:18.625" endtime="20211025 13:11:18.625"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 13:11:18.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 13:11:18.626" endtime="20211025 13:11:18.626"/>
</kw>
<status status="PASS" starttime="20211025 13:11:10.513" endtime="20211025 13:11:18.627"/>
</kw>
<msg timestamp="20211025 13:11:18.627" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 13:11:10.513" endtime="20211025 13:11:18.627"/>
</kw>
<status status="PASS" starttime="20211025 13:11:10.512" endtime="20211025 13:11:18.627"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 13:11:18.632" level="INFO">Running command 'ozone sh bucket info /07428-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 13:11:27.105" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 13:11:27.105" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211025 13:11:18.629" endtime="20211025 13:11:27.105"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 13:11:27.106" level="INFO">DISK</msg>
<status status="PASS" starttime="20211025 13:11:27.105" endtime="20211025 13:11:27.106"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 13:11:27.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 13:11:27.107" endtime="20211025 13:11:27.107"/>
</kw>
<status status="PASS" starttime="20211025 13:11:18.629" endtime="20211025 13:11:27.108"/>
</kw>
<msg timestamp="20211025 13:11:27.108" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 13:11:18.628" endtime="20211025 13:11:27.108"/>
</kw>
<msg timestamp="20211025 13:11:27.108" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211025 13:11:18.627" endtime="20211025 13:11:27.108"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211025 13:11:27.109" endtime="20211025 13:11:27.109"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 13:11:27.114" level="INFO">Running command 'ozone sh bucket info /07428-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 13:11:34.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 13:11:34.814" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211025 13:11:27.111" endtime="20211025 13:11:34.814"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 13:11:34.816" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211025 13:11:34.815" endtime="20211025 13:11:34.816"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 13:11:34.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 13:11:34.816" endtime="20211025 13:11:34.816"/>
</kw>
<status status="PASS" starttime="20211025 13:11:27.111" endtime="20211025 13:11:34.817"/>
</kw>
<msg timestamp="20211025 13:11:34.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 13:11:27.110" endtime="20211025 13:11:34.817"/>
</kw>
<msg timestamp="20211025 13:11:34.817" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211025 13:11:27.109" endtime="20211025 13:11:34.817"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211025 13:11:34.818" endtime="20211025 13:11:34.818"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 13:11:34.827" level="INFO">Running command 'ozone sh bucket info /07428-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 13:11:43.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 13:11:43.205" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211025 13:11:34.825" endtime="20211025 13:11:43.205"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 13:11:43.208" level="INFO">100</msg>
<status status="PASS" starttime="20211025 13:11:43.206" endtime="20211025 13:11:43.208"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 13:11:43.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 13:11:43.208" endtime="20211025 13:11:43.211"/>
</kw>
<status status="PASS" starttime="20211025 13:11:34.820" endtime="20211025 13:11:43.212"/>
</kw>
<msg timestamp="20211025 13:11:43.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 13:11:34.820" endtime="20211025 13:11:43.212"/>
</kw>
<msg timestamp="20211025 13:11:43.212" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211025 13:11:34.818" endtime="20211025 13:11:43.212"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211025 13:11:43.213" endtime="20211025 13:11:43.213"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 13:11:43.219" level="INFO">Running command 'ozone sh bucket setquota /07428-rpcwoscheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 13:11:50.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 13:11:50.905" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 13:11:43.216" endtime="20211025 13:11:50.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 13:11:50.907" level="INFO"/>
<status status="PASS" starttime="20211025 13:11:50.906" endtime="20211025 13:11:50.907"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 13:11:50.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 13:11:50.908" endtime="20211025 13:11:50.909"/>
</kw>
<status status="PASS" starttime="20211025 13:11:43.215" endtime="20211025 13:11:50.909"/>
</kw>
<msg timestamp="20211025 13:11:50.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 13:11:43.215" endtime="20211025 13:11:50.909"/>
</kw>
<status status="PASS" starttime="20211025 13:11:43.214" endtime="20211025 13:11:50.910"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 13:11:50.945" level="INFO">Running command 'ozone sh bucket info /07428-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 13:11:59.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 13:11:59.192" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211025 13:11:50.923" endtime="20211025 13:11:59.192"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 13:11:59.195" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211025 13:11:59.193" endtime="20211025 13:11:59.195"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 13:11:59.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 13:11:59.195" endtime="20211025 13:11:59.197"/>
</kw>
<status status="PASS" starttime="20211025 13:11:50.923" endtime="20211025 13:11:59.197"/>
</kw>
<msg timestamp="20211025 13:11:59.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 13:11:50.922" endtime="20211025 13:11:59.198"/>
</kw>
<msg timestamp="20211025 13:11:59.198" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211025 13:11:50.910" endtime="20211025 13:11:59.198"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211025 13:11:59.198" endtime="20211025 13:11:59.199"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 13:11:59.208" level="INFO">Running command 'ozone sh bucket info /07428-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 13:12:07.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 13:12:07.410" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211025 13:11:59.204" endtime="20211025 13:12:07.410"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 13:12:07.412" level="INFO">1000</msg>
<status status="PASS" starttime="20211025 13:12:07.411" endtime="20211025 13:12:07.412"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 13:12:07.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 13:12:07.412" endtime="20211025 13:12:07.414"/>
</kw>
<status status="PASS" starttime="20211025 13:11:59.202" endtime="20211025 13:12:07.414"/>
</kw>
<msg timestamp="20211025 13:12:07.415" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 13:11:59.202" endtime="20211025 13:12:07.415"/>
</kw>
<msg timestamp="20211025 13:12:07.415" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211025 13:11:59.200" endtime="20211025 13:12:07.415"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211025 13:12:07.416" endtime="20211025 13:12:07.416"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 13:12:07.423" level="INFO">Running command 'ozone sh bucket list /07428-rpcwoscheme/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 13:12:14.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 13:12:14.867" level="INFO">${output} = 07428-rpcwoscheme</msg>
<status status="PASS" starttime="20211025 13:12:07.420" endtime="20211025 13:12:14.867"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 13:12:14.868" level="INFO">07428-rpcwoscheme</msg>
<status status="PASS" starttime="20211025 13:12:14.867" endtime="20211025 13:12:14.869"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 13:12:14.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 13:12:14.869" endtime="20211025 13:12:14.869"/>
</kw>
<status status="PASS" starttime="20211025 13:12:07.419" endtime="20211025 13:12:14.870"/>
</kw>
<msg timestamp="20211025 13:12:14.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 13:12:07.419" endtime="20211025 13:12:14.870"/>
</kw>
<msg timestamp="20211025 13:12:14.870" level="INFO">${result} = 07428-rpcwoscheme</msg>
<status status="PASS" starttime="20211025 13:12:07.416" endtime="20211025 13:12:14.870"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211025 13:12:14.871" endtime="20211025 13:12:14.872"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 13:12:14.877" level="INFO">Running command 'ozone sh key put /07428-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 13:15:22.653" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211025 13:12:14.875" endtime="20211025 13:15:22.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211025 13:15:22.654" endtime="20211025 13:15:22.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211025 13:15:22.654" endtime="20211025 13:15:22.655"/>
</kw>
<status status="FAIL" starttime="20211025 13:12:14.874" endtime="20211025 13:15:22.655"/>
</kw>
<msg timestamp="20211025 13:15:22.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211025 13:12:14.874" endtime="20211025 13:15:22.655"/>
</kw>
<status status="FAIL" starttime="20211025 13:12:14.873" endtime="20211025 13:15:22.656"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211025 13:15:22.656" endtime="20211025 13:15:22.656"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211025 13:15:22.656" endtime="20211025 13:15:22.656"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211025 13:15:22.656" endtime="20211025 13:15:22.656"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211025 13:15:22.657" endtime="20211025 13:15:22.657"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211025 13:15:22.657" endtime="20211025 13:15:22.657"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211025 13:15:22.657" endtime="20211025 13:15:22.657"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211025 13:15:22.657" endtime="20211025 13:15:22.657"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211025 13:15:22.658" endtime="20211025 13:15:22.658"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211025 13:15:22.658" endtime="20211025 13:15:22.658"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211025 13:15:22.658" endtime="20211025 13:15:22.658"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211025 13:15:22.658" endtime="20211025 13:15:22.658"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211025 13:15:22.658" endtime="20211025 13:15:22.659"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211025 13:15:22.659" endtime="20211025 13:15:22.659"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211025 13:15:22.659" endtime="20211025 13:15:22.659"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211025 13:15:22.659" endtime="20211025 13:15:22.660"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211025 13:15:22.660" endtime="20211025 13:15:22.660"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211025 13:15:22.660" endtime="20211025 13:15:22.660"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211025 13:15:22.660" endtime="20211025 13:15:22.660"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211025 13:15:22.661" endtime="20211025 13:15:22.661"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211025 13:15:22.661" endtime="20211025 13:15:22.661"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211025 13:15:22.661" endtime="20211025 13:15:22.661"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211025 13:15:22.661" endtime="20211025 13:15:22.661"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211025 13:15:22.661" endtime="20211025 13:15:22.662"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211025 13:15:22.662" endtime="20211025 13:15:22.662"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211025 13:15:22.662" endtime="20211025 13:15:22.662"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211025 13:15:22.662" endtime="20211025 13:15:22.662"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211025 13:15:22.662" endtime="20211025 13:15:22.662"/>
</kw>
<status status="FAIL" starttime="20211025 13:12:14.872" endtime="20211025 13:15:22.663"/>
</kw>
<status status="FAIL" starttime="20211025 13:12:14.872" endtime="20211025 13:15:22.663"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211025 13:15:22.663" endtime="20211025 13:15:22.664"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211025 13:15:22.664" endtime="20211025 13:15:22.664"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211025 13:15:22.665" endtime="20211025 13:15:22.665"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211025 13:15:22.665" endtime="20211025 13:15:22.665"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211025 13:15:22.665" endtime="20211025 13:15:22.665"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211025 13:15:22.665" endtime="20211025 13:15:22.665"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211025 13:15:22.665" endtime="20211025 13:15:22.666"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211025 13:15:22.666" endtime="20211025 13:15:22.666"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211025 13:15:22.666" endtime="20211025 13:15:22.666"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211025 13:15:22.666" endtime="20211025 13:15:22.666"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211025 13:15:22.666" endtime="20211025 13:15:22.667"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211025 13:15:22.667" endtime="20211025 13:15:22.667"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211025 13:15:22.667" endtime="20211025 13:15:22.667"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211025 13:15:22.667" endtime="20211025 13:15:22.668"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211025 13:15:22.668" endtime="20211025 13:15:22.668"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211025 13:15:22.668" endtime="20211025 13:15:22.668"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211025 13:15:22.668" endtime="20211025 13:15:22.669"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211025 13:15:22.669" endtime="20211025 13:15:22.669"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211025 13:15:22.669" endtime="20211025 13:15:22.669"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211025 13:15:22.669" endtime="20211025 13:15:22.669"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211025 13:15:22.670" endtime="20211025 13:15:22.670"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211025 13:15:22.670" endtime="20211025 13:15:22.670"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211025 13:15:22.670" endtime="20211025 13:15:22.670"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211025 13:15:22.671" endtime="20211025 13:15:22.671"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211025 13:15:22.671" endtime="20211025 13:15:22.671"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211025 13:15:22.671" endtime="20211025 13:15:22.671"/>
</kw>
<status status="FAIL" starttime="20211025 13:10:23.492" endtime="20211025 13:15:22.671"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211025 13:10:22.652" endtime="20211025 13:15:22.672">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20211025 12:50:04.078" endtime="20211025 13:15:22.674"/>
</suite>
<status status="FAIL" starttime="20211025 12:25:06.316" endtime="20211025 13:15:22.681"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:25:00.901" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:25:00.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:25:00.907" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211025 12:25:00.897" endtime="20211025 12:25:00.907"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:25:00.908" level="INFO">scm</msg>
<status status="PASS" starttime="20211025 12:25:00.907" endtime="20211025 12:25:00.908"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:25:00.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:25:00.908" endtime="20211025 12:25:00.909"/>
</kw>
<status status="PASS" starttime="20211025 12:25:00.897" endtime="20211025 12:25:00.909"/>
</kw>
<msg timestamp="20211025 12:25:00.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:25:00.897" endtime="20211025 12:25:00.910"/>
</kw>
<msg timestamp="20211025 12:25:00.910" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211025 12:25:00.896" endtime="20211025 12:25:00.910"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211025 12:25:00.911" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211025 12:25:00.910" endtime="20211025 12:25:00.911"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211025 12:25:00.915" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211025 12:25:00.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20211025 12:25:00.923" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211025 12:25:00.913" endtime="20211025 12:25:00.923"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 12:25:00.924" level="INFO"/>
<status status="PASS" starttime="20211025 12:25:00.924" endtime="20211025 12:25:00.924"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211025 12:25:00.925" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 12:25:00.924" endtime="20211025 12:25:00.925"/>
</kw>
<status status="PASS" starttime="20211025 12:25:00.913" endtime="20211025 12:25:00.925"/>
</kw>
<msg timestamp="20211025 12:25:00.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211025 12:25:00.912" endtime="20211025 12:25:00.925"/>
</kw>
<status status="PASS" starttime="20211025 12:25:00.912" endtime="20211025 12:25:00.926"/>
</kw>
<status status="PASS" starttime="20211025 12:25:00.911" endtime="20211025 12:25:00.926"/>
</kw>
<status status="PASS" starttime="20211025 12:25:00.895" endtime="20211025 12:25:00.926"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211025 12:25:00.894" endtime="20211025 12:25:00.926"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20211025 12:25:00.829" endtime="20211025 12:25:00.927"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="3016463"/>
</suite>
<statistics>
<total>
<stat pass="20" fail="10" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="20" fail="10" skip="0" id="s1" name="ozonesecure">ozonesecure</stat>
<stat pass="19" fail="10" skip="0" id="s1-s1" name="Basic">ozonesecure.Basic</stat>
<stat pass="1" fail="1" skip="0" id="s1-s1-s1" name="Basic">ozonesecure.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Getconf">ozonesecure.Basic.Getconf</stat>
<stat pass="10" fail="5" skip="0" id="s1-s1-s3" name="Links">ozonesecure.Basic.Links</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat pass="4" fail="3" skip="0" id="s1-s1-s5" name="Ozone-Shell">ozonesecure.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
