<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1.2 (Python 3.6.9 on linux)" generated="20211019 09:36:07.541" rpa="false" schemaversion="2">
<suite id="s1" name="ozone-csi" source="/opt/hadoop/smoketest/csi.robot">
<test id="s1-t1" name="Check if CSI server is started">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>1sec</arg>
<arg>CSI Socket check</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arg>[ -S /tmp/csi.sock ]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 09:35:46.815" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 09:35:46.816" level="INFO">${rc} = 1</msg>
<msg timestamp="20211019 09:35:46.816" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 09:35:46.811" endtime="20211019 09:35:46.816"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 09:35:46.817" level="INFO"/>
<status status="PASS" starttime="20211019 09:35:46.817" endtime="20211019 09:35:46.817"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 09:35:46.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20211019 09:35:46.819" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20211019 09:35:46.818" endtime="20211019 09:35:46.819"/>
</kw>
<status status="FAIL" starttime="20211019 09:35:46.810" endtime="20211019 09:35:46.819"/>
</kw>
<msg timestamp="20211019 09:35:46.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211019 09:35:46.810" endtime="20211019 09:35:46.819"/>
</kw>
<status status="FAIL" starttime="20211019 09:35:46.810" endtime="20211019 09:35:46.819"/>
</kw>
<status status="FAIL" starttime="20211019 09:35:46.809" endtime="20211019 09:35:46.820"/>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arg>[ -S /tmp/csi.sock ]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 09:35:47.825" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 09:35:47.828" level="INFO">${rc} = 1</msg>
<msg timestamp="20211019 09:35:47.828" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 09:35:47.823" endtime="20211019 09:35:47.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 09:35:47.833" level="INFO"/>
<status status="PASS" starttime="20211019 09:35:47.832" endtime="20211019 09:35:47.834"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 09:35:47.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20211019 09:35:47.835" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20211019 09:35:47.834" endtime="20211019 09:35:47.835"/>
</kw>
<status status="FAIL" starttime="20211019 09:35:47.822" endtime="20211019 09:35:47.835"/>
</kw>
<msg timestamp="20211019 09:35:47.835" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211019 09:35:47.822" endtime="20211019 09:35:47.835"/>
</kw>
<status status="FAIL" starttime="20211019 09:35:47.821" endtime="20211019 09:35:47.835"/>
</kw>
<status status="FAIL" starttime="20211019 09:35:47.820" endtime="20211019 09:35:47.836"/>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arg>[ -S /tmp/csi.sock ]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 09:35:48.841" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 09:35:48.843" level="INFO">${rc} = 1</msg>
<msg timestamp="20211019 09:35:48.843" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 09:35:48.839" endtime="20211019 09:35:48.843"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 09:35:48.844" level="INFO"/>
<status status="PASS" starttime="20211019 09:35:48.844" endtime="20211019 09:35:48.844"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 09:35:48.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20211019 09:35:48.845" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20211019 09:35:48.845" endtime="20211019 09:35:48.846"/>
</kw>
<status status="FAIL" starttime="20211019 09:35:48.838" endtime="20211019 09:35:48.846"/>
</kw>
<msg timestamp="20211019 09:35:48.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211019 09:35:48.838" endtime="20211019 09:35:48.846"/>
</kw>
<status status="FAIL" starttime="20211019 09:35:48.837" endtime="20211019 09:35:48.846"/>
</kw>
<status status="FAIL" starttime="20211019 09:35:48.836" endtime="20211019 09:35:48.846"/>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arg>[ -S /tmp/csi.sock ]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 09:35:49.852" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 09:35:49.853" level="INFO">${rc} = 1</msg>
<msg timestamp="20211019 09:35:49.854" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 09:35:49.849" endtime="20211019 09:35:49.854"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 09:35:49.855" level="INFO"/>
<status status="PASS" starttime="20211019 09:35:49.854" endtime="20211019 09:35:49.855"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 09:35:49.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20211019 09:35:49.856" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20211019 09:35:49.855" endtime="20211019 09:35:49.856"/>
</kw>
<status status="FAIL" starttime="20211019 09:35:49.849" endtime="20211019 09:35:49.856"/>
</kw>
<msg timestamp="20211019 09:35:49.856" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211019 09:35:49.848" endtime="20211019 09:35:49.857"/>
</kw>
<status status="FAIL" starttime="20211019 09:35:49.848" endtime="20211019 09:35:49.857"/>
</kw>
<status status="FAIL" starttime="20211019 09:35:49.847" endtime="20211019 09:35:49.857"/>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arg>[ -S /tmp/csi.sock ]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 09:35:50.862" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 09:35:50.864" level="INFO">${rc} = 1</msg>
<msg timestamp="20211019 09:35:50.864" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 09:35:50.860" endtime="20211019 09:35:50.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 09:35:50.865" level="INFO"/>
<status status="PASS" starttime="20211019 09:35:50.865" endtime="20211019 09:35:50.866"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 09:35:50.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20211019 09:35:50.867" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20211019 09:35:50.866" endtime="20211019 09:35:50.867"/>
</kw>
<status status="FAIL" starttime="20211019 09:35:50.859" endtime="20211019 09:35:50.867"/>
</kw>
<msg timestamp="20211019 09:35:50.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211019 09:35:50.859" endtime="20211019 09:35:50.867"/>
</kw>
<status status="FAIL" starttime="20211019 09:35:50.858" endtime="20211019 09:35:50.868"/>
</kw>
<status status="FAIL" starttime="20211019 09:35:50.858" endtime="20211019 09:35:50.868"/>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arg>[ -S /tmp/csi.sock ]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 09:35:51.883" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 09:35:51.886" level="INFO">${rc} = 1</msg>
<msg timestamp="20211019 09:35:51.886" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 09:35:51.871" endtime="20211019 09:35:51.886"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 09:35:51.887" level="INFO"/>
<status status="PASS" starttime="20211019 09:35:51.886" endtime="20211019 09:35:51.887"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 09:35:51.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20211019 09:35:51.888" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20211019 09:35:51.887" endtime="20211019 09:35:51.888"/>
</kw>
<status status="FAIL" starttime="20211019 09:35:51.870" endtime="20211019 09:35:51.889"/>
</kw>
<msg timestamp="20211019 09:35:51.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211019 09:35:51.870" endtime="20211019 09:35:51.889"/>
</kw>
<status status="FAIL" starttime="20211019 09:35:51.869" endtime="20211019 09:35:51.889"/>
</kw>
<status status="FAIL" starttime="20211019 09:35:51.868" endtime="20211019 09:35:51.889"/>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arg>[ -S /tmp/csi.sock ]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 09:35:52.896" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 09:35:52.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 09:35:52.898" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 09:35:52.893" endtime="20211019 09:35:52.898"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 09:35:52.899" level="INFO"/>
<status status="PASS" starttime="20211019 09:35:52.898" endtime="20211019 09:35:52.899"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 09:35:52.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 09:35:52.899" endtime="20211019 09:35:52.900"/>
</kw>
<status status="PASS" starttime="20211019 09:35:52.892" endtime="20211019 09:35:52.900"/>
</kw>
<msg timestamp="20211019 09:35:52.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 09:35:52.892" endtime="20211019 09:35:52.901"/>
</kw>
<status status="PASS" starttime="20211019 09:35:52.891" endtime="20211019 09:35:52.901"/>
</kw>
<status status="PASS" starttime="20211019 09:35:52.890" endtime="20211019 09:35:52.901"/>
</kw>
<status status="PASS" starttime="20211019 09:35:46.809" endtime="20211019 09:35:52.901"/>
</kw>
<timeout value="1 minute"/>
<status status="PASS" starttime="20211019 09:35:46.808" endtime="20211019 09:35:52.901"/>
</test>
<test id="s1-t2" name="Test CSI identity service">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>csc -e unix:///tmp/csi.sock identity plugin-info</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 09:35:52.907" level="INFO">Running command 'csc -e unix:///tmp/csi.sock identity plugin-info 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 09:35:53.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 09:35:53.260" level="INFO">${output} = "org.apache.hadoop.ozone"	"1.2.0-SNAPSHOT"</msg>
<status status="PASS" starttime="20211019 09:35:52.905" endtime="20211019 09:35:53.260"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 09:35:53.262" level="INFO">"org.apache.hadoop.ozone"	"1.2.0-SNAPSHOT"</msg>
<status status="PASS" starttime="20211019 09:35:53.261" endtime="20211019 09:35:53.262"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 09:35:53.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 09:35:53.262" endtime="20211019 09:35:53.263"/>
</kw>
<status status="PASS" starttime="20211019 09:35:52.904" endtime="20211019 09:35:53.263"/>
</kw>
<msg timestamp="20211019 09:35:53.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 09:35:52.904" endtime="20211019 09:35:53.263"/>
</kw>
<msg timestamp="20211019 09:35:53.263" level="INFO">${result} = "org.apache.hadoop.ozone"	"1.2.0-SNAPSHOT"</msg>
<status status="PASS" starttime="20211019 09:35:52.903" endtime="20211019 09:35:53.263"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>org.apache.hadoop.ozone</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 09:35:53.264" endtime="20211019 09:35:53.264"/>
</kw>
<timeout value="1 minute"/>
<status status="PASS" starttime="20211019 09:35:52.902" endtime="20211019 09:35:53.264"/>
</test>
<doc>Smoketest Ozone CSI service</doc>
<status status="PASS" starttime="20211019 09:35:46.743" endtime="20211019 09:35:53.268"/>
</suite>
<statistics>
<total>
<stat pass="2" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="0" skip="0" id="s1" name="ozone-csi">ozone-csi</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
