<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1.2 (Python 3.6.9 on linux)" generated="20211019 10:12:39.179" rpa="false" schemaversion="2">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211019 10:02:42.336" level="INFO">${random} = 50274</msg>
<status status="PASS" starttime="20211019 10:02:42.335" endtime="20211019 10:02:42.336"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 10:02:42.342" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-50274 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 10:02:46.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 10:02:46.658" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 10:02:42.338" endtime="20211019 10:02:46.658"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 10:02:46.659" level="INFO"/>
<status status="PASS" starttime="20211019 10:02:46.658" endtime="20211019 10:02:46.659"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 10:02:46.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 10:02:46.660" endtime="20211019 10:02:46.660"/>
</kw>
<status status="PASS" starttime="20211019 10:02:42.338" endtime="20211019 10:02:46.661"/>
</kw>
<msg timestamp="20211019 10:02:46.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 10:02:42.337" endtime="20211019 10:02:46.661"/>
</kw>
<msg timestamp="20211019 10:02:46.661" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 10:02:42.336" endtime="20211019 10:02:46.661"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 10:02:46.661" endtime="20211019 10:02:46.662"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211019 10:02:42.334" endtime="20211019 10:02:46.662"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211019 10:02:42.270" endtime="20211019 10:02:46.664"/>
</suite>
<suite id="s1-s2" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s2-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211019 10:07:28.600" level="INFO">${random} = 58823</msg>
<status status="PASS" starttime="20211019 10:07:28.600" endtime="20211019 10:07:28.600"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 10:07:28.607" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-58823 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 10:07:33.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 10:07:33.116" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 10:07:28.603" endtime="20211019 10:07:33.116"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 10:07:33.118" level="INFO"/>
<status status="PASS" starttime="20211019 10:07:33.117" endtime="20211019 10:07:33.118"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 10:07:33.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 10:07:33.118" endtime="20211019 10:07:33.119"/>
</kw>
<status status="PASS" starttime="20211019 10:07:28.602" endtime="20211019 10:07:33.119"/>
</kw>
<msg timestamp="20211019 10:07:33.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 10:07:28.602" endtime="20211019 10:07:33.120"/>
</kw>
<msg timestamp="20211019 10:07:33.120" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 10:07:28.601" endtime="20211019 10:07:33.120"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 10:07:33.120" endtime="20211019 10:07:33.121"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211019 10:07:28.599" endtime="20211019 10:07:33.121"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211019 10:07:28.529" endtime="20211019 10:07:33.122"/>
</suite>
<suite id="s1-s3" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 10:07:37.092" level="INFO">Running command 'ozone sh volume create old2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 10:07:39.756" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 10:07:39.756" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 10:07:37.088" endtime="20211019 10:07:39.756"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 10:07:39.758" level="INFO"/>
<status status="PASS" starttime="20211019 10:07:39.757" endtime="20211019 10:07:39.758"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 10:07:39.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 10:07:39.758" endtime="20211019 10:07:39.759"/>
</kw>
<status status="PASS" starttime="20211019 10:07:37.087" endtime="20211019 10:07:39.760"/>
</kw>
<msg timestamp="20211019 10:07:39.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 10:07:37.087" endtime="20211019 10:07:39.760"/>
</kw>
<msg timestamp="20211019 10:07:39.760" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 10:07:37.086" endtime="20211019 10:07:39.760"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 10:07:39.760" endtime="20211019 10:07:39.761"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 10:07:39.769" level="INFO">Running command 'ozone sh bucket create /old2-volume/old2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 10:07:42.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 10:07:42.418" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 10:07:39.765" endtime="20211019 10:07:42.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 10:07:42.419" level="INFO"/>
<status status="PASS" starttime="20211019 10:07:42.418" endtime="20211019 10:07:42.419"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 10:07:42.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 10:07:42.420" endtime="20211019 10:07:42.420"/>
</kw>
<status status="PASS" starttime="20211019 10:07:39.762" endtime="20211019 10:07:42.421"/>
</kw>
<msg timestamp="20211019 10:07:42.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 10:07:39.762" endtime="20211019 10:07:42.421"/>
</kw>
<msg timestamp="20211019 10:07:42.421" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 10:07:39.761" endtime="20211019 10:07:42.421"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 10:07:42.422" endtime="20211019 10:07:42.422"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 10:07:42.433" level="INFO">Running command 'ozone sh key put /old2-volume/old2-bucket/old2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 10:07:47.962" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 10:07:47.962" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 10:07:42.430" endtime="20211019 10:07:47.962"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 10:07:47.963" level="INFO"/>
<status status="PASS" starttime="20211019 10:07:47.962" endtime="20211019 10:07:47.963"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 10:07:47.964" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 10:07:47.963" endtime="20211019 10:07:47.964"/>
</kw>
<status status="PASS" starttime="20211019 10:07:42.430" endtime="20211019 10:07:47.964"/>
</kw>
<msg timestamp="20211019 10:07:47.964" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 10:07:42.423" endtime="20211019 10:07:47.965"/>
</kw>
<msg timestamp="20211019 10:07:47.965" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 10:07:42.422" endtime="20211019 10:07:47.965"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 10:07:47.965" endtime="20211019 10:07:47.966"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211019 10:07:37.085" endtime="20211019 10:07:47.966"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20211019 10:07:37.014" endtime="20211019 10:07:47.968"/>
</suite>
<suite id="s1-s4" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211019 10:07:52.122" level="INFO">${random} = 90695</msg>
<status status="PASS" starttime="20211019 10:07:52.121" endtime="20211019 10:07:52.122"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 10:07:52.128" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-90695 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 10:07:56.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 10:07:56.569" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 10:07:52.124" endtime="20211019 10:07:56.569"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 10:07:56.570" level="INFO"/>
<status status="PASS" starttime="20211019 10:07:56.569" endtime="20211019 10:07:56.570"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 10:07:56.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 10:07:56.570" endtime="20211019 10:07:56.572"/>
</kw>
<status status="PASS" starttime="20211019 10:07:52.123" endtime="20211019 10:07:56.572"/>
</kw>
<msg timestamp="20211019 10:07:56.572" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 10:07:52.123" endtime="20211019 10:07:56.572"/>
</kw>
<msg timestamp="20211019 10:07:56.573" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 10:07:52.122" endtime="20211019 10:07:56.573"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 10:07:56.573" endtime="20211019 10:07:56.573"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211019 10:07:52.120" endtime="20211019 10:07:56.574"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211019 10:07:52.053" endtime="20211019 10:07:56.577"/>
</suite>
<suite id="s1-s5" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211019 10:07:19.352" level="INFO">${random} = 36750</msg>
<status status="PASS" starttime="20211019 10:07:19.351" endtime="20211019 10:07:19.352"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 10:07:19.358" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-36750 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 10:07:24.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 10:07:24.646" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 10:07:19.354" endtime="20211019 10:07:24.646"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 10:07:24.647" level="INFO"/>
<status status="PASS" starttime="20211019 10:07:24.646" endtime="20211019 10:07:24.647"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 10:07:24.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 10:07:24.647" endtime="20211019 10:07:24.648"/>
</kw>
<status status="PASS" starttime="20211019 10:07:19.353" endtime="20211019 10:07:24.648"/>
</kw>
<msg timestamp="20211019 10:07:24.648" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 10:07:19.353" endtime="20211019 10:07:24.649"/>
</kw>
<msg timestamp="20211019 10:07:24.649" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 10:07:19.352" endtime="20211019 10:07:24.649"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 10:07:24.649" endtime="20211019 10:07:24.650"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211019 10:07:19.350" endtime="20211019 10:07:24.650"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211019 10:07:19.284" endtime="20211019 10:07:24.652"/>
</suite>
<suite id="s1-s6" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s6-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 10:02:25.822" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 10:02:28.553" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 10:02:28.554" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 10:02:25.817" endtime="20211019 10:02:28.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 10:02:28.555" level="INFO"/>
<status status="PASS" starttime="20211019 10:02:28.554" endtime="20211019 10:02:28.555"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 10:02:28.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 10:02:28.556" endtime="20211019 10:02:28.556"/>
</kw>
<status status="PASS" starttime="20211019 10:02:25.816" endtime="20211019 10:02:28.557"/>
</kw>
<msg timestamp="20211019 10:02:28.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 10:02:25.816" endtime="20211019 10:02:28.557"/>
</kw>
<msg timestamp="20211019 10:02:28.557" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 10:02:25.815" endtime="20211019 10:02:28.557"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 10:02:28.562" endtime="20211019 10:02:28.566"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 10:02:28.571" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 10:02:31.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 10:02:31.479" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 10:02:28.568" endtime="20211019 10:02:31.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 10:02:31.481" level="INFO"/>
<status status="PASS" starttime="20211019 10:02:31.480" endtime="20211019 10:02:31.481"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 10:02:31.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 10:02:31.481" endtime="20211019 10:02:31.482"/>
</kw>
<status status="PASS" starttime="20211019 10:02:28.567" endtime="20211019 10:02:31.482"/>
</kw>
<msg timestamp="20211019 10:02:31.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 10:02:28.567" endtime="20211019 10:02:31.483"/>
</kw>
<msg timestamp="20211019 10:02:31.483" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 10:02:28.566" endtime="20211019 10:02:31.483"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 10:02:31.483" endtime="20211019 10:02:31.484"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 10:02:31.489" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 10:02:38.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 10:02:38.307" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 10:02:31.486" endtime="20211019 10:02:38.307"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 10:02:38.309" level="INFO"/>
<status status="PASS" starttime="20211019 10:02:38.308" endtime="20211019 10:02:38.309"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 10:02:38.310" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 10:02:38.310" endtime="20211019 10:02:38.310"/>
</kw>
<status status="PASS" starttime="20211019 10:02:31.485" endtime="20211019 10:02:38.311"/>
</kw>
<msg timestamp="20211019 10:02:38.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 10:02:31.485" endtime="20211019 10:02:38.311"/>
</kw>
<msg timestamp="20211019 10:02:38.311" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 10:02:31.484" endtime="20211019 10:02:38.311"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 10:02:38.311" endtime="20211019 10:02:38.312"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211019 10:02:25.814" endtime="20211019 10:02:38.312"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20211019 10:02:25.729" endtime="20211019 10:02:38.314"/>
</suite>
<suite id="s1-s7" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s7-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211019 10:11:10.145" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20211019 10:11:10.144" endtime="20211019 10:11:10.145"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211019 10:11:10.146" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211019 10:11:10.146" endtime="20211019 10:11:10.146"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211019 10:11:10.147" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211019 10:11:10.146" endtime="20211019 10:11:10.147"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211019 10:11:10.148" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20211019 10:11:10.147" endtime="20211019 10:11:10.148"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211019 10:11:10.149" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211019 10:11:10.150" level="INFO">${version_file_contents} = #Tue Oct 19 10:09:51 UTC 2021
cTime=1634637660701
clusterID=CID-69f95665-1583-4504-9f6d-e7af18e8da83
nodeType=SCM
scmUuid=3bfae225-9cfa-4ce3-a7fd-7aacde557fee
layoutVersion=2
</msg>
<status status="PASS" starttime="20211019 10:11:10.149" endtime="20211019 10:11:10.150"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211019 10:11:10.150" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20211019 10:11:10.150" endtime="20211019 10:11:10.151"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 10:11:10.151" endtime="20211019 10:11:10.151"/>
</kw>
<status status="PASS" starttime="20211019 10:11:10.148" endtime="20211019 10:11:10.151"/>
</kw>
<status status="PASS" starttime="20211019 10:11:10.148" endtime="20211019 10:11:10.152"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211019 10:11:10.144" endtime="20211019 10:11:10.152"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211019 10:11:10.079" endtime="20211019 10:11:10.153"/>
</suite>
<suite id="s1-s8" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s8-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211019 10:11:55.367" level="INFO">${random} = 36909</msg>
<status status="PASS" starttime="20211019 10:11:55.366" endtime="20211019 10:11:55.367"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 10:11:55.374" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-36909 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 10:12:00.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 10:12:00.051" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211019 10:11:55.369" endtime="20211019 10:12:00.051"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 10:12:00.052" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211019 10:12:00.051" endtime="20211019 10:12:00.052"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 10:12:00.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 10:12:00.052" endtime="20211019 10:12:00.053"/>
</kw>
<status status="PASS" starttime="20211019 10:11:55.368" endtime="20211019 10:12:00.053"/>
</kw>
<msg timestamp="20211019 10:12:00.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 10:11:55.368" endtime="20211019 10:12:00.054"/>
</kw>
<msg timestamp="20211019 10:12:00.054" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211019 10:11:55.367" endtime="20211019 10:12:00.054"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 10:12:00.054" endtime="20211019 10:12:00.055"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211019 10:11:55.365" endtime="20211019 10:12:00.055"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211019 10:11:55.304" endtime="20211019 10:12:00.057"/>
</suite>
<suite id="s1-s9" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s9-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 10:12:03.914" level="INFO">Running command 'ozone sh volume create new2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 10:12:06.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 10:12:06.570" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211019 10:12:03.910" endtime="20211019 10:12:06.570"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 10:12:06.578" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211019 10:12:06.573" endtime="20211019 10:12:06.578"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 10:12:06.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 10:12:06.578" endtime="20211019 10:12:06.579"/>
</kw>
<status status="PASS" starttime="20211019 10:12:03.909" endtime="20211019 10:12:06.579"/>
</kw>
<msg timestamp="20211019 10:12:06.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 10:12:03.908" endtime="20211019 10:12:06.579"/>
</kw>
<msg timestamp="20211019 10:12:06.580" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211019 10:12:03.907" endtime="20211019 10:12:06.580"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 10:12:06.580" endtime="20211019 10:12:06.581"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 10:12:06.598" level="INFO">Running command 'ozone sh bucket create /new2-volume/new2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 10:12:09.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 10:12:09.487" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211019 10:12:06.594" endtime="20211019 10:12:09.487"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 10:12:09.488" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211019 10:12:09.488" endtime="20211019 10:12:09.489"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 10:12:09.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 10:12:09.489" endtime="20211019 10:12:09.490"/>
</kw>
<status status="PASS" starttime="20211019 10:12:06.593" endtime="20211019 10:12:09.490"/>
</kw>
<msg timestamp="20211019 10:12:09.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 10:12:06.592" endtime="20211019 10:12:09.490"/>
</kw>
<msg timestamp="20211019 10:12:09.490" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211019 10:12:06.581" endtime="20211019 10:12:09.490"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 10:12:09.491" endtime="20211019 10:12:09.491"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 10:12:09.495" level="INFO">Running command 'ozone sh key put /new2-volume/new2-bucket/new2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 10:12:15.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 10:12:15.224" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211019 10:12:09.493" endtime="20211019 10:12:15.224"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 10:12:15.225" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211019 10:12:15.224" endtime="20211019 10:12:15.225"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 10:12:15.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 10:12:15.225" endtime="20211019 10:12:15.226"/>
</kw>
<status status="PASS" starttime="20211019 10:12:09.492" endtime="20211019 10:12:15.227"/>
</kw>
<msg timestamp="20211019 10:12:15.227" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 10:12:09.492" endtime="20211019 10:12:15.227"/>
</kw>
<msg timestamp="20211019 10:12:15.227" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211019 10:12:09.491" endtime="20211019 10:12:15.228"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 10:12:15.228" endtime="20211019 10:12:15.228"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211019 10:12:03.906" endtime="20211019 10:12:15.228"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20211019 10:12:03.843" endtime="20211019 10:12:15.230"/>
</suite>
<suite id="s1-s10" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s10-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211019 10:12:19.060" level="INFO">${random} = 87673</msg>
<status status="PASS" starttime="20211019 10:12:19.060" endtime="20211019 10:12:19.060"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 10:12:19.071" level="INFO">Running command 'ozone sh key get /new2-volume/new2-bucket/new2-key /tmp/key-87673 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 10:12:24.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 10:12:24.337" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211019 10:12:19.063" endtime="20211019 10:12:24.337"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 10:12:24.339" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211019 10:12:24.338" endtime="20211019 10:12:24.339"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 10:12:24.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 10:12:24.339" endtime="20211019 10:12:24.340"/>
</kw>
<status status="PASS" starttime="20211019 10:12:19.062" endtime="20211019 10:12:24.340"/>
</kw>
<msg timestamp="20211019 10:12:24.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 10:12:19.061" endtime="20211019 10:12:24.340"/>
</kw>
<msg timestamp="20211019 10:12:24.341" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211019 10:12:19.060" endtime="20211019 10:12:24.341"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 10:12:24.341" endtime="20211019 10:12:24.341"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211019 10:12:19.059" endtime="20211019 10:12:24.342"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211019 10:12:18.993" endtime="20211019 10:12:24.344"/>
</suite>
<suite id="s1-s11" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s11-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211019 10:11:14.227" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211019 10:11:14.226" endtime="20211019 10:11:14.227"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211019 10:11:14.227" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211019 10:11:14.227" endtime="20211019 10:11:14.228"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211019 10:11:14.228" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211019 10:11:14.228" endtime="20211019 10:11:14.228"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211019 10:11:14.229" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211019 10:11:14.229" endtime="20211019 10:11:14.229"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211019 10:11:14.231" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211019 10:11:14.232" level="INFO">${version_file_contents} = #Tue Oct 19 10:09:53 UTC 2021
cTime=1634637810722
clusterID=a3aa1a97-26da-4256-810d-3982735db2b5
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20211019 10:11:14.231" endtime="20211019 10:11:14.232"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211019 10:11:14.232" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20211019 10:11:14.232" endtime="20211019 10:11:14.232"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 10:11:14.233" endtime="20211019 10:11:14.233"/>
</kw>
<status status="PASS" starttime="20211019 10:11:14.230" endtime="20211019 10:11:14.233"/>
</kw>
<status status="PASS" starttime="20211019 10:11:14.229" endtime="20211019 10:11:14.233"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211019 10:11:14.225" endtime="20211019 10:11:14.234"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211019 10:11:14.155" endtime="20211019 10:11:14.234"/>
</suite>
<suite id="s1-s12" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s12-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211019 10:11:18.217" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211019 10:11:18.216" endtime="20211019 10:11:18.217"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211019 10:11:18.218" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211019 10:11:18.217" endtime="20211019 10:11:18.218"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211019 10:11:18.219" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211019 10:11:18.218" endtime="20211019 10:11:18.219"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211019 10:11:18.219" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211019 10:11:18.219" endtime="20211019 10:11:18.219"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211019 10:11:18.221" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211019 10:11:18.221" level="INFO">${version_file_contents} = #Tue Oct 19 10:09:52 UTC 2021
cTime=1634637812754
clusterID=17308944-ecfa-4e2f-a17c-8b568c50594d
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20211019 10:11:18.220" endtime="20211019 10:11:18.221"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211019 10:11:18.222" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20211019 10:11:18.221" endtime="20211019 10:11:18.222"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 10:11:18.222" endtime="20211019 10:11:18.223"/>
</kw>
<status status="PASS" starttime="20211019 10:11:18.220" endtime="20211019 10:11:18.223"/>
</kw>
<status status="PASS" starttime="20211019 10:11:18.220" endtime="20211019 10:11:18.223"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211019 10:11:18.215" endtime="20211019 10:11:18.223"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211019 10:11:18.149" endtime="20211019 10:11:18.224"/>
</suite>
<suite id="s1-s13" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s13-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211019 10:11:22.355" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211019 10:11:22.354" endtime="20211019 10:11:22.355"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211019 10:11:22.355" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211019 10:11:22.355" endtime="20211019 10:11:22.355"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211019 10:11:22.356" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211019 10:11:22.356" endtime="20211019 10:11:22.356"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211019 10:11:22.357" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211019 10:11:22.356" endtime="20211019 10:11:22.357"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211019 10:11:22.359" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211019 10:11:22.359" level="INFO">${version_file_contents} = #Tue Oct 19 10:10:23 UTC 2021
cTime=1634637811500
clusterID=74a4b313-1779-48ff-88e1-6b5219b51b5b
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20211019 10:11:22.358" endtime="20211019 10:11:22.359"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211019 10:11:22.360" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20211019 10:11:22.359" endtime="20211019 10:11:22.360"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 10:11:22.360" endtime="20211019 10:11:22.361"/>
</kw>
<status status="PASS" starttime="20211019 10:11:22.358" endtime="20211019 10:11:22.361"/>
</kw>
<status status="PASS" starttime="20211019 10:11:22.357" endtime="20211019 10:11:22.361"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211019 10:11:22.353" endtime="20211019 10:11:22.361"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211019 10:11:22.284" endtime="20211019 10:11:22.362"/>
</suite>
<suite id="s1-s14" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s14-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211019 10:11:26.452" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211019 10:11:26.451" endtime="20211019 10:11:26.452"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211019 10:11:26.452" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211019 10:11:26.452" endtime="20211019 10:11:26.453"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211019 10:11:26.453" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211019 10:11:26.453" endtime="20211019 10:11:26.453"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211019 10:11:26.454" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211019 10:11:26.453" endtime="20211019 10:11:26.454"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211019 10:11:26.455" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211019 10:11:26.456" level="INFO">${version_file_contents} = #Tue Oct 19 10:01:33 UTC 2021
cTime=1634637670584
clusterID=CID-69f95665-1583-4504-9f6d-e7af18e8da83
omUuid=41381893-6e48-40da-801c-2c5bb0fb8432
nodeType=OM
scmUuid=3bfae225-9cfa-4ce3-a7fd-7aacde557fe...</msg>
<status status="PASS" starttime="20211019 10:11:26.455" endtime="20211019 10:11:26.456"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211019 10:11:26.457" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211019 10:11:26.456" endtime="20211019 10:11:26.457"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 10:11:26.457" endtime="20211019 10:11:26.457"/>
</kw>
<status status="PASS" starttime="20211019 10:11:26.455" endtime="20211019 10:11:26.458"/>
</kw>
<status status="PASS" starttime="20211019 10:11:26.454" endtime="20211019 10:11:26.458"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211019 10:11:26.450" endtime="20211019 10:11:26.458"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211019 10:11:26.380" endtime="20211019 10:11:26.459"/>
</suite>
<suite id="s1-s15" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s15-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211019 10:11:30.411" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211019 10:11:30.411" endtime="20211019 10:11:30.411"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211019 10:11:30.412" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211019 10:11:30.412" endtime="20211019 10:11:30.412"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211019 10:11:30.413" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211019 10:11:30.412" endtime="20211019 10:11:30.413"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211019 10:11:30.413" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211019 10:11:30.413" endtime="20211019 10:11:30.414"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211019 10:11:30.415" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211019 10:11:30.415" level="INFO">${version_file_contents} = #Tue Oct 19 10:01:33 UTC 2021
cTime=1634637670006
clusterID=CID-69f95665-1583-4504-9f6d-e7af18e8da83
omUuid=b28135a4-319f-4dd2-a358-c26e3d620b03
nodeType=OM
scmUuid=3bfae225-9cfa-4ce3-a7fd-7aacde557fe...</msg>
<status status="PASS" starttime="20211019 10:11:30.415" endtime="20211019 10:11:30.415"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211019 10:11:30.416" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211019 10:11:30.416" endtime="20211019 10:11:30.416"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 10:11:30.416" endtime="20211019 10:11:30.417"/>
</kw>
<status status="PASS" starttime="20211019 10:11:30.414" endtime="20211019 10:11:30.417"/>
</kw>
<status status="PASS" starttime="20211019 10:11:30.414" endtime="20211019 10:11:30.417"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211019 10:11:30.410" endtime="20211019 10:11:30.418"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211019 10:11:30.344" endtime="20211019 10:11:30.420"/>
</suite>
<suite id="s1-s16" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s16-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211019 10:11:34.349" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211019 10:11:34.348" endtime="20211019 10:11:34.349"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211019 10:11:34.350" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211019 10:11:34.349" endtime="20211019 10:11:34.350"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211019 10:11:34.351" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211019 10:11:34.350" endtime="20211019 10:11:34.351"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211019 10:11:34.352" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211019 10:11:34.351" endtime="20211019 10:11:34.352"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211019 10:11:34.353" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211019 10:11:34.353" level="INFO">${version_file_contents} = #Tue Oct 19 10:01:33 UTC 2021
cTime=1634637669708
clusterID=CID-69f95665-1583-4504-9f6d-e7af18e8da83
omUuid=c1afa80d-4edb-4e06-9738-851b5e60e46e
nodeType=OM
scmUuid=3bfae225-9cfa-4ce3-a7fd-7aacde557fe...</msg>
<status status="PASS" starttime="20211019 10:11:34.353" endtime="20211019 10:11:34.354"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211019 10:11:34.354" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211019 10:11:34.354" endtime="20211019 10:11:34.354"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 10:11:34.354" endtime="20211019 10:11:34.355"/>
</kw>
<status status="PASS" starttime="20211019 10:11:34.352" endtime="20211019 10:11:34.355"/>
</kw>
<status status="PASS" starttime="20211019 10:11:34.352" endtime="20211019 10:11:34.355"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211019 10:11:34.347" endtime="20211019 10:11:34.355"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211019 10:11:34.284" endtime="20211019 10:11:34.356"/>
</suite>
<suite id="s1-s17" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s17-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211019 10:11:38.162" level="INFO">${random} = 37711</msg>
<status status="PASS" starttime="20211019 10:11:38.161" endtime="20211019 10:11:38.162"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 10:11:38.168" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-37711 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 10:11:42.927" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 10:11:42.927" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211019 10:11:38.164" endtime="20211019 10:11:42.927"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 10:11:42.929" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211019 10:11:42.928" endtime="20211019 10:11:42.929"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 10:11:42.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 10:11:42.929" endtime="20211019 10:11:42.930"/>
</kw>
<status status="PASS" starttime="20211019 10:11:38.163" endtime="20211019 10:11:42.930"/>
</kw>
<msg timestamp="20211019 10:11:42.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 10:11:38.163" endtime="20211019 10:11:42.930"/>
</kw>
<msg timestamp="20211019 10:11:42.930" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211019 10:11:38.162" endtime="20211019 10:11:42.931"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 10:11:42.931" endtime="20211019 10:11:42.931"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211019 10:11:38.159" endtime="20211019 10:11:42.932"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211019 10:11:38.097" endtime="20211019 10:11:42.933"/>
</suite>
<suite id="s1-s18" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s18-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211019 10:11:46.777" level="INFO">${random} = 60253</msg>
<status status="PASS" starttime="20211019 10:11:46.777" endtime="20211019 10:11:46.777"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 10:11:46.787" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-60253 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 10:11:51.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 10:11:51.518" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211019 10:11:46.781" endtime="20211019 10:11:51.518"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 10:11:51.519" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211019 10:11:51.518" endtime="20211019 10:11:51.519"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 10:11:51.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 10:11:51.520" endtime="20211019 10:11:51.520"/>
</kw>
<status status="PASS" starttime="20211019 10:11:46.780" endtime="20211019 10:11:51.521"/>
</kw>
<msg timestamp="20211019 10:11:51.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 10:11:46.779" endtime="20211019 10:11:51.522"/>
</kw>
<msg timestamp="20211019 10:11:51.522" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211019 10:11:46.778" endtime="20211019 10:11:51.522"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 10:11:51.522" endtime="20211019 10:11:51.523"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211019 10:11:46.776" endtime="20211019 10:11:51.523"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211019 10:11:46.711" endtime="20211019 10:11:51.525"/>
</suite>
<suite id="s1-s19" name="Finalize" source="/opt/hadoop/smoketest/upgrade/finalize.robot">
<test id="s1-s19-t1" name="Finalize SCM">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20211019 10:09:43.609" endtime="20211019 10:09:43.609"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizeupgrade</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 10:09:43.614" level="INFO">Running command 'ozone admin scm finalizeupgrade 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 10:11:01.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 10:11:01.968" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20211019 10:09:43.611" endtime="20211019 10:11:01.968"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 10:11:01.969" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20211019 10:11:01.969" endtime="20211019 10:11:01.970"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 10:11:01.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 10:11:01.970" endtime="20211019 10:11:01.970"/>
</kw>
<status status="PASS" starttime="20211019 10:09:43.610" endtime="20211019 10:11:01.971"/>
</kw>
<msg timestamp="20211019 10:11:01.971" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 10:09:43.610" endtime="20211019 10:11:01.971"/>
</kw>
<msg timestamp="20211019 10:11:01.972" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20211019 10:09:43.610" endtime="20211019 10:11:01.972"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 10:11:01.972" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20211019 10:11:01.972" endtime="20211019 10:11:01.972"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211019 10:09:43.608" endtime="20211019 10:11:01.973"/>
</test>
<test id="s1-s19-t2" name="Finalize OMs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20211019 10:11:01.974" endtime="20211019 10:11:01.975"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizeupgrade -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 10:11:01.979" level="INFO">Running command 'ozone admin om finalizeupgrade -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 10:11:05.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 10:11:05.836" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20211019 10:11:01.977" endtime="20211019 10:11:05.836"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 10:11:05.839" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20211019 10:11:05.838" endtime="20211019 10:11:05.839"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 10:11:05.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 10:11:05.840" endtime="20211019 10:11:05.841"/>
</kw>
<status status="PASS" starttime="20211019 10:11:01.976" endtime="20211019 10:11:05.841"/>
</kw>
<msg timestamp="20211019 10:11:05.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 10:11:01.976" endtime="20211019 10:11:05.841"/>
</kw>
<msg timestamp="20211019 10:11:05.845" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20211019 10:11:01.975" endtime="20211019 10:11:05.846"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 10:11:05.846" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20211019 10:11:05.846" endtime="20211019 10:11:05.846"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211019 10:11:01.973" endtime="20211019 10:11:05.847"/>
</test>
<doc>Finalize Upgrade of OMs and SCM</doc>
<status status="PASS" starttime="20211019 10:09:43.546" endtime="20211019 10:11:05.850"/>
</suite>
<suite id="s1-s20" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s20-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211019 10:04:37.688" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211019 10:04:37.687" endtime="20211019 10:04:37.688"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211019 10:04:37.688" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211019 10:04:37.688" endtime="20211019 10:04:37.688"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211019 10:04:37.689" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211019 10:04:37.689" endtime="20211019 10:04:37.689"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211019 10:04:37.690" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211019 10:04:37.690" endtime="20211019 10:04:37.690"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211019 10:04:37.692" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211019 10:04:37.692" level="INFO">${version_file_contents} = #Tue Oct 19 10:03:30 UTC 2021
cTime=1634637810722
clusterID=a3aa1a97-26da-4256-810d-3982735db2b5
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20211019 10:04:37.691" endtime="20211019 10:04:37.692"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211019 10:04:37.693" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211019 10:04:37.692" endtime="20211019 10:04:37.693"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 10:04:37.693" endtime="20211019 10:04:37.694"/>
</kw>
<status status="PASS" starttime="20211019 10:04:37.691" endtime="20211019 10:04:37.694"/>
</kw>
<status status="PASS" starttime="20211019 10:04:37.690" endtime="20211019 10:04:37.694"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211019 10:04:37.686" endtime="20211019 10:04:37.694"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211019 10:04:37.622" endtime="20211019 10:04:37.695"/>
</suite>
<suite id="s1-s21" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s21-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211019 10:04:41.667" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211019 10:04:41.667" endtime="20211019 10:04:41.668"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211019 10:04:41.668" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211019 10:04:41.668" endtime="20211019 10:04:41.668"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211019 10:04:41.669" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211019 10:04:41.668" endtime="20211019 10:04:41.669"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211019 10:04:41.670" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211019 10:04:41.669" endtime="20211019 10:04:41.670"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211019 10:04:41.671" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211019 10:04:41.671" level="INFO">${version_file_contents} = #Tue Oct 19 10:03:32 UTC 2021
cTime=1634637812754
clusterID=17308944-ecfa-4e2f-a17c-8b568c50594d
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20211019 10:04:41.671" endtime="20211019 10:04:41.671"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211019 10:04:41.672" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211019 10:04:41.671" endtime="20211019 10:04:41.672"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 10:04:41.672" endtime="20211019 10:04:41.673"/>
</kw>
<status status="PASS" starttime="20211019 10:04:41.670" endtime="20211019 10:04:41.673"/>
</kw>
<status status="PASS" starttime="20211019 10:04:41.670" endtime="20211019 10:04:41.673"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211019 10:04:41.666" endtime="20211019 10:04:41.673"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211019 10:04:41.597" endtime="20211019 10:04:41.674"/>
</suite>
<suite id="s1-s22" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s22-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211019 10:04:45.647" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211019 10:04:45.646" endtime="20211019 10:04:45.647"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211019 10:04:45.648" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211019 10:04:45.648" endtime="20211019 10:04:45.648"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211019 10:04:45.649" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211019 10:04:45.648" endtime="20211019 10:04:45.649"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211019 10:04:45.649" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211019 10:04:45.649" endtime="20211019 10:04:45.649"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211019 10:04:45.651" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211019 10:04:45.651" level="INFO">${version_file_contents} = #Tue Oct 19 10:03:31 UTC 2021
cTime=1634637811500
clusterID=74a4b313-1779-48ff-88e1-6b5219b51b5b
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20211019 10:04:45.651" endtime="20211019 10:04:45.651"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211019 10:04:45.652" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211019 10:04:45.651" endtime="20211019 10:04:45.652"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 10:04:45.652" endtime="20211019 10:04:45.653"/>
</kw>
<status status="PASS" starttime="20211019 10:04:45.650" endtime="20211019 10:04:45.653"/>
</kw>
<status status="PASS" starttime="20211019 10:04:45.650" endtime="20211019 10:04:45.653"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211019 10:04:45.646" endtime="20211019 10:04:45.653"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211019 10:04:45.581" endtime="20211019 10:04:45.654"/>
</suite>
<suite id="s1-s23" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s23-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211019 10:04:49.597" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211019 10:04:49.596" endtime="20211019 10:04:49.597"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211019 10:04:49.598" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211019 10:04:49.597" endtime="20211019 10:04:49.598"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211019 10:04:49.598" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211019 10:04:49.598" endtime="20211019 10:04:49.599"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211019 10:04:49.599" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211019 10:04:49.599" endtime="20211019 10:04:49.599"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211019 10:04:49.601" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211019 10:04:49.602" level="INFO">${version_file_contents} = #Tue Oct 19 10:01:33 UTC 2021
cTime=1634637670584
clusterID=CID-69f95665-1583-4504-9f6d-e7af18e8da83
omUuid=41381893-6e48-40da-801c-2c5bb0fb8432
nodeType=OM
scmUuid=3bfae225-9cfa-4ce3-a7fd-7aacde557fe...</msg>
<status status="PASS" starttime="20211019 10:04:49.601" endtime="20211019 10:04:49.602"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211019 10:04:49.602" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211019 10:04:49.602" endtime="20211019 10:04:49.602"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 10:04:49.603" endtime="20211019 10:04:49.603"/>
</kw>
<status status="PASS" starttime="20211019 10:04:49.600" endtime="20211019 10:04:49.603"/>
</kw>
<status status="PASS" starttime="20211019 10:04:49.599" endtime="20211019 10:04:49.603"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211019 10:04:49.595" endtime="20211019 10:04:49.604"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211019 10:04:49.529" endtime="20211019 10:04:49.605"/>
</suite>
<suite id="s1-s24" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s24-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211019 10:04:53.601" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211019 10:04:53.601" endtime="20211019 10:04:53.602"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211019 10:04:53.602" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211019 10:04:53.602" endtime="20211019 10:04:53.603"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211019 10:04:53.603" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211019 10:04:53.603" endtime="20211019 10:04:53.603"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211019 10:04:53.604" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211019 10:04:53.604" endtime="20211019 10:04:53.604"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211019 10:04:53.606" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211019 10:04:53.606" level="INFO">${version_file_contents} = #Tue Oct 19 10:01:33 UTC 2021
cTime=1634637670006
clusterID=CID-69f95665-1583-4504-9f6d-e7af18e8da83
omUuid=b28135a4-319f-4dd2-a358-c26e3d620b03
nodeType=OM
scmUuid=3bfae225-9cfa-4ce3-a7fd-7aacde557fe...</msg>
<status status="PASS" starttime="20211019 10:04:53.606" endtime="20211019 10:04:53.606"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211019 10:04:53.607" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211019 10:04:53.607" endtime="20211019 10:04:53.607"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 10:04:53.607" endtime="20211019 10:04:53.608"/>
</kw>
<status status="PASS" starttime="20211019 10:04:53.605" endtime="20211019 10:04:53.608"/>
</kw>
<status status="PASS" starttime="20211019 10:04:53.605" endtime="20211019 10:04:53.608"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211019 10:04:53.599" endtime="20211019 10:04:53.609"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211019 10:04:53.532" endtime="20211019 10:04:53.610"/>
</suite>
<suite id="s1-s25" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s25-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211019 10:04:57.550" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211019 10:04:57.550" endtime="20211019 10:04:57.551"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211019 10:04:57.551" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211019 10:04:57.551" endtime="20211019 10:04:57.551"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211019 10:04:57.552" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211019 10:04:57.551" endtime="20211019 10:04:57.552"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211019 10:04:57.552" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211019 10:04:57.552" endtime="20211019 10:04:57.553"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211019 10:04:57.554" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211019 10:04:57.554" level="INFO">${version_file_contents} = #Tue Oct 19 10:01:33 UTC 2021
cTime=1634637669708
clusterID=CID-69f95665-1583-4504-9f6d-e7af18e8da83
omUuid=c1afa80d-4edb-4e06-9738-851b5e60e46e
nodeType=OM
scmUuid=3bfae225-9cfa-4ce3-a7fd-7aacde557fe...</msg>
<status status="PASS" starttime="20211019 10:04:57.554" endtime="20211019 10:04:57.554"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211019 10:04:57.555" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211019 10:04:57.555" endtime="20211019 10:04:57.555"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 10:04:57.555" endtime="20211019 10:04:57.556"/>
</kw>
<status status="PASS" starttime="20211019 10:04:57.553" endtime="20211019 10:04:57.556"/>
</kw>
<status status="PASS" starttime="20211019 10:04:57.553" endtime="20211019 10:04:57.556"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211019 10:04:57.549" endtime="20211019 10:04:57.556"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211019 10:04:57.483" endtime="20211019 10:04:57.557"/>
</suite>
<suite id="s1-s26" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s26-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211019 10:05:01.554" level="INFO">${random} = 45932</msg>
<status status="PASS" starttime="20211019 10:05:01.554" endtime="20211019 10:05:01.554"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 10:05:01.560" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-45932 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 10:05:06.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 10:05:06.465" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211019 10:05:01.556" endtime="20211019 10:05:06.465"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 10:05:06.466" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211019 10:05:06.465" endtime="20211019 10:05:06.466"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 10:05:06.467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 10:05:06.466" endtime="20211019 10:05:06.467"/>
</kw>
<status status="PASS" starttime="20211019 10:05:01.556" endtime="20211019 10:05:06.467"/>
</kw>
<msg timestamp="20211019 10:05:06.467" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 10:05:01.555" endtime="20211019 10:05:06.467"/>
</kw>
<msg timestamp="20211019 10:05:06.468" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211019 10:05:01.554" endtime="20211019 10:05:06.468"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 10:05:06.468" endtime="20211019 10:05:06.468"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211019 10:05:01.553" endtime="20211019 10:05:06.469"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211019 10:05:01.482" endtime="20211019 10:05:06.470"/>
</suite>
<suite id="s1-s27" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s27-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 10:05:10.364" level="INFO">Running command 'ozone sh volume create new1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 10:05:13.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 10:05:13.281" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211019 10:05:10.361" endtime="20211019 10:05:13.281"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 10:05:13.283" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211019 10:05:13.282" endtime="20211019 10:05:13.283"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 10:05:13.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 10:05:13.283" endtime="20211019 10:05:13.283"/>
</kw>
<status status="PASS" starttime="20211019 10:05:10.360" endtime="20211019 10:05:13.284"/>
</kw>
<msg timestamp="20211019 10:05:13.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 10:05:10.360" endtime="20211019 10:05:13.284"/>
</kw>
<msg timestamp="20211019 10:05:13.284" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211019 10:05:10.359" endtime="20211019 10:05:13.284"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 10:05:13.285" endtime="20211019 10:05:13.285"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 10:05:13.300" level="INFO">Running command 'ozone sh bucket create /new1-volume/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 10:05:16.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 10:05:16.395" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211019 10:05:13.291" endtime="20211019 10:05:16.395"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 10:05:16.396" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211019 10:05:16.396" endtime="20211019 10:05:16.397"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 10:05:16.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 10:05:16.397" endtime="20211019 10:05:16.398"/>
</kw>
<status status="PASS" starttime="20211019 10:05:13.290" endtime="20211019 10:05:16.398"/>
</kw>
<msg timestamp="20211019 10:05:16.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 10:05:13.289" endtime="20211019 10:05:16.398"/>
</kw>
<msg timestamp="20211019 10:05:16.398" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211019 10:05:13.285" endtime="20211019 10:05:16.398"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 10:05:16.399" endtime="20211019 10:05:16.399"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 10:05:16.404" level="INFO">Running command 'ozone sh key put /new1-volume/new1-bucket/new1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 10:05:22.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 10:05:22.656" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211019 10:05:16.401" endtime="20211019 10:05:22.657"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 10:05:22.658" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211019 10:05:22.657" endtime="20211019 10:05:22.658"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 10:05:22.659" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 10:05:22.658" endtime="20211019 10:05:22.659"/>
</kw>
<status status="PASS" starttime="20211019 10:05:16.401" endtime="20211019 10:05:22.659"/>
</kw>
<msg timestamp="20211019 10:05:22.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 10:05:16.400" endtime="20211019 10:05:22.659"/>
</kw>
<msg timestamp="20211019 10:05:22.660" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211019 10:05:16.399" endtime="20211019 10:05:22.660"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 10:05:22.660" endtime="20211019 10:05:22.661"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211019 10:05:10.358" endtime="20211019 10:05:22.661"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20211019 10:05:10.293" endtime="20211019 10:05:22.663"/>
</suite>
<suite id="s1-s28" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s28-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211019 10:05:26.551" level="INFO">${random} = 51057</msg>
<status status="PASS" starttime="20211019 10:05:26.551" endtime="20211019 10:05:26.551"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 10:05:26.558" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-51057 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 10:05:31.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 10:05:31.279" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211019 10:05:26.554" endtime="20211019 10:05:31.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 10:05:31.280" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211019 10:05:31.280" endtime="20211019 10:05:31.281"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 10:05:31.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 10:05:31.281" endtime="20211019 10:05:31.281"/>
</kw>
<status status="PASS" starttime="20211019 10:05:26.553" endtime="20211019 10:05:31.282"/>
</kw>
<msg timestamp="20211019 10:05:31.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 10:05:26.552" endtime="20211019 10:05:31.282"/>
</kw>
<msg timestamp="20211019 10:05:31.283" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211019 10:05:26.551" endtime="20211019 10:05:31.283"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 10:05:31.283" endtime="20211019 10:05:31.283"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211019 10:05:26.550" endtime="20211019 10:05:31.284"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211019 10:05:26.479" endtime="20211019 10:05:31.285"/>
</suite>
<suite id="s1-s29" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s29-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211019 10:04:33.627" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20211019 10:04:33.626" endtime="20211019 10:04:33.627"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211019 10:04:33.628" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211019 10:04:33.628" endtime="20211019 10:04:33.628"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211019 10:04:33.629" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211019 10:04:33.628" endtime="20211019 10:04:33.629"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211019 10:04:33.629" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20211019 10:04:33.629" endtime="20211019 10:04:33.630"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211019 10:04:33.631" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211019 10:04:33.631" level="INFO">${version_file_contents} = #Tue Oct 19 10:01:00 UTC 2021
cTime=1634637660701
clusterID=CID-69f95665-1583-4504-9f6d-e7af18e8da83
nodeType=SCM
scmUuid=3bfae225-9cfa-4ce3-a7fd-7aacde557fee
layoutVersion=0
</msg>
<status status="PASS" starttime="20211019 10:04:33.631" endtime="20211019 10:04:33.631"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211019 10:04:33.632" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211019 10:04:33.632" endtime="20211019 10:04:33.633"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 10:04:33.633" endtime="20211019 10:04:33.633"/>
</kw>
<status status="PASS" starttime="20211019 10:04:33.630" endtime="20211019 10:04:33.633"/>
</kw>
<status status="PASS" starttime="20211019 10:04:33.630" endtime="20211019 10:04:33.634"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211019 10:04:33.625" endtime="20211019 10:04:33.634"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211019 10:04:33.556" endtime="20211019 10:04:33.635"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="179090"/>
</suite>
<statistics>
<total>
<stat pass="30" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="30" fail="0" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s8" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s9" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s10" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s11" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s12" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s13" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s14" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s15" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s16" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s17" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s18" name="Validate">upgrade.Validate</stat>
<stat pass="2" fail="0" skip="0" id="s1-s19" name="Finalize">upgrade.Finalize</stat>
<stat pass="1" fail="0" skip="0" id="s1-s20" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s21" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s22" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s23" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s24" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s25" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s26" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s27" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s28" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s29" name="Check-Mlv">upgrade.Check-Mlv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
