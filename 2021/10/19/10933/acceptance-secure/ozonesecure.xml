<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1.2 (Python 3.6.9 on linux)" generated="20211019 07:05:09.570" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:15:16.931" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:15:16.934" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:15:16.935" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211019 06:15:16.928" endtime="20211019 06:15:16.935"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:15:16.936" level="INFO">scm</msg>
<status status="PASS" starttime="20211019 06:15:16.935" endtime="20211019 06:15:16.936"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:15:16.937" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:15:16.936" endtime="20211019 06:15:16.937"/>
</kw>
<status status="PASS" starttime="20211019 06:15:16.927" endtime="20211019 06:15:16.938"/>
</kw>
<msg timestamp="20211019 06:15:16.938" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:15:16.927" endtime="20211019 06:15:16.938"/>
</kw>
<msg timestamp="20211019 06:15:16.938" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20211019 06:15:16.926" endtime="20211019 06:15:16.938"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:15:16.942" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:15:16.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:15:16.950" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:15:16.940" endtime="20211019 06:15:16.950"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:15:16.951" level="INFO"/>
<status status="PASS" starttime="20211019 06:15:16.950" endtime="20211019 06:15:16.951"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:15:16.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:15:16.951" endtime="20211019 06:15:16.952"/>
</kw>
<status status="PASS" starttime="20211019 06:15:16.940" endtime="20211019 06:15:16.952"/>
</kw>
<msg timestamp="20211019 06:15:16.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:15:16.939" endtime="20211019 06:15:16.952"/>
</kw>
<status status="PASS" starttime="20211019 06:15:16.939" endtime="20211019 06:15:16.953"/>
</kw>
<status status="PASS" starttime="20211019 06:15:16.938" endtime="20211019 06:15:16.953"/>
</kw>
<status status="PASS" starttime="20211019 06:15:16.926" endtime="20211019 06:15:16.953"/>
</kw>
<status status="PASS" starttime="20211019 06:15:16.925" endtime="20211019 06:15:16.953"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:15:16.959" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:15:17.083" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:15:17.083" level="INFO">${output} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20211019 06:15:16.955" endtime="20211019 06:15:17.083"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:15:17.085" level="INFO">HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 482

HTTP/1.1 200 OK
Date: Tue, 19 Oct 2021 06:15:17 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCXNUmRCwvQxAGDh+O9wszjO+gckrHCloe1/V0hlXzRy6PBGWSM8KzPlWzcM22Sd7BbfodXkg4iMel04AWO1pndRMr
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1634660117072&amp;s=e42j6odU1Tj8XEamyo5/FYiA6cNyfjiDHc8FoABXnGw="; Path=/; HttpOnly
Last-Modified: Tue, 19 Oct 2021 06:02:02 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20211019 06:15:17.084" endtime="20211019 06:15:17.085"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:15:17.085" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:15:17.085" endtime="20211019 06:15:17.085"/>
</kw>
<status status="PASS" starttime="20211019 06:15:16.954" endtime="20211019 06:15:17.086"/>
</kw>
<msg timestamp="20211019 06:15:17.086" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:15:16.954" endtime="20211019 06:15:17.086"/>
</kw>
<msg timestamp="20211019 06:15:17.087" level="INFO">${result} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20211019 06:15:16.953" endtime="20211019 06:15:17.087"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 06:15:17.087" endtime="20211019 06:15:17.087"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211019 06:15:16.924" endtime="20211019 06:15:17.088"/>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:15:17.094" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:15:17.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:15:17.098" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211019 06:15:17.092" endtime="20211019 06:15:17.098"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:15:17.099" level="INFO">scm</msg>
<status status="PASS" starttime="20211019 06:15:17.098" endtime="20211019 06:15:17.099"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:15:17.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:15:17.099" endtime="20211019 06:15:17.100"/>
</kw>
<status status="PASS" starttime="20211019 06:15:17.091" endtime="20211019 06:15:17.100"/>
</kw>
<msg timestamp="20211019 06:15:17.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:15:17.091" endtime="20211019 06:15:17.100"/>
</kw>
<msg timestamp="20211019 06:15:17.101" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211019 06:15:17.090" endtime="20211019 06:15:17.101"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211019 06:15:17.103" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211019 06:15:17.101" endtime="20211019 06:15:17.103"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:15:17.107" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:15:17.117" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:15:17.117" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:15:17.105" endtime="20211019 06:15:17.117"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:15:17.118" level="INFO"/>
<status status="PASS" starttime="20211019 06:15:17.117" endtime="20211019 06:15:17.118"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:15:17.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:15:17.118" endtime="20211019 06:15:17.119"/>
</kw>
<status status="PASS" starttime="20211019 06:15:17.105" endtime="20211019 06:15:17.119"/>
</kw>
<msg timestamp="20211019 06:15:17.119" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:15:17.104" endtime="20211019 06:15:17.119"/>
</kw>
<status status="PASS" starttime="20211019 06:15:17.103" endtime="20211019 06:15:17.120"/>
</kw>
<status status="PASS" starttime="20211019 06:15:17.103" endtime="20211019 06:15:17.120"/>
</kw>
<status status="PASS" starttime="20211019 06:15:17.090" endtime="20211019 06:15:17.120"/>
</kw>
<status status="PASS" starttime="20211019 06:15:17.089" endtime="20211019 06:15:17.121"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:15:17.124" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:20:17.090" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211019 06:15:17.123" endtime="20211019 06:20:17.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211019 06:20:17.090" endtime="20211019 06:20:17.091"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211019 06:20:17.091" endtime="20211019 06:20:17.091"/>
</kw>
<status status="FAIL" starttime="20211019 06:15:17.122" endtime="20211019 06:20:17.091"/>
</kw>
<msg timestamp="20211019 06:20:17.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211019 06:15:17.121" endtime="20211019 06:20:17.092"/>
</kw>
<status status="FAIL" starttime="20211019 06:15:17.121" endtime="20211019 06:20:17.092"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20211019 06:20:17.092" endtime="20211019 06:20:17.092"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Status: Success</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211019 06:20:17.093" endtime="20211019 06:20:17.093"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211019 06:15:17.088" endtime="20211019 06:20:17.093">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" starttime="20211019 06:15:16.894" endtime="20211019 06:20:17.095"/>
</suite>
<suite id="s1-s1-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s1-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:20:17.111" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:20:20.817" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:20:20.817" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211019 06:20:17.107" endtime="20211019 06:20:20.817"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:20:20.819" level="INFO">om</msg>
<status status="PASS" starttime="20211019 06:20:20.818" endtime="20211019 06:20:20.819"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:20:20.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:20:20.819" endtime="20211019 06:20:20.820"/>
</kw>
<status status="PASS" starttime="20211019 06:20:17.106" endtime="20211019 06:20:20.820"/>
</kw>
<msg timestamp="20211019 06:20:20.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:20:17.105" endtime="20211019 06:20:20.821"/>
</kw>
<msg timestamp="20211019 06:20:20.821" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211019 06:20:17.104" endtime="20211019 06:20:20.821"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 06:20:20.821" endtime="20211019 06:20:20.822"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:20:20.827" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:20:23.756" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:20:23.757" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211019 06:20:20.824" endtime="20211019 06:20:23.757"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:20:23.758" level="INFO">om</msg>
<status status="PASS" starttime="20211019 06:20:23.757" endtime="20211019 06:20:23.758"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:20:23.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:20:23.758" endtime="20211019 06:20:23.759"/>
</kw>
<status status="PASS" starttime="20211019 06:20:20.823" endtime="20211019 06:20:23.759"/>
</kw>
<msg timestamp="20211019 06:20:23.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:20:20.823" endtime="20211019 06:20:23.760"/>
</kw>
<msg timestamp="20211019 06:20:23.760" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211019 06:20:20.822" endtime="20211019 06:20:23.760"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 06:20:23.760" endtime="20211019 06:20:23.761"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211019 06:20:17.103" endtime="20211019 06:20:23.761"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:20:23.768" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:20:26.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:20:26.775" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211019 06:20:23.765" endtime="20211019 06:20:26.775"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:20:26.777" level="INFO">scm</msg>
<status status="PASS" starttime="20211019 06:20:26.776" endtime="20211019 06:20:26.777"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:20:26.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:20:26.777" endtime="20211019 06:20:26.778"/>
</kw>
<status status="PASS" starttime="20211019 06:20:23.764" endtime="20211019 06:20:26.778"/>
</kw>
<msg timestamp="20211019 06:20:26.778" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:20:23.763" endtime="20211019 06:20:26.778"/>
</kw>
<msg timestamp="20211019 06:20:26.779" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20211019 06:20:23.763" endtime="20211019 06:20:26.779"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 06:20:26.779" endtime="20211019 06:20:26.780"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:20:26.787" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:20:29.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:20:29.543" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211019 06:20:26.782" endtime="20211019 06:20:29.543"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:20:29.545" level="INFO">scm</msg>
<status status="PASS" starttime="20211019 06:20:29.544" endtime="20211019 06:20:29.545"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:20:29.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:20:29.545" endtime="20211019 06:20:29.546"/>
</kw>
<status status="PASS" starttime="20211019 06:20:26.781" endtime="20211019 06:20:29.546"/>
</kw>
<msg timestamp="20211019 06:20:29.546" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:20:26.780" endtime="20211019 06:20:29.547"/>
</kw>
<msg timestamp="20211019 06:20:29.548" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20211019 06:20:26.780" endtime="20211019 06:20:29.548"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 06:20:29.549" endtime="20211019 06:20:29.550"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211019 06:20:23.762" endtime="20211019 06:20:29.551"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:20:29.561" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:20:32.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:20:32.071" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211019 06:20:29.558" endtime="20211019 06:20:32.071"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:20:32.073" level="INFO">om</msg>
<status status="PASS" starttime="20211019 06:20:32.072" endtime="20211019 06:20:32.074"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:20:32.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:20:32.074" endtime="20211019 06:20:32.075"/>
</kw>
<status status="PASS" starttime="20211019 06:20:29.556" endtime="20211019 06:20:32.076"/>
</kw>
<msg timestamp="20211019 06:20:32.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:20:29.555" endtime="20211019 06:20:32.077"/>
</kw>
<msg timestamp="20211019 06:20:32.078" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211019 06:20:29.554" endtime="20211019 06:20:32.078"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 06:20:32.078" endtime="20211019 06:20:32.079"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 06:20:32.079" endtime="20211019 06:20:32.080"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:20:32.085" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:20:35.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:20:35.055" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211019 06:20:32.082" endtime="20211019 06:20:35.055"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:20:35.057" level="INFO">om</msg>
<status status="PASS" starttime="20211019 06:20:35.056" endtime="20211019 06:20:35.057"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:20:35.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:20:35.057" endtime="20211019 06:20:35.058"/>
</kw>
<status status="PASS" starttime="20211019 06:20:32.081" endtime="20211019 06:20:35.058"/>
</kw>
<msg timestamp="20211019 06:20:35.058" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:20:32.080" endtime="20211019 06:20:35.058"/>
</kw>
<msg timestamp="20211019 06:20:35.058" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211019 06:20:32.080" endtime="20211019 06:20:35.059"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 06:20:35.059" endtime="20211019 06:20:35.059"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 06:20:35.059" endtime="20211019 06:20:35.060"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211019 06:20:29.552" endtime="20211019 06:20:35.060"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:20:35.070" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:20:37.525" level="INFO">${rc} = 255</msg>
<msg timestamp="20211019 06:20:37.525" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211019 06:20:35.064" endtime="20211019 06:20:37.525"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:20:37.527" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211019 06:20:37.526" endtime="20211019 06:20:37.527"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:20:37.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:20:37.527" endtime="20211019 06:20:37.528"/>
</kw>
<msg timestamp="20211019 06:20:37.528" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211019 06:20:35.064" endtime="20211019 06:20:37.528"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 06:20:37.528" endtime="20211019 06:20:37.529"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:20:37.532" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:20:40.136" level="INFO">${rc} = 255</msg>
<msg timestamp="20211019 06:20:40.136" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211019 06:20:37.529" endtime="20211019 06:20:40.136"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:20:40.138" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211019 06:20:40.137" endtime="20211019 06:20:40.138"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:20:40.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:20:40.138" endtime="20211019 06:20:40.139"/>
</kw>
<msg timestamp="20211019 06:20:40.139" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211019 06:20:37.529" endtime="20211019 06:20:40.139"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 06:20:40.140" endtime="20211019 06:20:40.140"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211019 06:20:35.063" endtime="20211019 06:20:40.141"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20211019 06:20:17.097" endtime="20211019 06:20:40.142"/>
</suite>
<suite id="s1-s1-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211019 06:20:40.166" level="INFO">${random} = 01507</msg>
<status status="PASS" starttime="20211019 06:20:40.165" endtime="20211019 06:20:40.166"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211019 06:20:40.168" level="INFO">${source} = 01507-source</msg>
<status status="PASS" starttime="20211019 06:20:40.166" endtime="20211019 06:20:40.169"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211019 06:20:40.171" level="INFO">${target} = 01507-target</msg>
<status status="PASS" starttime="20211019 06:20:40.169" endtime="20211019 06:20:40.171"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:20:40.177" level="INFO">Running command 'ozone sh volume create 01507-source 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:20:45.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:20:45.634" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:20:40.173" endtime="20211019 06:20:45.634"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:20:45.635" level="INFO"/>
<status status="PASS" starttime="20211019 06:20:45.635" endtime="20211019 06:20:45.635"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:20:45.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:20:45.636" endtime="20211019 06:20:45.636"/>
</kw>
<status status="PASS" starttime="20211019 06:20:40.173" endtime="20211019 06:20:45.637"/>
</kw>
<msg timestamp="20211019 06:20:45.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:20:40.172" endtime="20211019 06:20:45.637"/>
</kw>
<status status="PASS" starttime="20211019 06:20:40.171" endtime="20211019 06:20:45.638"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:20:45.642" level="INFO">Running command 'ozone sh volume create 01507-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:20:53.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:20:53.016" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:20:45.640" endtime="20211019 06:20:53.016"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:20:53.018" level="INFO"/>
<status status="PASS" starttime="20211019 06:20:53.017" endtime="20211019 06:20:53.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:20:53.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:20:53.018" endtime="20211019 06:20:53.019"/>
</kw>
<status status="PASS" starttime="20211019 06:20:45.639" endtime="20211019 06:20:53.020"/>
</kw>
<msg timestamp="20211019 06:20:53.020" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:20:45.638" endtime="20211019 06:20:53.020"/>
</kw>
<status status="PASS" starttime="20211019 06:20:45.638" endtime="20211019 06:20:53.020"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:20:53.030" level="INFO">Running command 'ozone sh bucket create 01507-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:21:00.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:21:00.941" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:20:53.027" endtime="20211019 06:21:00.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:21:00.943" level="INFO"/>
<status status="PASS" starttime="20211019 06:21:00.942" endtime="20211019 06:21:00.943"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:21:00.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:21:00.943" endtime="20211019 06:21:00.944"/>
</kw>
<status status="PASS" starttime="20211019 06:20:53.027" endtime="20211019 06:21:00.945"/>
</kw>
<msg timestamp="20211019 06:21:00.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:20:53.023" endtime="20211019 06:21:00.945"/>
</kw>
<status status="PASS" starttime="20211019 06:20:53.022" endtime="20211019 06:21:00.945"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:21:00.951" level="INFO">Running command 'ozone sh key put 01507-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:24:12.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:24:12.180" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:21:00.947" endtime="20211019 06:24:12.180"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:24:12.181" level="INFO"/>
<status status="PASS" starttime="20211019 06:24:12.181" endtime="20211019 06:24:12.182"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:24:12.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:24:12.182" endtime="20211019 06:24:12.182"/>
</kw>
<status status="PASS" starttime="20211019 06:21:00.947" endtime="20211019 06:24:12.183"/>
</kw>
<msg timestamp="20211019 06:24:12.183" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:21:00.946" endtime="20211019 06:24:12.183"/>
</kw>
<status status="PASS" starttime="20211019 06:21:00.946" endtime="20211019 06:24:12.183"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:24:12.188" level="INFO">Running command 'ozone sh bucket create 01507-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:24:19.924" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:24:19.924" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:24:12.185" endtime="20211019 06:24:19.924"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:24:19.926" level="INFO"/>
<status status="PASS" starttime="20211019 06:24:19.925" endtime="20211019 06:24:19.926"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:24:19.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:24:19.926" endtime="20211019 06:24:19.927"/>
</kw>
<status status="PASS" starttime="20211019 06:24:12.185" endtime="20211019 06:24:19.927"/>
</kw>
<msg timestamp="20211019 06:24:19.927" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:24:12.184" endtime="20211019 06:24:19.927"/>
</kw>
<status status="PASS" starttime="20211019 06:24:12.183" endtime="20211019 06:24:19.927"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:24:19.935" level="INFO">Running command 'ozone sh bucket link 01507-source/readable-bucket 01507-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:24:26.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:24:26.657" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:24:19.929" endtime="20211019 06:24:26.657"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:24:26.658" level="INFO"/>
<status status="PASS" starttime="20211019 06:24:26.657" endtime="20211019 06:24:26.658"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:24:26.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:24:26.658" endtime="20211019 06:24:26.659"/>
</kw>
<status status="PASS" starttime="20211019 06:24:19.929" endtime="20211019 06:24:26.659"/>
</kw>
<msg timestamp="20211019 06:24:26.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:24:19.928" endtime="20211019 06:24:26.659"/>
</kw>
<status status="PASS" starttime="20211019 06:24:19.928" endtime="20211019 06:24:26.659"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:24:26.664" level="INFO">Running command 'ozone sh bucket link 01507-source/readable-bucket 01507-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:24:34.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:24:34.226" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:24:26.661" endtime="20211019 06:24:34.226"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:24:34.228" level="INFO"/>
<status status="PASS" starttime="20211019 06:24:34.227" endtime="20211019 06:24:34.228"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:24:34.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:24:34.228" endtime="20211019 06:24:34.228"/>
</kw>
<status status="PASS" starttime="20211019 06:24:26.661" endtime="20211019 06:24:34.229"/>
</kw>
<msg timestamp="20211019 06:24:34.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:24:26.660" endtime="20211019 06:24:34.229"/>
</kw>
<status status="PASS" starttime="20211019 06:24:26.660" endtime="20211019 06:24:34.230"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:24:34.237" level="INFO">Running command 'ozone sh bucket link 01507-source/unreadable-bucket 01507-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:24:41.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:24:41.955" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:24:34.233" endtime="20211019 06:24:41.955"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:24:41.956" level="INFO"/>
<status status="PASS" starttime="20211019 06:24:41.955" endtime="20211019 06:24:41.956"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:24:41.957" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:24:41.956" endtime="20211019 06:24:41.957"/>
</kw>
<status status="PASS" starttime="20211019 06:24:34.232" endtime="20211019 06:24:41.957"/>
</kw>
<msg timestamp="20211019 06:24:41.957" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:24:34.231" endtime="20211019 06:24:41.957"/>
</kw>
<status status="PASS" starttime="20211019 06:24:34.230" endtime="20211019 06:24:41.958"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:24:41.962" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 01507-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:24:47.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:24:47.578" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211019 06:24:41.959" endtime="20211019 06:24:47.578"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:24:47.580" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211019 06:24:47.579" endtime="20211019 06:24:47.580"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:24:47.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:24:47.580" endtime="20211019 06:24:47.581"/>
</kw>
<status status="PASS" starttime="20211019 06:24:41.959" endtime="20211019 06:24:47.581"/>
</kw>
<msg timestamp="20211019 06:24:47.581" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:24:41.959" endtime="20211019 06:24:47.581"/>
</kw>
<status status="PASS" starttime="20211019 06:24:41.958" endtime="20211019 06:24:47.582"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:24:47.586" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 01507-source 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:24:54.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:24:54.664" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211019 06:24:47.583" endtime="20211019 06:24:54.664"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:24:54.665" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211019 06:24:54.664" endtime="20211019 06:24:54.665"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:24:54.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:24:54.665" endtime="20211019 06:24:54.666"/>
</kw>
<status status="PASS" starttime="20211019 06:24:47.583" endtime="20211019 06:24:54.666"/>
</kw>
<msg timestamp="20211019 06:24:54.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:24:47.582" endtime="20211019 06:24:54.666"/>
</kw>
<status status="PASS" starttime="20211019 06:24:47.582" endtime="20211019 06:24:54.667"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:24:54.671" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 01507-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:25:00.760" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:25:00.760" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211019 06:24:54.669" endtime="20211019 06:25:00.760"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:25:00.761" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211019 06:25:00.761" endtime="20211019 06:25:00.761"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:25:00.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:25:00.762" endtime="20211019 06:25:00.762"/>
</kw>
<status status="PASS" starttime="20211019 06:24:54.668" endtime="20211019 06:25:00.763"/>
</kw>
<msg timestamp="20211019 06:25:00.763" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:24:54.668" endtime="20211019 06:25:00.763"/>
</kw>
<status status="PASS" starttime="20211019 06:24:54.667" endtime="20211019 06:25:00.763"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:25:00.767" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 01507-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:25:08.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:25:08.655" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211019 06:25:00.765" endtime="20211019 06:25:08.655"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:25:08.657" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211019 06:25:08.656" endtime="20211019 06:25:08.657"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:25:08.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:25:08.657" endtime="20211019 06:25:08.657"/>
</kw>
<status status="PASS" starttime="20211019 06:25:00.764" endtime="20211019 06:25:08.658"/>
</kw>
<msg timestamp="20211019 06:25:08.658" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:25:00.764" endtime="20211019 06:25:08.658"/>
</kw>
<status status="PASS" starttime="20211019 06:25:00.763" endtime="20211019 06:25:08.658"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:25:08.662" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 01507-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:25:16.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:25:16.793" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211019 06:25:08.660" endtime="20211019 06:25:16.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:25:16.794" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211019 06:25:16.793" endtime="20211019 06:25:16.794"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:25:16.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:25:16.794" endtime="20211019 06:25:16.795"/>
</kw>
<status status="PASS" starttime="20211019 06:25:08.659" endtime="20211019 06:25:16.795"/>
</kw>
<msg timestamp="20211019 06:25:16.795" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:25:08.659" endtime="20211019 06:25:16.795"/>
</kw>
<status status="PASS" starttime="20211019 06:25:08.659" endtime="20211019 06:25:16.796"/>
</kw>
<status status="PASS" starttime="20211019 06:20:53.022" endtime="20211019 06:25:16.796"/>
</kw>
<status status="PASS" starttime="20211019 06:20:53.020" endtime="20211019 06:25:16.796"/>
</kw>
<status status="PASS" starttime="20211019 06:20:40.165" endtime="20211019 06:25:16.796"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:25:16.805" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:25:16.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:25:16.810" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211019 06:25:16.801" endtime="20211019 06:25:16.810"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:25:16.812" level="INFO">scm</msg>
<status status="PASS" starttime="20211019 06:25:16.811" endtime="20211019 06:25:16.812"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:25:16.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:25:16.812" endtime="20211019 06:25:16.814"/>
</kw>
<status status="PASS" starttime="20211019 06:25:16.801" endtime="20211019 06:25:16.814"/>
</kw>
<msg timestamp="20211019 06:25:16.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:25:16.800" endtime="20211019 06:25:16.815"/>
</kw>
<msg timestamp="20211019 06:25:16.815" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211019 06:25:16.799" endtime="20211019 06:25:16.815"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211019 06:25:16.819" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211019 06:25:16.816" endtime="20211019 06:25:16.820"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:25:16.828" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:25:16.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:25:16.880" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:25:16.825" endtime="20211019 06:25:16.880"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:25:16.881" level="INFO"/>
<status status="PASS" starttime="20211019 06:25:16.880" endtime="20211019 06:25:16.881"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:25:16.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:25:16.882" endtime="20211019 06:25:16.882"/>
</kw>
<status status="PASS" starttime="20211019 06:25:16.824" endtime="20211019 06:25:16.883"/>
</kw>
<msg timestamp="20211019 06:25:16.883" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:25:16.823" endtime="20211019 06:25:16.883"/>
</kw>
<status status="PASS" starttime="20211019 06:25:16.821" endtime="20211019 06:25:16.884"/>
</kw>
<status status="PASS" starttime="20211019 06:25:16.820" endtime="20211019 06:25:16.884"/>
</kw>
<status status="PASS" starttime="20211019 06:25:16.799" endtime="20211019 06:25:16.884"/>
</kw>
<status status="PASS" starttime="20211019 06:25:16.798" endtime="20211019 06:25:16.884"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:25:16.889" level="INFO">Running command 'ozone sh bucket link 01507-source/no-such-bucket 01507-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:25:24.614" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:25:24.614" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:25:16.886" endtime="20211019 06:25:24.615"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:25:24.616" level="INFO"/>
<status status="PASS" starttime="20211019 06:25:24.616" endtime="20211019 06:25:24.617"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:25:24.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:25:24.617" endtime="20211019 06:25:24.617"/>
</kw>
<status status="PASS" starttime="20211019 06:25:16.886" endtime="20211019 06:25:24.618"/>
</kw>
<msg timestamp="20211019 06:25:24.618" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:25:16.885" endtime="20211019 06:25:24.618"/>
</kw>
<status status="PASS" starttime="20211019 06:25:16.885" endtime="20211019 06:25:24.618"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:25:24.622" level="INFO">Running command 'ozone sh key list 01507-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:25:32.205" level="INFO">${rc} = 255</msg>
<msg timestamp="20211019 06:25:32.206" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20211019 06:25:24.619" endtime="20211019 06:25:32.206"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:25:32.209" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20211019 06:25:32.207" endtime="20211019 06:25:32.209"/>
</kw>
<msg timestamp="20211019 06:25:32.210" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20211019 06:25:24.619" endtime="20211019 06:25:32.210"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 06:25:32.210" endtime="20211019 06:25:32.212"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211019 06:25:16.797" endtime="20211019 06:25:32.212"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:25:32.229" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:25:32.235" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:25:32.235" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211019 06:25:32.223" endtime="20211019 06:25:32.235"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:25:32.238" level="INFO">scm</msg>
<status status="PASS" starttime="20211019 06:25:32.237" endtime="20211019 06:25:32.238"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:25:32.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:25:32.238" endtime="20211019 06:25:32.240"/>
</kw>
<status status="PASS" starttime="20211019 06:25:32.222" endtime="20211019 06:25:32.241"/>
</kw>
<msg timestamp="20211019 06:25:32.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:25:32.221" endtime="20211019 06:25:32.241"/>
</kw>
<msg timestamp="20211019 06:25:32.242" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211019 06:25:32.219" endtime="20211019 06:25:32.242"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211019 06:25:32.243" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211019 06:25:32.242" endtime="20211019 06:25:32.244"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:25:32.250" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:25:32.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:25:32.258" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:25:32.247" endtime="20211019 06:25:32.258"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:25:32.260" level="INFO"/>
<status status="PASS" starttime="20211019 06:25:32.259" endtime="20211019 06:25:32.260"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:25:32.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:25:32.261" endtime="20211019 06:25:32.262"/>
</kw>
<status status="PASS" starttime="20211019 06:25:32.246" endtime="20211019 06:25:32.262"/>
</kw>
<msg timestamp="20211019 06:25:32.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:25:32.246" endtime="20211019 06:25:32.263"/>
</kw>
<status status="PASS" starttime="20211019 06:25:32.245" endtime="20211019 06:25:32.263"/>
</kw>
<status status="PASS" starttime="20211019 06:25:32.244" endtime="20211019 06:25:32.264"/>
</kw>
<status status="PASS" starttime="20211019 06:25:32.218" endtime="20211019 06:25:32.264"/>
</kw>
<status status="PASS" starttime="20211019 06:25:32.216" endtime="20211019 06:25:32.264"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:25:32.270" level="INFO">Running command 'ozone sh bucket link 01507-source/bucket1 01507-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:25:39.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:25:39.581" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:25:32.267" endtime="20211019 06:25:39.581"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:25:39.583" level="INFO"/>
<status status="PASS" starttime="20211019 06:25:39.582" endtime="20211019 06:25:39.583"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:25:39.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:25:39.584" endtime="20211019 06:25:39.585"/>
</kw>
<status status="PASS" starttime="20211019 06:25:32.267" endtime="20211019 06:25:39.586"/>
</kw>
<msg timestamp="20211019 06:25:39.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:25:32.267" endtime="20211019 06:25:39.586"/>
</kw>
<status status="PASS" starttime="20211019 06:25:32.265" endtime="20211019 06:25:39.587"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:25:39.593" level="INFO">Running command 'ozone sh bucket create 01507-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:25:45.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:25:45.355" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:25:39.590" endtime="20211019 06:25:45.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:25:45.358" level="INFO"/>
<status status="PASS" starttime="20211019 06:25:45.356" endtime="20211019 06:25:45.358"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:25:45.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:25:45.359" endtime="20211019 06:25:45.361"/>
</kw>
<status status="PASS" starttime="20211019 06:25:39.589" endtime="20211019 06:25:45.361"/>
</kw>
<msg timestamp="20211019 06:25:45.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:25:39.588" endtime="20211019 06:25:45.362"/>
</kw>
<status status="PASS" starttime="20211019 06:25:39.587" endtime="20211019 06:25:45.363"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:25:45.372" level="INFO">Running command 'ozone sh key put 01507-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:27:32.215" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20211019 06:25:45.368" endtime="20211019 06:27:32.215"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211019 06:27:32.216" endtime="20211019 06:27:32.216"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211019 06:27:32.217" endtime="20211019 06:27:32.217"/>
</kw>
<status status="FAIL" starttime="20211019 06:25:45.366" endtime="20211019 06:27:32.217"/>
</kw>
<msg timestamp="20211019 06:27:32.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211019 06:25:45.365" endtime="20211019 06:27:32.217"/>
</kw>
<status status="FAIL" starttime="20211019 06:25:45.364" endtime="20211019 06:27:32.217"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<status status="NOT RUN" starttime="20211019 06:27:32.218" endtime="20211019 06:27:32.218"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211019 06:25:32.214" endtime="20211019 06:27:32.218">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:27:32.230" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:27:32.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:27:32.233" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211019 06:27:32.223" endtime="20211019 06:27:32.233"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:27:32.234" level="INFO">scm</msg>
<status status="PASS" starttime="20211019 06:27:32.233" endtime="20211019 06:27:32.234"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:27:32.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:27:32.234" endtime="20211019 06:27:32.235"/>
</kw>
<status status="PASS" starttime="20211019 06:27:32.222" endtime="20211019 06:27:32.236"/>
</kw>
<msg timestamp="20211019 06:27:32.236" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:27:32.222" endtime="20211019 06:27:32.236"/>
</kw>
<msg timestamp="20211019 06:27:32.236" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211019 06:27:32.221" endtime="20211019 06:27:32.236"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211019 06:27:32.237" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211019 06:27:32.236" endtime="20211019 06:27:32.237"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:27:32.243" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:27:32.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:27:32.252" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:27:32.241" endtime="20211019 06:27:32.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:27:32.253" level="INFO"/>
<status status="PASS" starttime="20211019 06:27:32.252" endtime="20211019 06:27:32.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:27:32.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:27:32.254" endtime="20211019 06:27:32.255"/>
</kw>
<status status="PASS" starttime="20211019 06:27:32.240" endtime="20211019 06:27:32.255"/>
</kw>
<msg timestamp="20211019 06:27:32.255" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:27:32.239" endtime="20211019 06:27:32.256"/>
</kw>
<status status="PASS" starttime="20211019 06:27:32.238" endtime="20211019 06:27:32.256"/>
</kw>
<status status="PASS" starttime="20211019 06:27:32.237" endtime="20211019 06:27:32.256"/>
</kw>
<status status="PASS" starttime="20211019 06:27:32.221" endtime="20211019 06:27:32.256"/>
</kw>
<status status="PASS" starttime="20211019 06:27:32.220" endtime="20211019 06:27:32.256"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:27:32.261" level="INFO">Running command 'ozone sh key put 01507-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:29:32.221" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20211019 06:27:32.258" endtime="20211019 06:29:32.221"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211019 06:29:32.222" endtime="20211019 06:29:32.222"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211019 06:29:32.222" endtime="20211019 06:29:32.222"/>
</kw>
<status status="FAIL" starttime="20211019 06:27:32.258" endtime="20211019 06:29:32.223"/>
</kw>
<msg timestamp="20211019 06:29:32.223" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211019 06:27:32.257" endtime="20211019 06:29:32.223"/>
</kw>
<status status="FAIL" starttime="20211019 06:27:32.257" endtime="20211019 06:29:32.223"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211019 06:29:32.223" endtime="20211019 06:29:32.223"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211019 06:27:32.219" endtime="20211019 06:29:32.224">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:29:32.231" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:29:32.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:29:32.237" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211019 06:29:32.229" endtime="20211019 06:29:32.237"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:29:32.240" level="INFO">scm</msg>
<status status="PASS" starttime="20211019 06:29:32.238" endtime="20211019 06:29:32.240"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:29:32.241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:29:32.241" endtime="20211019 06:29:32.242"/>
</kw>
<status status="PASS" starttime="20211019 06:29:32.228" endtime="20211019 06:29:32.242"/>
</kw>
<msg timestamp="20211019 06:29:32.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:29:32.228" endtime="20211019 06:29:32.243"/>
</kw>
<msg timestamp="20211019 06:29:32.243" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211019 06:29:32.227" endtime="20211019 06:29:32.243"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211019 06:29:32.245" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211019 06:29:32.244" endtime="20211019 06:29:32.246"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:29:32.252" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:29:32.263" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:29:32.263" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:29:32.250" endtime="20211019 06:29:32.263"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:29:32.265" level="INFO"/>
<status status="PASS" starttime="20211019 06:29:32.264" endtime="20211019 06:29:32.265"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:29:32.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:29:32.265" endtime="20211019 06:29:32.266"/>
</kw>
<status status="PASS" starttime="20211019 06:29:32.249" endtime="20211019 06:29:32.267"/>
</kw>
<msg timestamp="20211019 06:29:32.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:29:32.248" endtime="20211019 06:29:32.267"/>
</kw>
<status status="PASS" starttime="20211019 06:29:32.247" endtime="20211019 06:29:32.268"/>
</kw>
<status status="PASS" starttime="20211019 06:29:32.246" endtime="20211019 06:29:32.268"/>
</kw>
<status status="PASS" starttime="20211019 06:29:32.226" endtime="20211019 06:29:32.268"/>
</kw>
<status status="PASS" starttime="20211019 06:29:32.226" endtime="20211019 06:29:32.268"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:29:32.275" level="INFO">Running command 'ozone sh key list 01507-target/link1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:29:38.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:29:38.970" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20211019 06:29:32.272" endtime="20211019 06:29:38.970"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:29:38.972" level="INFO">key1</msg>
<status status="PASS" starttime="20211019 06:29:38.971" endtime="20211019 06:29:38.972"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:29:38.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:29:38.972" endtime="20211019 06:29:38.973"/>
</kw>
<status status="PASS" starttime="20211019 06:29:32.271" endtime="20211019 06:29:38.974"/>
</kw>
<msg timestamp="20211019 06:29:38.974" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:29:32.270" endtime="20211019 06:29:38.974"/>
</kw>
<msg timestamp="20211019 06:29:38.974" level="INFO">${target_list} = key1</msg>
<status status="PASS" starttime="20211019 06:29:32.269" endtime="20211019 06:29:38.974"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:29:38.986" level="INFO">Running command 'ozone sh key list 01507-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:29:46.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:29:46.212" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20211019 06:29:38.976" endtime="20211019 06:29:46.212"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:29:46.213" level="INFO">key1</msg>
<status status="PASS" starttime="20211019 06:29:46.212" endtime="20211019 06:29:46.213"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:29:46.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:29:46.213" endtime="20211019 06:29:46.214"/>
</kw>
<status status="PASS" starttime="20211019 06:29:38.975" endtime="20211019 06:29:46.215"/>
</kw>
<msg timestamp="20211019 06:29:46.215" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:29:38.975" endtime="20211019 06:29:46.215"/>
</kw>
<msg timestamp="20211019 06:29:46.216" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20211019 06:29:38.974" endtime="20211019 06:29:46.216"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211019 06:29:46.216" endtime="20211019 06:29:46.217"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 06:29:46.217" endtime="20211019 06:29:46.218"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20211019 06:29:46.219" level="FAIL">'key1' does not contain 'key2'</msg>
<status status="FAIL" starttime="20211019 06:29:46.218" endtime="20211019 06:29:46.219"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211019 06:29:32.225" endtime="20211019 06:29:46.219">'key1' does not contain 'key2'</status>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:29:46.229" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:29:46.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:29:46.234" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211019 06:29:46.227" endtime="20211019 06:29:46.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:29:46.235" level="INFO">scm</msg>
<status status="PASS" starttime="20211019 06:29:46.235" endtime="20211019 06:29:46.235"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:29:46.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:29:46.236" endtime="20211019 06:29:46.237"/>
</kw>
<status status="PASS" starttime="20211019 06:29:46.226" endtime="20211019 06:29:46.237"/>
</kw>
<msg timestamp="20211019 06:29:46.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:29:46.225" endtime="20211019 06:29:46.237"/>
</kw>
<msg timestamp="20211019 06:29:46.238" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211019 06:29:46.225" endtime="20211019 06:29:46.238"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211019 06:29:46.239" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211019 06:29:46.238" endtime="20211019 06:29:46.239"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:29:46.245" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:29:46.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:29:46.255" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:29:46.243" endtime="20211019 06:29:46.255"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:29:46.256" level="INFO"/>
<status status="PASS" starttime="20211019 06:29:46.255" endtime="20211019 06:29:46.257"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:29:46.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:29:46.257" endtime="20211019 06:29:46.258"/>
</kw>
<status status="PASS" starttime="20211019 06:29:46.241" endtime="20211019 06:29:46.258"/>
</kw>
<msg timestamp="20211019 06:29:46.258" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:29:46.241" endtime="20211019 06:29:46.259"/>
</kw>
<status status="PASS" starttime="20211019 06:29:46.240" endtime="20211019 06:29:46.259"/>
</kw>
<status status="PASS" starttime="20211019 06:29:46.239" endtime="20211019 06:29:46.259"/>
</kw>
<status status="PASS" starttime="20211019 06:29:46.223" endtime="20211019 06:29:46.259"/>
</kw>
<status status="PASS" starttime="20211019 06:29:46.222" endtime="20211019 06:29:46.259"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:29:46.264" level="INFO">Running command 'ozone sh key delete 01507-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:29:53.792" level="INFO">${rc} = 255</msg>
<msg timestamp="20211019 06:29:53.792" level="INFO">${output} = KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20211019 06:29:46.262" endtime="20211019 06:29:53.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:29:53.794" level="INFO">KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20211019 06:29:53.793" endtime="20211019 06:29:53.794"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:29:53.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20211019 06:29:53.795" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20211019 06:29:53.794" endtime="20211019 06:29:53.795"/>
</kw>
<status status="FAIL" starttime="20211019 06:29:46.261" endtime="20211019 06:29:53.796"/>
</kw>
<msg timestamp="20211019 06:29:53.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211019 06:29:46.260" endtime="20211019 06:29:53.796"/>
</kw>
<status status="FAIL" starttime="20211019 06:29:46.260" endtime="20211019 06:29:53.796"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211019 06:29:53.797" endtime="20211019 06:29:53.797"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211019 06:29:53.797" endtime="20211019 06:29:53.797"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211019 06:29:46.220" endtime="20211019 06:29:53.798">255 != 0</status>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:29:53.806" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:29:53.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:29:53.812" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211019 06:29:53.803" endtime="20211019 06:29:53.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:29:53.814" level="INFO">scm</msg>
<status status="PASS" starttime="20211019 06:29:53.813" endtime="20211019 06:29:53.814"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:29:53.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:29:53.815" endtime="20211019 06:29:53.816"/>
</kw>
<status status="PASS" starttime="20211019 06:29:53.802" endtime="20211019 06:29:53.817"/>
</kw>
<msg timestamp="20211019 06:29:53.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:29:53.802" endtime="20211019 06:29:53.817"/>
</kw>
<msg timestamp="20211019 06:29:53.818" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211019 06:29:53.802" endtime="20211019 06:29:53.818"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211019 06:29:53.819" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211019 06:29:53.818" endtime="20211019 06:29:53.819"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:29:53.825" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:29:53.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:29:53.838" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:29:53.823" endtime="20211019 06:29:53.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:29:53.840" level="INFO"/>
<status status="PASS" starttime="20211019 06:29:53.839" endtime="20211019 06:29:53.841"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:29:53.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:29:53.841" endtime="20211019 06:29:53.842"/>
</kw>
<status status="PASS" starttime="20211019 06:29:53.822" endtime="20211019 06:29:53.843"/>
</kw>
<msg timestamp="20211019 06:29:53.843" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:29:53.821" endtime="20211019 06:29:53.843"/>
</kw>
<status status="PASS" starttime="20211019 06:29:53.820" endtime="20211019 06:29:53.843"/>
</kw>
<status status="PASS" starttime="20211019 06:29:53.820" endtime="20211019 06:29:53.843"/>
</kw>
<status status="PASS" starttime="20211019 06:29:53.801" endtime="20211019 06:29:53.844"/>
</kw>
<status status="PASS" starttime="20211019 06:29:53.801" endtime="20211019 06:29:53.844"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:29:53.850" level="INFO">Running command 'ozone sh bucket list 01507-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:30:01.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:30:01.980" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "01507-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "202...</msg>
<status status="PASS" starttime="20211019 06:29:53.848" endtime="20211019 06:30:01.980"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:30:01.982" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "01507-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-19T06:25:24.488Z",
  "modificationTime" : "2021-10-19T06:25:24.488Z",
  "sourceVolume" : "01507-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "01507-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-19T06:24:41.873Z",
  "modificationTime" : "2021-10-19T06:25:16.422Z",
  "sourceVolume" : "01507-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "01507-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-19T06:25:39.412Z",
  "modificationTime" : "2021-10-19T06:25:39.412Z",
  "sourceVolume" : "01507-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "01507-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-19T06:24:26.573Z",
  "modificationTime" : "2021-10-19T06:25:08.483Z",
  "sourceVolume" : "01507-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "01507-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-19T06:24:33.945Z",
  "modificationTime" : "2021-10-19T06:24:33.945Z",
  "sourceVolume" : "01507-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
} ]</msg>
<status status="PASS" starttime="20211019 06:30:01.981" endtime="20211019 06:30:01.982"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:30:01.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:30:01.983" endtime="20211019 06:30:01.984"/>
</kw>
<status status="PASS" starttime="20211019 06:29:53.847" endtime="20211019 06:30:01.985"/>
</kw>
<msg timestamp="20211019 06:30:01.985" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:29:53.846" endtime="20211019 06:30:01.985"/>
</kw>
<msg timestamp="20211019 06:30:01.986" level="INFO">${result} = [ {
  "metadata" : { },
  "volumeName" : "01507-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "202...</msg>
<status status="PASS" starttime="20211019 06:29:53.845" endtime="20211019 06:30:01.986"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 06:30:01.987" endtime="20211019 06:30:01.988"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 06:30:01.988" endtime="20211019 06:30:01.989"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211019 06:29:53.799" endtime="20211019 06:30:01.990"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:30:02.005" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:30:02.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:30:02.012" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211019 06:30:02.002" endtime="20211019 06:30:02.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:30:02.013" level="INFO">scm</msg>
<status status="PASS" starttime="20211019 06:30:02.012" endtime="20211019 06:30:02.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:30:02.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:30:02.014" endtime="20211019 06:30:02.014"/>
</kw>
<status status="PASS" starttime="20211019 06:30:02.001" endtime="20211019 06:30:02.015"/>
</kw>
<msg timestamp="20211019 06:30:02.015" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:30:02.000" endtime="20211019 06:30:02.015"/>
</kw>
<msg timestamp="20211019 06:30:02.016" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211019 06:30:01.999" endtime="20211019 06:30:02.016"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211019 06:30:02.017" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211019 06:30:02.016" endtime="20211019 06:30:02.017"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:30:02.023" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:30:02.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:30:02.033" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:30:02.021" endtime="20211019 06:30:02.033"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:30:02.034" level="INFO"/>
<status status="PASS" starttime="20211019 06:30:02.033" endtime="20211019 06:30:02.034"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:30:02.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:30:02.035" endtime="20211019 06:30:02.035"/>
</kw>
<status status="PASS" starttime="20211019 06:30:02.020" endtime="20211019 06:30:02.036"/>
</kw>
<msg timestamp="20211019 06:30:02.036" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:30:02.019" endtime="20211019 06:30:02.036"/>
</kw>
<status status="PASS" starttime="20211019 06:30:02.018" endtime="20211019 06:30:02.037"/>
</kw>
<status status="PASS" starttime="20211019 06:30:02.018" endtime="20211019 06:30:02.037"/>
</kw>
<status status="PASS" starttime="20211019 06:30:01.998" endtime="20211019 06:30:02.037"/>
</kw>
<status status="PASS" starttime="20211019 06:30:01.993" endtime="20211019 06:30:02.037"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:30:02.043" level="INFO">Running command 'ozone sh bucket info 01507-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:30:09.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:30:09.423" level="INFO">${output} = {
  "volumeName" : "01507-target",
  "bucketName" : "link1",
  "sourceVolume" : "01507-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-10-19T06:25:39.412Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20211019 06:30:02.040" endtime="20211019 06:30:09.424"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:30:09.426" level="INFO">{
  "volumeName" : "01507-target",
  "bucketName" : "link1",
  "sourceVolume" : "01507-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-10-19T06:25:39.412Z",
  "modificationTime" : "2021-10-19T06:25:39.412Z"
}</msg>
<status status="PASS" starttime="20211019 06:30:09.425" endtime="20211019 06:30:09.426"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:30:09.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:30:09.427" endtime="20211019 06:30:09.428"/>
</kw>
<status status="PASS" starttime="20211019 06:30:02.039" endtime="20211019 06:30:09.429"/>
</kw>
<msg timestamp="20211019 06:30:09.429" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:30:02.038" endtime="20211019 06:30:09.429"/>
</kw>
<msg timestamp="20211019 06:30:09.430" level="INFO">${result} = {
  "volumeName" : "01507-target",
  "bucketName" : "link1",
  "sourceVolume" : "01507-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-10-19T06:25:39.412Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20211019 06:30:02.038" endtime="20211019 06:30:09.430"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${source}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 06:30:09.430" endtime="20211019 06:30:09.431"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bucket1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 06:30:09.431" endtime="20211019 06:30:09.431"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${target}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 06:30:09.432" endtime="20211019 06:30:09.433"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 06:30:09.433" endtime="20211019 06:30:09.434"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>modificationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 06:30:09.434" endtime="20211019 06:30:09.435"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 06:30:09.435" endtime="20211019 06:30:09.435"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>metadata</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 06:30:09.436" endtime="20211019 06:30:09.436"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211019 06:30:01.991" endtime="20211019 06:30:09.437"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:30:09.446" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:30:09.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:30:09.452" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211019 06:30:09.444" endtime="20211019 06:30:09.452"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:30:09.454" level="INFO">scm</msg>
<status status="PASS" starttime="20211019 06:30:09.453" endtime="20211019 06:30:09.455"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:30:09.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:30:09.455" endtime="20211019 06:30:09.456"/>
</kw>
<status status="PASS" starttime="20211019 06:30:09.443" endtime="20211019 06:30:09.456"/>
</kw>
<msg timestamp="20211019 06:30:09.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:30:09.442" endtime="20211019 06:30:09.457"/>
</kw>
<msg timestamp="20211019 06:30:09.457" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211019 06:30:09.442" endtime="20211019 06:30:09.457"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211019 06:30:09.458" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211019 06:30:09.458" endtime="20211019 06:30:09.459"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:30:09.465" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:30:09.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:30:09.474" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:30:09.462" endtime="20211019 06:30:09.474"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:30:09.476" level="INFO"/>
<status status="PASS" starttime="20211019 06:30:09.475" endtime="20211019 06:30:09.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:30:09.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:30:09.476" endtime="20211019 06:30:09.478"/>
</kw>
<status status="PASS" starttime="20211019 06:30:09.461" endtime="20211019 06:30:09.478"/>
</kw>
<msg timestamp="20211019 06:30:09.478" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:30:09.460" endtime="20211019 06:30:09.479"/>
</kw>
<status status="PASS" starttime="20211019 06:30:09.459" endtime="20211019 06:30:09.479"/>
</kw>
<status status="PASS" starttime="20211019 06:30:09.459" endtime="20211019 06:30:09.479"/>
</kw>
<status status="PASS" starttime="20211019 06:30:09.441" endtime="20211019 06:30:09.480"/>
</kw>
<status status="PASS" starttime="20211019 06:30:09.440" endtime="20211019 06:30:09.480"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:30:09.485" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 01507-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:30:17.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:30:17.143" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211019 06:30:09.482" endtime="20211019 06:30:17.143"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:30:17.147" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211019 06:30:17.144" endtime="20211019 06:30:17.147"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:30:17.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:30:17.148" endtime="20211019 06:30:17.150"/>
</kw>
<status status="PASS" starttime="20211019 06:30:09.481" endtime="20211019 06:30:17.151"/>
</kw>
<msg timestamp="20211019 06:30:17.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:30:09.481" endtime="20211019 06:30:17.152"/>
</kw>
<status status="PASS" starttime="20211019 06:30:09.480" endtime="20211019 06:30:17.153"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:30:17.166" level="INFO">Running command 'ozone sh bucket getacl 01507-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:30:25.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:30:25.919" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20211019 06:30:17.162" endtime="20211019 06:30:25.920"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:30:25.922" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20211019 06:30:25.921" endtime="20211019 06:30:25.922"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:30:25.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:30:25.922" endtime="20211019 06:30:25.924"/>
</kw>
<status status="PASS" starttime="20211019 06:30:17.161" endtime="20211019 06:30:25.925"/>
</kw>
<msg timestamp="20211019 06:30:25.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:30:17.160" endtime="20211019 06:30:25.925"/>
</kw>
<msg timestamp="20211019 06:30:25.926" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20211019 06:30:17.156" endtime="20211019 06:30:25.926"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211019 06:30:25.926" endtime="20211019 06:30:25.928"/>
</kw>
<status status="PASS" starttime="20211019 06:30:17.154" endtime="20211019 06:30:25.928"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:30:25.940" level="INFO">Running command 'ozone sh bucket getacl 01507-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:30:33.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:30:33.559" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:30:25.937" endtime="20211019 06:30:33.559"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:30:33.564" level="INFO"/>
<status status="PASS" starttime="20211019 06:30:33.560" endtime="20211019 06:30:33.564"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:30:33.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:30:33.565" endtime="20211019 06:30:33.566"/>
</kw>
<status status="PASS" starttime="20211019 06:30:25.935" endtime="20211019 06:30:33.566"/>
</kw>
<msg timestamp="20211019 06:30:33.567" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:30:25.933" endtime="20211019 06:30:33.567"/>
</kw>
<msg timestamp="20211019 06:30:33.571" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20211019 06:30:25.931" endtime="20211019 06:30:33.571"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211019 06:30:33.571" endtime="20211019 06:30:33.572"/>
</kw>
<status status="PASS" starttime="20211019 06:30:25.928" endtime="20211019 06:30:33.572"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:30:33.580" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 01507-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:30:40.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:30:40.357" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211019 06:30:33.576" endtime="20211019 06:30:40.357"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:30:40.358" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211019 06:30:40.357" endtime="20211019 06:30:40.358"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:30:40.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:30:40.359" endtime="20211019 06:30:40.359"/>
</kw>
<status status="PASS" starttime="20211019 06:30:33.575" endtime="20211019 06:30:40.360"/>
</kw>
<msg timestamp="20211019 06:30:40.360" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:30:33.574" endtime="20211019 06:30:40.360"/>
</kw>
<status status="PASS" starttime="20211019 06:30:33.573" endtime="20211019 06:30:40.361"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:30:40.374" level="INFO">Running command 'ozone sh bucket getacl 01507-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:30:48.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:30:48.299" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:30:40.370" endtime="20211019 06:30:48.300"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:30:48.302" level="INFO"/>
<status status="PASS" starttime="20211019 06:30:48.300" endtime="20211019 06:30:48.302"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:30:48.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:30:48.302" endtime="20211019 06:30:48.303"/>
</kw>
<status status="PASS" starttime="20211019 06:30:40.368" endtime="20211019 06:30:48.303"/>
</kw>
<msg timestamp="20211019 06:30:48.303" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:30:40.368" endtime="20211019 06:30:48.303"/>
</kw>
<msg timestamp="20211019 06:30:48.304" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20211019 06:30:40.366" endtime="20211019 06:30:48.304"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211019 06:30:48.305" endtime="20211019 06:30:48.305"/>
</kw>
<status status="PASS" starttime="20211019 06:30:40.361" endtime="20211019 06:30:48.306"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:30:48.313" level="INFO">Running command 'ozone sh bucket getacl 01507-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:30:56.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:30:56.208" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20211019 06:30:48.310" endtime="20211019 06:30:56.208"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:30:56.210" level="INFO">READ</msg>
<status status="PASS" starttime="20211019 06:30:56.209" endtime="20211019 06:30:56.210"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:30:56.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:30:56.210" endtime="20211019 06:30:56.211"/>
</kw>
<status status="PASS" starttime="20211019 06:30:48.309" endtime="20211019 06:30:56.211"/>
</kw>
<msg timestamp="20211019 06:30:56.211" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:30:48.308" endtime="20211019 06:30:56.211"/>
</kw>
<msg timestamp="20211019 06:30:56.212" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20211019 06:30:48.307" endtime="20211019 06:30:56.212"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211019 06:30:56.212" endtime="20211019 06:30:56.212"/>
</kw>
<status status="PASS" starttime="20211019 06:30:48.306" endtime="20211019 06:30:56.213"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211019 06:30:09.438" endtime="20211019 06:30:56.213"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:30:56.221" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:30:56.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:30:56.227" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211019 06:30:56.218" endtime="20211019 06:30:56.228"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:30:56.230" level="INFO">scm</msg>
<status status="PASS" starttime="20211019 06:30:56.228" endtime="20211019 06:30:56.230"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:30:56.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:30:56.230" endtime="20211019 06:30:56.231"/>
</kw>
<status status="PASS" starttime="20211019 06:30:56.217" endtime="20211019 06:30:56.231"/>
</kw>
<msg timestamp="20211019 06:30:56.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:30:56.216" endtime="20211019 06:30:56.232"/>
</kw>
<msg timestamp="20211019 06:30:56.232" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211019 06:30:56.216" endtime="20211019 06:30:56.232"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211019 06:30:56.234" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211019 06:30:56.233" endtime="20211019 06:30:56.234"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:30:56.240" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:30:56.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:30:56.299" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:30:56.237" endtime="20211019 06:30:56.299"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:30:56.300" level="INFO"/>
<status status="PASS" starttime="20211019 06:30:56.299" endtime="20211019 06:30:56.300"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:30:56.301" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:30:56.300" endtime="20211019 06:30:56.301"/>
</kw>
<status status="PASS" starttime="20211019 06:30:56.236" endtime="20211019 06:30:56.302"/>
</kw>
<msg timestamp="20211019 06:30:56.302" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:30:56.236" endtime="20211019 06:30:56.302"/>
</kw>
<status status="PASS" starttime="20211019 06:30:56.235" endtime="20211019 06:30:56.302"/>
</kw>
<status status="PASS" starttime="20211019 06:30:56.234" endtime="20211019 06:30:56.302"/>
</kw>
<status status="PASS" starttime="20211019 06:30:56.215" endtime="20211019 06:30:56.302"/>
</kw>
<status status="PASS" starttime="20211019 06:30:56.214" endtime="20211019 06:30:56.302"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:30:56.308" level="INFO">Running command 'ozone sh bucket link 01507-source/bucket2 01507-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:31:03.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:31:03.872" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:30:56.305" endtime="20211019 06:31:03.872"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:31:03.874" level="INFO"/>
<status status="PASS" starttime="20211019 06:31:03.873" endtime="20211019 06:31:03.874"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:31:03.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:31:03.874" endtime="20211019 06:31:03.875"/>
</kw>
<status status="PASS" starttime="20211019 06:30:56.304" endtime="20211019 06:31:03.875"/>
</kw>
<msg timestamp="20211019 06:31:03.875" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:30:56.303" endtime="20211019 06:31:03.875"/>
</kw>
<status status="PASS" starttime="20211019 06:30:56.303" endtime="20211019 06:31:03.876"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:31:03.882" level="INFO">Running command 'ozone sh bucket create 01507-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:31:10.846" level="INFO">${rc} = 255</msg>
<msg timestamp="20211019 06:31:10.846" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211019 06:31:03.877" endtime="20211019 06:31:10.846"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:31:10.848" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211019 06:31:10.847" endtime="20211019 06:31:10.848"/>
</kw>
<msg timestamp="20211019 06:31:10.849" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211019 06:31:03.876" endtime="20211019 06:31:10.849"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 06:31:10.850" endtime="20211019 06:31:10.851"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:31:10.857" level="INFO">Running command 'ozone sh bucket create 01507-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:31:16.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:31:16.807" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:31:10.854" endtime="20211019 06:31:16.807"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:31:16.808" level="INFO"/>
<status status="PASS" starttime="20211019 06:31:16.807" endtime="20211019 06:31:16.808"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:31:16.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:31:16.808" endtime="20211019 06:31:16.809"/>
</kw>
<status status="PASS" starttime="20211019 06:31:10.853" endtime="20211019 06:31:16.809"/>
</kw>
<msg timestamp="20211019 06:31:16.809" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:31:10.852" endtime="20211019 06:31:16.810"/>
</kw>
<status status="PASS" starttime="20211019 06:31:10.851" endtime="20211019 06:31:16.810"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:31:16.813" level="INFO">Running command 'ozone sh bucket link 01507-source/bucket1 01507-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:31:23.625" level="INFO">${rc} = 255</msg>
<msg timestamp="20211019 06:31:23.625" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211019 06:31:16.811" endtime="20211019 06:31:23.626"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:31:23.627" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211019 06:31:23.626" endtime="20211019 06:31:23.627"/>
</kw>
<msg timestamp="20211019 06:31:23.627" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211019 06:31:16.810" endtime="20211019 06:31:23.627"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 06:31:23.628" endtime="20211019 06:31:23.628"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211019 06:30:56.214" endtime="20211019 06:31:23.628"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:31:23.638" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:31:23.643" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:31:23.644" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211019 06:31:23.634" endtime="20211019 06:31:23.644"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:31:23.646" level="INFO">scm</msg>
<status status="PASS" starttime="20211019 06:31:23.645" endtime="20211019 06:31:23.646"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:31:23.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:31:23.646" endtime="20211019 06:31:23.648"/>
</kw>
<status status="PASS" starttime="20211019 06:31:23.633" endtime="20211019 06:31:23.648"/>
</kw>
<msg timestamp="20211019 06:31:23.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:31:23.632" endtime="20211019 06:31:23.649"/>
</kw>
<msg timestamp="20211019 06:31:23.649" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211019 06:31:23.632" endtime="20211019 06:31:23.649"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211019 06:31:23.650" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211019 06:31:23.650" endtime="20211019 06:31:23.650"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:31:23.657" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:31:23.667" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:31:23.667" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:31:23.654" endtime="20211019 06:31:23.667"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:31:23.669" level="INFO"/>
<status status="PASS" starttime="20211019 06:31:23.668" endtime="20211019 06:31:23.670"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:31:23.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:31:23.670" endtime="20211019 06:31:23.671"/>
</kw>
<status status="PASS" starttime="20211019 06:31:23.653" endtime="20211019 06:31:23.672"/>
</kw>
<msg timestamp="20211019 06:31:23.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:31:23.652" endtime="20211019 06:31:23.672"/>
</kw>
<status status="PASS" starttime="20211019 06:31:23.651" endtime="20211019 06:31:23.672"/>
</kw>
<status status="PASS" starttime="20211019 06:31:23.651" endtime="20211019 06:31:23.673"/>
</kw>
<status status="PASS" starttime="20211019 06:31:23.631" endtime="20211019 06:31:23.673"/>
</kw>
<status status="PASS" starttime="20211019 06:31:23.630" endtime="20211019 06:31:23.673"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:31:23.679" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:31:23.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:31:23.684" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:31:23.677" endtime="20211019 06:31:23.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:31:23.686" level="INFO"/>
<status status="PASS" starttime="20211019 06:31:23.685" endtime="20211019 06:31:23.686"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:31:23.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:31:23.686" endtime="20211019 06:31:23.687"/>
</kw>
<status status="PASS" starttime="20211019 06:31:23.677" endtime="20211019 06:31:23.688"/>
</kw>
<msg timestamp="20211019 06:31:23.688" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:31:23.676" endtime="20211019 06:31:23.688"/>
</kw>
<status status="PASS" starttime="20211019 06:31:23.675" endtime="20211019 06:31:23.688"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:31:23.694" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:31:23.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:31:23.699" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211019 06:31:23.691" endtime="20211019 06:31:23.699"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:31:23.700" level="INFO">scm</msg>
<status status="PASS" starttime="20211019 06:31:23.699" endtime="20211019 06:31:23.700"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:31:23.701" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:31:23.700" endtime="20211019 06:31:23.701"/>
</kw>
<status status="PASS" starttime="20211019 06:31:23.691" endtime="20211019 06:31:23.702"/>
</kw>
<msg timestamp="20211019 06:31:23.702" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:31:23.690" endtime="20211019 06:31:23.702"/>
</kw>
<msg timestamp="20211019 06:31:23.702" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211019 06:31:23.690" endtime="20211019 06:31:23.702"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211019 06:31:23.704" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211019 06:31:23.703" endtime="20211019 06:31:23.704"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:31:23.710" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:31:23.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:31:23.719" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:31:23.707" endtime="20211019 06:31:23.719"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:31:23.720" level="INFO"/>
<status status="PASS" starttime="20211019 06:31:23.720" endtime="20211019 06:31:23.721"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:31:23.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:31:23.721" endtime="20211019 06:31:23.722"/>
</kw>
<status status="PASS" starttime="20211019 06:31:23.706" endtime="20211019 06:31:23.722"/>
</kw>
<msg timestamp="20211019 06:31:23.722" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:31:23.706" endtime="20211019 06:31:23.723"/>
</kw>
<status status="PASS" starttime="20211019 06:31:23.705" endtime="20211019 06:31:23.723"/>
</kw>
<status status="PASS" starttime="20211019 06:31:23.704" endtime="20211019 06:31:23.723"/>
</kw>
<status status="PASS" starttime="20211019 06:31:23.689" endtime="20211019 06:31:23.724"/>
</kw>
<status status="PASS" starttime="20211019 06:31:23.688" endtime="20211019 06:31:23.724"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:31:23.728" level="INFO">Running command 'ozone sh key list 01507-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:31:32.217" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:31:32.217" level="INFO">${output} = [ {
  "volumeName" : "01507-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-10-19T06:21:08.398Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20211019 06:31:23.725" endtime="20211019 06:31:32.217"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:31:32.219" level="INFO">[ {
  "volumeName" : "01507-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-10-19T06:21:08.398Z",
  "modificationTime" : "2021-10-19T06:24:11.160Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "replicationType" : "RATIS",
  "replicationFactor" : 3
} ]</msg>
<status status="PASS" starttime="20211019 06:31:32.218" endtime="20211019 06:31:32.219"/>
</kw>
<msg timestamp="20211019 06:31:32.219" level="INFO">${result} = [ {
  "volumeName" : "01507-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-10-19T06:21:08.398Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20211019 06:31:23.724" endtime="20211019 06:31:32.219"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 06:31:32.220" endtime="20211019 06:31:32.220"/>
</kw>
<status status="PASS" starttime="20211019 06:31:23.674" endtime="20211019 06:31:32.221"/>
</kw>
<status status="PASS" starttime="20211019 06:31:23.674" endtime="20211019 06:31:32.221"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211019 06:31:23.629" endtime="20211019 06:31:32.221"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:31:32.230" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:31:32.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:31:32.236" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211019 06:31:32.227" endtime="20211019 06:31:32.236"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:31:32.238" level="INFO">scm</msg>
<status status="PASS" starttime="20211019 06:31:32.237" endtime="20211019 06:31:32.238"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:31:32.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:31:32.238" endtime="20211019 06:31:32.239"/>
</kw>
<status status="PASS" starttime="20211019 06:31:32.227" endtime="20211019 06:31:32.239"/>
</kw>
<msg timestamp="20211019 06:31:32.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:31:32.226" endtime="20211019 06:31:32.240"/>
</kw>
<msg timestamp="20211019 06:31:32.240" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211019 06:31:32.225" endtime="20211019 06:31:32.240"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211019 06:31:32.242" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211019 06:31:32.241" endtime="20211019 06:31:32.242"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:31:32.247" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:31:32.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:31:32.257" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:31:32.245" endtime="20211019 06:31:32.257"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:31:32.259" level="INFO"/>
<status status="PASS" starttime="20211019 06:31:32.258" endtime="20211019 06:31:32.259"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:31:32.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:31:32.260" endtime="20211019 06:31:32.260"/>
</kw>
<status status="PASS" starttime="20211019 06:31:32.244" endtime="20211019 06:31:32.261"/>
</kw>
<msg timestamp="20211019 06:31:32.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:31:32.244" endtime="20211019 06:31:32.261"/>
</kw>
<status status="PASS" starttime="20211019 06:31:32.242" endtime="20211019 06:31:32.261"/>
</kw>
<status status="PASS" starttime="20211019 06:31:32.242" endtime="20211019 06:31:32.262"/>
</kw>
<status status="PASS" starttime="20211019 06:31:32.224" endtime="20211019 06:31:32.262"/>
</kw>
<status status="PASS" starttime="20211019 06:31:32.224" endtime="20211019 06:31:32.262"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:31:32.268" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:31:32.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:31:32.272" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:31:32.266" endtime="20211019 06:31:32.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:31:32.274" level="INFO"/>
<status status="PASS" starttime="20211019 06:31:32.273" endtime="20211019 06:31:32.274"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:31:32.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:31:32.274" endtime="20211019 06:31:32.275"/>
</kw>
<status status="PASS" starttime="20211019 06:31:32.265" endtime="20211019 06:31:32.275"/>
</kw>
<msg timestamp="20211019 06:31:32.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:31:32.264" endtime="20211019 06:31:32.276"/>
</kw>
<status status="PASS" starttime="20211019 06:31:32.263" endtime="20211019 06:31:32.276"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:31:32.281" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:31:32.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:31:32.286" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211019 06:31:32.279" endtime="20211019 06:31:32.286"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:31:32.287" level="INFO">scm</msg>
<status status="PASS" starttime="20211019 06:31:32.287" endtime="20211019 06:31:32.287"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:31:32.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:31:32.287" endtime="20211019 06:31:32.288"/>
</kw>
<status status="PASS" starttime="20211019 06:31:32.278" endtime="20211019 06:31:32.289"/>
</kw>
<msg timestamp="20211019 06:31:32.289" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:31:32.278" endtime="20211019 06:31:32.289"/>
</kw>
<msg timestamp="20211019 06:31:32.289" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211019 06:31:32.277" endtime="20211019 06:31:32.289"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211019 06:31:32.290" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211019 06:31:32.289" endtime="20211019 06:31:32.290"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:31:32.296" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:31:32.308" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:31:32.308" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:31:32.293" endtime="20211019 06:31:32.309"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:31:32.310" level="INFO"/>
<status status="PASS" starttime="20211019 06:31:32.309" endtime="20211019 06:31:32.310"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:31:32.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:31:32.310" endtime="20211019 06:31:32.311"/>
</kw>
<status status="PASS" starttime="20211019 06:31:32.292" endtime="20211019 06:31:32.312"/>
</kw>
<msg timestamp="20211019 06:31:32.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:31:32.292" endtime="20211019 06:31:32.312"/>
</kw>
<status status="PASS" starttime="20211019 06:31:32.291" endtime="20211019 06:31:32.313"/>
</kw>
<status status="PASS" starttime="20211019 06:31:32.290" endtime="20211019 06:31:32.313"/>
</kw>
<status status="PASS" starttime="20211019 06:31:32.277" endtime="20211019 06:31:32.313"/>
</kw>
<status status="PASS" starttime="20211019 06:31:32.276" endtime="20211019 06:31:32.313"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:31:32.317" level="INFO">Running command 'ozone sh key list 01507-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:31:37.250" level="INFO">${rc} = 255</msg>
<msg timestamp="20211019 06:31:37.250" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 01507-target unreadable-link null</msg>
<status status="PASS" starttime="20211019 06:31:32.314" endtime="20211019 06:31:37.251"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:31:37.252" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 01507-target unreadable-link null</msg>
<status status="PASS" starttime="20211019 06:31:37.251" endtime="20211019 06:31:37.253"/>
</kw>
<msg timestamp="20211019 06:31:37.253" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 01507-target unreadable-link null</msg>
<status status="PASS" starttime="20211019 06:31:32.313" endtime="20211019 06:31:37.254"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 06:31:37.254" endtime="20211019 06:31:37.255"/>
</kw>
<status status="PASS" starttime="20211019 06:31:32.263" endtime="20211019 06:31:37.255"/>
</kw>
<status status="PASS" starttime="20211019 06:31:32.262" endtime="20211019 06:31:37.255"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211019 06:31:32.222" endtime="20211019 06:31:37.256"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:31:37.267" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:31:37.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:31:37.272" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211019 06:31:37.264" endtime="20211019 06:31:37.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:31:37.274" level="INFO">scm</msg>
<status status="PASS" starttime="20211019 06:31:37.273" endtime="20211019 06:31:37.274"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:31:37.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:31:37.275" endtime="20211019 06:31:37.276"/>
</kw>
<status status="PASS" starttime="20211019 06:31:37.263" endtime="20211019 06:31:37.276"/>
</kw>
<msg timestamp="20211019 06:31:37.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:31:37.263" endtime="20211019 06:31:37.277"/>
</kw>
<msg timestamp="20211019 06:31:37.277" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211019 06:31:37.261" endtime="20211019 06:31:37.277"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211019 06:31:37.279" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211019 06:31:37.278" endtime="20211019 06:31:37.279"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:31:37.285" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:31:37.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:31:37.296" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:31:37.283" endtime="20211019 06:31:37.297"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:31:37.299" level="INFO"/>
<status status="PASS" starttime="20211019 06:31:37.298" endtime="20211019 06:31:37.299"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:31:37.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:31:37.299" endtime="20211019 06:31:37.300"/>
</kw>
<status status="PASS" starttime="20211019 06:31:37.282" endtime="20211019 06:31:37.301"/>
</kw>
<msg timestamp="20211019 06:31:37.301" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:31:37.281" endtime="20211019 06:31:37.301"/>
</kw>
<status status="PASS" starttime="20211019 06:31:37.280" endtime="20211019 06:31:37.301"/>
</kw>
<status status="PASS" starttime="20211019 06:31:37.279" endtime="20211019 06:31:37.302"/>
</kw>
<status status="PASS" starttime="20211019 06:31:37.260" endtime="20211019 06:31:37.302"/>
</kw>
<status status="PASS" starttime="20211019 06:31:37.259" endtime="20211019 06:31:37.302"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:31:37.308" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:31:37.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:31:37.312" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:31:37.305" endtime="20211019 06:31:37.312"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:31:37.314" level="INFO"/>
<status status="PASS" starttime="20211019 06:31:37.313" endtime="20211019 06:31:37.314"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:31:37.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:31:37.314" endtime="20211019 06:31:37.315"/>
</kw>
<status status="PASS" starttime="20211019 06:31:37.305" endtime="20211019 06:31:37.316"/>
</kw>
<msg timestamp="20211019 06:31:37.316" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:31:37.304" endtime="20211019 06:31:37.316"/>
</kw>
<status status="PASS" starttime="20211019 06:31:37.303" endtime="20211019 06:31:37.317"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:31:37.323" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:31:37.328" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:31:37.328" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211019 06:31:37.320" endtime="20211019 06:31:37.328"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:31:37.330" level="INFO">scm</msg>
<status status="PASS" starttime="20211019 06:31:37.329" endtime="20211019 06:31:37.330"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:31:37.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:31:37.330" endtime="20211019 06:31:37.331"/>
</kw>
<status status="PASS" starttime="20211019 06:31:37.320" endtime="20211019 06:31:37.332"/>
</kw>
<msg timestamp="20211019 06:31:37.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:31:37.319" endtime="20211019 06:31:37.332"/>
</kw>
<msg timestamp="20211019 06:31:37.332" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211019 06:31:37.318" endtime="20211019 06:31:37.332"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211019 06:31:37.334" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211019 06:31:37.333" endtime="20211019 06:31:37.334"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:31:37.339" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:31:37.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:31:37.348" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:31:37.337" endtime="20211019 06:31:37.348"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:31:37.349" level="INFO"/>
<status status="PASS" starttime="20211019 06:31:37.348" endtime="20211019 06:31:37.349"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:31:37.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:31:37.349" endtime="20211019 06:31:37.350"/>
</kw>
<status status="PASS" starttime="20211019 06:31:37.336" endtime="20211019 06:31:37.351"/>
</kw>
<msg timestamp="20211019 06:31:37.351" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:31:37.336" endtime="20211019 06:31:37.351"/>
</kw>
<status status="PASS" starttime="20211019 06:31:37.335" endtime="20211019 06:31:37.351"/>
</kw>
<status status="PASS" starttime="20211019 06:31:37.334" endtime="20211019 06:31:37.351"/>
</kw>
<status status="PASS" starttime="20211019 06:31:37.318" endtime="20211019 06:31:37.352"/>
</kw>
<status status="PASS" starttime="20211019 06:31:37.317" endtime="20211019 06:31:37.352"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:31:37.356" level="INFO">Running command 'ozone sh bucket info 01507-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:31:44.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:31:44.780" level="INFO">${output} = {
  "volumeName" : "01507-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "01507-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-10-19T06:24:41.873Z...</msg>
<status status="PASS" starttime="20211019 06:31:37.354" endtime="20211019 06:31:44.780"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:31:44.781" level="INFO">{
  "volumeName" : "01507-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "01507-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-10-19T06:24:41.873Z",
  "modificationTime" : "2021-10-19T06:25:16.422Z"
}</msg>
<status status="PASS" starttime="20211019 06:31:44.781" endtime="20211019 06:31:44.782"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:31:44.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:31:44.782" endtime="20211019 06:31:44.783"/>
</kw>
<status status="PASS" starttime="20211019 06:31:37.353" endtime="20211019 06:31:44.783"/>
</kw>
<msg timestamp="20211019 06:31:44.783" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:31:37.353" endtime="20211019 06:31:44.783"/>
</kw>
<msg timestamp="20211019 06:31:44.783" level="INFO">${result} = {
  "volumeName" : "01507-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "01507-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-10-19T06:24:41.873Z...</msg>
<status status="PASS" starttime="20211019 06:31:37.352" endtime="20211019 06:31:44.784"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 06:31:44.784" endtime="20211019 06:31:44.784"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 06:31:44.785" endtime="20211019 06:31:44.786"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:31:44.790" level="INFO">Running command 'ozone sh key list 01507-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:31:51.784" level="INFO">${rc} = 255</msg>
<msg timestamp="20211019 06:31:51.784" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 01507-source unreadable-bucket </msg>
<status status="PASS" starttime="20211019 06:31:44.787" endtime="20211019 06:31:51.784"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:31:51.786" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 01507-source unreadable-bucket </msg>
<status status="PASS" starttime="20211019 06:31:51.785" endtime="20211019 06:31:51.786"/>
</kw>
<msg timestamp="20211019 06:31:51.787" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 01507-source unreadable-bucket </msg>
<status status="PASS" starttime="20211019 06:31:44.786" endtime="20211019 06:31:51.787"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 06:31:51.787" endtime="20211019 06:31:51.788"/>
</kw>
<status status="PASS" starttime="20211019 06:31:37.303" endtime="20211019 06:31:51.788"/>
</kw>
<status status="PASS" starttime="20211019 06:31:37.302" endtime="20211019 06:31:51.788"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211019 06:31:37.258" endtime="20211019 06:31:51.789"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:31:51.799" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:31:51.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:31:51.803" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211019 06:31:51.796" endtime="20211019 06:31:51.804"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:31:51.805" level="INFO">scm</msg>
<status status="PASS" starttime="20211019 06:31:51.804" endtime="20211019 06:31:51.805"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:31:51.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:31:51.806" endtime="20211019 06:31:51.806"/>
</kw>
<status status="PASS" starttime="20211019 06:31:51.796" endtime="20211019 06:31:51.807"/>
</kw>
<msg timestamp="20211019 06:31:51.807" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:31:51.795" endtime="20211019 06:31:51.807"/>
</kw>
<msg timestamp="20211019 06:31:51.808" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211019 06:31:51.794" endtime="20211019 06:31:51.808"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211019 06:31:51.809" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211019 06:31:51.808" endtime="20211019 06:31:51.809"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:31:51.814" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:31:51.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:31:51.824" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:31:51.812" endtime="20211019 06:31:51.824"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:31:51.826" level="INFO"/>
<status status="PASS" starttime="20211019 06:31:51.825" endtime="20211019 06:31:51.826"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:31:51.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:31:51.827" endtime="20211019 06:31:51.827"/>
</kw>
<status status="PASS" starttime="20211019 06:31:51.811" endtime="20211019 06:31:51.828"/>
</kw>
<msg timestamp="20211019 06:31:51.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:31:51.811" endtime="20211019 06:31:51.829"/>
</kw>
<status status="PASS" starttime="20211019 06:31:51.810" endtime="20211019 06:31:51.829"/>
</kw>
<status status="PASS" starttime="20211019 06:31:51.809" endtime="20211019 06:31:51.829"/>
</kw>
<status status="PASS" starttime="20211019 06:31:51.793" endtime="20211019 06:31:51.829"/>
</kw>
<status status="PASS" starttime="20211019 06:31:51.792" endtime="20211019 06:31:51.829"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:31:51.835" level="INFO">Running command 'ozone sh bucket link 01507-target/loop1 01507-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:31:59.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:31:59.055" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:31:51.832" endtime="20211019 06:31:59.055"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:31:59.056" level="INFO"/>
<status status="PASS" starttime="20211019 06:31:59.055" endtime="20211019 06:31:59.056"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:31:59.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:31:59.056" endtime="20211019 06:31:59.057"/>
</kw>
<status status="PASS" starttime="20211019 06:31:51.831" endtime="20211019 06:31:59.057"/>
</kw>
<msg timestamp="20211019 06:31:59.058" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:31:51.831" endtime="20211019 06:31:59.058"/>
</kw>
<status status="PASS" starttime="20211019 06:31:51.830" endtime="20211019 06:31:59.058"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:31:59.068" level="INFO">Running command 'ozone sh bucket link 01507-target/loop2 01507-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:32:06.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:32:06.137" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:31:59.062" endtime="20211019 06:32:06.137"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:32:06.139" level="INFO"/>
<status status="PASS" starttime="20211019 06:32:06.138" endtime="20211019 06:32:06.139"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:32:06.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:32:06.139" endtime="20211019 06:32:06.140"/>
</kw>
<status status="PASS" starttime="20211019 06:31:59.059" endtime="20211019 06:32:06.140"/>
</kw>
<msg timestamp="20211019 06:32:06.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:31:59.059" endtime="20211019 06:32:06.141"/>
</kw>
<status status="PASS" starttime="20211019 06:31:59.058" endtime="20211019 06:32:06.141"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:32:06.148" level="INFO">Running command 'ozone sh bucket link 01507-target/loop3 01507-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:32:13.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:32:13.578" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:32:06.145" endtime="20211019 06:32:13.578"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:32:13.579" level="INFO"/>
<status status="PASS" starttime="20211019 06:32:13.579" endtime="20211019 06:32:13.580"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:32:13.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:32:13.580" endtime="20211019 06:32:13.581"/>
</kw>
<status status="PASS" starttime="20211019 06:32:06.144" endtime="20211019 06:32:13.581"/>
</kw>
<msg timestamp="20211019 06:32:13.582" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:32:06.144" endtime="20211019 06:32:13.582"/>
</kw>
<status status="PASS" starttime="20211019 06:32:06.142" endtime="20211019 06:32:13.582"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:32:13.587" level="INFO">Running command 'ozone sh key list 01507-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:32:20.750" level="INFO">${rc} = 255</msg>
<msg timestamp="20211019 06:32:20.750" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20211019 06:32:13.584" endtime="20211019 06:32:20.750"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:32:20.751" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20211019 06:32:20.751" endtime="20211019 06:32:20.752"/>
</kw>
<msg timestamp="20211019 06:32:20.752" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20211019 06:32:13.583" endtime="20211019 06:32:20.752"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 06:32:20.752" endtime="20211019 06:32:20.753"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211019 06:31:51.790" endtime="20211019 06:32:20.753"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:32:20.759" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:32:20.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:32:20.764" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211019 06:32:20.757" endtime="20211019 06:32:20.764"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:32:20.765" level="INFO">scm</msg>
<status status="PASS" starttime="20211019 06:32:20.764" endtime="20211019 06:32:20.765"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:32:20.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:32:20.765" endtime="20211019 06:32:20.766"/>
</kw>
<status status="PASS" starttime="20211019 06:32:20.757" endtime="20211019 06:32:20.766"/>
</kw>
<msg timestamp="20211019 06:32:20.766" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:32:20.756" endtime="20211019 06:32:20.766"/>
</kw>
<msg timestamp="20211019 06:32:20.767" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211019 06:32:20.756" endtime="20211019 06:32:20.767"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211019 06:32:20.768" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211019 06:32:20.767" endtime="20211019 06:32:20.768"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:32:20.772" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:32:20.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:32:20.779" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:32:20.770" endtime="20211019 06:32:20.779"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:32:20.780" level="INFO"/>
<status status="PASS" starttime="20211019 06:32:20.780" endtime="20211019 06:32:20.781"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:32:20.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:32:20.781" endtime="20211019 06:32:20.781"/>
</kw>
<status status="PASS" starttime="20211019 06:32:20.769" endtime="20211019 06:32:20.782"/>
</kw>
<msg timestamp="20211019 06:32:20.782" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:32:20.769" endtime="20211019 06:32:20.782"/>
</kw>
<status status="PASS" starttime="20211019 06:32:20.768" endtime="20211019 06:32:20.782"/>
</kw>
<status status="PASS" starttime="20211019 06:32:20.768" endtime="20211019 06:32:20.782"/>
</kw>
<status status="PASS" starttime="20211019 06:32:20.755" endtime="20211019 06:32:20.783"/>
</kw>
<status status="PASS" starttime="20211019 06:32:20.755" endtime="20211019 06:32:20.783"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:32:20.787" level="INFO">Running command 'ozone sh bucket link 01507-source/bucket1 01507-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:32:27.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:32:27.693" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:32:20.785" endtime="20211019 06:32:27.693"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:32:27.694" level="INFO"/>
<status status="PASS" starttime="20211019 06:32:27.693" endtime="20211019 06:32:27.694"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:32:27.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:32:27.694" endtime="20211019 06:32:27.695"/>
</kw>
<status status="PASS" starttime="20211019 06:32:20.784" endtime="20211019 06:32:27.695"/>
</kw>
<msg timestamp="20211019 06:32:27.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:32:20.784" endtime="20211019 06:32:27.696"/>
</kw>
<status status="PASS" starttime="20211019 06:32:20.783" endtime="20211019 06:32:27.696"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:32:27.702" level="INFO">Running command 'ozone sh key put 01507-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:34:20.755" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20211019 06:32:27.699" endtime="20211019 06:34:20.755"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211019 06:34:20.756" endtime="20211019 06:34:20.756"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211019 06:34:20.756" endtime="20211019 06:34:20.756"/>
</kw>
<status status="FAIL" starttime="20211019 06:32:27.698" endtime="20211019 06:34:20.757"/>
</kw>
<msg timestamp="20211019 06:34:20.757" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211019 06:32:27.698" endtime="20211019 06:34:20.757"/>
</kw>
<status status="FAIL" starttime="20211019 06:32:27.696" endtime="20211019 06:34:20.757"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<status status="NOT RUN" starttime="20211019 06:34:20.757" endtime="20211019 06:34:20.758"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211019 06:32:20.754" endtime="20211019 06:34:20.758">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:34:20.765" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:34:20.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:34:20.770" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211019 06:34:20.763" endtime="20211019 06:34:20.770"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:34:20.772" level="INFO">scm</msg>
<status status="PASS" starttime="20211019 06:34:20.771" endtime="20211019 06:34:20.772"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:34:20.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:34:20.773" endtime="20211019 06:34:20.774"/>
</kw>
<status status="PASS" starttime="20211019 06:34:20.762" endtime="20211019 06:34:20.774"/>
</kw>
<msg timestamp="20211019 06:34:20.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:34:20.762" endtime="20211019 06:34:20.775"/>
</kw>
<msg timestamp="20211019 06:34:20.775" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211019 06:34:20.761" endtime="20211019 06:34:20.775"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211019 06:34:20.776" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211019 06:34:20.775" endtime="20211019 06:34:20.776"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:34:20.782" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:34:20.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:34:20.790" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:34:20.779" endtime="20211019 06:34:20.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:34:20.792" level="INFO"/>
<status status="PASS" starttime="20211019 06:34:20.791" endtime="20211019 06:34:20.792"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:34:20.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:34:20.792" endtime="20211019 06:34:20.793"/>
</kw>
<status status="PASS" starttime="20211019 06:34:20.778" endtime="20211019 06:34:20.794"/>
</kw>
<msg timestamp="20211019 06:34:20.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:34:20.778" endtime="20211019 06:34:20.794"/>
</kw>
<status status="PASS" starttime="20211019 06:34:20.777" endtime="20211019 06:34:20.794"/>
</kw>
<status status="PASS" starttime="20211019 06:34:20.777" endtime="20211019 06:34:20.794"/>
</kw>
<status status="PASS" starttime="20211019 06:34:20.760" endtime="20211019 06:34:20.795"/>
</kw>
<status status="PASS" starttime="20211019 06:34:20.760" endtime="20211019 06:34:20.795"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:34:20.799" level="INFO">Running command 'ozone sh bucket delete 01507-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:34:28.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:34:28.865" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:34:20.796" endtime="20211019 06:34:28.866"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:34:28.868" level="INFO"/>
<status status="PASS" starttime="20211019 06:34:28.866" endtime="20211019 06:34:28.868"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:34:28.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:34:28.869" endtime="20211019 06:34:28.869"/>
</kw>
<status status="PASS" starttime="20211019 06:34:20.796" endtime="20211019 06:34:28.870"/>
</kw>
<msg timestamp="20211019 06:34:28.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:34:20.795" endtime="20211019 06:34:28.871"/>
</kw>
<status status="PASS" starttime="20211019 06:34:20.795" endtime="20211019 06:34:28.871"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:34:28.883" level="INFO">Running command 'ozone sh bucket list 01507-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:34:36.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:34:36.785" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "01507-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-1...</msg>
<status status="PASS" starttime="20211019 06:34:28.879" endtime="20211019 06:34:36.785"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:34:36.787" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "01507-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-19T06:31:16.738Z",
  "modificationTime" : "2021-10-19T06:31:16.738Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "01507-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-19T06:25:24.488Z",
  "modificationTime" : "2021-10-19T06:25:24.488Z",
  "sourceVolume" : "01507-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "01507-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-19T06:24:41.873Z",
  "modificationTime" : "2021-10-19T06:25:16.422Z",
  "sourceVolume" : "01507-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "01507-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-19T06:31:03.339Z",
  "modificationTime" : "2021-10-19T06:31:03.339Z",
  "sourceVolume" : "01507-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "01507-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-19T06:32:27.535Z",
  "modificationTime" : "2021-10-19T06:32:27.535Z",
  "sourceVolume" : "01507-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "01507-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-19T06:32:13.501Z",
  "modificationTime" : "2021-10-19T06:32:13.501Z",
  "sourceVolume" : "01507-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "01507-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-19T06:31:58.949Z",
  "modificationTime" : "2021-10-19T06:31:58.949Z",
  "sourceVolume" : "01507-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "01507-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-19T06:32:06.077Z",
  "modificationTime" : "2021-10-19T06:32:06.077Z",
  "sourceVolume" : "01507-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "01507-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-19T06:24:26.573Z",
  "modificationTime" : "2021-10-19T06:25:08.483Z",
  "sourceVolume" : "01507-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "01507-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-19T06:24:33.945Z",
  "modificationTime" : "2021-10-19T06:24:33.945Z",
  "sourceVolume" : "01507-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
} ]</msg>
<status status="PASS" starttime="20211019 06:34:36.785" endtime="20211019 06:34:36.787"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:34:36.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:34:36.787" endtime="20211019 06:34:36.788"/>
</kw>
<status status="PASS" starttime="20211019 06:34:28.878" endtime="20211019 06:34:36.788"/>
</kw>
<msg timestamp="20211019 06:34:36.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:34:28.873" endtime="20211019 06:34:36.790"/>
</kw>
<msg timestamp="20211019 06:34:36.790" level="INFO">${bucket_list} = [ {
  "metadata" : { },
  "volumeName" : "01507-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-1...</msg>
<status status="PASS" starttime="20211019 06:34:28.872" endtime="20211019 06:34:36.790"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 06:34:36.790" endtime="20211019 06:34:36.792"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:34:36.796" level="INFO">Running command 'ozone sh key list 01507-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:34:45.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:34:45.020" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20211019 06:34:36.793" endtime="20211019 06:34:45.021"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:34:45.023" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20211019 06:34:45.022" endtime="20211019 06:34:45.024"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:34:45.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:34:45.024" endtime="20211019 06:34:45.026"/>
</kw>
<status status="PASS" starttime="20211019 06:34:36.793" endtime="20211019 06:34:45.027"/>
</kw>
<msg timestamp="20211019 06:34:45.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:34:36.792" endtime="20211019 06:34:45.027"/>
</kw>
<msg timestamp="20211019 06:34:45.028" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20211019 06:34:36.792" endtime="20211019 06:34:45.028"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 06:34:45.028" endtime="20211019 06:34:45.029"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211019 06:34:20.759" endtime="20211019 06:34:45.030"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="FAIL" starttime="20211019 06:20:40.144" endtime="20211019 06:34:45.034"/>
</suite>
<suite id="s1-s1-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211019 06:34:45.071" level="INFO">${random} = 28358</msg>
<status status="PASS" starttime="20211019 06:34:45.070" endtime="20211019 06:34:45.071"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211019 06:34:45.072" level="INFO">${prefix} = 28358</msg>
<status status="PASS" starttime="20211019 06:34:45.071" endtime="20211019 06:34:45.072"/>
</kw>
<status status="PASS" starttime="20211019 06:34:45.070" endtime="20211019 06:34:45.072"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:34:45.081" level="INFO">Running command 'ozone sh volume info /28358-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:34:50.602" level="INFO">${rc} = 255</msg>
<msg timestamp="20211019 06:34:50.603" level="INFO">${output} = VOLUME_NOT_FOUND Volume 28358-rpcbasic is not found</msg>
<status status="PASS" starttime="20211019 06:34:45.077" endtime="20211019 06:34:50.603"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:34:50.605" level="INFO">VOLUME_NOT_FOUND Volume 28358-rpcbasic is not found</msg>
<status status="PASS" starttime="20211019 06:34:50.604" endtime="20211019 06:34:50.605"/>
</kw>
<msg timestamp="20211019 06:34:50.606" level="INFO">${result} = VOLUME_NOT_FOUND Volume 28358-rpcbasic is not found</msg>
<status status="PASS" starttime="20211019 06:34:45.076" endtime="20211019 06:34:50.606"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 06:34:50.607" endtime="20211019 06:34:50.608"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:34:50.616" level="INFO">Running command 'ozone sh volume create /28358-rpcbasic --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:34:58.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:34:58.377" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:34:50.612" endtime="20211019 06:34:58.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:34:58.378" level="INFO"/>
<status status="PASS" starttime="20211019 06:34:58.377" endtime="20211019 06:34:58.378"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:34:58.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:34:58.378" endtime="20211019 06:34:58.379"/>
</kw>
<status status="PASS" starttime="20211019 06:34:50.611" endtime="20211019 06:34:58.379"/>
</kw>
<msg timestamp="20211019 06:34:58.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:34:50.610" endtime="20211019 06:34:58.380"/>
</kw>
<msg timestamp="20211019 06:34:58.380" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211019 06:34:50.608" endtime="20211019 06:34:58.380"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 06:34:58.380" endtime="20211019 06:34:58.381"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:34:58.386" level="INFO">Running command 'ozone sh volume list / | jq -r '.[] | select(.name=="28358-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:35:06.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:35:06.478" level="INFO">${output} = {
  "metadata": {},
  "name": "28358-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211019 06:34:58.383" endtime="20211019 06:35:06.478"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:35:06.481" level="INFO">{
  "metadata": {},
  "name": "28358-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-19T06:34:58.263Z",
  "modificationTime": "2021-10-19T06:34:58.263Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211019 06:35:06.479" endtime="20211019 06:35:06.481"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:35:06.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:35:06.482" endtime="20211019 06:35:06.484"/>
</kw>
<status status="PASS" starttime="20211019 06:34:58.382" endtime="20211019 06:35:06.484"/>
</kw>
<msg timestamp="20211019 06:35:06.485" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:34:58.382" endtime="20211019 06:35:06.485"/>
</kw>
<msg timestamp="20211019 06:35:06.486" level="INFO">${result} = {
  "metadata": {},
  "name": "28358-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211019 06:34:58.381" endtime="20211019 06:35:06.486"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 06:35:06.486" endtime="20211019 06:35:06.487"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:35:06.495" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="28358-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:35:14.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:35:14.660" level="INFO">${output} = {
  "metadata": {},
  "name": "28358-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211019 06:35:06.492" endtime="20211019 06:35:14.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:35:14.662" level="INFO">{
  "metadata": {},
  "name": "28358-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-19T06:34:58.263Z",
  "modificationTime": "2021-10-19T06:34:58.263Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211019 06:35:14.661" endtime="20211019 06:35:14.663"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:35:14.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:35:14.663" endtime="20211019 06:35:14.664"/>
</kw>
<status status="PASS" starttime="20211019 06:35:06.491" endtime="20211019 06:35:14.665"/>
</kw>
<msg timestamp="20211019 06:35:14.665" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:35:06.490" endtime="20211019 06:35:14.665"/>
</kw>
<msg timestamp="20211019 06:35:14.665" level="INFO">${result} = {
  "metadata": {},
  "name": "28358-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211019 06:35:06.488" endtime="20211019 06:35:14.665"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 06:35:14.666" endtime="20211019 06:35:14.666"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:35:14.672" level="INFO">Running command 'ozone sh volume setquota /28358-rpcbasic --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:35:22.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:35:22.114" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:35:14.669" endtime="20211019 06:35:22.114"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:35:22.115" level="INFO"/>
<status status="PASS" starttime="20211019 06:35:22.115" endtime="20211019 06:35:22.115"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:35:22.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:35:22.116" endtime="20211019 06:35:22.120"/>
</kw>
<status status="PASS" starttime="20211019 06:35:14.668" endtime="20211019 06:35:22.120"/>
</kw>
<msg timestamp="20211019 06:35:22.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:35:14.667" endtime="20211019 06:35:22.121"/>
</kw>
<status status="PASS" starttime="20211019 06:35:14.666" endtime="20211019 06:35:22.121"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:35:22.127" level="INFO">Running command 'ozone sh volume info /28358-rpcbasic | jq -r '. | select(.name=="28358-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:35:30.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:35:30.428" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211019 06:35:22.123" endtime="20211019 06:35:30.428"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:35:30.431" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211019 06:35:30.429" endtime="20211019 06:35:30.431"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:35:30.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:35:30.431" endtime="20211019 06:35:30.433"/>
</kw>
<status status="PASS" starttime="20211019 06:35:22.123" endtime="20211019 06:35:30.434"/>
</kw>
<msg timestamp="20211019 06:35:30.434" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:35:22.122" endtime="20211019 06:35:30.434"/>
</kw>
<msg timestamp="20211019 06:35:30.435" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211019 06:35:22.121" endtime="20211019 06:35:30.435"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211019 06:35:30.436" endtime="20211019 06:35:30.436"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:35:30.445" level="INFO">Running command 'ozone sh bucket create /28358-rpcbasic/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:35:38.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:35:38.371" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:35:30.441" endtime="20211019 06:35:38.372"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:35:38.373" level="INFO"/>
<status status="PASS" starttime="20211019 06:35:38.372" endtime="20211019 06:35:38.373"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:35:38.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:35:38.373" endtime="20211019 06:35:38.374"/>
</kw>
<status status="PASS" starttime="20211019 06:35:30.440" endtime="20211019 06:35:38.374"/>
</kw>
<msg timestamp="20211019 06:35:38.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:35:30.439" endtime="20211019 06:35:38.375"/>
</kw>
<status status="PASS" starttime="20211019 06:35:30.437" endtime="20211019 06:35:38.375"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:35:38.380" level="INFO">Running command 'ozone sh bucket info /28358-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:35:45.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:35:45.826" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211019 06:35:38.377" endtime="20211019 06:35:45.826"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:35:45.827" level="INFO">DISK</msg>
<status status="PASS" starttime="20211019 06:35:45.827" endtime="20211019 06:35:45.827"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:35:45.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:35:45.828" endtime="20211019 06:35:45.829"/>
</kw>
<status status="PASS" starttime="20211019 06:35:38.377" endtime="20211019 06:35:45.829"/>
</kw>
<msg timestamp="20211019 06:35:45.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:35:38.376" endtime="20211019 06:35:45.830"/>
</kw>
<msg timestamp="20211019 06:35:45.830" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211019 06:35:38.375" endtime="20211019 06:35:45.831"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211019 06:35:45.831" endtime="20211019 06:35:45.832"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:35:45.837" level="INFO">Running command 'ozone sh bucket info /28358-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:35:53.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:35:53.581" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211019 06:35:45.835" endtime="20211019 06:35:53.581"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:35:53.582" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211019 06:35:53.582" endtime="20211019 06:35:53.583"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:35:53.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:35:53.583" endtime="20211019 06:35:53.583"/>
</kw>
<status status="PASS" starttime="20211019 06:35:45.834" endtime="20211019 06:35:53.584"/>
</kw>
<msg timestamp="20211019 06:35:53.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:35:45.834" endtime="20211019 06:35:53.584"/>
</kw>
<msg timestamp="20211019 06:35:53.585" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211019 06:35:45.832" endtime="20211019 06:35:53.585"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211019 06:35:53.585" endtime="20211019 06:35:53.587"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:35:53.592" level="INFO">Running command 'ozone sh bucket info /28358-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:36:01.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:36:01.209" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211019 06:35:53.590" endtime="20211019 06:36:01.210"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:36:01.213" level="INFO">100</msg>
<status status="PASS" starttime="20211019 06:36:01.211" endtime="20211019 06:36:01.213"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:36:01.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:36:01.213" endtime="20211019 06:36:01.214"/>
</kw>
<status status="PASS" starttime="20211019 06:35:53.589" endtime="20211019 06:36:01.215"/>
</kw>
<msg timestamp="20211019 06:36:01.215" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:35:53.589" endtime="20211019 06:36:01.216"/>
</kw>
<msg timestamp="20211019 06:36:01.217" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211019 06:35:53.587" endtime="20211019 06:36:01.217"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211019 06:36:01.217" endtime="20211019 06:36:01.218"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:36:01.223" level="INFO">Running command 'ozone sh bucket setquota /28358-rpcbasic/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:36:08.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:36:08.522" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:36:01.220" endtime="20211019 06:36:08.522"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:36:08.525" level="INFO"/>
<status status="PASS" starttime="20211019 06:36:08.523" endtime="20211019 06:36:08.526"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:36:08.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:36:08.526" endtime="20211019 06:36:08.527"/>
</kw>
<status status="PASS" starttime="20211019 06:36:01.219" endtime="20211019 06:36:08.528"/>
</kw>
<msg timestamp="20211019 06:36:08.528" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:36:01.219" endtime="20211019 06:36:08.528"/>
</kw>
<status status="PASS" starttime="20211019 06:36:01.218" endtime="20211019 06:36:08.529"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:36:08.537" level="INFO">Running command 'ozone sh bucket info /28358-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:36:16.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:36:16.540" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211019 06:36:08.533" endtime="20211019 06:36:16.540"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:36:16.542" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211019 06:36:16.541" endtime="20211019 06:36:16.542"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:36:16.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:36:16.542" endtime="20211019 06:36:16.543"/>
</kw>
<status status="PASS" starttime="20211019 06:36:08.532" endtime="20211019 06:36:16.543"/>
</kw>
<msg timestamp="20211019 06:36:16.543" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:36:08.531" endtime="20211019 06:36:16.543"/>
</kw>
<msg timestamp="20211019 06:36:16.543" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211019 06:36:08.529" endtime="20211019 06:36:16.543"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211019 06:36:16.544" endtime="20211019 06:36:16.545"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:36:16.549" level="INFO">Running command 'ozone sh bucket info /28358-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:36:22.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:36:22.599" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211019 06:36:16.547" endtime="20211019 06:36:22.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:36:22.601" level="INFO">1000</msg>
<status status="PASS" starttime="20211019 06:36:22.600" endtime="20211019 06:36:22.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:36:22.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:36:22.601" endtime="20211019 06:36:22.601"/>
</kw>
<status status="PASS" starttime="20211019 06:36:16.546" endtime="20211019 06:36:22.602"/>
</kw>
<msg timestamp="20211019 06:36:22.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:36:16.546" endtime="20211019 06:36:22.602"/>
</kw>
<msg timestamp="20211019 06:36:22.602" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211019 06:36:16.545" endtime="20211019 06:36:22.603"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211019 06:36:22.603" endtime="20211019 06:36:22.603"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:36:22.608" level="INFO">Running command 'ozone sh bucket list /28358-rpcbasic/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:36:30.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:36:30.630" level="INFO">${output} = 28358-rpcbasic</msg>
<status status="PASS" starttime="20211019 06:36:22.605" endtime="20211019 06:36:30.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:36:30.631" level="INFO">28358-rpcbasic</msg>
<status status="PASS" starttime="20211019 06:36:30.631" endtime="20211019 06:36:30.632"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:36:30.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:36:30.632" endtime="20211019 06:36:30.632"/>
</kw>
<status status="PASS" starttime="20211019 06:36:22.605" endtime="20211019 06:36:30.633"/>
</kw>
<msg timestamp="20211019 06:36:30.633" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:36:22.604" endtime="20211019 06:36:30.633"/>
</kw>
<msg timestamp="20211019 06:36:30.634" level="INFO">${result} = 28358-rpcbasic</msg>
<status status="PASS" starttime="20211019 06:36:22.603" endtime="20211019 06:36:30.634"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211019 06:36:30.635" endtime="20211019 06:36:30.636"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:36:30.648" level="INFO">Running command 'ozone sh key put /28358-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:39:41.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:39:41.930" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:36:30.645" endtime="20211019 06:39:41.930"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:39:41.931" level="INFO"/>
<status status="PASS" starttime="20211019 06:39:41.930" endtime="20211019 06:39:41.931"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:39:41.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:39:41.931" endtime="20211019 06:39:41.932"/>
</kw>
<status status="PASS" starttime="20211019 06:36:30.643" endtime="20211019 06:39:41.932"/>
</kw>
<msg timestamp="20211019 06:39:41.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:36:30.643" endtime="20211019 06:39:41.933"/>
</kw>
<status status="PASS" starttime="20211019 06:36:30.639" endtime="20211019 06:39:41.933"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:39:41.938" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:39:41.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:39:41.942" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:39:41.935" endtime="20211019 06:39:41.942"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:39:41.944" level="INFO"/>
<status status="PASS" starttime="20211019 06:39:41.943" endtime="20211019 06:39:41.944"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:39:41.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:39:41.944" endtime="20211019 06:39:41.945"/>
</kw>
<status status="PASS" starttime="20211019 06:39:41.934" endtime="20211019 06:39:41.946"/>
</kw>
<msg timestamp="20211019 06:39:41.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:39:41.934" endtime="20211019 06:39:41.946"/>
</kw>
<status status="PASS" starttime="20211019 06:39:41.934" endtime="20211019 06:39:41.947"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:39:41.952" level="INFO">Running command 'ozone sh key get /28358-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:39:45.079" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211019 06:39:41.949" endtime="20211019 06:39:45.079"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211019 06:39:45.082" endtime="20211019 06:39:45.082"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211019 06:39:45.082" endtime="20211019 06:39:45.082"/>
</kw>
<status status="FAIL" starttime="20211019 06:39:41.948" endtime="20211019 06:39:45.082"/>
</kw>
<msg timestamp="20211019 06:39:45.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211019 06:39:41.948" endtime="20211019 06:39:45.091"/>
</kw>
<status status="FAIL" starttime="20211019 06:39:41.947" endtime="20211019 06:39:45.095"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211019 06:39:45.096" endtime="20211019 06:39:45.097"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211019 06:39:45.097" endtime="20211019 06:39:45.097"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211019 06:39:45.097" endtime="20211019 06:39:45.099"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211019 06:39:45.099" endtime="20211019 06:39:45.100"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211019 06:39:45.102" endtime="20211019 06:39:45.102"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211019 06:39:45.103" endtime="20211019 06:39:45.104"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211019 06:39:45.106" endtime="20211019 06:39:45.107"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211019 06:39:45.108" endtime="20211019 06:39:45.109"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211019 06:39:45.110" endtime="20211019 06:39:45.111"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211019 06:39:45.114" endtime="20211019 06:39:45.114"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211019 06:39:45.115" endtime="20211019 06:39:45.116"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211019 06:39:45.116" endtime="20211019 06:39:45.118"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211019 06:39:45.118" endtime="20211019 06:39:45.118"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211019 06:39:45.119" endtime="20211019 06:39:45.119"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211019 06:39:45.119" endtime="20211019 06:39:45.119"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211019 06:39:45.119" endtime="20211019 06:39:45.119"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211019 06:39:45.119" endtime="20211019 06:39:45.119"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211019 06:39:45.120" endtime="20211019 06:39:45.120"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211019 06:39:45.120" endtime="20211019 06:39:45.120"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211019 06:39:45.120" endtime="20211019 06:39:45.120"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211019 06:39:45.120" endtime="20211019 06:39:45.120"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211019 06:39:45.121" endtime="20211019 06:39:45.121"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211019 06:39:45.121" endtime="20211019 06:39:45.121"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211019 06:39:45.121" endtime="20211019 06:39:45.121"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211019 06:39:45.121" endtime="20211019 06:39:45.121"/>
</kw>
<status status="FAIL" starttime="20211019 06:36:30.638" endtime="20211019 06:39:45.122"/>
</kw>
<status status="FAIL" starttime="20211019 06:36:30.637" endtime="20211019 06:39:45.122"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211019 06:39:45.122" endtime="20211019 06:39:45.122"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211019 06:39:45.122" endtime="20211019 06:39:45.122"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211019 06:39:45.122" endtime="20211019 06:39:45.122"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211019 06:39:45.123" endtime="20211019 06:39:45.123"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211019 06:39:45.123" endtime="20211019 06:39:45.123"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211019 06:39:45.124" endtime="20211019 06:39:45.124"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211019 06:39:45.124" endtime="20211019 06:39:45.125"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211019 06:39:45.125" endtime="20211019 06:39:45.125"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211019 06:39:45.125" endtime="20211019 06:39:45.125"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211019 06:39:45.125" endtime="20211019 06:39:45.125"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211019 06:39:45.125" endtime="20211019 06:39:45.125"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211019 06:39:45.126" endtime="20211019 06:39:45.126"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211019 06:39:45.126" endtime="20211019 06:39:45.126"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211019 06:39:45.126" endtime="20211019 06:39:45.126"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211019 06:39:45.126" endtime="20211019 06:39:45.126"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211019 06:39:45.127" endtime="20211019 06:39:45.127"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211019 06:39:45.127" endtime="20211019 06:39:45.127"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211019 06:39:45.127" endtime="20211019 06:39:45.127"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211019 06:39:45.127" endtime="20211019 06:39:45.127"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211019 06:39:45.127" endtime="20211019 06:39:45.128"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211019 06:39:45.128" endtime="20211019 06:39:45.128"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211019 06:39:45.128" endtime="20211019 06:39:45.128"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211019 06:39:45.128" endtime="20211019 06:39:45.128"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211019 06:39:45.129" endtime="20211019 06:39:45.129"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211019 06:39:45.129" endtime="20211019 06:39:45.129"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211019 06:39:45.129" endtime="20211019 06:39:45.129"/>
</kw>
<status status="FAIL" starttime="20211019 06:34:45.074" endtime="20211019 06:39:45.130"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211019 06:34:45.073" endtime="20211019 06:39:45.130">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20211019 06:34:45.042" endtime="20211019 06:39:45.132"/>
</suite>
<suite id="s1-s1-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211019 06:39:45.162" level="INFO">${random} = 65136</msg>
<status status="PASS" starttime="20211019 06:39:45.162" endtime="20211019 06:39:45.162"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211019 06:39:45.163" level="INFO">${prefix} = 65136</msg>
<status status="PASS" starttime="20211019 06:39:45.162" endtime="20211019 06:39:45.163"/>
</kw>
<status status="PASS" starttime="20211019 06:39:45.161" endtime="20211019 06:39:45.163"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:39:45.184" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:39:45.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:39:45.208" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211019 06:39:45.174" endtime="20211019 06:39:45.208"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:39:45.214" level="INFO">scm</msg>
<status status="PASS" starttime="20211019 06:39:45.210" endtime="20211019 06:39:45.215"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:39:45.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:39:45.215" endtime="20211019 06:39:45.217"/>
</kw>
<status status="PASS" starttime="20211019 06:39:45.174" endtime="20211019 06:39:45.219"/>
</kw>
<msg timestamp="20211019 06:39:45.219" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:39:45.172" endtime="20211019 06:39:45.222"/>
</kw>
<msg timestamp="20211019 06:39:45.223" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211019 06:39:45.170" endtime="20211019 06:39:45.226"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211019 06:39:45.237" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211019 06:39:45.227" endtime="20211019 06:39:45.237"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:39:45.247" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:39:45.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:39:45.304" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:39:45.241" endtime="20211019 06:39:45.305"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:39:45.311" level="INFO"/>
<status status="PASS" starttime="20211019 06:39:45.310" endtime="20211019 06:39:45.313"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:39:45.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:39:45.315" endtime="20211019 06:39:45.317"/>
</kw>
<status status="PASS" starttime="20211019 06:39:45.240" endtime="20211019 06:39:45.318"/>
</kw>
<msg timestamp="20211019 06:39:45.318" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:39:45.239" endtime="20211019 06:39:45.318"/>
</kw>
<status status="PASS" starttime="20211019 06:39:45.238" endtime="20211019 06:39:45.318"/>
</kw>
<status status="PASS" starttime="20211019 06:39:45.237" endtime="20211019 06:39:45.318"/>
</kw>
<status status="PASS" starttime="20211019 06:39:45.169" endtime="20211019 06:39:45.319"/>
</kw>
<status status="PASS" starttime="20211019 06:39:45.169" endtime="20211019 06:39:45.319"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:39:45.323" level="INFO">Running command 'ozone sh volume info o3://om:9862/65136-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:40:00.300" level="INFO">${rc} = 255</msg>
<msg timestamp="20211019 06:40:00.301" level="INFO">${output} = VOLUME_NOT_FOUND Volume 65136-rpcwoport is not found</msg>
<status status="PASS" starttime="20211019 06:39:45.320" endtime="20211019 06:40:00.301"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:40:00.302" level="INFO">VOLUME_NOT_FOUND Volume 65136-rpcwoport is not found</msg>
<status status="PASS" starttime="20211019 06:40:00.301" endtime="20211019 06:40:00.302"/>
</kw>
<msg timestamp="20211019 06:40:00.302" level="INFO">${result} = VOLUME_NOT_FOUND Volume 65136-rpcwoport is not found</msg>
<status status="PASS" starttime="20211019 06:39:45.320" endtime="20211019 06:40:00.302"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 06:40:00.303" endtime="20211019 06:40:00.303"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:40:00.308" level="INFO">Running command 'ozone sh volume create o3://om:9862/65136-rpcwoport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:40:06.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:40:06.535" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:40:00.305" endtime="20211019 06:40:06.535"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:40:06.536" level="INFO"/>
<status status="PASS" starttime="20211019 06:40:06.535" endtime="20211019 06:40:06.536"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:40:06.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:40:06.537" endtime="20211019 06:40:06.537"/>
</kw>
<status status="PASS" starttime="20211019 06:40:00.305" endtime="20211019 06:40:06.538"/>
</kw>
<msg timestamp="20211019 06:40:06.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:40:00.304" endtime="20211019 06:40:06.538"/>
</kw>
<msg timestamp="20211019 06:40:06.538" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211019 06:40:00.303" endtime="20211019 06:40:06.538"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 06:40:06.539" endtime="20211019 06:40:06.539"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:40:06.545" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '.[] | select(.name=="65136-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:40:14.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:40:14.630" level="INFO">${output} = {
  "metadata": {},
  "name": "65136-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211019 06:40:06.542" endtime="20211019 06:40:14.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:40:14.632" level="INFO">{
  "metadata": {},
  "name": "65136-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-19T06:40:06.046Z",
  "modificationTime": "2021-10-19T06:40:06.046Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211019 06:40:14.631" endtime="20211019 06:40:14.633"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:40:14.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:40:14.633" endtime="20211019 06:40:14.634"/>
</kw>
<status status="PASS" starttime="20211019 06:40:06.541" endtime="20211019 06:40:14.635"/>
</kw>
<msg timestamp="20211019 06:40:14.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:40:06.541" endtime="20211019 06:40:14.635"/>
</kw>
<msg timestamp="20211019 06:40:14.636" level="INFO">${result} = {
  "metadata": {},
  "name": "65136-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211019 06:40:06.539" endtime="20211019 06:40:14.636"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 06:40:14.636" endtime="20211019 06:40:14.637"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:40:14.644" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="65136-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:40:22.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:40:22.503" level="INFO">${output} = {
  "metadata": {},
  "name": "65136-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211019 06:40:14.640" endtime="20211019 06:40:22.503"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:40:22.505" level="INFO">{
  "metadata": {},
  "name": "65136-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-19T06:40:06.046Z",
  "modificationTime": "2021-10-19T06:40:06.046Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211019 06:40:22.504" endtime="20211019 06:40:22.505"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:40:22.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:40:22.505" endtime="20211019 06:40:22.506"/>
</kw>
<status status="PASS" starttime="20211019 06:40:14.639" endtime="20211019 06:40:22.506"/>
</kw>
<msg timestamp="20211019 06:40:22.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:40:14.639" endtime="20211019 06:40:22.506"/>
</kw>
<msg timestamp="20211019 06:40:22.506" level="INFO">${result} = {
  "metadata": {},
  "name": "65136-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211019 06:40:14.637" endtime="20211019 06:40:22.507"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 06:40:22.507" endtime="20211019 06:40:22.507"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:40:22.512" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/65136-rpcwoport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:40:28.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:40:28.071" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:40:22.509" endtime="20211019 06:40:28.071"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:40:28.074" level="INFO"/>
<status status="PASS" starttime="20211019 06:40:28.072" endtime="20211019 06:40:28.074"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:40:28.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:40:28.075" endtime="20211019 06:40:28.077"/>
</kw>
<status status="PASS" starttime="20211019 06:40:22.509" endtime="20211019 06:40:28.078"/>
</kw>
<msg timestamp="20211019 06:40:28.078" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:40:22.508" endtime="20211019 06:40:28.078"/>
</kw>
<status status="PASS" starttime="20211019 06:40:22.507" endtime="20211019 06:40:28.078"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:40:28.093" level="INFO">Running command 'ozone sh volume info o3://om:9862/65136-rpcwoport | jq -r '. | select(.name=="65136-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:40:35.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:40:35.659" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211019 06:40:28.084" endtime="20211019 06:40:35.659"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:40:35.662" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211019 06:40:35.660" endtime="20211019 06:40:35.662"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:40:35.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:40:35.663" endtime="20211019 06:40:35.664"/>
</kw>
<status status="PASS" starttime="20211019 06:40:28.082" endtime="20211019 06:40:35.665"/>
</kw>
<msg timestamp="20211019 06:40:35.665" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:40:28.080" endtime="20211019 06:40:35.665"/>
</kw>
<msg timestamp="20211019 06:40:35.666" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211019 06:40:28.079" endtime="20211019 06:40:35.666"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211019 06:40:35.666" endtime="20211019 06:40:35.667"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:40:35.674" level="INFO">Running command 'ozone sh bucket create o3://om:9862/65136-rpcwoport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:40:42.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:40:42.729" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:40:35.671" endtime="20211019 06:40:42.729"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:40:42.730" level="INFO"/>
<status status="PASS" starttime="20211019 06:40:42.729" endtime="20211019 06:40:42.730"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:40:42.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:40:42.730" endtime="20211019 06:40:42.731"/>
</kw>
<status status="PASS" starttime="20211019 06:40:35.670" endtime="20211019 06:40:42.731"/>
</kw>
<msg timestamp="20211019 06:40:42.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:40:35.669" endtime="20211019 06:40:42.732"/>
</kw>
<status status="PASS" starttime="20211019 06:40:35.667" endtime="20211019 06:40:42.732"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:40:42.740" level="INFO">Running command 'ozone sh bucket info o3://om:9862/65136-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:40:50.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:40:50.640" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211019 06:40:42.736" endtime="20211019 06:40:50.640"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:40:50.642" level="INFO">DISK</msg>
<status status="PASS" starttime="20211019 06:40:50.641" endtime="20211019 06:40:50.642"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:40:50.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:40:50.643" endtime="20211019 06:40:50.644"/>
</kw>
<status status="PASS" starttime="20211019 06:40:42.735" endtime="20211019 06:40:50.644"/>
</kw>
<msg timestamp="20211019 06:40:50.645" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:40:42.734" endtime="20211019 06:40:50.645"/>
</kw>
<msg timestamp="20211019 06:40:50.645" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211019 06:40:42.732" endtime="20211019 06:40:50.646"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211019 06:40:50.646" endtime="20211019 06:40:50.647"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:40:50.654" level="INFO">Running command 'ozone sh bucket info o3://om:9862/65136-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:40:58.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:40:58.364" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211019 06:40:50.651" endtime="20211019 06:40:58.364"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:40:58.366" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211019 06:40:58.365" endtime="20211019 06:40:58.366"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:40:58.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:40:58.366" endtime="20211019 06:40:58.367"/>
</kw>
<status status="PASS" starttime="20211019 06:40:50.650" endtime="20211019 06:40:58.367"/>
</kw>
<msg timestamp="20211019 06:40:58.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:40:50.649" endtime="20211019 06:40:58.368"/>
</kw>
<msg timestamp="20211019 06:40:58.368" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211019 06:40:50.647" endtime="20211019 06:40:58.368"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211019 06:40:58.368" endtime="20211019 06:40:58.369"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:40:58.375" level="INFO">Running command 'ozone sh bucket info o3://om:9862/65136-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:41:05.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:41:05.816" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211019 06:40:58.372" endtime="20211019 06:41:05.816"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:41:05.820" level="INFO">100</msg>
<status status="PASS" starttime="20211019 06:41:05.819" endtime="20211019 06:41:05.820"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:41:05.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:41:05.820" endtime="20211019 06:41:05.821"/>
</kw>
<status status="PASS" starttime="20211019 06:40:58.371" endtime="20211019 06:41:05.821"/>
</kw>
<msg timestamp="20211019 06:41:05.822" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:40:58.371" endtime="20211019 06:41:05.822"/>
</kw>
<msg timestamp="20211019 06:41:05.822" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211019 06:40:58.369" endtime="20211019 06:41:05.822"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211019 06:41:05.822" endtime="20211019 06:41:05.823"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:41:05.828" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/65136-rpcwoport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:41:13.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:41:13.628" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:41:05.826" endtime="20211019 06:41:13.628"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:41:13.630" level="INFO"/>
<status status="PASS" starttime="20211019 06:41:13.629" endtime="20211019 06:41:13.630"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:41:13.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:41:13.630" endtime="20211019 06:41:13.631"/>
</kw>
<status status="PASS" starttime="20211019 06:41:05.824" endtime="20211019 06:41:13.631"/>
</kw>
<msg timestamp="20211019 06:41:13.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:41:05.824" endtime="20211019 06:41:13.631"/>
</kw>
<status status="PASS" starttime="20211019 06:41:05.823" endtime="20211019 06:41:13.632"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:41:13.642" level="INFO">Running command 'ozone sh bucket info o3://om:9862/65136-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:41:21.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:41:21.234" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211019 06:41:13.636" endtime="20211019 06:41:21.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:41:21.236" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211019 06:41:21.235" endtime="20211019 06:41:21.237"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:41:21.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:41:21.237" endtime="20211019 06:41:21.238"/>
</kw>
<status status="PASS" starttime="20211019 06:41:13.635" endtime="20211019 06:41:21.238"/>
</kw>
<msg timestamp="20211019 06:41:21.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:41:13.634" endtime="20211019 06:41:21.239"/>
</kw>
<msg timestamp="20211019 06:41:21.239" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211019 06:41:13.632" endtime="20211019 06:41:21.240"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211019 06:41:21.240" endtime="20211019 06:41:21.241"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:41:21.249" level="INFO">Running command 'ozone sh bucket info o3://om:9862/65136-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:41:28.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:41:28.969" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211019 06:41:21.245" endtime="20211019 06:41:28.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:41:28.970" level="INFO">1000</msg>
<status status="PASS" starttime="20211019 06:41:28.969" endtime="20211019 06:41:28.970"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:41:28.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:41:28.971" endtime="20211019 06:41:28.971"/>
</kw>
<status status="PASS" starttime="20211019 06:41:21.243" endtime="20211019 06:41:28.972"/>
</kw>
<msg timestamp="20211019 06:41:28.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:41:21.243" endtime="20211019 06:41:28.972"/>
</kw>
<msg timestamp="20211019 06:41:28.972" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211019 06:41:21.241" endtime="20211019 06:41:28.972"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211019 06:41:28.973" endtime="20211019 06:41:28.973"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:41:28.978" level="INFO">Running command 'ozone sh bucket list o3://om:9862/65136-rpcwoport/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:41:35.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:41:35.005" level="INFO">${output} = 65136-rpcwoport</msg>
<status status="PASS" starttime="20211019 06:41:28.975" endtime="20211019 06:41:35.005"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:41:35.007" level="INFO">65136-rpcwoport</msg>
<status status="PASS" starttime="20211019 06:41:35.006" endtime="20211019 06:41:35.007"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:41:35.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:41:35.008" endtime="20211019 06:41:35.009"/>
</kw>
<status status="PASS" starttime="20211019 06:41:28.975" endtime="20211019 06:41:35.010"/>
</kw>
<msg timestamp="20211019 06:41:35.010" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:41:28.974" endtime="20211019 06:41:35.011"/>
</kw>
<msg timestamp="20211019 06:41:35.011" level="INFO">${result} = 65136-rpcwoport</msg>
<status status="PASS" starttime="20211019 06:41:28.973" endtime="20211019 06:41:35.011"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211019 06:41:35.012" endtime="20211019 06:41:35.013"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:41:35.025" level="INFO">Running command 'ozone sh key put o3://om:9862/65136-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:44:45.167" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211019 06:41:35.022" endtime="20211019 06:44:45.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211019 06:44:45.168" endtime="20211019 06:44:45.169"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211019 06:44:45.169" endtime="20211019 06:44:45.169"/>
</kw>
<status status="FAIL" starttime="20211019 06:41:35.021" endtime="20211019 06:44:45.169"/>
</kw>
<msg timestamp="20211019 06:44:45.169" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211019 06:41:35.017" endtime="20211019 06:44:45.169"/>
</kw>
<status status="FAIL" starttime="20211019 06:41:35.015" endtime="20211019 06:44:45.170"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211019 06:44:45.170" endtime="20211019 06:44:45.170"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211019 06:44:45.170" endtime="20211019 06:44:45.170"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211019 06:44:45.170" endtime="20211019 06:44:45.170"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211019 06:44:45.171" endtime="20211019 06:44:45.171"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211019 06:44:45.171" endtime="20211019 06:44:45.171"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211019 06:44:45.171" endtime="20211019 06:44:45.171"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211019 06:44:45.171" endtime="20211019 06:44:45.171"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211019 06:44:45.172" endtime="20211019 06:44:45.172"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211019 06:44:45.172" endtime="20211019 06:44:45.172"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211019 06:44:45.172" endtime="20211019 06:44:45.172"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211019 06:44:45.172" endtime="20211019 06:44:45.172"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211019 06:44:45.173" endtime="20211019 06:44:45.173"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211019 06:44:45.173" endtime="20211019 06:44:45.173"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211019 06:44:45.173" endtime="20211019 06:44:45.173"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211019 06:44:45.173" endtime="20211019 06:44:45.173"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211019 06:44:45.174" endtime="20211019 06:44:45.174"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211019 06:44:45.174" endtime="20211019 06:44:45.174"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211019 06:44:45.174" endtime="20211019 06:44:45.174"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211019 06:44:45.174" endtime="20211019 06:44:45.174"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211019 06:44:45.174" endtime="20211019 06:44:45.175"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211019 06:44:45.175" endtime="20211019 06:44:45.175"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211019 06:44:45.175" endtime="20211019 06:44:45.175"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211019 06:44:45.175" endtime="20211019 06:44:45.175"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211019 06:44:45.175" endtime="20211019 06:44:45.175"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211019 06:44:45.176" endtime="20211019 06:44:45.176"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211019 06:44:45.176" endtime="20211019 06:44:45.176"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211019 06:44:45.176" endtime="20211019 06:44:45.176"/>
</kw>
<status status="FAIL" starttime="20211019 06:41:35.014" endtime="20211019 06:44:45.177"/>
</kw>
<status status="FAIL" starttime="20211019 06:41:35.013" endtime="20211019 06:44:45.177"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211019 06:44:45.177" endtime="20211019 06:44:45.177"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211019 06:44:45.177" endtime="20211019 06:44:45.177"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211019 06:44:45.178" endtime="20211019 06:44:45.178"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211019 06:44:45.178" endtime="20211019 06:44:45.178"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211019 06:44:45.178" endtime="20211019 06:44:45.178"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211019 06:44:45.179" endtime="20211019 06:44:45.179"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211019 06:44:45.179" endtime="20211019 06:44:45.179"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211019 06:44:45.180" endtime="20211019 06:44:45.180"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211019 06:44:45.180" endtime="20211019 06:44:45.180"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211019 06:44:45.180" endtime="20211019 06:44:45.180"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211019 06:44:45.180" endtime="20211019 06:44:45.181"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211019 06:44:45.181" endtime="20211019 06:44:45.181"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211019 06:44:45.182" endtime="20211019 06:44:45.182"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211019 06:44:45.182" endtime="20211019 06:44:45.182"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211019 06:44:45.182" endtime="20211019 06:44:45.182"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211019 06:44:45.182" endtime="20211019 06:44:45.182"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211019 06:44:45.182" endtime="20211019 06:44:45.183"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211019 06:44:45.183" endtime="20211019 06:44:45.183"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211019 06:44:45.183" endtime="20211019 06:44:45.183"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211019 06:44:45.183" endtime="20211019 06:44:45.183"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211019 06:44:45.183" endtime="20211019 06:44:45.184"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211019 06:44:45.184" endtime="20211019 06:44:45.184"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211019 06:44:45.184" endtime="20211019 06:44:45.184"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211019 06:44:45.184" endtime="20211019 06:44:45.184"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211019 06:44:45.184" endtime="20211019 06:44:45.184"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211019 06:44:45.185" endtime="20211019 06:44:45.185"/>
</kw>
<status status="FAIL" starttime="20211019 06:39:45.319" endtime="20211019 06:44:45.185"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211019 06:39:45.164" endtime="20211019 06:44:45.185">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:44:45.210" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:44:45.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:44:45.215" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211019 06:44:45.190" endtime="20211019 06:44:45.215"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:44:45.217" level="INFO">scm</msg>
<status status="PASS" starttime="20211019 06:44:45.216" endtime="20211019 06:44:45.217"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:44:45.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:44:45.217" endtime="20211019 06:44:45.218"/>
</kw>
<status status="PASS" starttime="20211019 06:44:45.190" endtime="20211019 06:44:45.219"/>
</kw>
<msg timestamp="20211019 06:44:45.219" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:44:45.190" endtime="20211019 06:44:45.219"/>
</kw>
<msg timestamp="20211019 06:44:45.220" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211019 06:44:45.189" endtime="20211019 06:44:45.220"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211019 06:44:45.221" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211019 06:44:45.220" endtime="20211019 06:44:45.221"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:44:45.227" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:44:45.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:44:45.234" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:44:45.224" endtime="20211019 06:44:45.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:44:45.236" level="INFO"/>
<status status="PASS" starttime="20211019 06:44:45.235" endtime="20211019 06:44:45.236"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:44:45.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:44:45.236" endtime="20211019 06:44:45.237"/>
</kw>
<status status="PASS" starttime="20211019 06:44:45.223" endtime="20211019 06:44:45.237"/>
</kw>
<msg timestamp="20211019 06:44:45.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:44:45.223" endtime="20211019 06:44:45.238"/>
</kw>
<status status="PASS" starttime="20211019 06:44:45.222" endtime="20211019 06:44:45.238"/>
</kw>
<status status="PASS" starttime="20211019 06:44:45.221" endtime="20211019 06:44:45.238"/>
</kw>
<status status="PASS" starttime="20211019 06:44:45.188" endtime="20211019 06:44:45.238"/>
</kw>
<status status="PASS" starttime="20211019 06:44:45.188" endtime="20211019 06:44:45.238"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:44:45.243" level="INFO">Running command 'ozone sh volume create o3://om:9862/65136-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:44:54.085" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:44:54.086" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:44:45.241" endtime="20211019 06:44:54.086"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:44:54.089" level="INFO"/>
<status status="PASS" starttime="20211019 06:44:54.087" endtime="20211019 06:44:54.089"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:44:54.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:44:54.090" endtime="20211019 06:44:54.091"/>
</kw>
<status status="PASS" starttime="20211019 06:44:45.241" endtime="20211019 06:44:54.092"/>
</kw>
<msg timestamp="20211019 06:44:54.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:44:45.240" endtime="20211019 06:44:54.093"/>
</kw>
<status status="PASS" starttime="20211019 06:44:45.239" endtime="20211019 06:44:54.094"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:44:54.103" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/65136-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:45:02.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:45:02.028" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211019 06:44:54.099" endtime="20211019 06:45:02.028"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:45:02.029" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211019 06:45:02.029" endtime="20211019 06:45:02.029"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:45:02.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:45:02.030" endtime="20211019 06:45:02.031"/>
</kw>
<status status="PASS" starttime="20211019 06:44:54.097" endtime="20211019 06:45:02.031"/>
</kw>
<msg timestamp="20211019 06:45:02.031" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:44:54.096" endtime="20211019 06:45:02.031"/>
</kw>
<msg timestamp="20211019 06:45:02.032" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211019 06:44:54.094" endtime="20211019 06:45:02.032"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211019 06:45:02.032" endtime="20211019 06:45:02.033"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:45:02.039" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/65136-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:45:08.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:45:08.944" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211019 06:45:02.036" endtime="20211019 06:45:08.944"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:45:08.946" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211019 06:45:08.945" endtime="20211019 06:45:08.946"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:45:08.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:45:08.946" endtime="20211019 06:45:08.947"/>
</kw>
<status status="PASS" starttime="20211019 06:45:02.035" endtime="20211019 06:45:08.947"/>
</kw>
<msg timestamp="20211019 06:45:08.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:45:02.035" endtime="20211019 06:45:08.947"/>
</kw>
<msg timestamp="20211019 06:45:08.948" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211019 06:45:02.034" endtime="20211019 06:45:08.948"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:45:08.953" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/65136-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:45:17.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:45:17.154" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211019 06:45:08.950" endtime="20211019 06:45:17.154"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:45:17.155" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211019 06:45:17.154" endtime="20211019 06:45:17.155"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:45:17.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:45:17.156" endtime="20211019 06:45:17.156"/>
</kw>
<status status="PASS" starttime="20211019 06:45:08.949" endtime="20211019 06:45:17.157"/>
</kw>
<msg timestamp="20211019 06:45:17.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:45:08.949" endtime="20211019 06:45:17.158"/>
</kw>
<msg timestamp="20211019 06:45:17.158" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211019 06:45:08.948" endtime="20211019 06:45:17.158"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211019 06:45:17.158" endtime="20211019 06:45:17.159"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:45:17.165" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/65136-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:45:24.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:45:24.412" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211019 06:45:17.162" endtime="20211019 06:45:24.412"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:45:24.414" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211019 06:45:24.413" endtime="20211019 06:45:24.414"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:45:24.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:45:24.415" endtime="20211019 06:45:24.416"/>
</kw>
<status status="PASS" starttime="20211019 06:45:17.161" endtime="20211019 06:45:24.416"/>
</kw>
<msg timestamp="20211019 06:45:24.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:45:17.160" endtime="20211019 06:45:24.417"/>
</kw>
<msg timestamp="20211019 06:45:24.417" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211019 06:45:17.160" endtime="20211019 06:45:24.417"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:45:24.425" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/65136-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:45:32.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:45:32.398" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211019 06:45:24.422" endtime="20211019 06:45:32.399"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:45:32.400" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211019 06:45:32.400" endtime="20211019 06:45:32.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:45:32.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:45:32.401" endtime="20211019 06:45:32.401"/>
</kw>
<status status="PASS" starttime="20211019 06:45:24.421" endtime="20211019 06:45:32.402"/>
</kw>
<msg timestamp="20211019 06:45:32.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:45:24.419" endtime="20211019 06:45:32.403"/>
</kw>
<msg timestamp="20211019 06:45:32.403" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211019 06:45:24.418" endtime="20211019 06:45:32.403"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211019 06:45:32.404" endtime="20211019 06:45:32.407"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:45:32.414" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/65136-rpcwoport2 -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:45:37.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:45:37.718" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211019 06:45:32.411" endtime="20211019 06:45:37.718"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:45:37.719" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211019 06:45:37.718" endtime="20211019 06:45:37.719"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:45:37.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:45:37.720" endtime="20211019 06:45:37.720"/>
</kw>
<status status="PASS" starttime="20211019 06:45:32.410" endtime="20211019 06:45:37.721"/>
</kw>
<msg timestamp="20211019 06:45:37.721" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:45:32.409" endtime="20211019 06:45:37.721"/>
</kw>
<msg timestamp="20211019 06:45:37.721" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211019 06:45:32.407" endtime="20211019 06:45:37.721"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:45:37.726" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/65136-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:45:46.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:45:46.123" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211019 06:45:37.723" endtime="20211019 06:45:46.123"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:45:46.124" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211019 06:45:46.123" endtime="20211019 06:45:46.124"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:45:46.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:45:46.125" endtime="20211019 06:45:46.125"/>
</kw>
<status status="PASS" starttime="20211019 06:45:37.723" endtime="20211019 06:45:46.126"/>
</kw>
<msg timestamp="20211019 06:45:46.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:45:37.722" endtime="20211019 06:45:46.126"/>
</kw>
<msg timestamp="20211019 06:45:46.126" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211019 06:45:37.721" endtime="20211019 06:45:46.126"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211019 06:45:46.126" endtime="20211019 06:45:46.127"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211019 06:45:46.128" endtime="20211019 06:45:46.129"/>
</kw>
<status status="PASS" starttime="20211019 06:44:45.238" endtime="20211019 06:45:46.129"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211019 06:44:45.186" endtime="20211019 06:45:46.129"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:45:46.138" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:45:46.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:45:46.142" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211019 06:45:46.135" endtime="20211019 06:45:46.142"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:45:46.144" level="INFO">scm</msg>
<status status="PASS" starttime="20211019 06:45:46.143" endtime="20211019 06:45:46.144"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:45:46.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:45:46.144" endtime="20211019 06:45:46.145"/>
</kw>
<status status="PASS" starttime="20211019 06:45:46.134" endtime="20211019 06:45:46.146"/>
</kw>
<msg timestamp="20211019 06:45:46.146" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:45:46.134" endtime="20211019 06:45:46.146"/>
</kw>
<msg timestamp="20211019 06:45:46.146" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211019 06:45:46.133" endtime="20211019 06:45:46.147"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211019 06:45:46.148" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211019 06:45:46.147" endtime="20211019 06:45:46.148"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:45:46.154" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:45:46.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:45:46.203" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:45:46.151" endtime="20211019 06:45:46.203"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:45:46.204" level="INFO"/>
<status status="PASS" starttime="20211019 06:45:46.203" endtime="20211019 06:45:46.204"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:45:46.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:45:46.204" endtime="20211019 06:45:46.205"/>
</kw>
<status status="PASS" starttime="20211019 06:45:46.151" endtime="20211019 06:45:46.205"/>
</kw>
<msg timestamp="20211019 06:45:46.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:45:46.150" endtime="20211019 06:45:46.206"/>
</kw>
<status status="PASS" starttime="20211019 06:45:46.149" endtime="20211019 06:45:46.206"/>
</kw>
<status status="PASS" starttime="20211019 06:45:46.148" endtime="20211019 06:45:46.206"/>
</kw>
<status status="PASS" starttime="20211019 06:45:46.132" endtime="20211019 06:45:46.206"/>
</kw>
<status status="PASS" starttime="20211019 06:45:46.131" endtime="20211019 06:45:46.206"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:45:46.212" level="INFO">Running command 'ozone sh bucket create o3://om:9862/65136-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:45:53.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:45:53.677" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:45:46.209" endtime="20211019 06:45:53.677"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:45:53.679" level="INFO"/>
<status status="PASS" starttime="20211019 06:45:53.678" endtime="20211019 06:45:53.679"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:45:53.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:45:53.679" endtime="20211019 06:45:53.680"/>
</kw>
<status status="PASS" starttime="20211019 06:45:46.209" endtime="20211019 06:45:53.681"/>
</kw>
<msg timestamp="20211019 06:45:53.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:45:46.208" endtime="20211019 06:45:53.681"/>
</kw>
<status status="PASS" starttime="20211019 06:45:46.207" endtime="20211019 06:45:53.682"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:45:53.688" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/65136-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:46:01.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:46:01.515" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211019 06:45:53.685" endtime="20211019 06:46:01.515"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:46:01.517" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211019 06:46:01.516" endtime="20211019 06:46:01.517"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:46:01.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:46:01.518" endtime="20211019 06:46:01.519"/>
</kw>
<status status="PASS" starttime="20211019 06:45:53.684" endtime="20211019 06:46:01.520"/>
</kw>
<msg timestamp="20211019 06:46:01.520" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:45:53.684" endtime="20211019 06:46:01.521"/>
</kw>
<msg timestamp="20211019 06:46:01.522" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211019 06:45:53.682" endtime="20211019 06:46:01.522"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211019 06:46:01.522" endtime="20211019 06:46:01.524"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:46:01.531" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/65136-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:46:08.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:46:08.433" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20211019 06:46:01.528" endtime="20211019 06:46:08.433"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:46:08.435" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20211019 06:46:08.434" endtime="20211019 06:46:08.436"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:46:08.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:46:08.436" endtime="20211019 06:46:08.437"/>
</kw>
<status status="PASS" starttime="20211019 06:46:01.527" endtime="20211019 06:46:08.438"/>
</kw>
<msg timestamp="20211019 06:46:08.438" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:46:01.526" endtime="20211019 06:46:08.439"/>
</kw>
<msg timestamp="20211019 06:46:08.439" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20211019 06:46:01.524" endtime="20211019 06:46:08.439"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:46:08.447" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/65136-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:46:16.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:46:16.859" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211019 06:46:08.443" endtime="20211019 06:46:16.859"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:46:16.861" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211019 06:46:16.860" endtime="20211019 06:46:16.861"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:46:16.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:46:16.862" endtime="20211019 06:46:16.863"/>
</kw>
<status status="PASS" starttime="20211019 06:46:08.442" endtime="20211019 06:46:16.863"/>
</kw>
<msg timestamp="20211019 06:46:16.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:46:08.441" endtime="20211019 06:46:16.864"/>
</kw>
<msg timestamp="20211019 06:46:16.864" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211019 06:46:08.440" endtime="20211019 06:46:16.864"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211019 06:46:16.865" endtime="20211019 06:46:16.866"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:46:16.873" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/65136-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:46:23.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:46:23.849" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211019 06:46:16.870" endtime="20211019 06:46:23.849"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:46:23.851" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211019 06:46:23.850" endtime="20211019 06:46:23.851"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:46:23.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:46:23.851" endtime="20211019 06:46:23.852"/>
</kw>
<status status="PASS" starttime="20211019 06:46:16.869" endtime="20211019 06:46:23.852"/>
</kw>
<msg timestamp="20211019 06:46:23.852" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:46:16.868" endtime="20211019 06:46:23.852"/>
</kw>
<msg timestamp="20211019 06:46:23.853" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211019 06:46:16.867" endtime="20211019 06:46:23.853"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:46:23.857" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/65136-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:46:32.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:46:32.026" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211019 06:46:23.855" endtime="20211019 06:46:32.026"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:46:32.027" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211019 06:46:32.027" endtime="20211019 06:46:32.028"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:46:32.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:46:32.028" endtime="20211019 06:46:32.028"/>
</kw>
<status status="PASS" starttime="20211019 06:46:23.854" endtime="20211019 06:46:32.029"/>
</kw>
<msg timestamp="20211019 06:46:32.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:46:23.854" endtime="20211019 06:46:32.029"/>
</kw>
<msg timestamp="20211019 06:46:32.030" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211019 06:46:23.853" endtime="20211019 06:46:32.030"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211019 06:46:32.030" endtime="20211019 06:46:32.032"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:46:32.039" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/65136-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:46:39.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:46:39.170" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211019 06:46:32.036" endtime="20211019 06:46:39.170"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:46:39.174" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211019 06:46:39.171" endtime="20211019 06:46:39.174"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:46:39.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:46:39.174" endtime="20211019 06:46:39.176"/>
</kw>
<status status="PASS" starttime="20211019 06:46:32.034" endtime="20211019 06:46:39.177"/>
</kw>
<msg timestamp="20211019 06:46:39.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:46:32.034" endtime="20211019 06:46:39.178"/>
</kw>
<msg timestamp="20211019 06:46:39.179" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211019 06:46:32.033" endtime="20211019 06:46:39.179"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:46:39.187" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/65136-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:46:46.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:46:46.606" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211019 06:46:39.183" endtime="20211019 06:46:46.606"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:46:46.608" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211019 06:46:46.607" endtime="20211019 06:46:46.608"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:46:46.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:46:46.608" endtime="20211019 06:46:46.609"/>
</kw>
<status status="PASS" starttime="20211019 06:46:39.182" endtime="20211019 06:46:46.609"/>
</kw>
<msg timestamp="20211019 06:46:46.609" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:46:39.181" endtime="20211019 06:46:46.610"/>
</kw>
<msg timestamp="20211019 06:46:46.610" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211019 06:46:39.179" endtime="20211019 06:46:46.610"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211019 06:46:46.610" endtime="20211019 06:46:46.611"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211019 06:46:46.611" endtime="20211019 06:46:46.611"/>
</kw>
<status status="PASS" starttime="20211019 06:45:46.207" endtime="20211019 06:46:46.612"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211019 06:45:46.130" endtime="20211019 06:46:46.612"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:46:46.622" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:46:46.626" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:46:46.627" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211019 06:46:46.619" endtime="20211019 06:46:46.627"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:46:46.628" level="INFO">scm</msg>
<status status="PASS" starttime="20211019 06:46:46.627" endtime="20211019 06:46:46.628"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:46:46.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:46:46.628" endtime="20211019 06:46:46.629"/>
</kw>
<status status="PASS" starttime="20211019 06:46:46.618" endtime="20211019 06:46:46.630"/>
</kw>
<msg timestamp="20211019 06:46:46.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:46:46.617" endtime="20211019 06:46:46.630"/>
</kw>
<msg timestamp="20211019 06:46:46.631" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211019 06:46:46.617" endtime="20211019 06:46:46.631"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211019 06:46:46.632" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211019 06:46:46.631" endtime="20211019 06:46:46.632"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:46:46.637" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:46:46.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:46:46.646" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:46:46.635" endtime="20211019 06:46:46.647"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:46:46.648" level="INFO"/>
<status status="PASS" starttime="20211019 06:46:46.647" endtime="20211019 06:46:46.648"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:46:46.649" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:46:46.648" endtime="20211019 06:46:46.650"/>
</kw>
<status status="PASS" starttime="20211019 06:46:46.634" endtime="20211019 06:46:46.650"/>
</kw>
<msg timestamp="20211019 06:46:46.650" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:46:46.634" endtime="20211019 06:46:46.650"/>
</kw>
<status status="PASS" starttime="20211019 06:46:46.633" endtime="20211019 06:46:46.651"/>
</kw>
<status status="PASS" starttime="20211019 06:46:46.632" endtime="20211019 06:46:46.651"/>
</kw>
<status status="PASS" starttime="20211019 06:46:46.616" endtime="20211019 06:46:46.651"/>
</kw>
<status status="PASS" starttime="20211019 06:46:46.615" endtime="20211019 06:46:46.651"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:46:46.656" level="INFO">Running command 'ozone sh key put o3://om:9862/65136-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:49:57.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:49:57.825" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:46:46.654" endtime="20211019 06:49:57.825"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:49:57.827" level="INFO"/>
<status status="PASS" starttime="20211019 06:49:57.826" endtime="20211019 06:49:57.827"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:49:57.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:49:57.827" endtime="20211019 06:49:57.828"/>
</kw>
<status status="PASS" starttime="20211019 06:46:46.653" endtime="20211019 06:49:57.828"/>
</kw>
<msg timestamp="20211019 06:49:57.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:46:46.653" endtime="20211019 06:49:57.829"/>
</kw>
<status status="PASS" starttime="20211019 06:46:46.652" endtime="20211019 06:49:57.829"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:49:57.834" level="INFO">Running command 'ozone sh key getacl o3://om:9862/65136-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:50:04.567" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:50:04.567" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211019 06:49:57.831" endtime="20211019 06:50:04.567"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:50:04.569" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211019 06:50:04.568" endtime="20211019 06:50:04.569"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:50:04.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:50:04.569" endtime="20211019 06:50:04.570"/>
</kw>
<status status="PASS" starttime="20211019 06:49:57.830" endtime="20211019 06:50:04.570"/>
</kw>
<msg timestamp="20211019 06:50:04.570" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:49:57.830" endtime="20211019 06:50:04.570"/>
</kw>
<msg timestamp="20211019 06:50:04.571" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211019 06:49:57.829" endtime="20211019 06:50:04.571"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211019 06:50:04.571" endtime="20211019 06:50:04.571"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:50:04.578" level="INFO">Running command 'ozone sh key addacl o3://om:9862/65136-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:50:11.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:50:11.958" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211019 06:50:04.575" endtime="20211019 06:50:11.959"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:50:11.960" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211019 06:50:11.959" endtime="20211019 06:50:11.960"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:50:11.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:50:11.960" endtime="20211019 06:50:11.961"/>
</kw>
<status status="PASS" starttime="20211019 06:50:04.574" endtime="20211019 06:50:11.962"/>
</kw>
<msg timestamp="20211019 06:50:11.963" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:50:04.573" endtime="20211019 06:50:11.963"/>
</kw>
<msg timestamp="20211019 06:50:11.963" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211019 06:50:04.572" endtime="20211019 06:50:11.963"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:50:11.968" level="INFO">Running command 'ozone sh key getacl o3://om:9862/65136-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:50:20.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:50:20.327" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211019 06:50:11.965" endtime="20211019 06:50:20.327"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:50:20.328" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211019 06:50:20.327" endtime="20211019 06:50:20.328"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:50:20.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:50:20.328" endtime="20211019 06:50:20.329"/>
</kw>
<status status="PASS" starttime="20211019 06:50:11.964" endtime="20211019 06:50:20.330"/>
</kw>
<msg timestamp="20211019 06:50:20.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:50:11.964" endtime="20211019 06:50:20.330"/>
</kw>
<msg timestamp="20211019 06:50:20.330" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211019 06:50:11.963" endtime="20211019 06:50:20.330"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211019 06:50:20.330" endtime="20211019 06:50:20.331"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:50:20.339" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/65136-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:50:25.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:50:25.720" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211019 06:50:20.335" endtime="20211019 06:50:25.720"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:50:25.722" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211019 06:50:25.721" endtime="20211019 06:50:25.722"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:50:25.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:50:25.723" endtime="20211019 06:50:25.723"/>
</kw>
<status status="PASS" starttime="20211019 06:50:20.333" endtime="20211019 06:50:25.724"/>
</kw>
<msg timestamp="20211019 06:50:25.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:50:20.333" endtime="20211019 06:50:25.724"/>
</kw>
<msg timestamp="20211019 06:50:25.724" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211019 06:50:20.332" endtime="20211019 06:50:25.724"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:50:25.729" level="INFO">Running command 'ozone sh key getacl o3://om:9862/65136-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:50:33.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:50:33.050" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211019 06:50:25.726" endtime="20211019 06:50:33.050"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:50:33.051" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20211019 06:50:33.050" endtime="20211019 06:50:33.051"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:50:33.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:50:33.052" endtime="20211019 06:50:33.053"/>
</kw>
<status status="PASS" starttime="20211019 06:50:25.726" endtime="20211019 06:50:33.054"/>
</kw>
<msg timestamp="20211019 06:50:33.054" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:50:25.725" endtime="20211019 06:50:33.055"/>
</kw>
<msg timestamp="20211019 06:50:33.055" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211019 06:50:25.725" endtime="20211019 06:50:33.056"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211019 06:50:33.056" endtime="20211019 06:50:33.057"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:50:33.062" level="INFO">Running command 'ozone sh key setacl o3://om:9862/65136-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:50:38.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:50:38.623" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211019 06:50:33.059" endtime="20211019 06:50:38.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:50:38.626" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211019 06:50:38.624" endtime="20211019 06:50:38.626"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:50:38.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:50:38.626" endtime="20211019 06:50:38.628"/>
</kw>
<status status="PASS" starttime="20211019 06:50:33.059" endtime="20211019 06:50:38.629"/>
</kw>
<msg timestamp="20211019 06:50:38.629" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:50:33.058" endtime="20211019 06:50:38.629"/>
</kw>
<msg timestamp="20211019 06:50:38.630" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211019 06:50:33.057" endtime="20211019 06:50:38.630"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:50:38.639" level="INFO">Running command 'ozone sh key getacl o3://om:9862/65136-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:50:46.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:50:46.471" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211019 06:50:38.635" endtime="20211019 06:50:46.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:50:46.474" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211019 06:50:46.472" endtime="20211019 06:50:46.474"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:50:46.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:50:46.475" endtime="20211019 06:50:46.476"/>
</kw>
<status status="PASS" starttime="20211019 06:50:38.634" endtime="20211019 06:50:46.477"/>
</kw>
<msg timestamp="20211019 06:50:46.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:50:38.633" endtime="20211019 06:50:46.478"/>
</kw>
<msg timestamp="20211019 06:50:46.479" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211019 06:50:38.631" endtime="20211019 06:50:46.479"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211019 06:50:46.479" endtime="20211019 06:50:46.481"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211019 06:50:46.481" endtime="20211019 06:50:46.483"/>
</kw>
<status status="PASS" starttime="20211019 06:46:46.651" endtime="20211019 06:50:46.484"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211019 06:46:46.613" endtime="20211019 06:50:46.485"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient prefix acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:50:46.499" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:50:46.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:50:46.503" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211019 06:50:46.493" endtime="20211019 06:50:46.504"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:50:46.507" level="INFO">scm</msg>
<status status="PASS" starttime="20211019 06:50:46.505" endtime="20211019 06:50:46.507"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:50:46.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:50:46.507" endtime="20211019 06:50:46.508"/>
</kw>
<status status="PASS" starttime="20211019 06:50:46.492" endtime="20211019 06:50:46.509"/>
</kw>
<msg timestamp="20211019 06:50:46.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:50:46.492" endtime="20211019 06:50:46.509"/>
</kw>
<msg timestamp="20211019 06:50:46.510" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211019 06:50:46.491" endtime="20211019 06:50:46.510"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211019 06:50:46.511" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211019 06:50:46.510" endtime="20211019 06:50:46.511"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:50:46.518" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:50:46.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:50:46.595" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:50:46.515" endtime="20211019 06:50:46.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:50:46.596" level="INFO"/>
<status status="PASS" starttime="20211019 06:50:46.596" endtime="20211019 06:50:46.597"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:50:46.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:50:46.597" endtime="20211019 06:50:46.597"/>
</kw>
<status status="PASS" starttime="20211019 06:50:46.514" endtime="20211019 06:50:46.598"/>
</kw>
<msg timestamp="20211019 06:50:46.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:50:46.513" endtime="20211019 06:50:46.598"/>
</kw>
<status status="PASS" starttime="20211019 06:50:46.512" endtime="20211019 06:50:46.598"/>
</kw>
<status status="PASS" starttime="20211019 06:50:46.511" endtime="20211019 06:50:46.598"/>
</kw>
<status status="PASS" starttime="20211019 06:50:46.490" endtime="20211019 06:50:46.599"/>
</kw>
<status status="PASS" starttime="20211019 06:50:46.489" endtime="20211019 06:50:46.599"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:50:46.604" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/65136-rpcwoport2/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:50:53.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:50:53.435" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211019 06:50:46.602" endtime="20211019 06:50:53.435"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:50:53.436" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211019 06:50:53.435" endtime="20211019 06:50:53.436"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:50:53.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:50:53.436" endtime="20211019 06:50:53.437"/>
</kw>
<status status="PASS" starttime="20211019 06:50:46.601" endtime="20211019 06:50:53.437"/>
</kw>
<msg timestamp="20211019 06:50:53.437" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:50:46.601" endtime="20211019 06:50:53.438"/>
</kw>
<status status="PASS" starttime="20211019 06:50:46.600" endtime="20211019 06:50:53.438"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:50:53.442" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/65136-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:50:59.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:50:59.730" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211019 06:50:53.440" endtime="20211019 06:50:59.730"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:50:59.732" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211019 06:50:59.731" endtime="20211019 06:50:59.732"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:50:59.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:50:59.732" endtime="20211019 06:50:59.733"/>
</kw>
<status status="PASS" starttime="20211019 06:50:53.439" endtime="20211019 06:50:59.733"/>
</kw>
<msg timestamp="20211019 06:50:59.733" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:50:53.439" endtime="20211019 06:50:59.733"/>
</kw>
<msg timestamp="20211019 06:50:59.734" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211019 06:50:53.438" endtime="20211019 06:50:59.734"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211019 06:50:59.734" endtime="20211019 06:50:59.735"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:50:59.740" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/65136-rpcwoport2/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:51:07.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:51:07.395" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20211019 06:50:59.737" endtime="20211019 06:51:07.395"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:51:07.398" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20211019 06:51:07.396" endtime="20211019 06:51:07.398"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:51:07.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:51:07.398" endtime="20211019 06:51:07.399"/>
</kw>
<status status="PASS" starttime="20211019 06:50:59.736" endtime="20211019 06:51:07.400"/>
</kw>
<msg timestamp="20211019 06:51:07.400" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:50:59.736" endtime="20211019 06:51:07.400"/>
</kw>
<msg timestamp="20211019 06:51:07.401" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20211019 06:50:59.735" endtime="20211019 06:51:07.401"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:51:07.408" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/65136-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:51:15.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:51:15.259" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211019 06:51:07.405" endtime="20211019 06:51:15.259"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:51:15.260" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211019 06:51:15.259" endtime="20211019 06:51:15.260"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:51:15.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:51:15.260" endtime="20211019 06:51:15.276"/>
</kw>
<status status="PASS" starttime="20211019 06:51:07.404" endtime="20211019 06:51:15.277"/>
</kw>
<msg timestamp="20211019 06:51:15.278" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:51:07.403" endtime="20211019 06:51:15.278"/>
</kw>
<msg timestamp="20211019 06:51:15.280" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211019 06:51:07.401" endtime="20211019 06:51:15.280"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211019 06:51:15.282" endtime="20211019 06:51:15.284"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:51:15.299" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/65136-rpcwoport2/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:51:22.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:51:22.558" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211019 06:51:15.292" endtime="20211019 06:51:22.558"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:51:22.560" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211019 06:51:22.558" endtime="20211019 06:51:22.560"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:51:22.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:51:22.560" endtime="20211019 06:51:22.561"/>
</kw>
<status status="PASS" starttime="20211019 06:51:15.291" endtime="20211019 06:51:22.561"/>
</kw>
<msg timestamp="20211019 06:51:22.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:51:15.291" endtime="20211019 06:51:22.562"/>
</kw>
<msg timestamp="20211019 06:51:22.562" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211019 06:51:15.287" endtime="20211019 06:51:22.562"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:51:22.567" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/65136-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:51:30.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:51:30.575" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20211019 06:51:22.564" endtime="20211019 06:51:30.575"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:51:30.577" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211019 06:51:30.576" endtime="20211019 06:51:30.577"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:51:30.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:51:30.577" endtime="20211019 06:51:30.579"/>
</kw>
<status status="PASS" starttime="20211019 06:51:22.563" endtime="20211019 06:51:30.579"/>
</kw>
<msg timestamp="20211019 06:51:30.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:51:22.563" endtime="20211019 06:51:30.580"/>
</kw>
<msg timestamp="20211019 06:51:30.580" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20211019 06:51:22.562" endtime="20211019 06:51:30.580"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211019 06:51:30.580" endtime="20211019 06:51:30.582"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211019 06:51:30.582" endtime="20211019 06:51:30.583"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:51:30.590" level="INFO">Running command 'ozone sh key put o3://om:9862/65136-rpcwoport2/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:54:42.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:54:42.390" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:51:30.586" endtime="20211019 06:54:42.390"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:54:42.392" level="INFO"/>
<status status="PASS" starttime="20211019 06:54:42.391" endtime="20211019 06:54:42.392"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:54:42.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:54:42.393" endtime="20211019 06:54:42.394"/>
</kw>
<status status="PASS" starttime="20211019 06:51:30.585" endtime="20211019 06:54:42.394"/>
</kw>
<msg timestamp="20211019 06:54:42.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:51:30.585" endtime="20211019 06:54:42.395"/>
</kw>
<status status="PASS" starttime="20211019 06:51:30.583" endtime="20211019 06:54:42.396"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:54:42.403" level="INFO">Running command 'ozone sh key getacl o3://om:9862/65136-rpcwoport2/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:54:50.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:54:50.804" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211019 06:54:42.399" endtime="20211019 06:54:50.804"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:54:50.805" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211019 06:54:50.804" endtime="20211019 06:54:50.805"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:54:50.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:54:50.806" endtime="20211019 06:54:50.807"/>
</kw>
<status status="PASS" starttime="20211019 06:54:42.398" endtime="20211019 06:54:50.807"/>
</kw>
<msg timestamp="20211019 06:54:50.807" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:54:42.397" endtime="20211019 06:54:50.807"/>
</kw>
<msg timestamp="20211019 06:54:50.808" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211019 06:54:42.396" endtime="20211019 06:54:50.808"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211019 06:54:50.808" endtime="20211019 06:54:50.808"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211019 06:54:50.809" endtime="20211019 06:54:50.809"/>
</kw>
<status status="PASS" starttime="20211019 06:50:46.599" endtime="20211019 06:54:50.809"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211019 06:50:46.487" endtime="20211019 06:54:50.810"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:54:50.828" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:54:50.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:54:50.837" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211019 06:54:50.822" endtime="20211019 06:54:50.837"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:54:50.843" level="INFO">scm</msg>
<status status="PASS" starttime="20211019 06:54:50.841" endtime="20211019 06:54:50.843"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:54:50.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:54:50.843" endtime="20211019 06:54:50.843"/>
</kw>
<status status="PASS" starttime="20211019 06:54:50.820" endtime="20211019 06:54:50.844"/>
</kw>
<msg timestamp="20211019 06:54:50.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:54:50.819" endtime="20211019 06:54:50.847"/>
</kw>
<msg timestamp="20211019 06:54:50.847" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211019 06:54:50.817" endtime="20211019 06:54:50.847"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211019 06:54:50.848" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211019 06:54:50.847" endtime="20211019 06:54:50.848"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:54:50.859" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:54:50.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:54:50.873" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:54:50.854" endtime="20211019 06:54:50.873"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:54:50.874" level="INFO"/>
<status status="PASS" starttime="20211019 06:54:50.873" endtime="20211019 06:54:50.874"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:54:50.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:54:50.875" endtime="20211019 06:54:50.875"/>
</kw>
<status status="PASS" starttime="20211019 06:54:50.853" endtime="20211019 06:54:50.876"/>
</kw>
<msg timestamp="20211019 06:54:50.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:54:50.853" endtime="20211019 06:54:50.876"/>
</kw>
<status status="PASS" starttime="20211019 06:54:50.849" endtime="20211019 06:54:50.877"/>
</kw>
<status status="PASS" starttime="20211019 06:54:50.848" endtime="20211019 06:54:50.879"/>
</kw>
<status status="PASS" starttime="20211019 06:54:50.816" endtime="20211019 06:54:50.879"/>
</kw>
<status status="PASS" starttime="20211019 06:54:50.814" endtime="20211019 06:54:50.879"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:54:50.889" level="INFO">Running command 'ozone sh volume info o3:///65136-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:54:57.352" level="INFO">${rc} = 255</msg>
<msg timestamp="20211019 06:54:57.352" level="INFO">${output} = VOLUME_NOT_FOUND Volume 65136-rpcwport is not found</msg>
<status status="PASS" starttime="20211019 06:54:50.883" endtime="20211019 06:54:57.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:54:57.353" level="INFO">VOLUME_NOT_FOUND Volume 65136-rpcwport is not found</msg>
<status status="PASS" starttime="20211019 06:54:57.352" endtime="20211019 06:54:57.353"/>
</kw>
<msg timestamp="20211019 06:54:57.354" level="INFO">${result} = VOLUME_NOT_FOUND Volume 65136-rpcwport is not found</msg>
<status status="PASS" starttime="20211019 06:54:50.882" endtime="20211019 06:54:57.354"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 06:54:57.354" endtime="20211019 06:54:57.354"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:54:57.361" level="INFO">Running command 'ozone sh volume create o3:///65136-rpcwport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:55:04.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:55:04.942" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:54:57.357" endtime="20211019 06:55:04.942"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:55:04.944" level="INFO"/>
<status status="PASS" starttime="20211019 06:55:04.943" endtime="20211019 06:55:04.944"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:55:04.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:55:04.944" endtime="20211019 06:55:04.945"/>
</kw>
<status status="PASS" starttime="20211019 06:54:57.356" endtime="20211019 06:55:04.945"/>
</kw>
<msg timestamp="20211019 06:55:04.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:54:57.355" endtime="20211019 06:55:04.945"/>
</kw>
<msg timestamp="20211019 06:55:04.946" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211019 06:54:57.355" endtime="20211019 06:55:04.946"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 06:55:04.946" endtime="20211019 06:55:04.946"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:55:04.954" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '.[] | select(.name=="65136-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:55:12.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:55:12.737" level="INFO">${output} = {
  "metadata": {},
  "name": "65136-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211019 06:55:04.950" endtime="20211019 06:55:12.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:55:12.738" level="INFO">{
  "metadata": {},
  "name": "65136-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-19T06:55:04.867Z",
  "modificationTime": "2021-10-19T06:55:04.867Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211019 06:55:12.737" endtime="20211019 06:55:12.738"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:55:12.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:55:12.739" endtime="20211019 06:55:12.739"/>
</kw>
<status status="PASS" starttime="20211019 06:55:04.949" endtime="20211019 06:55:12.740"/>
</kw>
<msg timestamp="20211019 06:55:12.740" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:55:04.949" endtime="20211019 06:55:12.740"/>
</kw>
<msg timestamp="20211019 06:55:12.740" level="INFO">${result} = {
  "metadata": {},
  "name": "65136-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211019 06:55:04.947" endtime="20211019 06:55:12.740"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 06:55:12.740" endtime="20211019 06:55:12.741"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:55:12.747" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="65136-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:55:21.118" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:55:21.118" level="INFO">${output} = {
  "metadata": {},
  "name": "65136-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211019 06:55:12.743" endtime="20211019 06:55:21.119"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:55:21.121" level="INFO">{
  "metadata": {},
  "name": "65136-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-19T06:55:04.867Z",
  "modificationTime": "2021-10-19T06:55:04.867Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211019 06:55:21.119" endtime="20211019 06:55:21.121"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:55:21.122" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:55:21.121" endtime="20211019 06:55:21.123"/>
</kw>
<status status="PASS" starttime="20211019 06:55:12.742" endtime="20211019 06:55:21.123"/>
</kw>
<msg timestamp="20211019 06:55:21.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:55:12.742" endtime="20211019 06:55:21.124"/>
</kw>
<msg timestamp="20211019 06:55:21.125" level="INFO">${result} = {
  "metadata": {},
  "name": "65136-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211019 06:55:12.741" endtime="20211019 06:55:21.125"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 06:55:21.125" endtime="20211019 06:55:21.126"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:55:21.132" level="INFO">Running command 'ozone sh volume setquota o3:///65136-rpcwport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:55:29.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:55:29.008" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:55:21.129" endtime="20211019 06:55:29.008"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:55:29.009" level="INFO"/>
<status status="PASS" starttime="20211019 06:55:29.009" endtime="20211019 06:55:29.010"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:55:29.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:55:29.010" endtime="20211019 06:55:29.010"/>
</kw>
<status status="PASS" starttime="20211019 06:55:21.128" endtime="20211019 06:55:29.011"/>
</kw>
<msg timestamp="20211019 06:55:29.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:55:21.127" endtime="20211019 06:55:29.011"/>
</kw>
<status status="PASS" starttime="20211019 06:55:21.126" endtime="20211019 06:55:29.011"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:55:29.018" level="INFO">Running command 'ozone sh volume info o3:///65136-rpcwport | jq -r '. | select(.name=="65136-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:55:35.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:55:35.237" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211019 06:55:29.014" endtime="20211019 06:55:35.237"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:55:35.240" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211019 06:55:35.238" endtime="20211019 06:55:35.240"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:55:35.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:55:35.241" endtime="20211019 06:55:35.242"/>
</kw>
<status status="PASS" starttime="20211019 06:55:29.013" endtime="20211019 06:55:35.243"/>
</kw>
<msg timestamp="20211019 06:55:35.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:55:29.013" endtime="20211019 06:55:35.243"/>
</kw>
<msg timestamp="20211019 06:55:35.244" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211019 06:55:29.012" endtime="20211019 06:55:35.244"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211019 06:55:35.244" endtime="20211019 06:55:35.246"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:55:35.254" level="INFO">Running command 'ozone sh bucket create o3:///65136-rpcwport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:55:43.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:55:43.128" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:55:35.250" endtime="20211019 06:55:43.128"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:55:43.130" level="INFO"/>
<status status="PASS" starttime="20211019 06:55:43.128" endtime="20211019 06:55:43.130"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:55:43.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:55:43.130" endtime="20211019 06:55:43.132"/>
</kw>
<status status="PASS" starttime="20211019 06:55:35.249" endtime="20211019 06:55:43.132"/>
</kw>
<msg timestamp="20211019 06:55:43.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:55:35.248" endtime="20211019 06:55:43.132"/>
</kw>
<status status="PASS" starttime="20211019 06:55:35.246" endtime="20211019 06:55:43.133"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:55:43.141" level="INFO">Running command 'ozone sh bucket info o3:///65136-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:55:51.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:55:51.074" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211019 06:55:43.137" endtime="20211019 06:55:51.074"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:55:51.076" level="INFO">DISK</msg>
<status status="PASS" starttime="20211019 06:55:51.075" endtime="20211019 06:55:51.076"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:55:51.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:55:51.076" endtime="20211019 06:55:51.077"/>
</kw>
<status status="PASS" starttime="20211019 06:55:43.136" endtime="20211019 06:55:51.077"/>
</kw>
<msg timestamp="20211019 06:55:51.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:55:43.135" endtime="20211019 06:55:51.078"/>
</kw>
<msg timestamp="20211019 06:55:51.078" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211019 06:55:43.133" endtime="20211019 06:55:51.078"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211019 06:55:51.078" endtime="20211019 06:55:51.079"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:55:51.084" level="INFO">Running command 'ozone sh bucket info o3:///65136-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:55:59.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:55:59.458" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211019 06:55:51.081" endtime="20211019 06:55:59.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:55:59.459" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211019 06:55:59.458" endtime="20211019 06:55:59.459"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:55:59.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:55:59.459" endtime="20211019 06:55:59.460"/>
</kw>
<status status="PASS" starttime="20211019 06:55:51.081" endtime="20211019 06:55:59.461"/>
</kw>
<msg timestamp="20211019 06:55:59.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:55:51.080" endtime="20211019 06:55:59.461"/>
</kw>
<msg timestamp="20211019 06:55:59.461" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211019 06:55:51.079" endtime="20211019 06:55:59.461"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211019 06:55:59.461" endtime="20211019 06:55:59.462"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:55:59.467" level="INFO">Running command 'ozone sh bucket info o3:///65136-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:56:07.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:56:07.392" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211019 06:55:59.464" endtime="20211019 06:56:07.392"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:56:07.393" level="INFO">100</msg>
<status status="PASS" starttime="20211019 06:56:07.392" endtime="20211019 06:56:07.393"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:56:07.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:56:07.394" endtime="20211019 06:56:07.394"/>
</kw>
<status status="PASS" starttime="20211019 06:55:59.464" endtime="20211019 06:56:07.395"/>
</kw>
<msg timestamp="20211019 06:56:07.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:55:59.463" endtime="20211019 06:56:07.395"/>
</kw>
<msg timestamp="20211019 06:56:07.395" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211019 06:55:59.462" endtime="20211019 06:56:07.395"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211019 06:56:07.396" endtime="20211019 06:56:07.396"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:56:07.401" level="INFO">Running command 'ozone sh bucket setquota o3:///65136-rpcwport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:56:14.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:56:14.622" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:56:07.398" endtime="20211019 06:56:14.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:56:14.625" level="INFO"/>
<status status="PASS" starttime="20211019 06:56:14.623" endtime="20211019 06:56:14.625"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:56:14.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:56:14.625" endtime="20211019 06:56:14.626"/>
</kw>
<status status="PASS" starttime="20211019 06:56:07.398" endtime="20211019 06:56:14.626"/>
</kw>
<msg timestamp="20211019 06:56:14.627" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:56:07.397" endtime="20211019 06:56:14.627"/>
</kw>
<status status="PASS" starttime="20211019 06:56:07.396" endtime="20211019 06:56:14.627"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:56:14.633" level="INFO">Running command 'ozone sh bucket info o3:///65136-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:56:22.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:56:22.529" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211019 06:56:14.631" endtime="20211019 06:56:22.529"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:56:22.533" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211019 06:56:22.531" endtime="20211019 06:56:22.533"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:56:22.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:56:22.533" endtime="20211019 06:56:22.535"/>
</kw>
<status status="PASS" starttime="20211019 06:56:14.629" endtime="20211019 06:56:22.535"/>
</kw>
<msg timestamp="20211019 06:56:22.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:56:14.629" endtime="20211019 06:56:22.536"/>
</kw>
<msg timestamp="20211019 06:56:22.537" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211019 06:56:14.627" endtime="20211019 06:56:22.537"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211019 06:56:22.537" endtime="20211019 06:56:22.538"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:56:22.546" level="INFO">Running command 'ozone sh bucket info o3:///65136-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:56:29.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:56:29.220" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211019 06:56:22.542" endtime="20211019 06:56:29.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:56:29.222" level="INFO">1000</msg>
<status status="PASS" starttime="20211019 06:56:29.221" endtime="20211019 06:56:29.222"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:56:29.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:56:29.222" endtime="20211019 06:56:29.223"/>
</kw>
<status status="PASS" starttime="20211019 06:56:22.541" endtime="20211019 06:56:29.223"/>
</kw>
<msg timestamp="20211019 06:56:29.223" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:56:22.540" endtime="20211019 06:56:29.223"/>
</kw>
<msg timestamp="20211019 06:56:29.224" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211019 06:56:22.538" endtime="20211019 06:56:29.224"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211019 06:56:29.224" endtime="20211019 06:56:29.225"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:56:29.229" level="INFO">Running command 'ozone sh bucket list o3:///65136-rpcwport/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:56:34.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:56:34.250" level="INFO">${output} = 65136-rpcwport</msg>
<status status="PASS" starttime="20211019 06:56:29.227" endtime="20211019 06:56:34.250"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:56:34.252" level="INFO">65136-rpcwport</msg>
<status status="PASS" starttime="20211019 06:56:34.250" endtime="20211019 06:56:34.252"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:56:34.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:56:34.252" endtime="20211019 06:56:34.253"/>
</kw>
<status status="PASS" starttime="20211019 06:56:29.226" endtime="20211019 06:56:34.253"/>
</kw>
<msg timestamp="20211019 06:56:34.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:56:29.226" endtime="20211019 06:56:34.254"/>
</kw>
<msg timestamp="20211019 06:56:34.254" level="INFO">${result} = 65136-rpcwport</msg>
<status status="PASS" starttime="20211019 06:56:29.225" endtime="20211019 06:56:34.254"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211019 06:56:34.254" endtime="20211019 06:56:34.255"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:56:34.261" level="INFO">Running command 'ozone sh key put o3:///65136-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:59:45.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:59:45.817" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:56:34.258" endtime="20211019 06:59:45.817"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:59:45.818" level="INFO"/>
<status status="PASS" starttime="20211019 06:59:45.817" endtime="20211019 06:59:45.818"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:59:45.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:59:45.818" endtime="20211019 06:59:45.819"/>
</kw>
<status status="PASS" starttime="20211019 06:56:34.257" endtime="20211019 06:59:45.819"/>
</kw>
<msg timestamp="20211019 06:59:45.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:56:34.257" endtime="20211019 06:59:45.820"/>
</kw>
<status status="PASS" starttime="20211019 06:56:34.256" endtime="20211019 06:59:45.820"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:59:45.824" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:59:45.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:59:45.827" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:59:45.822" endtime="20211019 06:59:45.827"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:59:45.828" level="INFO"/>
<status status="PASS" starttime="20211019 06:59:45.828" endtime="20211019 06:59:45.829"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:59:45.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:59:45.829" endtime="20211019 06:59:45.829"/>
</kw>
<status status="PASS" starttime="20211019 06:59:45.821" endtime="20211019 06:59:45.830"/>
</kw>
<msg timestamp="20211019 06:59:45.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:59:45.821" endtime="20211019 06:59:45.830"/>
</kw>
<status status="PASS" starttime="20211019 06:59:45.820" endtime="20211019 06:59:45.830"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:59:45.834" level="INFO">Running command 'ozone sh key get o3:///65136-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:59:50.814" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211019 06:59:45.832" endtime="20211019 06:59:50.814"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211019 06:59:50.814" endtime="20211019 06:59:50.814"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211019 06:59:50.815" endtime="20211019 06:59:50.815"/>
</kw>
<status status="FAIL" starttime="20211019 06:59:45.831" endtime="20211019 06:59:50.815"/>
</kw>
<msg timestamp="20211019 06:59:50.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211019 06:59:45.831" endtime="20211019 06:59:50.815"/>
</kw>
<status status="FAIL" starttime="20211019 06:59:45.830" endtime="20211019 06:59:50.817"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211019 06:59:50.819" endtime="20211019 06:59:50.819"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211019 06:59:50.819" endtime="20211019 06:59:50.819"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211019 06:59:50.820" endtime="20211019 06:59:50.821"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211019 06:59:50.821" endtime="20211019 06:59:50.822"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211019 06:59:50.822" endtime="20211019 06:59:50.823"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211019 06:59:50.823" endtime="20211019 06:59:50.823"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211019 06:59:50.824" endtime="20211019 06:59:50.824"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211019 06:59:50.824" endtime="20211019 06:59:50.824"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211019 06:59:50.826" endtime="20211019 06:59:50.828"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211019 06:59:50.829" endtime="20211019 06:59:50.829"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211019 06:59:50.830" endtime="20211019 06:59:50.830"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211019 06:59:50.831" endtime="20211019 06:59:50.831"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211019 06:59:50.832" endtime="20211019 06:59:50.832"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211019 06:59:50.832" endtime="20211019 06:59:50.833"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211019 06:59:50.834" endtime="20211019 06:59:50.835"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211019 06:59:50.835" endtime="20211019 06:59:50.835"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211019 06:59:50.837" endtime="20211019 06:59:50.837"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211019 06:59:50.838" endtime="20211019 06:59:50.838"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211019 06:59:50.838" endtime="20211019 06:59:50.838"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211019 06:59:50.838" endtime="20211019 06:59:50.838"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211019 06:59:50.838" endtime="20211019 06:59:50.838"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211019 06:59:50.843" endtime="20211019 06:59:50.843"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211019 06:59:50.844" endtime="20211019 06:59:50.844"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211019 06:59:50.844" endtime="20211019 06:59:50.844"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211019 06:59:50.844" endtime="20211019 06:59:50.844"/>
</kw>
<status status="FAIL" starttime="20211019 06:56:34.256" endtime="20211019 06:59:50.845"/>
</kw>
<status status="FAIL" starttime="20211019 06:56:34.255" endtime="20211019 06:59:50.845"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211019 06:59:50.845" endtime="20211019 06:59:50.845"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211019 06:59:50.845" endtime="20211019 06:59:50.845"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211019 06:59:50.845" endtime="20211019 06:59:50.845"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211019 06:59:50.845" endtime="20211019 06:59:50.846"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211019 06:59:50.846" endtime="20211019 06:59:50.846"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211019 06:59:50.846" endtime="20211019 06:59:50.846"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211019 06:59:50.846" endtime="20211019 06:59:50.846"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211019 06:59:50.846" endtime="20211019 06:59:50.855"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211019 06:59:50.856" endtime="20211019 06:59:50.856"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211019 06:59:50.856" endtime="20211019 06:59:50.856"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211019 06:59:50.856" endtime="20211019 06:59:50.856"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211019 06:59:50.862" endtime="20211019 06:59:50.863"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211019 06:59:50.864" endtime="20211019 06:59:50.864"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211019 06:59:50.865" endtime="20211019 06:59:50.865"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211019 06:59:50.866" endtime="20211019 06:59:50.867"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211019 06:59:50.867" endtime="20211019 06:59:50.867"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211019 06:59:50.868" endtime="20211019 06:59:50.868"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211019 06:59:50.869" endtime="20211019 06:59:50.869"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211019 06:59:50.869" endtime="20211019 06:59:50.871"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211019 06:59:50.872" endtime="20211019 06:59:50.872"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211019 06:59:50.872" endtime="20211019 06:59:50.873"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211019 06:59:50.874" endtime="20211019 06:59:50.874"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211019 06:59:50.875" endtime="20211019 06:59:50.876"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211019 06:59:50.876" endtime="20211019 06:59:50.876"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211019 06:59:50.877" endtime="20211019 06:59:50.877"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211019 06:59:50.877" endtime="20211019 06:59:50.878"/>
</kw>
<status status="FAIL" starttime="20211019 06:54:50.879" endtime="20211019 06:59:50.879"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211019 06:54:50.812" endtime="20211019 06:59:50.881">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t7" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:59:50.916" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:59:50.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:59:50.930" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211019 06:59:50.898" endtime="20211019 06:59:50.930"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:59:50.932" level="INFO">scm</msg>
<status status="PASS" starttime="20211019 06:59:50.931" endtime="20211019 06:59:50.933"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:59:50.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:59:50.933" endtime="20211019 06:59:50.934"/>
</kw>
<status status="PASS" starttime="20211019 06:59:50.897" endtime="20211019 06:59:50.935"/>
</kw>
<msg timestamp="20211019 06:59:50.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:59:50.897" endtime="20211019 06:59:50.935"/>
</kw>
<msg timestamp="20211019 06:59:50.936" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211019 06:59:50.896" endtime="20211019 06:59:50.936"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211019 06:59:50.937" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211019 06:59:50.936" endtime="20211019 06:59:50.938"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:59:50.962" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:59:51.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:59:51.036" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:59:50.945" endtime="20211019 06:59:51.036"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:59:51.046" level="INFO"/>
<status status="PASS" starttime="20211019 06:59:51.043" endtime="20211019 06:59:51.046"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:59:51.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:59:51.046" endtime="20211019 06:59:51.052"/>
</kw>
<status status="PASS" starttime="20211019 06:59:50.943" endtime="20211019 06:59:51.052"/>
</kw>
<msg timestamp="20211019 06:59:51.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:59:50.942" endtime="20211019 06:59:51.052"/>
</kw>
<status status="PASS" starttime="20211019 06:59:50.939" endtime="20211019 06:59:51.053"/>
</kw>
<status status="PASS" starttime="20211019 06:59:50.938" endtime="20211019 06:59:51.053"/>
</kw>
<status status="PASS" starttime="20211019 06:59:50.896" endtime="20211019 06:59:51.053"/>
</kw>
<status status="PASS" starttime="20211019 06:59:50.894" endtime="20211019 06:59:51.053"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:59:51.072" level="INFO">Running command 'ozone sh volume info /65136-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 07:00:00.841" level="INFO">${rc} = 255</msg>
<msg timestamp="20211019 07:00:00.841" level="INFO">${output} = VOLUME_NOT_FOUND Volume 65136-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20211019 06:59:51.059" endtime="20211019 07:00:00.841"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 07:00:00.842" level="INFO">VOLUME_NOT_FOUND Volume 65136-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20211019 07:00:00.841" endtime="20211019 07:00:00.842"/>
</kw>
<msg timestamp="20211019 07:00:00.843" level="INFO">${result} = VOLUME_NOT_FOUND Volume 65136-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20211019 06:59:51.058" endtime="20211019 07:00:00.843"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 07:00:00.843" endtime="20211019 07:00:00.843"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 07:00:00.848" level="INFO">Running command 'ozone sh volume create /65136-rpcwoscheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 07:00:06.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 07:00:06.382" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 07:00:00.845" endtime="20211019 07:00:06.382"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 07:00:06.385" level="INFO"/>
<status status="PASS" starttime="20211019 07:00:06.384" endtime="20211019 07:00:06.385"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 07:00:06.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 07:00:06.386" endtime="20211019 07:00:06.387"/>
</kw>
<status status="PASS" starttime="20211019 07:00:00.845" endtime="20211019 07:00:06.388"/>
</kw>
<msg timestamp="20211019 07:00:06.388" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 07:00:00.844" endtime="20211019 07:00:06.389"/>
</kw>
<msg timestamp="20211019 07:00:06.390" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211019 07:00:00.843" endtime="20211019 07:00:06.390"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 07:00:06.390" endtime="20211019 07:00:06.391"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 07:00:06.399" level="INFO">Running command 'ozone sh volume list / | jq -r '.[] | select(.name=="65136-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 07:00:14.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 07:00:14.633" level="INFO">${output} = {
  "metadata": {},
  "name": "65136-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211019 07:00:06.395" endtime="20211019 07:00:14.633"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 07:00:14.635" level="INFO">{
  "metadata": {},
  "name": "65136-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-19T07:00:06.034Z",
  "modificationTime": "2021-10-19T07:00:06.034Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211019 07:00:14.634" endtime="20211019 07:00:14.636"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 07:00:14.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 07:00:14.636" endtime="20211019 07:00:14.637"/>
</kw>
<status status="PASS" starttime="20211019 07:00:06.394" endtime="20211019 07:00:14.638"/>
</kw>
<msg timestamp="20211019 07:00:14.638" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 07:00:06.393" endtime="20211019 07:00:14.638"/>
</kw>
<msg timestamp="20211019 07:00:14.639" level="INFO">${result} = {
  "metadata": {},
  "name": "65136-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211019 07:00:06.391" endtime="20211019 07:00:14.639"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 07:00:14.640" endtime="20211019 07:00:14.641"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 07:00:14.647" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="65136-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 07:00:22.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 07:00:22.332" level="INFO">${output} = {
  "metadata": {},
  "name": "65136-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211019 07:00:14.644" endtime="20211019 07:00:22.332"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 07:00:22.335" level="INFO">{
  "metadata": {},
  "name": "65136-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-19T07:00:06.034Z",
  "modificationTime": "2021-10-19T07:00:06.034Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211019 07:00:22.333" endtime="20211019 07:00:22.335"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 07:00:22.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 07:00:22.336" endtime="20211019 07:00:22.337"/>
</kw>
<status status="PASS" starttime="20211019 07:00:14.643" endtime="20211019 07:00:22.338"/>
</kw>
<msg timestamp="20211019 07:00:22.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 07:00:14.642" endtime="20211019 07:00:22.339"/>
</kw>
<msg timestamp="20211019 07:00:22.339" level="INFO">${result} = {
  "metadata": {},
  "name": "65136-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211019 07:00:14.641" endtime="20211019 07:00:22.339"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211019 07:00:22.339" endtime="20211019 07:00:22.340"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 07:00:22.348" level="INFO">Running command 'ozone sh volume setquota /65136-rpcwoscheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 07:00:29.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 07:00:29.696" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 07:00:22.345" endtime="20211019 07:00:29.696"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 07:00:29.698" level="INFO"/>
<status status="PASS" starttime="20211019 07:00:29.697" endtime="20211019 07:00:29.700"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 07:00:29.702" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 07:00:29.700" endtime="20211019 07:00:29.702"/>
</kw>
<status status="PASS" starttime="20211019 07:00:22.344" endtime="20211019 07:00:29.703"/>
</kw>
<msg timestamp="20211019 07:00:29.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 07:00:22.341" endtime="20211019 07:00:29.704"/>
</kw>
<status status="PASS" starttime="20211019 07:00:22.340" endtime="20211019 07:00:29.704"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 07:00:29.712" level="INFO">Running command 'ozone sh volume info /65136-rpcwoscheme | jq -r '. | select(.name=="65136-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 07:00:37.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 07:00:37.193" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211019 07:00:29.708" endtime="20211019 07:00:37.193"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 07:00:37.195" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211019 07:00:37.194" endtime="20211019 07:00:37.195"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 07:00:37.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 07:00:37.195" endtime="20211019 07:00:37.195"/>
</kw>
<status status="PASS" starttime="20211019 07:00:29.707" endtime="20211019 07:00:37.196"/>
</kw>
<msg timestamp="20211019 07:00:37.196" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 07:00:29.707" endtime="20211019 07:00:37.196"/>
</kw>
<msg timestamp="20211019 07:00:37.196" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211019 07:00:29.705" endtime="20211019 07:00:37.196"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211019 07:00:37.197" endtime="20211019 07:00:37.197"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 07:00:37.201" level="INFO">Running command 'ozone sh bucket create /65136-rpcwoscheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 07:00:42.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 07:00:43.000" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 07:00:37.199" endtime="20211019 07:00:43.000"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 07:00:43.002" level="INFO"/>
<status status="PASS" starttime="20211019 07:00:43.001" endtime="20211019 07:00:43.002"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 07:00:43.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 07:00:43.003" endtime="20211019 07:00:43.005"/>
</kw>
<status status="PASS" starttime="20211019 07:00:37.199" endtime="20211019 07:00:43.006"/>
</kw>
<msg timestamp="20211019 07:00:43.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 07:00:37.198" endtime="20211019 07:00:43.007"/>
</kw>
<status status="PASS" starttime="20211019 07:00:37.197" endtime="20211019 07:00:43.007"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 07:00:43.015" level="INFO">Running command 'ozone sh bucket info /65136-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 07:00:50.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 07:00:50.634" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211019 07:00:43.012" endtime="20211019 07:00:50.634"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 07:00:50.636" level="INFO">DISK</msg>
<status status="PASS" starttime="20211019 07:00:50.635" endtime="20211019 07:00:50.636"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 07:00:50.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 07:00:50.637" endtime="20211019 07:00:50.638"/>
</kw>
<status status="PASS" starttime="20211019 07:00:43.010" endtime="20211019 07:00:50.638"/>
</kw>
<msg timestamp="20211019 07:00:50.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 07:00:43.010" endtime="20211019 07:00:50.639"/>
</kw>
<msg timestamp="20211019 07:00:50.639" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211019 07:00:43.007" endtime="20211019 07:00:50.640"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211019 07:00:50.640" endtime="20211019 07:00:50.641"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 07:00:50.647" level="INFO">Running command 'ozone sh bucket info /65136-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 07:00:58.076" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 07:00:58.076" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211019 07:00:50.645" endtime="20211019 07:00:58.076"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 07:00:58.079" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211019 07:00:58.077" endtime="20211019 07:00:58.079"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 07:00:58.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 07:00:58.080" endtime="20211019 07:00:58.080"/>
</kw>
<status status="PASS" starttime="20211019 07:00:50.644" endtime="20211019 07:00:58.081"/>
</kw>
<msg timestamp="20211019 07:00:58.081" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 07:00:50.643" endtime="20211019 07:00:58.081"/>
</kw>
<msg timestamp="20211019 07:00:58.081" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211019 07:00:50.641" endtime="20211019 07:00:58.081"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211019 07:00:58.082" endtime="20211019 07:00:58.082"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 07:00:58.087" level="INFO">Running command 'ozone sh bucket info /65136-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 07:01:04.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 07:01:04.928" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211019 07:00:58.084" endtime="20211019 07:01:04.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 07:01:04.929" level="INFO">100</msg>
<status status="PASS" starttime="20211019 07:01:04.929" endtime="20211019 07:01:04.929"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 07:01:04.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 07:01:04.930" endtime="20211019 07:01:04.931"/>
</kw>
<status status="PASS" starttime="20211019 07:00:58.084" endtime="20211019 07:01:04.931"/>
</kw>
<msg timestamp="20211019 07:01:04.931" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 07:00:58.083" endtime="20211019 07:01:04.931"/>
</kw>
<msg timestamp="20211019 07:01:04.932" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211019 07:00:58.082" endtime="20211019 07:01:04.932"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211019 07:01:04.932" endtime="20211019 07:01:04.932"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 07:01:04.937" level="INFO">Running command 'ozone sh bucket setquota /65136-rpcwoscheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 07:01:10.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 07:01:10.973" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 07:01:04.934" endtime="20211019 07:01:10.973"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 07:01:10.974" level="INFO"/>
<status status="PASS" starttime="20211019 07:01:10.973" endtime="20211019 07:01:10.974"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 07:01:10.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 07:01:10.974" endtime="20211019 07:01:10.976"/>
</kw>
<status status="PASS" starttime="20211019 07:01:04.934" endtime="20211019 07:01:10.976"/>
</kw>
<msg timestamp="20211019 07:01:10.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 07:01:04.933" endtime="20211019 07:01:10.976"/>
</kw>
<status status="PASS" starttime="20211019 07:01:04.933" endtime="20211019 07:01:10.976"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 07:01:10.984" level="INFO">Running command 'ozone sh bucket info /65136-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 07:01:18.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 07:01:18.507" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211019 07:01:10.980" endtime="20211019 07:01:18.507"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 07:01:18.508" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211019 07:01:18.507" endtime="20211019 07:01:18.508"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 07:01:18.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 07:01:18.508" endtime="20211019 07:01:18.509"/>
</kw>
<status status="PASS" starttime="20211019 07:01:10.979" endtime="20211019 07:01:18.510"/>
</kw>
<msg timestamp="20211019 07:01:18.510" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 07:01:10.979" endtime="20211019 07:01:18.510"/>
</kw>
<msg timestamp="20211019 07:01:18.510" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211019 07:01:10.977" endtime="20211019 07:01:18.510"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211019 07:01:18.510" endtime="20211019 07:01:18.511"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 07:01:18.515" level="INFO">Running command 'ozone sh bucket info /65136-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 07:01:25.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 07:01:25.166" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211019 07:01:18.513" endtime="20211019 07:01:25.166"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 07:01:25.168" level="INFO">1000</msg>
<status status="PASS" starttime="20211019 07:01:25.167" endtime="20211019 07:01:25.169"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 07:01:25.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 07:01:25.169" endtime="20211019 07:01:25.170"/>
</kw>
<status status="PASS" starttime="20211019 07:01:18.513" endtime="20211019 07:01:25.171"/>
</kw>
<msg timestamp="20211019 07:01:25.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 07:01:18.512" endtime="20211019 07:01:25.171"/>
</kw>
<msg timestamp="20211019 07:01:25.171" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211019 07:01:18.511" endtime="20211019 07:01:25.171"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211019 07:01:25.171" endtime="20211019 07:01:25.177"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 07:01:25.184" level="INFO">Running command 'ozone sh bucket list /65136-rpcwoscheme/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 07:01:32.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 07:01:32.415" level="INFO">${output} = 65136-rpcwoscheme</msg>
<status status="PASS" starttime="20211019 07:01:25.180" endtime="20211019 07:01:32.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 07:01:32.417" level="INFO">65136-rpcwoscheme</msg>
<status status="PASS" starttime="20211019 07:01:32.416" endtime="20211019 07:01:32.417"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 07:01:32.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 07:01:32.417" endtime="20211019 07:01:32.418"/>
</kw>
<status status="PASS" starttime="20211019 07:01:25.179" endtime="20211019 07:01:32.419"/>
</kw>
<msg timestamp="20211019 07:01:32.419" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 07:01:25.179" endtime="20211019 07:01:32.419"/>
</kw>
<msg timestamp="20211019 07:01:32.420" level="INFO">${result} = 65136-rpcwoscheme</msg>
<status status="PASS" starttime="20211019 07:01:25.178" endtime="20211019 07:01:32.420"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211019 07:01:32.421" endtime="20211019 07:01:32.422"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 07:01:32.430" level="INFO">Running command 'ozone sh key put /65136-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 07:04:44.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 07:04:44.828" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 07:01:32.427" endtime="20211019 07:04:44.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 07:04:44.829" level="INFO"/>
<status status="PASS" starttime="20211019 07:04:44.828" endtime="20211019 07:04:44.829"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 07:04:44.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 07:04:44.829" endtime="20211019 07:04:44.830"/>
</kw>
<status status="PASS" starttime="20211019 07:01:32.426" endtime="20211019 07:04:44.830"/>
</kw>
<msg timestamp="20211019 07:04:44.831" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 07:01:32.425" endtime="20211019 07:04:44.831"/>
</kw>
<status status="PASS" starttime="20211019 07:01:32.424" endtime="20211019 07:04:44.831"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 07:04:44.838" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 07:04:44.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 07:04:44.842" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 07:04:44.834" endtime="20211019 07:04:44.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 07:04:44.844" level="INFO"/>
<status status="PASS" starttime="20211019 07:04:44.843" endtime="20211019 07:04:44.844"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 07:04:44.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 07:04:44.844" endtime="20211019 07:04:44.845"/>
</kw>
<status status="PASS" starttime="20211019 07:04:44.832" endtime="20211019 07:04:44.845"/>
</kw>
<msg timestamp="20211019 07:04:44.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 07:04:44.832" endtime="20211019 07:04:44.846"/>
</kw>
<status status="PASS" starttime="20211019 07:04:44.831" endtime="20211019 07:04:44.846"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 07:04:44.850" level="INFO">Running command 'ozone sh key get /65136-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 07:04:50.887" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211019 07:04:44.848" endtime="20211019 07:04:50.887"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211019 07:04:50.888" endtime="20211019 07:04:50.888"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211019 07:04:50.888" endtime="20211019 07:04:50.888"/>
</kw>
<status status="FAIL" starttime="20211019 07:04:44.847" endtime="20211019 07:04:50.889"/>
</kw>
<msg timestamp="20211019 07:04:50.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211019 07:04:44.847" endtime="20211019 07:04:50.889"/>
</kw>
<status status="FAIL" starttime="20211019 07:04:44.846" endtime="20211019 07:04:50.889"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211019 07:04:50.890" endtime="20211019 07:04:50.890"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211019 07:04:50.890" endtime="20211019 07:04:50.890"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211019 07:04:50.890" endtime="20211019 07:04:50.890"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211019 07:04:50.890" endtime="20211019 07:04:50.890"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211019 07:04:50.891" endtime="20211019 07:04:50.891"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211019 07:04:50.891" endtime="20211019 07:04:50.891"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211019 07:04:50.891" endtime="20211019 07:04:50.891"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211019 07:04:50.891" endtime="20211019 07:04:50.891"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211019 07:04:50.891" endtime="20211019 07:04:50.892"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211019 07:04:50.892" endtime="20211019 07:04:50.892"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211019 07:04:50.892" endtime="20211019 07:04:50.892"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211019 07:04:50.892" endtime="20211019 07:04:50.892"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211019 07:04:50.893" endtime="20211019 07:04:50.893"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211019 07:04:50.893" endtime="20211019 07:04:50.893"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211019 07:04:50.893" endtime="20211019 07:04:50.893"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211019 07:04:50.893" endtime="20211019 07:04:50.893"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211019 07:04:50.893" endtime="20211019 07:04:50.894"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211019 07:04:50.894" endtime="20211019 07:04:50.894"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211019 07:04:50.894" endtime="20211019 07:04:50.894"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211019 07:04:50.894" endtime="20211019 07:04:50.894"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211019 07:04:50.894" endtime="20211019 07:04:50.894"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211019 07:04:50.895" endtime="20211019 07:04:50.895"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211019 07:04:50.895" endtime="20211019 07:04:50.895"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211019 07:04:50.895" endtime="20211019 07:04:50.895"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211019 07:04:50.895" endtime="20211019 07:04:50.895"/>
</kw>
<status status="FAIL" starttime="20211019 07:01:32.422" endtime="20211019 07:04:50.896"/>
</kw>
<status status="FAIL" starttime="20211019 07:01:32.422" endtime="20211019 07:04:50.899"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211019 07:04:50.900" endtime="20211019 07:04:50.900"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211019 07:04:50.900" endtime="20211019 07:04:50.900"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211019 07:04:50.901" endtime="20211019 07:04:50.901"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211019 07:04:50.901" endtime="20211019 07:04:50.901"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211019 07:04:50.901" endtime="20211019 07:04:50.901"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211019 07:04:50.901" endtime="20211019 07:04:50.901"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211019 07:04:50.902" endtime="20211019 07:04:50.902"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211019 07:04:50.902" endtime="20211019 07:04:50.902"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211019 07:04:50.902" endtime="20211019 07:04:50.902"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211019 07:04:50.902" endtime="20211019 07:04:50.902"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211019 07:04:50.902" endtime="20211019 07:04:50.903"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211019 07:04:50.903" endtime="20211019 07:04:50.903"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211019 07:04:50.903" endtime="20211019 07:04:50.903"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211019 07:04:50.903" endtime="20211019 07:04:50.903"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211019 07:04:50.903" endtime="20211019 07:04:50.903"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211019 07:04:50.904" endtime="20211019 07:04:50.904"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211019 07:04:50.904" endtime="20211019 07:04:50.904"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211019 07:04:50.904" endtime="20211019 07:04:50.904"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211019 07:04:50.904" endtime="20211019 07:04:50.904"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211019 07:04:50.904" endtime="20211019 07:04:50.905"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211019 07:04:50.905" endtime="20211019 07:04:50.905"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211019 07:04:50.905" endtime="20211019 07:04:50.905"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211019 07:04:50.905" endtime="20211019 07:04:50.905"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211019 07:04:50.916" endtime="20211019 07:04:50.916"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211019 07:04:50.916" endtime="20211019 07:04:50.917"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211019 07:04:50.917" endtime="20211019 07:04:50.917"/>
</kw>
<status status="FAIL" starttime="20211019 06:59:51.056" endtime="20211019 07:04:50.917"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211019 06:59:50.886" endtime="20211019 07:04:50.918">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20211019 06:39:45.137" endtime="20211019 07:04:50.921"/>
</suite>
<status status="FAIL" starttime="20211019 06:15:16.862" endtime="20211019 07:04:50.940"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:15:11.839" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:15:11.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:15:11.843" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211019 06:15:11.835" endtime="20211019 06:15:11.844"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:15:11.845" level="INFO">scm</msg>
<status status="PASS" starttime="20211019 06:15:11.844" endtime="20211019 06:15:11.845"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:15:11.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:15:11.845" endtime="20211019 06:15:11.846"/>
</kw>
<status status="PASS" starttime="20211019 06:15:11.834" endtime="20211019 06:15:11.846"/>
</kw>
<msg timestamp="20211019 06:15:11.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:15:11.834" endtime="20211019 06:15:11.846"/>
</kw>
<msg timestamp="20211019 06:15:11.847" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211019 06:15:11.834" endtime="20211019 06:15:11.847"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211019 06:15:11.847" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211019 06:15:11.847" endtime="20211019 06:15:11.848"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211019 06:15:11.852" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211019 06:15:11.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20211019 06:15:11.859" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211019 06:15:11.850" endtime="20211019 06:15:11.859"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211019 06:15:11.860" level="INFO"/>
<status status="PASS" starttime="20211019 06:15:11.860" endtime="20211019 06:15:11.861"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211019 06:15:11.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211019 06:15:11.861" endtime="20211019 06:15:11.861"/>
</kw>
<status status="PASS" starttime="20211019 06:15:11.849" endtime="20211019 06:15:11.862"/>
</kw>
<msg timestamp="20211019 06:15:11.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211019 06:15:11.849" endtime="20211019 06:15:11.862"/>
</kw>
<status status="PASS" starttime="20211019 06:15:11.848" endtime="20211019 06:15:11.862"/>
</kw>
<status status="PASS" starttime="20211019 06:15:11.848" endtime="20211019 06:15:11.862"/>
</kw>
<status status="PASS" starttime="20211019 06:15:11.833" endtime="20211019 06:15:11.863"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211019 06:15:11.832" endtime="20211019 06:15:11.863"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20211019 06:15:11.769" endtime="20211019 06:15:11.864"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="2974173"/>
</suite>
<statistics>
<total>
<stat pass="20" fail="10" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="20" fail="10" skip="0" id="s1" name="ozonesecure">ozonesecure</stat>
<stat pass="19" fail="10" skip="0" id="s1-s1" name="Basic">ozonesecure.Basic</stat>
<stat pass="1" fail="1" skip="0" id="s1-s1-s1" name="Basic">ozonesecure.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Getconf">ozonesecure.Basic.Getconf</stat>
<stat pass="10" fail="5" skip="0" id="s1-s1-s3" name="Links">ozonesecure.Basic.Links</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat pass="4" fail="3" skip="0" id="s1-s1-s5" name="Ozone-Shell">ozonesecure.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
