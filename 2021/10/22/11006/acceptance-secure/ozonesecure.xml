<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1.2 (Python 3.6.9 on linux)" generated="20211022 01:58:13.995" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:06:42.658" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:06:42.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:06:42.661" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211022 01:06:42.654" endtime="20211022 01:06:42.661"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:06:42.662" level="INFO">scm</msg>
<status status="PASS" starttime="20211022 01:06:42.662" endtime="20211022 01:06:42.662"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:06:42.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:06:42.663" endtime="20211022 01:06:42.663"/>
</kw>
<status status="PASS" starttime="20211022 01:06:42.653" endtime="20211022 01:06:42.664"/>
</kw>
<msg timestamp="20211022 01:06:42.664" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:06:42.653" endtime="20211022 01:06:42.664"/>
</kw>
<msg timestamp="20211022 01:06:42.664" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20211022 01:06:42.652" endtime="20211022 01:06:42.664"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:06:42.669" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:06:42.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:06:42.680" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:06:42.666" endtime="20211022 01:06:42.680"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:06:42.681" level="INFO"/>
<status status="PASS" starttime="20211022 01:06:42.680" endtime="20211022 01:06:42.681"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:06:42.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:06:42.681" endtime="20211022 01:06:42.682"/>
</kw>
<status status="PASS" starttime="20211022 01:06:42.666" endtime="20211022 01:06:42.682"/>
</kw>
<msg timestamp="20211022 01:06:42.682" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:06:42.666" endtime="20211022 01:06:42.683"/>
</kw>
<status status="PASS" starttime="20211022 01:06:42.665" endtime="20211022 01:06:42.683"/>
</kw>
<status status="PASS" starttime="20211022 01:06:42.664" endtime="20211022 01:06:42.683"/>
</kw>
<status status="PASS" starttime="20211022 01:06:42.652" endtime="20211022 01:06:42.684"/>
</kw>
<status status="PASS" starttime="20211022 01:06:42.651" endtime="20211022 01:06:42.684"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:06:42.695" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:06:42.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:06:42.876" level="INFO">${output} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20211022 01:06:42.686" endtime="20211022 01:06:42.876"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:06:42.878" level="INFO">HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 484

HTTP/1.1 200 OK
Date: Fri, 22 Oct 2021 01:06:42 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCUnJjCKzDRov3XvlQ5d3QWgAG0T/h5/TOIu7eZmF7cQLSHjANCQKOuzzOjQGPYrWHnfunshandJByop3i7KFSRrjd
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1634900802862&amp;s=j4RitkmO5x4vC/AeADk0Af68b6V1gpp2ZAhV9Ua4T2c="; Path=/; HttpOnly
Last-Modified: Fri, 22 Oct 2021 00:51:12 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20211022 01:06:42.877" endtime="20211022 01:06:42.878"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:06:42.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:06:42.879" endtime="20211022 01:06:42.880"/>
</kw>
<status status="PASS" starttime="20211022 01:06:42.685" endtime="20211022 01:06:42.881"/>
</kw>
<msg timestamp="20211022 01:06:42.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:06:42.684" endtime="20211022 01:06:42.881"/>
</kw>
<msg timestamp="20211022 01:06:42.882" level="INFO">${result} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20211022 01:06:42.684" endtime="20211022 01:06:42.882"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211022 01:06:42.883" endtime="20211022 01:06:42.883"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211022 01:06:42.650" endtime="20211022 01:06:42.884"/>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:06:42.896" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:06:42.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:06:42.904" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211022 01:06:42.894" endtime="20211022 01:06:42.904"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:06:42.906" level="INFO">scm</msg>
<status status="PASS" starttime="20211022 01:06:42.905" endtime="20211022 01:06:42.906"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:06:42.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:06:42.906" endtime="20211022 01:06:42.908"/>
</kw>
<status status="PASS" starttime="20211022 01:06:42.893" endtime="20211022 01:06:42.908"/>
</kw>
<msg timestamp="20211022 01:06:42.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:06:42.893" endtime="20211022 01:06:42.909"/>
</kw>
<msg timestamp="20211022 01:06:42.909" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211022 01:06:42.892" endtime="20211022 01:06:42.909"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211022 01:06:42.912" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211022 01:06:42.910" endtime="20211022 01:06:42.912"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:06:42.917" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:06:42.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:06:42.929" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:06:42.915" endtime="20211022 01:06:42.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:06:42.931" level="INFO"/>
<status status="PASS" starttime="20211022 01:06:42.929" endtime="20211022 01:06:42.931"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:06:42.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:06:42.931" endtime="20211022 01:06:42.932"/>
</kw>
<status status="PASS" starttime="20211022 01:06:42.914" endtime="20211022 01:06:42.932"/>
</kw>
<msg timestamp="20211022 01:06:42.932" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:06:42.914" endtime="20211022 01:06:42.933"/>
</kw>
<status status="PASS" starttime="20211022 01:06:42.913" endtime="20211022 01:06:42.933"/>
</kw>
<status status="PASS" starttime="20211022 01:06:42.912" endtime="20211022 01:06:42.933"/>
</kw>
<status status="PASS" starttime="20211022 01:06:42.891" endtime="20211022 01:06:42.933"/>
</kw>
<status status="PASS" starttime="20211022 01:06:42.890" endtime="20211022 01:06:42.933"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:06:42.940" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:11:42.889" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211022 01:06:42.936" endtime="20211022 01:11:42.889"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211022 01:11:42.890" endtime="20211022 01:11:42.890"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211022 01:11:42.890" endtime="20211022 01:11:42.890"/>
</kw>
<status status="FAIL" starttime="20211022 01:06:42.935" endtime="20211022 01:11:42.891"/>
</kw>
<msg timestamp="20211022 01:11:42.891" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211022 01:06:42.934" endtime="20211022 01:11:42.891"/>
</kw>
<status status="FAIL" starttime="20211022 01:06:42.934" endtime="20211022 01:11:42.892"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20211022 01:11:42.892" endtime="20211022 01:11:42.892"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Status: Success</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211022 01:11:42.892" endtime="20211022 01:11:42.892"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211022 01:06:42.888" endtime="20211022 01:11:42.893">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" starttime="20211022 01:06:42.604" endtime="20211022 01:11:42.894"/>
</suite>
<suite id="s1-s1-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s1-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:11:42.911" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:11:46.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:11:46.178" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211022 01:11:42.908" endtime="20211022 01:11:46.179"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:11:46.180" level="INFO">om</msg>
<status status="PASS" starttime="20211022 01:11:46.179" endtime="20211022 01:11:46.180"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:11:46.181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:11:46.181" endtime="20211022 01:11:46.182"/>
</kw>
<status status="PASS" starttime="20211022 01:11:42.907" endtime="20211022 01:11:46.182"/>
</kw>
<msg timestamp="20211022 01:11:46.182" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:11:42.907" endtime="20211022 01:11:46.182"/>
</kw>
<msg timestamp="20211022 01:11:46.182" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211022 01:11:42.907" endtime="20211022 01:11:46.183"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211022 01:11:46.183" endtime="20211022 01:11:46.184"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:11:46.191" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:11:49.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:11:49.594" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211022 01:11:46.186" endtime="20211022 01:11:49.594"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:11:49.597" level="INFO">om</msg>
<status status="PASS" starttime="20211022 01:11:49.595" endtime="20211022 01:11:49.597"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:11:49.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:11:49.597" endtime="20211022 01:11:49.598"/>
</kw>
<status status="PASS" starttime="20211022 01:11:46.185" endtime="20211022 01:11:49.598"/>
</kw>
<msg timestamp="20211022 01:11:49.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:11:46.185" endtime="20211022 01:11:49.599"/>
</kw>
<msg timestamp="20211022 01:11:49.599" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211022 01:11:46.184" endtime="20211022 01:11:49.599"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211022 01:11:49.599" endtime="20211022 01:11:49.600"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211022 01:11:42.905" endtime="20211022 01:11:49.601"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:11:49.610" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:11:53.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:11:53.139" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211022 01:11:49.606" endtime="20211022 01:11:53.140"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:11:53.142" level="INFO">scm</msg>
<status status="PASS" starttime="20211022 01:11:53.140" endtime="20211022 01:11:53.143"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:11:53.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:11:53.143" endtime="20211022 01:11:53.145"/>
</kw>
<status status="PASS" starttime="20211022 01:11:49.605" endtime="20211022 01:11:53.146"/>
</kw>
<msg timestamp="20211022 01:11:53.146" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:11:49.604" endtime="20211022 01:11:53.146"/>
</kw>
<msg timestamp="20211022 01:11:53.147" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20211022 01:11:49.603" endtime="20211022 01:11:53.147"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211022 01:11:53.147" endtime="20211022 01:11:53.148"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:11:53.156" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:11:56.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:11:56.581" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211022 01:11:53.152" endtime="20211022 01:11:56.581"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:11:56.584" level="INFO">scm</msg>
<status status="PASS" starttime="20211022 01:11:56.583" endtime="20211022 01:11:56.585"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:11:56.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:11:56.585" endtime="20211022 01:11:56.587"/>
</kw>
<status status="PASS" starttime="20211022 01:11:53.150" endtime="20211022 01:11:56.587"/>
</kw>
<msg timestamp="20211022 01:11:56.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:11:53.150" endtime="20211022 01:11:56.588"/>
</kw>
<msg timestamp="20211022 01:11:56.588" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20211022 01:11:53.148" endtime="20211022 01:11:56.589"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211022 01:11:56.589" endtime="20211022 01:11:56.590"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211022 01:11:49.601" endtime="20211022 01:11:56.590"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:11:56.601" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:11:59.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:11:59.697" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211022 01:11:56.597" endtime="20211022 01:11:59.697"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:11:59.700" level="INFO">om</msg>
<status status="PASS" starttime="20211022 01:11:59.698" endtime="20211022 01:11:59.700"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:11:59.701" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:11:59.700" endtime="20211022 01:11:59.702"/>
</kw>
<status status="PASS" starttime="20211022 01:11:56.596" endtime="20211022 01:11:59.702"/>
</kw>
<msg timestamp="20211022 01:11:59.703" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:11:56.594" endtime="20211022 01:11:59.703"/>
</kw>
<msg timestamp="20211022 01:11:59.704" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211022 01:11:56.592" endtime="20211022 01:11:59.704"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211022 01:11:59.704" endtime="20211022 01:11:59.705"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211022 01:11:59.705" endtime="20211022 01:11:59.706"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:11:59.713" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:12:01.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:12:01.829" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211022 01:11:59.710" endtime="20211022 01:12:01.829"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:12:01.831" level="INFO">om</msg>
<status status="PASS" starttime="20211022 01:12:01.830" endtime="20211022 01:12:01.831"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:12:01.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:12:01.831" endtime="20211022 01:12:01.832"/>
</kw>
<status status="PASS" starttime="20211022 01:11:59.708" endtime="20211022 01:12:01.832"/>
</kw>
<msg timestamp="20211022 01:12:01.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:11:59.708" endtime="20211022 01:12:01.832"/>
</kw>
<msg timestamp="20211022 01:12:01.833" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211022 01:11:59.707" endtime="20211022 01:12:01.833"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211022 01:12:01.833" endtime="20211022 01:12:01.834"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211022 01:12:01.834" endtime="20211022 01:12:01.834"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211022 01:11:56.591" endtime="20211022 01:12:01.834"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:12:01.839" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:12:03.881" level="INFO">${rc} = 255</msg>
<msg timestamp="20211022 01:12:03.881" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211022 01:12:01.837" endtime="20211022 01:12:03.881"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:12:03.884" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211022 01:12:03.882" endtime="20211022 01:12:03.884"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:12:03.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:12:03.884" endtime="20211022 01:12:03.885"/>
</kw>
<msg timestamp="20211022 01:12:03.886" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211022 01:12:01.836" endtime="20211022 01:12:03.886"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211022 01:12:03.887" endtime="20211022 01:12:03.888"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:12:03.894" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:12:06.669" level="INFO">${rc} = 255</msg>
<msg timestamp="20211022 01:12:06.669" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211022 01:12:03.889" endtime="20211022 01:12:06.669"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:12:06.672" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211022 01:12:06.670" endtime="20211022 01:12:06.672"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:12:06.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:12:06.672" endtime="20211022 01:12:06.673"/>
</kw>
<msg timestamp="20211022 01:12:06.674" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211022 01:12:03.888" endtime="20211022 01:12:06.674"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211022 01:12:06.674" endtime="20211022 01:12:06.675"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211022 01:12:01.835" endtime="20211022 01:12:06.675"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20211022 01:11:42.897" endtime="20211022 01:12:06.677"/>
</suite>
<suite id="s1-s1-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211022 01:12:06.714" level="INFO">${random} = 59539</msg>
<status status="PASS" starttime="20211022 01:12:06.713" endtime="20211022 01:12:06.714"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211022 01:12:06.719" level="INFO">${source} = 59539-source</msg>
<status status="PASS" starttime="20211022 01:12:06.715" endtime="20211022 01:12:06.719"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211022 01:12:06.722" level="INFO">${target} = 59539-target</msg>
<status status="PASS" starttime="20211022 01:12:06.719" endtime="20211022 01:12:06.723"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:12:06.729" level="INFO">Running command 'ozone sh volume create 59539-source 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:12:15.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:12:15.417" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:12:06.726" endtime="20211022 01:12:15.417"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:12:15.419" level="INFO"/>
<status status="PASS" starttime="20211022 01:12:15.418" endtime="20211022 01:12:15.419"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:12:15.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:12:15.420" endtime="20211022 01:12:15.421"/>
</kw>
<status status="PASS" starttime="20211022 01:12:06.725" endtime="20211022 01:12:15.422"/>
</kw>
<msg timestamp="20211022 01:12:15.422" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:12:06.724" endtime="20211022 01:12:15.423"/>
</kw>
<status status="PASS" starttime="20211022 01:12:06.723" endtime="20211022 01:12:15.423"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:12:15.431" level="INFO">Running command 'ozone sh volume create 59539-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:12:24.733" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:12:24.733" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:12:15.428" endtime="20211022 01:12:24.733"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:12:24.736" level="INFO"/>
<status status="PASS" starttime="20211022 01:12:24.735" endtime="20211022 01:12:24.736"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:12:24.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:12:24.737" endtime="20211022 01:12:24.739"/>
</kw>
<status status="PASS" starttime="20211022 01:12:15.427" endtime="20211022 01:12:24.739"/>
</kw>
<msg timestamp="20211022 01:12:24.740" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:12:15.426" endtime="20211022 01:12:24.740"/>
</kw>
<status status="PASS" starttime="20211022 01:12:15.424" endtime="20211022 01:12:24.741"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:12:24.752" level="INFO">Running command 'ozone sh bucket create 59539-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:12:33.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:12:33.830" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:12:24.749" endtime="20211022 01:12:33.830"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:12:33.832" level="INFO"/>
<status status="PASS" starttime="20211022 01:12:33.831" endtime="20211022 01:12:33.832"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:12:33.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:12:33.832" endtime="20211022 01:12:33.832"/>
</kw>
<status status="PASS" starttime="20211022 01:12:24.748" endtime="20211022 01:12:33.833"/>
</kw>
<msg timestamp="20211022 01:12:33.833" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:12:24.745" endtime="20211022 01:12:33.833"/>
</kw>
<status status="PASS" starttime="20211022 01:12:24.743" endtime="20211022 01:12:33.834"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:12:33.840" level="INFO">Running command 'ozone sh key put 59539-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:15:47.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:15:47.341" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:12:33.837" endtime="20211022 01:15:47.341"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:15:47.342" level="INFO"/>
<status status="PASS" starttime="20211022 01:15:47.342" endtime="20211022 01:15:47.342"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:15:47.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:15:47.343" endtime="20211022 01:15:47.343"/>
</kw>
<status status="PASS" starttime="20211022 01:12:33.836" endtime="20211022 01:15:47.344"/>
</kw>
<msg timestamp="20211022 01:15:47.344" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:12:33.835" endtime="20211022 01:15:47.344"/>
</kw>
<status status="PASS" starttime="20211022 01:12:33.834" endtime="20211022 01:15:47.344"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:15:47.350" level="INFO">Running command 'ozone sh bucket create 59539-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:15:55.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:15:55.774" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:15:47.346" endtime="20211022 01:15:55.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:15:55.776" level="INFO"/>
<status status="PASS" starttime="20211022 01:15:55.775" endtime="20211022 01:15:55.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:15:55.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:15:55.777" endtime="20211022 01:15:55.777"/>
</kw>
<status status="PASS" starttime="20211022 01:15:47.346" endtime="20211022 01:15:55.778"/>
</kw>
<msg timestamp="20211022 01:15:55.778" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:15:47.345" endtime="20211022 01:15:55.778"/>
</kw>
<status status="PASS" starttime="20211022 01:15:47.345" endtime="20211022 01:15:55.779"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:15:55.787" level="INFO">Running command 'ozone sh bucket link 59539-source/readable-bucket 59539-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:16:05.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:16:05.501" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:15:55.783" endtime="20211022 01:16:05.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:16:05.503" level="INFO"/>
<status status="PASS" starttime="20211022 01:16:05.502" endtime="20211022 01:16:05.503"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:16:05.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:16:05.504" endtime="20211022 01:16:05.505"/>
</kw>
<status status="PASS" starttime="20211022 01:15:55.782" endtime="20211022 01:16:05.506"/>
</kw>
<msg timestamp="20211022 01:16:05.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:15:55.781" endtime="20211022 01:16:05.507"/>
</kw>
<status status="PASS" starttime="20211022 01:15:55.779" endtime="20211022 01:16:05.507"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:16:05.514" level="INFO">Running command 'ozone sh bucket link 59539-source/readable-bucket 59539-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:16:13.891" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:16:13.892" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:16:05.509" endtime="20211022 01:16:13.892"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:16:13.896" level="INFO"/>
<status status="PASS" starttime="20211022 01:16:13.893" endtime="20211022 01:16:13.896"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:16:13.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:16:13.896" endtime="20211022 01:16:13.897"/>
</kw>
<status status="PASS" starttime="20211022 01:16:05.508" endtime="20211022 01:16:13.898"/>
</kw>
<msg timestamp="20211022 01:16:13.899" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:16:05.508" endtime="20211022 01:16:13.899"/>
</kw>
<status status="PASS" starttime="20211022 01:16:05.507" endtime="20211022 01:16:13.899"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:16:13.905" level="INFO">Running command 'ozone sh bucket link 59539-source/unreadable-bucket 59539-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:16:23.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:16:23.165" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:16:13.902" endtime="20211022 01:16:23.165"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:16:23.168" level="INFO"/>
<status status="PASS" starttime="20211022 01:16:23.167" endtime="20211022 01:16:23.168"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:16:23.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:16:23.168" endtime="20211022 01:16:23.169"/>
</kw>
<status status="PASS" starttime="20211022 01:16:13.901" endtime="20211022 01:16:23.170"/>
</kw>
<msg timestamp="20211022 01:16:23.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:16:13.901" endtime="20211022 01:16:23.173"/>
</kw>
<status status="PASS" starttime="20211022 01:16:13.899" endtime="20211022 01:16:23.174"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:16:23.179" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 59539-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:16:30.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:16:30.548" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211022 01:16:23.176" endtime="20211022 01:16:30.549"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:16:30.551" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211022 01:16:30.550" endtime="20211022 01:16:30.552"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:16:30.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:16:30.552" endtime="20211022 01:16:30.554"/>
</kw>
<status status="PASS" starttime="20211022 01:16:23.175" endtime="20211022 01:16:30.554"/>
</kw>
<msg timestamp="20211022 01:16:30.555" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:16:23.175" endtime="20211022 01:16:30.555"/>
</kw>
<status status="PASS" starttime="20211022 01:16:23.174" endtime="20211022 01:16:30.555"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:16:30.562" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 59539-source 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:16:39.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:16:39.397" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211022 01:16:30.559" endtime="20211022 01:16:39.397"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:16:39.400" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211022 01:16:39.399" endtime="20211022 01:16:39.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:16:39.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:16:39.401" endtime="20211022 01:16:39.402"/>
</kw>
<status status="PASS" starttime="20211022 01:16:30.558" endtime="20211022 01:16:39.402"/>
</kw>
<msg timestamp="20211022 01:16:39.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:16:30.557" endtime="20211022 01:16:39.402"/>
</kw>
<status status="PASS" starttime="20211022 01:16:30.556" endtime="20211022 01:16:39.403"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:16:39.409" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 59539-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:16:46.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:16:46.186" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211022 01:16:39.406" endtime="20211022 01:16:46.186"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:16:46.187" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211022 01:16:46.187" endtime="20211022 01:16:46.187"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:16:46.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:16:46.188" endtime="20211022 01:16:46.188"/>
</kw>
<status status="PASS" starttime="20211022 01:16:39.405" endtime="20211022 01:16:46.189"/>
</kw>
<msg timestamp="20211022 01:16:46.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:16:39.405" endtime="20211022 01:16:46.189"/>
</kw>
<status status="PASS" starttime="20211022 01:16:39.403" endtime="20211022 01:16:46.189"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:16:46.193" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 59539-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:16:54.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:16:54.516" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211022 01:16:46.191" endtime="20211022 01:16:54.516"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:16:54.518" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211022 01:16:54.517" endtime="20211022 01:16:54.518"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:16:54.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:16:54.519" endtime="20211022 01:16:54.520"/>
</kw>
<status status="PASS" starttime="20211022 01:16:46.190" endtime="20211022 01:16:54.520"/>
</kw>
<msg timestamp="20211022 01:16:54.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:16:46.190" endtime="20211022 01:16:54.521"/>
</kw>
<status status="PASS" starttime="20211022 01:16:46.189" endtime="20211022 01:16:54.522"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:16:54.528" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 59539-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:17:02.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:17:02.683" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211022 01:16:54.525" endtime="20211022 01:17:02.683"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:17:02.685" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211022 01:17:02.684" endtime="20211022 01:17:02.685"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:17:02.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:17:02.685" endtime="20211022 01:17:02.686"/>
</kw>
<status status="PASS" starttime="20211022 01:16:54.523" endtime="20211022 01:17:02.687"/>
</kw>
<msg timestamp="20211022 01:17:02.687" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:16:54.523" endtime="20211022 01:17:02.687"/>
</kw>
<status status="PASS" starttime="20211022 01:16:54.522" endtime="20211022 01:17:02.688"/>
</kw>
<status status="PASS" starttime="20211022 01:12:24.743" endtime="20211022 01:17:02.688"/>
</kw>
<status status="PASS" starttime="20211022 01:12:24.741" endtime="20211022 01:17:02.689"/>
</kw>
<status status="PASS" starttime="20211022 01:12:06.713" endtime="20211022 01:17:02.689"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:17:02.701" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:17:02.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:17:02.707" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211022 01:17:02.698" endtime="20211022 01:17:02.707"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:17:02.709" level="INFO">scm</msg>
<status status="PASS" starttime="20211022 01:17:02.708" endtime="20211022 01:17:02.709"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:17:02.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:17:02.709" endtime="20211022 01:17:02.711"/>
</kw>
<status status="PASS" starttime="20211022 01:17:02.697" endtime="20211022 01:17:02.711"/>
</kw>
<msg timestamp="20211022 01:17:02.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:17:02.696" endtime="20211022 01:17:02.711"/>
</kw>
<msg timestamp="20211022 01:17:02.712" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211022 01:17:02.695" endtime="20211022 01:17:02.712"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211022 01:17:02.715" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211022 01:17:02.712" endtime="20211022 01:17:02.715"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:17:02.721" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:17:02.933" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:17:02.934" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:17:02.719" endtime="20211022 01:17:02.934"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:17:02.935" level="INFO"/>
<status status="PASS" starttime="20211022 01:17:02.934" endtime="20211022 01:17:02.935"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:17:02.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:17:02.936" endtime="20211022 01:17:02.936"/>
</kw>
<status status="PASS" starttime="20211022 01:17:02.718" endtime="20211022 01:17:02.937"/>
</kw>
<msg timestamp="20211022 01:17:02.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:17:02.717" endtime="20211022 01:17:02.937"/>
</kw>
<status status="PASS" starttime="20211022 01:17:02.716" endtime="20211022 01:17:02.937"/>
</kw>
<status status="PASS" starttime="20211022 01:17:02.715" endtime="20211022 01:17:02.937"/>
</kw>
<status status="PASS" starttime="20211022 01:17:02.695" endtime="20211022 01:17:02.938"/>
</kw>
<status status="PASS" starttime="20211022 01:17:02.694" endtime="20211022 01:17:02.938"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:17:02.943" level="INFO">Running command 'ozone sh bucket link 59539-source/no-such-bucket 59539-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:17:10.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:17:10.437" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:17:02.940" endtime="20211022 01:17:10.437"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:17:10.439" level="INFO"/>
<status status="PASS" starttime="20211022 01:17:10.438" endtime="20211022 01:17:10.439"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:17:10.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:17:10.439" endtime="20211022 01:17:10.439"/>
</kw>
<status status="PASS" starttime="20211022 01:17:02.939" endtime="20211022 01:17:10.440"/>
</kw>
<msg timestamp="20211022 01:17:10.440" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:17:02.939" endtime="20211022 01:17:10.440"/>
</kw>
<status status="PASS" starttime="20211022 01:17:02.938" endtime="20211022 01:17:10.441"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:17:10.444" level="INFO">Running command 'ozone sh key list 59539-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:17:18.790" level="INFO">${rc} = 255</msg>
<msg timestamp="20211022 01:17:18.790" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20211022 01:17:10.442" endtime="20211022 01:17:18.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:17:18.792" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20211022 01:17:18.791" endtime="20211022 01:17:18.792"/>
</kw>
<msg timestamp="20211022 01:17:18.792" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20211022 01:17:10.441" endtime="20211022 01:17:18.793"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211022 01:17:18.793" endtime="20211022 01:17:18.793"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211022 01:17:02.689" endtime="20211022 01:17:18.794"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:17:18.804" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:17:18.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:17:18.811" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211022 01:17:18.801" endtime="20211022 01:17:18.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:17:18.813" level="INFO">scm</msg>
<status status="PASS" starttime="20211022 01:17:18.812" endtime="20211022 01:17:18.813"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:17:18.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:17:18.813" endtime="20211022 01:17:18.815"/>
</kw>
<status status="PASS" starttime="20211022 01:17:18.800" endtime="20211022 01:17:18.815"/>
</kw>
<msg timestamp="20211022 01:17:18.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:17:18.800" endtime="20211022 01:17:18.816"/>
</kw>
<msg timestamp="20211022 01:17:18.817" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211022 01:17:18.798" endtime="20211022 01:17:18.817"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211022 01:17:18.818" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211022 01:17:18.817" endtime="20211022 01:17:18.819"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:17:18.825" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:17:18.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:17:18.835" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:17:18.823" endtime="20211022 01:17:18.835"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:17:18.837" level="INFO"/>
<status status="PASS" starttime="20211022 01:17:18.836" endtime="20211022 01:17:18.837"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:17:18.839" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:17:18.838" endtime="20211022 01:17:18.839"/>
</kw>
<status status="PASS" starttime="20211022 01:17:18.822" endtime="20211022 01:17:18.840"/>
</kw>
<msg timestamp="20211022 01:17:18.840" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:17:18.821" endtime="20211022 01:17:18.840"/>
</kw>
<status status="PASS" starttime="20211022 01:17:18.820" endtime="20211022 01:17:18.840"/>
</kw>
<status status="PASS" starttime="20211022 01:17:18.819" endtime="20211022 01:17:18.841"/>
</kw>
<status status="PASS" starttime="20211022 01:17:18.797" endtime="20211022 01:17:18.841"/>
</kw>
<status status="PASS" starttime="20211022 01:17:18.796" endtime="20211022 01:17:18.841"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:17:18.851" level="INFO">Running command 'ozone sh bucket link 59539-source/bucket1 59539-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:17:28.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:17:28.073" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:17:18.846" endtime="20211022 01:17:28.073"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:17:28.075" level="INFO"/>
<status status="PASS" starttime="20211022 01:17:28.074" endtime="20211022 01:17:28.075"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:17:28.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:17:28.075" endtime="20211022 01:17:28.076"/>
</kw>
<status status="PASS" starttime="20211022 01:17:18.843" endtime="20211022 01:17:28.077"/>
</kw>
<msg timestamp="20211022 01:17:28.078" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:17:18.842" endtime="20211022 01:17:28.078"/>
</kw>
<status status="PASS" starttime="20211022 01:17:18.841" endtime="20211022 01:17:28.079"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:17:28.084" level="INFO">Running command 'ozone sh bucket create 59539-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:17:36.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:17:36.977" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:17:28.081" endtime="20211022 01:17:36.977"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:17:36.978" level="INFO"/>
<status status="PASS" starttime="20211022 01:17:36.977" endtime="20211022 01:17:36.978"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:17:36.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:17:36.978" endtime="20211022 01:17:36.979"/>
</kw>
<status status="PASS" starttime="20211022 01:17:28.080" endtime="20211022 01:17:36.980"/>
</kw>
<msg timestamp="20211022 01:17:36.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:17:28.080" endtime="20211022 01:17:36.980"/>
</kw>
<status status="PASS" starttime="20211022 01:17:28.079" endtime="20211022 01:17:36.980"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:17:36.985" level="INFO">Running command 'ozone sh key put 59539-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:19:18.797" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20211022 01:17:36.982" endtime="20211022 01:19:18.797"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211022 01:19:18.799" endtime="20211022 01:19:18.799"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211022 01:19:18.799" endtime="20211022 01:19:18.799"/>
</kw>
<status status="FAIL" starttime="20211022 01:17:36.981" endtime="20211022 01:19:18.800"/>
</kw>
<msg timestamp="20211022 01:19:18.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211022 01:17:36.981" endtime="20211022 01:19:18.800"/>
</kw>
<status status="FAIL" starttime="20211022 01:17:36.980" endtime="20211022 01:19:18.801"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<status status="NOT RUN" starttime="20211022 01:19:18.801" endtime="20211022 01:19:18.801"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211022 01:17:18.795" endtime="20211022 01:19:18.802">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:19:18.816" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:19:18.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:19:18.822" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211022 01:19:18.811" endtime="20211022 01:19:18.822"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:19:18.825" level="INFO">scm</msg>
<status status="PASS" starttime="20211022 01:19:18.823" endtime="20211022 01:19:18.825"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:19:18.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:19:18.826" endtime="20211022 01:19:18.827"/>
</kw>
<status status="PASS" starttime="20211022 01:19:18.809" endtime="20211022 01:19:18.828"/>
</kw>
<msg timestamp="20211022 01:19:18.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:19:18.808" endtime="20211022 01:19:18.829"/>
</kw>
<msg timestamp="20211022 01:19:18.830" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211022 01:19:18.807" endtime="20211022 01:19:18.830"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211022 01:19:18.831" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211022 01:19:18.830" endtime="20211022 01:19:18.831"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:19:18.840" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:19:18.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:19:18.861" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:19:18.835" endtime="20211022 01:19:18.861"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:19:18.863" level="INFO"/>
<status status="PASS" starttime="20211022 01:19:18.862" endtime="20211022 01:19:18.864"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:19:18.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:19:18.864" endtime="20211022 01:19:18.866"/>
</kw>
<status status="PASS" starttime="20211022 01:19:18.834" endtime="20211022 01:19:18.866"/>
</kw>
<msg timestamp="20211022 01:19:18.866" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:19:18.834" endtime="20211022 01:19:18.866"/>
</kw>
<status status="PASS" starttime="20211022 01:19:18.833" endtime="20211022 01:19:18.867"/>
</kw>
<status status="PASS" starttime="20211022 01:19:18.832" endtime="20211022 01:19:18.867"/>
</kw>
<status status="PASS" starttime="20211022 01:19:18.806" endtime="20211022 01:19:18.867"/>
</kw>
<status status="PASS" starttime="20211022 01:19:18.804" endtime="20211022 01:19:18.867"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:19:18.872" level="INFO">Running command 'ozone sh key put 59539-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:21:18.805" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20211022 01:19:18.869" endtime="20211022 01:21:18.805"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211022 01:21:18.806" endtime="20211022 01:21:18.806"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211022 01:21:18.806" endtime="20211022 01:21:18.807"/>
</kw>
<status status="FAIL" starttime="20211022 01:19:18.869" endtime="20211022 01:21:18.807"/>
</kw>
<msg timestamp="20211022 01:21:18.807" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211022 01:19:18.868" endtime="20211022 01:21:18.807"/>
</kw>
<status status="FAIL" starttime="20211022 01:19:18.868" endtime="20211022 01:21:18.808"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211022 01:21:18.808" endtime="20211022 01:21:18.808"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211022 01:19:18.803" endtime="20211022 01:21:18.809">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:21:18.817" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:21:18.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:21:18.824" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211022 01:21:18.814" endtime="20211022 01:21:18.824"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:21:18.826" level="INFO">scm</msg>
<status status="PASS" starttime="20211022 01:21:18.825" endtime="20211022 01:21:18.826"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:21:18.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:21:18.826" endtime="20211022 01:21:18.827"/>
</kw>
<status status="PASS" starttime="20211022 01:21:18.814" endtime="20211022 01:21:18.828"/>
</kw>
<msg timestamp="20211022 01:21:18.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:21:18.813" endtime="20211022 01:21:18.828"/>
</kw>
<msg timestamp="20211022 01:21:18.828" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211022 01:21:18.813" endtime="20211022 01:21:18.828"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211022 01:21:18.829" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211022 01:21:18.829" endtime="20211022 01:21:18.829"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:21:18.837" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:21:18.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:21:18.848" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:21:18.833" endtime="20211022 01:21:18.848"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:21:18.853" level="INFO"/>
<status status="PASS" starttime="20211022 01:21:18.849" endtime="20211022 01:21:18.854"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:21:18.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:21:18.854" endtime="20211022 01:21:18.855"/>
</kw>
<status status="PASS" starttime="20211022 01:21:18.832" endtime="20211022 01:21:18.856"/>
</kw>
<msg timestamp="20211022 01:21:18.856" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:21:18.831" endtime="20211022 01:21:18.857"/>
</kw>
<status status="PASS" starttime="20211022 01:21:18.830" endtime="20211022 01:21:18.857"/>
</kw>
<status status="PASS" starttime="20211022 01:21:18.830" endtime="20211022 01:21:18.857"/>
</kw>
<status status="PASS" starttime="20211022 01:21:18.812" endtime="20211022 01:21:18.858"/>
</kw>
<status status="PASS" starttime="20211022 01:21:18.811" endtime="20211022 01:21:18.859"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:21:18.871" level="INFO">Running command 'ozone sh key list 59539-target/link1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:21:28.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:21:28.676" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20211022 01:21:18.868" endtime="20211022 01:21:28.676"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:21:28.677" level="INFO">key1</msg>
<status status="PASS" starttime="20211022 01:21:28.676" endtime="20211022 01:21:28.677"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:21:28.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:21:28.678" endtime="20211022 01:21:28.680"/>
</kw>
<status status="PASS" starttime="20211022 01:21:18.867" endtime="20211022 01:21:28.680"/>
</kw>
<msg timestamp="20211022 01:21:28.680" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:21:18.866" endtime="20211022 01:21:28.681"/>
</kw>
<msg timestamp="20211022 01:21:28.681" level="INFO">${target_list} = key1</msg>
<status status="PASS" starttime="20211022 01:21:18.859" endtime="20211022 01:21:28.681"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:21:28.687" level="INFO">Running command 'ozone sh key list 59539-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:21:38.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:21:38.580" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20211022 01:21:28.684" endtime="20211022 01:21:38.580"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:21:38.581" level="INFO">key1</msg>
<status status="PASS" starttime="20211022 01:21:38.580" endtime="20211022 01:21:38.581"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:21:38.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:21:38.581" endtime="20211022 01:21:38.582"/>
</kw>
<status status="PASS" starttime="20211022 01:21:28.683" endtime="20211022 01:21:38.582"/>
</kw>
<msg timestamp="20211022 01:21:38.582" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:21:28.683" endtime="20211022 01:21:38.583"/>
</kw>
<msg timestamp="20211022 01:21:38.586" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20211022 01:21:28.682" endtime="20211022 01:21:38.586"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211022 01:21:38.587" endtime="20211022 01:21:38.587"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211022 01:21:38.588" endtime="20211022 01:21:38.588"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20211022 01:21:38.589" level="FAIL">'key1' does not contain 'key2'</msg>
<status status="FAIL" starttime="20211022 01:21:38.588" endtime="20211022 01:21:38.589"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211022 01:21:18.810" endtime="20211022 01:21:38.590">'key1' does not contain 'key2'</status>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:21:38.598" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:21:38.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:21:38.603" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211022 01:21:38.595" endtime="20211022 01:21:38.603"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:21:38.605" level="INFO">scm</msg>
<status status="PASS" starttime="20211022 01:21:38.604" endtime="20211022 01:21:38.605"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:21:38.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:21:38.605" endtime="20211022 01:21:38.606"/>
</kw>
<status status="PASS" starttime="20211022 01:21:38.594" endtime="20211022 01:21:38.606"/>
</kw>
<msg timestamp="20211022 01:21:38.607" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:21:38.594" endtime="20211022 01:21:38.607"/>
</kw>
<msg timestamp="20211022 01:21:38.608" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211022 01:21:38.593" endtime="20211022 01:21:38.608"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211022 01:21:38.610" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211022 01:21:38.609" endtime="20211022 01:21:38.610"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:21:38.617" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:21:38.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:21:38.627" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:21:38.615" endtime="20211022 01:21:38.627"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:21:38.629" level="INFO"/>
<status status="PASS" starttime="20211022 01:21:38.628" endtime="20211022 01:21:38.629"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:21:38.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:21:38.629" endtime="20211022 01:21:38.631"/>
</kw>
<status status="PASS" starttime="20211022 01:21:38.614" endtime="20211022 01:21:38.631"/>
</kw>
<msg timestamp="20211022 01:21:38.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:21:38.613" endtime="20211022 01:21:38.631"/>
</kw>
<status status="PASS" starttime="20211022 01:21:38.612" endtime="20211022 01:21:38.632"/>
</kw>
<status status="PASS" starttime="20211022 01:21:38.611" endtime="20211022 01:21:38.632"/>
</kw>
<status status="PASS" starttime="20211022 01:21:38.592" endtime="20211022 01:21:38.632"/>
</kw>
<status status="PASS" starttime="20211022 01:21:38.592" endtime="20211022 01:21:38.632"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:21:38.638" level="INFO">Running command 'ozone sh key delete 59539-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:21:45.188" level="INFO">${rc} = 255</msg>
<msg timestamp="20211022 01:21:45.188" level="INFO">${output} = KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20211022 01:21:38.635" endtime="20211022 01:21:45.188"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:21:45.190" level="INFO">KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20211022 01:21:45.189" endtime="20211022 01:21:45.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:21:45.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20211022 01:21:45.193" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20211022 01:21:45.191" endtime="20211022 01:21:45.193"/>
</kw>
<status status="FAIL" starttime="20211022 01:21:38.634" endtime="20211022 01:21:45.194"/>
</kw>
<msg timestamp="20211022 01:21:45.195" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211022 01:21:38.634" endtime="20211022 01:21:45.195"/>
</kw>
<status status="FAIL" starttime="20211022 01:21:38.633" endtime="20211022 01:21:45.196"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211022 01:21:45.196" endtime="20211022 01:21:45.196"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211022 01:21:45.197" endtime="20211022 01:21:45.197"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211022 01:21:38.590" endtime="20211022 01:21:45.197">255 != 0</status>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:21:45.213" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:21:45.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:21:45.219" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211022 01:21:45.209" endtime="20211022 01:21:45.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:21:45.221" level="INFO">scm</msg>
<status status="PASS" starttime="20211022 01:21:45.220" endtime="20211022 01:21:45.222"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:21:45.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:21:45.222" endtime="20211022 01:21:45.223"/>
</kw>
<status status="PASS" starttime="20211022 01:21:45.207" endtime="20211022 01:21:45.223"/>
</kw>
<msg timestamp="20211022 01:21:45.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:21:45.206" endtime="20211022 01:21:45.224"/>
</kw>
<msg timestamp="20211022 01:21:45.225" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211022 01:21:45.205" endtime="20211022 01:21:45.225"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211022 01:21:45.226" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211022 01:21:45.225" endtime="20211022 01:21:45.226"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:21:45.241" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:21:45.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:21:45.254" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:21:45.236" endtime="20211022 01:21:45.254"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:21:45.256" level="INFO"/>
<status status="PASS" starttime="20211022 01:21:45.255" endtime="20211022 01:21:45.256"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:21:45.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:21:45.257" endtime="20211022 01:21:45.259"/>
</kw>
<status status="PASS" starttime="20211022 01:21:45.233" endtime="20211022 01:21:45.259"/>
</kw>
<msg timestamp="20211022 01:21:45.260" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:21:45.232" endtime="20211022 01:21:45.260"/>
</kw>
<status status="PASS" starttime="20211022 01:21:45.228" endtime="20211022 01:21:45.260"/>
</kw>
<status status="PASS" starttime="20211022 01:21:45.227" endtime="20211022 01:21:45.260"/>
</kw>
<status status="PASS" starttime="20211022 01:21:45.204" endtime="20211022 01:21:45.260"/>
</kw>
<status status="PASS" starttime="20211022 01:21:45.203" endtime="20211022 01:21:45.261"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:21:45.268" level="INFO">Running command 'ozone sh bucket list 59539-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:21:52.547" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:21:52.548" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "59539-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "202...</msg>
<status status="PASS" starttime="20211022 01:21:45.264" endtime="20211022 01:21:52.548"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:21:52.550" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "59539-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-22T01:17:10.316Z",
  "modificationTime" : "2021-10-22T01:17:10.316Z",
  "sourceVolume" : "59539-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "59539-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-22T01:16:23.082Z",
  "modificationTime" : "2021-10-22T01:17:02.370Z",
  "sourceVolume" : "59539-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "59539-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-22T01:17:27.962Z",
  "modificationTime" : "2021-10-22T01:17:27.962Z",
  "sourceVolume" : "59539-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "59539-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-22T01:16:04.983Z",
  "modificationTime" : "2021-10-22T01:16:54.183Z",
  "sourceVolume" : "59539-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "59539-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-22T01:16:13.736Z",
  "modificationTime" : "2021-10-22T01:16:13.736Z",
  "sourceVolume" : "59539-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
} ]</msg>
<status status="PASS" starttime="20211022 01:21:52.548" endtime="20211022 01:21:52.550"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:21:52.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:21:52.550" endtime="20211022 01:21:52.551"/>
</kw>
<status status="PASS" starttime="20211022 01:21:45.263" endtime="20211022 01:21:52.552"/>
</kw>
<msg timestamp="20211022 01:21:52.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:21:45.262" endtime="20211022 01:21:52.552"/>
</kw>
<msg timestamp="20211022 01:21:52.553" level="INFO">${result} = [ {
  "metadata" : { },
  "volumeName" : "59539-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "202...</msg>
<status status="PASS" starttime="20211022 01:21:45.261" endtime="20211022 01:21:52.553"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211022 01:21:52.553" endtime="20211022 01:21:52.554"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211022 01:21:52.554" endtime="20211022 01:21:52.555"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211022 01:21:45.199" endtime="20211022 01:21:52.555"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:21:52.566" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:21:52.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:21:52.574" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211022 01:21:52.563" endtime="20211022 01:21:52.574"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:21:52.576" level="INFO">scm</msg>
<status status="PASS" starttime="20211022 01:21:52.575" endtime="20211022 01:21:52.576"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:21:52.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:21:52.576" endtime="20211022 01:21:52.577"/>
</kw>
<status status="PASS" starttime="20211022 01:21:52.562" endtime="20211022 01:21:52.577"/>
</kw>
<msg timestamp="20211022 01:21:52.577" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:21:52.561" endtime="20211022 01:21:52.578"/>
</kw>
<msg timestamp="20211022 01:21:52.578" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211022 01:21:52.561" endtime="20211022 01:21:52.578"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211022 01:21:52.580" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211022 01:21:52.579" endtime="20211022 01:21:52.580"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:21:52.587" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:21:52.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:21:52.599" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:21:52.584" endtime="20211022 01:21:52.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:21:52.601" level="INFO"/>
<status status="PASS" starttime="20211022 01:21:52.600" endtime="20211022 01:21:52.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:21:52.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:21:52.602" endtime="20211022 01:21:52.603"/>
</kw>
<status status="PASS" starttime="20211022 01:21:52.583" endtime="20211022 01:21:52.603"/>
</kw>
<msg timestamp="20211022 01:21:52.603" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:21:52.582" endtime="20211022 01:21:52.603"/>
</kw>
<status status="PASS" starttime="20211022 01:21:52.581" endtime="20211022 01:21:52.604"/>
</kw>
<status status="PASS" starttime="20211022 01:21:52.580" endtime="20211022 01:21:52.605"/>
</kw>
<status status="PASS" starttime="20211022 01:21:52.560" endtime="20211022 01:21:52.605"/>
</kw>
<status status="PASS" starttime="20211022 01:21:52.559" endtime="20211022 01:21:52.605"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:21:52.611" level="INFO">Running command 'ozone sh bucket info 59539-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:22:02.396" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:22:02.396" level="INFO">${output} = {
  "volumeName" : "59539-target",
  "bucketName" : "link1",
  "sourceVolume" : "59539-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-10-22T01:17:27.962Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20211022 01:21:52.608" endtime="20211022 01:22:02.396"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:22:02.397" level="INFO">{
  "volumeName" : "59539-target",
  "bucketName" : "link1",
  "sourceVolume" : "59539-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-10-22T01:17:27.962Z",
  "modificationTime" : "2021-10-22T01:17:27.962Z"
}</msg>
<status status="PASS" starttime="20211022 01:22:02.397" endtime="20211022 01:22:02.397"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:22:02.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:22:02.398" endtime="20211022 01:22:02.399"/>
</kw>
<status status="PASS" starttime="20211022 01:21:52.607" endtime="20211022 01:22:02.399"/>
</kw>
<msg timestamp="20211022 01:22:02.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:21:52.607" endtime="20211022 01:22:02.399"/>
</kw>
<msg timestamp="20211022 01:22:02.400" level="INFO">${result} = {
  "volumeName" : "59539-target",
  "bucketName" : "link1",
  "sourceVolume" : "59539-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-10-22T01:17:27.962Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20211022 01:21:52.606" endtime="20211022 01:22:02.400"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${source}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211022 01:22:02.400" endtime="20211022 01:22:02.400"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bucket1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211022 01:22:02.401" endtime="20211022 01:22:02.401"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${target}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211022 01:22:02.401" endtime="20211022 01:22:02.402"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211022 01:22:02.402" endtime="20211022 01:22:02.403"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>modificationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211022 01:22:02.403" endtime="20211022 01:22:02.404"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211022 01:22:02.404" endtime="20211022 01:22:02.404"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>metadata</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211022 01:22:02.404" endtime="20211022 01:22:02.405"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211022 01:21:52.557" endtime="20211022 01:22:02.405"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:22:02.415" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:22:02.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:22:02.422" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211022 01:22:02.411" endtime="20211022 01:22:02.423"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:22:02.424" level="INFO">scm</msg>
<status status="PASS" starttime="20211022 01:22:02.423" endtime="20211022 01:22:02.424"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:22:02.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:22:02.424" endtime="20211022 01:22:02.425"/>
</kw>
<status status="PASS" starttime="20211022 01:22:02.410" endtime="20211022 01:22:02.426"/>
</kw>
<msg timestamp="20211022 01:22:02.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:22:02.410" endtime="20211022 01:22:02.426"/>
</kw>
<msg timestamp="20211022 01:22:02.426" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211022 01:22:02.409" endtime="20211022 01:22:02.426"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211022 01:22:02.428" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211022 01:22:02.427" endtime="20211022 01:22:02.428"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:22:02.435" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:22:02.445" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:22:02.446" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:22:02.432" endtime="20211022 01:22:02.446"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:22:02.449" level="INFO"/>
<status status="PASS" starttime="20211022 01:22:02.448" endtime="20211022 01:22:02.449"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:22:02.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:22:02.449" endtime="20211022 01:22:02.450"/>
</kw>
<status status="PASS" starttime="20211022 01:22:02.431" endtime="20211022 01:22:02.450"/>
</kw>
<msg timestamp="20211022 01:22:02.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:22:02.430" endtime="20211022 01:22:02.451"/>
</kw>
<status status="PASS" starttime="20211022 01:22:02.429" endtime="20211022 01:22:02.451"/>
</kw>
<status status="PASS" starttime="20211022 01:22:02.428" endtime="20211022 01:22:02.452"/>
</kw>
<status status="PASS" starttime="20211022 01:22:02.408" endtime="20211022 01:22:02.452"/>
</kw>
<status status="PASS" starttime="20211022 01:22:02.407" endtime="20211022 01:22:02.452"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:22:02.457" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 59539-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:22:11.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:22:11.640" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211022 01:22:02.454" endtime="20211022 01:22:11.640"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:22:11.642" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211022 01:22:11.641" endtime="20211022 01:22:11.642"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:22:11.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:22:11.643" endtime="20211022 01:22:11.644"/>
</kw>
<status status="PASS" starttime="20211022 01:22:02.453" endtime="20211022 01:22:11.645"/>
</kw>
<msg timestamp="20211022 01:22:11.645" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:22:02.453" endtime="20211022 01:22:11.645"/>
</kw>
<status status="PASS" starttime="20211022 01:22:02.452" endtime="20211022 01:22:11.645"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:22:11.654" level="INFO">Running command 'ozone sh bucket getacl 59539-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:22:20.949" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:22:20.949" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20211022 01:22:11.650" endtime="20211022 01:22:20.949"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:22:20.952" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20211022 01:22:20.950" endtime="20211022 01:22:20.952"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:22:20.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:22:20.953" endtime="20211022 01:22:20.953"/>
</kw>
<status status="PASS" starttime="20211022 01:22:11.649" endtime="20211022 01:22:20.954"/>
</kw>
<msg timestamp="20211022 01:22:20.954" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:22:11.649" endtime="20211022 01:22:20.955"/>
</kw>
<msg timestamp="20211022 01:22:20.955" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20211022 01:22:11.647" endtime="20211022 01:22:20.955"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211022 01:22:20.955" endtime="20211022 01:22:20.956"/>
</kw>
<status status="PASS" starttime="20211022 01:22:11.646" endtime="20211022 01:22:20.957"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:22:20.966" level="INFO">Running command 'ozone sh bucket getacl 59539-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:22:30.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:22:30.907" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:22:20.963" endtime="20211022 01:22:30.907"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:22:30.914" level="INFO"/>
<status status="PASS" starttime="20211022 01:22:30.908" endtime="20211022 01:22:30.914"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:22:30.916" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:22:30.914" endtime="20211022 01:22:30.916"/>
</kw>
<status status="PASS" starttime="20211022 01:22:20.962" endtime="20211022 01:22:30.916"/>
</kw>
<msg timestamp="20211022 01:22:30.917" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:22:20.962" endtime="20211022 01:22:30.917"/>
</kw>
<msg timestamp="20211022 01:22:30.918" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20211022 01:22:20.960" endtime="20211022 01:22:30.918"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211022 01:22:30.918" endtime="20211022 01:22:30.919"/>
</kw>
<status status="PASS" starttime="20211022 01:22:20.957" endtime="20211022 01:22:30.920"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:22:30.928" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 59539-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:22:39.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:22:39.458" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211022 01:22:30.925" endtime="20211022 01:22:39.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:22:39.460" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211022 01:22:39.459" endtime="20211022 01:22:39.460"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:22:39.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:22:39.461" endtime="20211022 01:22:39.461"/>
</kw>
<status status="PASS" starttime="20211022 01:22:30.924" endtime="20211022 01:22:39.462"/>
</kw>
<msg timestamp="20211022 01:22:39.462" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:22:30.923" endtime="20211022 01:22:39.462"/>
</kw>
<status status="PASS" starttime="20211022 01:22:30.920" endtime="20211022 01:22:39.463"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:22:39.469" level="INFO">Running command 'ozone sh bucket getacl 59539-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:22:48.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:22:48.529" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:22:39.467" endtime="20211022 01:22:48.529"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:22:48.532" level="INFO"/>
<status status="PASS" starttime="20211022 01:22:48.531" endtime="20211022 01:22:48.533"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:22:48.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:22:48.533" endtime="20211022 01:22:48.534"/>
</kw>
<status status="PASS" starttime="20211022 01:22:39.466" endtime="20211022 01:22:48.535"/>
</kw>
<msg timestamp="20211022 01:22:48.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:22:39.466" endtime="20211022 01:22:48.536"/>
</kw>
<msg timestamp="20211022 01:22:48.536" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20211022 01:22:39.464" endtime="20211022 01:22:48.536"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211022 01:22:48.537" endtime="20211022 01:22:48.539"/>
</kw>
<status status="PASS" starttime="20211022 01:22:39.463" endtime="20211022 01:22:48.541"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:22:48.553" level="INFO">Running command 'ozone sh bucket getacl 59539-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:22:57.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:22:57.629" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20211022 01:22:48.549" endtime="20211022 01:22:57.629"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:22:57.631" level="INFO">READ</msg>
<status status="PASS" starttime="20211022 01:22:57.630" endtime="20211022 01:22:57.631"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:22:57.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:22:57.632" endtime="20211022 01:22:57.633"/>
</kw>
<status status="PASS" starttime="20211022 01:22:48.548" endtime="20211022 01:22:57.636"/>
</kw>
<msg timestamp="20211022 01:22:57.636" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:22:48.547" endtime="20211022 01:22:57.636"/>
</kw>
<msg timestamp="20211022 01:22:57.637" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20211022 01:22:48.543" endtime="20211022 01:22:57.637"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211022 01:22:57.637" endtime="20211022 01:22:57.638"/>
</kw>
<status status="PASS" starttime="20211022 01:22:48.542" endtime="20211022 01:22:57.639"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211022 01:22:02.406" endtime="20211022 01:22:57.639"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:22:57.649" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:22:57.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:22:57.654" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211022 01:22:57.645" endtime="20211022 01:22:57.655"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:22:57.656" level="INFO">scm</msg>
<status status="PASS" starttime="20211022 01:22:57.655" endtime="20211022 01:22:57.656"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:22:57.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:22:57.657" endtime="20211022 01:22:57.657"/>
</kw>
<status status="PASS" starttime="20211022 01:22:57.645" endtime="20211022 01:22:57.658"/>
</kw>
<msg timestamp="20211022 01:22:57.658" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:22:57.644" endtime="20211022 01:22:57.658"/>
</kw>
<msg timestamp="20211022 01:22:57.659" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211022 01:22:57.644" endtime="20211022 01:22:57.659"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211022 01:22:57.660" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211022 01:22:57.659" endtime="20211022 01:22:57.660"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:22:57.666" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:22:57.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:22:57.813" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:22:57.663" endtime="20211022 01:22:57.813"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:22:57.815" level="INFO"/>
<status status="PASS" starttime="20211022 01:22:57.814" endtime="20211022 01:22:57.815"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:22:57.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:22:57.815" endtime="20211022 01:22:57.816"/>
</kw>
<status status="PASS" starttime="20211022 01:22:57.662" endtime="20211022 01:22:57.816"/>
</kw>
<msg timestamp="20211022 01:22:57.816" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:22:57.662" endtime="20211022 01:22:57.817"/>
</kw>
<status status="PASS" starttime="20211022 01:22:57.661" endtime="20211022 01:22:57.817"/>
</kw>
<status status="PASS" starttime="20211022 01:22:57.660" endtime="20211022 01:22:57.817"/>
</kw>
<status status="PASS" starttime="20211022 01:22:57.643" endtime="20211022 01:22:57.817"/>
</kw>
<status status="PASS" starttime="20211022 01:22:57.642" endtime="20211022 01:22:57.817"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:22:57.822" level="INFO">Running command 'ozone sh bucket link 59539-source/bucket2 59539-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:23:06.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:23:06.674" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:22:57.820" endtime="20211022 01:23:06.674"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:23:06.675" level="INFO"/>
<status status="PASS" starttime="20211022 01:23:06.674" endtime="20211022 01:23:06.675"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:23:06.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:23:06.675" endtime="20211022 01:23:06.676"/>
</kw>
<status status="PASS" starttime="20211022 01:22:57.819" endtime="20211022 01:23:06.677"/>
</kw>
<msg timestamp="20211022 01:23:06.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:22:57.819" endtime="20211022 01:23:06.677"/>
</kw>
<status status="PASS" starttime="20211022 01:22:57.818" endtime="20211022 01:23:06.677"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:23:06.681" level="INFO">Running command 'ozone sh bucket create 59539-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:23:15.558" level="INFO">${rc} = 255</msg>
<msg timestamp="20211022 01:23:15.558" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211022 01:23:06.678" endtime="20211022 01:23:15.558"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:23:15.561" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211022 01:23:15.559" endtime="20211022 01:23:15.561"/>
</kw>
<msg timestamp="20211022 01:23:15.562" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211022 01:23:06.678" endtime="20211022 01:23:15.562"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211022 01:23:15.562" endtime="20211022 01:23:15.564"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:23:15.570" level="INFO">Running command 'ozone sh bucket create 59539-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:23:25.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:23:25.115" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:23:15.568" endtime="20211022 01:23:25.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:23:25.117" level="INFO"/>
<status status="PASS" starttime="20211022 01:23:25.116" endtime="20211022 01:23:25.117"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:23:25.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:23:25.117" endtime="20211022 01:23:25.118"/>
</kw>
<status status="PASS" starttime="20211022 01:23:15.566" endtime="20211022 01:23:25.119"/>
</kw>
<msg timestamp="20211022 01:23:25.119" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:23:15.565" endtime="20211022 01:23:25.119"/>
</kw>
<status status="PASS" starttime="20211022 01:23:15.564" endtime="20211022 01:23:25.119"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:23:25.126" level="INFO">Running command 'ozone sh bucket link 59539-source/bucket1 59539-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:23:34.878" level="INFO">${rc} = 255</msg>
<msg timestamp="20211022 01:23:34.878" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211022 01:23:25.121" endtime="20211022 01:23:34.878"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:23:34.880" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211022 01:23:34.879" endtime="20211022 01:23:34.880"/>
</kw>
<msg timestamp="20211022 01:23:34.880" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211022 01:23:25.120" endtime="20211022 01:23:34.880"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211022 01:23:34.881" endtime="20211022 01:23:34.881"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211022 01:22:57.640" endtime="20211022 01:23:34.881"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:23:34.892" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:23:34.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:23:34.898" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211022 01:23:34.889" endtime="20211022 01:23:34.898"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:23:34.900" level="INFO">scm</msg>
<status status="PASS" starttime="20211022 01:23:34.899" endtime="20211022 01:23:34.900"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:23:34.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:23:34.901" endtime="20211022 01:23:34.902"/>
</kw>
<status status="PASS" starttime="20211022 01:23:34.887" endtime="20211022 01:23:34.903"/>
</kw>
<msg timestamp="20211022 01:23:34.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:23:34.887" endtime="20211022 01:23:34.903"/>
</kw>
<msg timestamp="20211022 01:23:34.904" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211022 01:23:34.886" endtime="20211022 01:23:34.905"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211022 01:23:34.906" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211022 01:23:34.905" endtime="20211022 01:23:34.906"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:23:34.914" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:23:34.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:23:34.928" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:23:34.911" endtime="20211022 01:23:34.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:23:34.931" level="INFO"/>
<status status="PASS" starttime="20211022 01:23:34.929" endtime="20211022 01:23:34.931"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:23:34.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:23:34.932" endtime="20211022 01:23:34.933"/>
</kw>
<status status="PASS" starttime="20211022 01:23:34.909" endtime="20211022 01:23:34.934"/>
</kw>
<msg timestamp="20211022 01:23:34.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:23:34.909" endtime="20211022 01:23:34.934"/>
</kw>
<status status="PASS" starttime="20211022 01:23:34.907" endtime="20211022 01:23:34.935"/>
</kw>
<status status="PASS" starttime="20211022 01:23:34.906" endtime="20211022 01:23:34.935"/>
</kw>
<status status="PASS" starttime="20211022 01:23:34.885" endtime="20211022 01:23:34.935"/>
</kw>
<status status="PASS" starttime="20211022 01:23:34.885" endtime="20211022 01:23:34.936"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:23:34.945" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:23:34.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:23:34.952" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:23:34.941" endtime="20211022 01:23:34.952"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:23:34.953" level="INFO"/>
<status status="PASS" starttime="20211022 01:23:34.952" endtime="20211022 01:23:34.953"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:23:34.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:23:34.954" endtime="20211022 01:23:34.955"/>
</kw>
<status status="PASS" starttime="20211022 01:23:34.940" endtime="20211022 01:23:34.956"/>
</kw>
<msg timestamp="20211022 01:23:34.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:23:34.939" endtime="20211022 01:23:34.956"/>
</kw>
<status status="PASS" starttime="20211022 01:23:34.939" endtime="20211022 01:23:34.957"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:23:34.964" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:23:34.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:23:34.970" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211022 01:23:34.961" endtime="20211022 01:23:34.970"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:23:34.972" level="INFO">scm</msg>
<status status="PASS" starttime="20211022 01:23:34.971" endtime="20211022 01:23:34.972"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:23:34.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:23:34.972" endtime="20211022 01:23:34.973"/>
</kw>
<status status="PASS" starttime="20211022 01:23:34.960" endtime="20211022 01:23:34.973"/>
</kw>
<msg timestamp="20211022 01:23:34.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:23:34.959" endtime="20211022 01:23:34.973"/>
</kw>
<msg timestamp="20211022 01:23:34.974" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211022 01:23:34.959" endtime="20211022 01:23:34.974"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211022 01:23:34.975" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211022 01:23:34.974" endtime="20211022 01:23:34.975"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:23:34.981" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:23:34.994" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:23:34.994" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:23:34.979" endtime="20211022 01:23:34.994"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:23:34.996" level="INFO"/>
<status status="PASS" starttime="20211022 01:23:34.995" endtime="20211022 01:23:34.997"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:23:35.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:23:34.997" endtime="20211022 01:23:35.001"/>
</kw>
<status status="PASS" starttime="20211022 01:23:34.977" endtime="20211022 01:23:35.002"/>
</kw>
<msg timestamp="20211022 01:23:35.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:23:34.977" endtime="20211022 01:23:35.002"/>
</kw>
<status status="PASS" starttime="20211022 01:23:34.976" endtime="20211022 01:23:35.003"/>
</kw>
<status status="PASS" starttime="20211022 01:23:34.975" endtime="20211022 01:23:35.003"/>
</kw>
<status status="PASS" starttime="20211022 01:23:34.958" endtime="20211022 01:23:35.003"/>
</kw>
<status status="PASS" starttime="20211022 01:23:34.957" endtime="20211022 01:23:35.003"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:23:35.008" level="INFO">Running command 'ozone sh key list 59539-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:23:44.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:23:44.390" level="INFO">${output} = [ {
  "volumeName" : "59539-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-10-22T01:12:42.328Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20211022 01:23:35.005" endtime="20211022 01:23:44.390"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:23:44.392" level="INFO">[ {
  "volumeName" : "59539-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-10-22T01:12:42.328Z",
  "modificationTime" : "2021-10-22T01:15:46.456Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "replicationFactor" : 3,
  "replicationType" : "RATIS"
} ]</msg>
<status status="PASS" starttime="20211022 01:23:44.391" endtime="20211022 01:23:44.393"/>
</kw>
<msg timestamp="20211022 01:23:44.393" level="INFO">${result} = [ {
  "volumeName" : "59539-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-10-22T01:12:42.328Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20211022 01:23:35.004" endtime="20211022 01:23:44.394"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211022 01:23:44.394" endtime="20211022 01:23:44.395"/>
</kw>
<status status="PASS" starttime="20211022 01:23:34.937" endtime="20211022 01:23:44.395"/>
</kw>
<status status="PASS" starttime="20211022 01:23:34.936" endtime="20211022 01:23:44.395"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211022 01:23:34.883" endtime="20211022 01:23:44.396"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:23:44.406" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:23:44.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:23:44.412" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211022 01:23:44.403" endtime="20211022 01:23:44.412"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:23:44.413" level="INFO">scm</msg>
<status status="PASS" starttime="20211022 01:23:44.413" endtime="20211022 01:23:44.414"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:23:44.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:23:44.414" endtime="20211022 01:23:44.415"/>
</kw>
<status status="PASS" starttime="20211022 01:23:44.403" endtime="20211022 01:23:44.416"/>
</kw>
<msg timestamp="20211022 01:23:44.416" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:23:44.402" endtime="20211022 01:23:44.416"/>
</kw>
<msg timestamp="20211022 01:23:44.417" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211022 01:23:44.401" endtime="20211022 01:23:44.417"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211022 01:23:44.419" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211022 01:23:44.417" endtime="20211022 01:23:44.419"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:23:44.425" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:23:44.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:23:44.437" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:23:44.423" endtime="20211022 01:23:44.437"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:23:44.439" level="INFO"/>
<status status="PASS" starttime="20211022 01:23:44.438" endtime="20211022 01:23:44.439"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:23:44.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:23:44.439" endtime="20211022 01:23:44.440"/>
</kw>
<status status="PASS" starttime="20211022 01:23:44.421" endtime="20211022 01:23:44.441"/>
</kw>
<msg timestamp="20211022 01:23:44.441" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:23:44.421" endtime="20211022 01:23:44.441"/>
</kw>
<status status="PASS" starttime="20211022 01:23:44.420" endtime="20211022 01:23:44.441"/>
</kw>
<status status="PASS" starttime="20211022 01:23:44.419" endtime="20211022 01:23:44.441"/>
</kw>
<status status="PASS" starttime="20211022 01:23:44.400" endtime="20211022 01:23:44.442"/>
</kw>
<status status="PASS" starttime="20211022 01:23:44.399" endtime="20211022 01:23:44.442"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:23:44.447" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:23:44.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:23:44.452" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:23:44.445" endtime="20211022 01:23:44.452"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:23:44.454" level="INFO"/>
<status status="PASS" starttime="20211022 01:23:44.453" endtime="20211022 01:23:44.454"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:23:44.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:23:44.454" endtime="20211022 01:23:44.455"/>
</kw>
<status status="PASS" starttime="20211022 01:23:44.444" endtime="20211022 01:23:44.456"/>
</kw>
<msg timestamp="20211022 01:23:44.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:23:44.444" endtime="20211022 01:23:44.456"/>
</kw>
<status status="PASS" starttime="20211022 01:23:44.443" endtime="20211022 01:23:44.456"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:23:44.463" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:23:44.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:23:44.468" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211022 01:23:44.460" endtime="20211022 01:23:44.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:23:44.471" level="INFO">scm</msg>
<status status="PASS" starttime="20211022 01:23:44.469" endtime="20211022 01:23:44.471"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:23:44.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:23:44.471" endtime="20211022 01:23:44.473"/>
</kw>
<status status="PASS" starttime="20211022 01:23:44.459" endtime="20211022 01:23:44.473"/>
</kw>
<msg timestamp="20211022 01:23:44.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:23:44.459" endtime="20211022 01:23:44.474"/>
</kw>
<msg timestamp="20211022 01:23:44.474" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211022 01:23:44.457" endtime="20211022 01:23:44.474"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211022 01:23:44.475" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211022 01:23:44.474" endtime="20211022 01:23:44.475"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:23:44.482" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:23:44.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:23:44.493" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:23:44.480" endtime="20211022 01:23:44.493"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:23:44.495" level="INFO"/>
<status status="PASS" starttime="20211022 01:23:44.494" endtime="20211022 01:23:44.495"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:23:44.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:23:44.495" endtime="20211022 01:23:44.496"/>
</kw>
<status status="PASS" starttime="20211022 01:23:44.478" endtime="20211022 01:23:44.497"/>
</kw>
<msg timestamp="20211022 01:23:44.497" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:23:44.478" endtime="20211022 01:23:44.497"/>
</kw>
<status status="PASS" starttime="20211022 01:23:44.477" endtime="20211022 01:23:44.497"/>
</kw>
<status status="PASS" starttime="20211022 01:23:44.476" endtime="20211022 01:23:44.497"/>
</kw>
<status status="PASS" starttime="20211022 01:23:44.457" endtime="20211022 01:23:44.497"/>
</kw>
<status status="PASS" starttime="20211022 01:23:44.457" endtime="20211022 01:23:44.498"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:23:44.502" level="INFO">Running command 'ozone sh key list 59539-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:23:53.759" level="INFO">${rc} = 255</msg>
<msg timestamp="20211022 01:23:53.759" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 59539-target unreadable-link null</msg>
<status status="PASS" starttime="20211022 01:23:44.499" endtime="20211022 01:23:53.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:23:53.763" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 59539-target unreadable-link null</msg>
<status status="PASS" starttime="20211022 01:23:53.761" endtime="20211022 01:23:53.764"/>
</kw>
<msg timestamp="20211022 01:23:53.764" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 59539-target unreadable-link null</msg>
<status status="PASS" starttime="20211022 01:23:44.498" endtime="20211022 01:23:53.764"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211022 01:23:53.765" endtime="20211022 01:23:53.765"/>
</kw>
<status status="PASS" starttime="20211022 01:23:44.443" endtime="20211022 01:23:53.765"/>
</kw>
<status status="PASS" starttime="20211022 01:23:44.442" endtime="20211022 01:23:53.766"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211022 01:23:44.397" endtime="20211022 01:23:53.766"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:23:53.779" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:23:53.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:23:53.787" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211022 01:23:53.776" endtime="20211022 01:23:53.787"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:23:53.789" level="INFO">scm</msg>
<status status="PASS" starttime="20211022 01:23:53.788" endtime="20211022 01:23:53.789"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:23:53.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:23:53.790" endtime="20211022 01:23:53.791"/>
</kw>
<status status="PASS" starttime="20211022 01:23:53.773" endtime="20211022 01:23:53.792"/>
</kw>
<msg timestamp="20211022 01:23:53.792" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:23:53.773" endtime="20211022 01:23:53.792"/>
</kw>
<msg timestamp="20211022 01:23:53.793" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211022 01:23:53.771" endtime="20211022 01:23:53.793"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211022 01:23:53.794" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211022 01:23:53.793" endtime="20211022 01:23:53.794"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:23:53.802" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:23:53.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:23:53.813" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:23:53.799" endtime="20211022 01:23:53.813"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:23:53.816" level="INFO"/>
<status status="PASS" starttime="20211022 01:23:53.814" endtime="20211022 01:23:53.817"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:23:53.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:23:53.817" endtime="20211022 01:23:53.818"/>
</kw>
<status status="PASS" starttime="20211022 01:23:53.798" endtime="20211022 01:23:53.819"/>
</kw>
<msg timestamp="20211022 01:23:53.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:23:53.797" endtime="20211022 01:23:53.819"/>
</kw>
<status status="PASS" starttime="20211022 01:23:53.796" endtime="20211022 01:23:53.820"/>
</kw>
<status status="PASS" starttime="20211022 01:23:53.794" endtime="20211022 01:23:53.820"/>
</kw>
<status status="PASS" starttime="20211022 01:23:53.769" endtime="20211022 01:23:53.821"/>
</kw>
<status status="PASS" starttime="20211022 01:23:53.768" endtime="20211022 01:23:53.821"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:23:53.829" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:23:53.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:23:53.836" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:23:53.827" endtime="20211022 01:23:53.836"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:23:53.838" level="INFO"/>
<status status="PASS" starttime="20211022 01:23:53.837" endtime="20211022 01:23:53.838"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:23:53.839" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:23:53.838" endtime="20211022 01:23:53.840"/>
</kw>
<status status="PASS" starttime="20211022 01:23:53.825" endtime="20211022 01:23:53.841"/>
</kw>
<msg timestamp="20211022 01:23:53.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:23:53.825" endtime="20211022 01:23:53.842"/>
</kw>
<status status="PASS" starttime="20211022 01:23:53.823" endtime="20211022 01:23:53.842"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:23:53.851" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:23:53.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:23:53.856" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211022 01:23:53.847" endtime="20211022 01:23:53.856"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:23:53.857" level="INFO">scm</msg>
<status status="PASS" starttime="20211022 01:23:53.857" endtime="20211022 01:23:53.857"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:23:53.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:23:53.858" endtime="20211022 01:23:53.858"/>
</kw>
<status status="PASS" starttime="20211022 01:23:53.846" endtime="20211022 01:23:53.859"/>
</kw>
<msg timestamp="20211022 01:23:53.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:23:53.846" endtime="20211022 01:23:53.860"/>
</kw>
<msg timestamp="20211022 01:23:53.860" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211022 01:23:53.844" endtime="20211022 01:23:53.860"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211022 01:23:53.863" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211022 01:23:53.861" endtime="20211022 01:23:53.863"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:23:53.872" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:23:53.889" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:23:53.889" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:23:53.866" endtime="20211022 01:23:53.889"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:23:53.892" level="INFO"/>
<status status="PASS" starttime="20211022 01:23:53.890" endtime="20211022 01:23:53.893"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:23:53.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:23:53.893" endtime="20211022 01:23:53.901"/>
</kw>
<status status="PASS" starttime="20211022 01:23:53.866" endtime="20211022 01:23:53.901"/>
</kw>
<msg timestamp="20211022 01:23:53.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:23:53.865" endtime="20211022 01:23:53.902"/>
</kw>
<status status="PASS" starttime="20211022 01:23:53.864" endtime="20211022 01:23:53.902"/>
</kw>
<status status="PASS" starttime="20211022 01:23:53.863" endtime="20211022 01:23:53.902"/>
</kw>
<status status="PASS" starttime="20211022 01:23:53.843" endtime="20211022 01:23:53.902"/>
</kw>
<status status="PASS" starttime="20211022 01:23:53.843" endtime="20211022 01:23:53.903"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:23:53.910" level="INFO">Running command 'ozone sh bucket info 59539-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:24:01.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:24:01.587" level="INFO">${output} = {
  "volumeName" : "59539-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "59539-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-10-22T01:16:23.082Z...</msg>
<status status="PASS" starttime="20211022 01:23:53.906" endtime="20211022 01:24:01.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:24:01.588" level="INFO">{
  "volumeName" : "59539-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "59539-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-10-22T01:16:23.082Z",
  "modificationTime" : "2021-10-22T01:17:02.370Z"
}</msg>
<status status="PASS" starttime="20211022 01:24:01.588" endtime="20211022 01:24:01.589"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:24:01.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:24:01.590" endtime="20211022 01:24:01.591"/>
</kw>
<status status="PASS" starttime="20211022 01:23:53.904" endtime="20211022 01:24:01.591"/>
</kw>
<msg timestamp="20211022 01:24:01.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:23:53.904" endtime="20211022 01:24:01.591"/>
</kw>
<msg timestamp="20211022 01:24:01.592" level="INFO">${result} = {
  "volumeName" : "59539-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "59539-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-10-22T01:16:23.082Z...</msg>
<status status="PASS" starttime="20211022 01:23:53.903" endtime="20211022 01:24:01.592"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211022 01:24:01.592" endtime="20211022 01:24:01.593"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211022 01:24:01.593" endtime="20211022 01:24:01.593"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:24:01.596" level="INFO">Running command 'ozone sh key list 59539-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:24:08.346" level="INFO">${rc} = 255</msg>
<msg timestamp="20211022 01:24:08.347" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 59539-source unreadable-bucket </msg>
<status status="PASS" starttime="20211022 01:24:01.594" endtime="20211022 01:24:08.347"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:24:08.348" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 59539-source unreadable-bucket </msg>
<status status="PASS" starttime="20211022 01:24:08.347" endtime="20211022 01:24:08.348"/>
</kw>
<msg timestamp="20211022 01:24:08.349" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 59539-source unreadable-bucket </msg>
<status status="PASS" starttime="20211022 01:24:01.593" endtime="20211022 01:24:08.349"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211022 01:24:08.349" endtime="20211022 01:24:08.350"/>
</kw>
<status status="PASS" starttime="20211022 01:23:53.823" endtime="20211022 01:24:08.350"/>
</kw>
<status status="PASS" starttime="20211022 01:23:53.822" endtime="20211022 01:24:08.350"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211022 01:23:53.767" endtime="20211022 01:24:08.351"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:24:08.364" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:24:08.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:24:08.371" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211022 01:24:08.358" endtime="20211022 01:24:08.371"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:24:08.372" level="INFO">scm</msg>
<status status="PASS" starttime="20211022 01:24:08.371" endtime="20211022 01:24:08.372"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:24:08.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:24:08.372" endtime="20211022 01:24:08.373"/>
</kw>
<status status="PASS" starttime="20211022 01:24:08.357" endtime="20211022 01:24:08.374"/>
</kw>
<msg timestamp="20211022 01:24:08.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:24:08.356" endtime="20211022 01:24:08.374"/>
</kw>
<msg timestamp="20211022 01:24:08.374" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211022 01:24:08.356" endtime="20211022 01:24:08.374"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211022 01:24:08.376" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211022 01:24:08.375" endtime="20211022 01:24:08.376"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:24:08.384" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:24:08.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:24:08.395" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:24:08.381" endtime="20211022 01:24:08.395"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:24:08.396" level="INFO"/>
<status status="PASS" starttime="20211022 01:24:08.395" endtime="20211022 01:24:08.396"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:24:08.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:24:08.397" endtime="20211022 01:24:08.398"/>
</kw>
<status status="PASS" starttime="20211022 01:24:08.380" endtime="20211022 01:24:08.399"/>
</kw>
<msg timestamp="20211022 01:24:08.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:24:08.379" endtime="20211022 01:24:08.399"/>
</kw>
<status status="PASS" starttime="20211022 01:24:08.378" endtime="20211022 01:24:08.400"/>
</kw>
<status status="PASS" starttime="20211022 01:24:08.376" endtime="20211022 01:24:08.400"/>
</kw>
<status status="PASS" starttime="20211022 01:24:08.355" endtime="20211022 01:24:08.400"/>
</kw>
<status status="PASS" starttime="20211022 01:24:08.354" endtime="20211022 01:24:08.400"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:24:08.405" level="INFO">Running command 'ozone sh bucket link 59539-target/loop1 59539-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:24:16.667" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:24:16.667" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:24:08.403" endtime="20211022 01:24:16.667"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:24:16.670" level="INFO"/>
<status status="PASS" starttime="20211022 01:24:16.668" endtime="20211022 01:24:16.670"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:24:16.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:24:16.670" endtime="20211022 01:24:16.671"/>
</kw>
<status status="PASS" starttime="20211022 01:24:08.402" endtime="20211022 01:24:16.672"/>
</kw>
<msg timestamp="20211022 01:24:16.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:24:08.402" endtime="20211022 01:24:16.672"/>
</kw>
<status status="PASS" starttime="20211022 01:24:08.401" endtime="20211022 01:24:16.673"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:24:16.679" level="INFO">Running command 'ozone sh bucket link 59539-target/loop2 59539-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:24:24.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:24:24.521" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:24:16.676" endtime="20211022 01:24:24.522"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:24:24.524" level="INFO"/>
<status status="PASS" starttime="20211022 01:24:24.522" endtime="20211022 01:24:24.524"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:24:24.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:24:24.524" endtime="20211022 01:24:24.525"/>
</kw>
<status status="PASS" starttime="20211022 01:24:16.675" endtime="20211022 01:24:24.526"/>
</kw>
<msg timestamp="20211022 01:24:24.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:24:16.674" endtime="20211022 01:24:24.526"/>
</kw>
<status status="PASS" starttime="20211022 01:24:16.673" endtime="20211022 01:24:24.526"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:24:24.539" level="INFO">Running command 'ozone sh bucket link 59539-target/loop3 59539-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:24:33.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:24:33.533" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:24:24.533" endtime="20211022 01:24:33.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:24:33.535" level="INFO"/>
<status status="PASS" starttime="20211022 01:24:33.534" endtime="20211022 01:24:33.535"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:24:33.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:24:33.535" endtime="20211022 01:24:33.536"/>
</kw>
<status status="PASS" starttime="20211022 01:24:24.530" endtime="20211022 01:24:33.536"/>
</kw>
<msg timestamp="20211022 01:24:33.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:24:24.527" endtime="20211022 01:24:33.537"/>
</kw>
<status status="PASS" starttime="20211022 01:24:24.526" endtime="20211022 01:24:33.537"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:24:33.541" level="INFO">Running command 'ozone sh key list 59539-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:24:40.636" level="INFO">${rc} = 255</msg>
<msg timestamp="20211022 01:24:40.637" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20211022 01:24:33.538" endtime="20211022 01:24:40.637"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:24:40.639" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20211022 01:24:40.638" endtime="20211022 01:24:40.639"/>
</kw>
<msg timestamp="20211022 01:24:40.640" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20211022 01:24:33.537" endtime="20211022 01:24:40.640"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211022 01:24:40.640" endtime="20211022 01:24:40.641"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211022 01:24:08.353" endtime="20211022 01:24:40.641"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:24:40.652" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:24:40.657" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:24:40.657" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211022 01:24:40.649" endtime="20211022 01:24:40.658"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:24:40.660" level="INFO">scm</msg>
<status status="PASS" starttime="20211022 01:24:40.659" endtime="20211022 01:24:40.660"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:24:40.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:24:40.660" endtime="20211022 01:24:40.661"/>
</kw>
<status status="PASS" starttime="20211022 01:24:40.647" endtime="20211022 01:24:40.661"/>
</kw>
<msg timestamp="20211022 01:24:40.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:24:40.647" endtime="20211022 01:24:40.662"/>
</kw>
<msg timestamp="20211022 01:24:40.662" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211022 01:24:40.646" endtime="20211022 01:24:40.662"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211022 01:24:40.663" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211022 01:24:40.662" endtime="20211022 01:24:40.663"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:24:40.669" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:24:40.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:24:40.680" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:24:40.666" endtime="20211022 01:24:40.680"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:24:40.682" level="INFO"/>
<status status="PASS" starttime="20211022 01:24:40.681" endtime="20211022 01:24:40.682"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:24:40.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:24:40.682" endtime="20211022 01:24:40.683"/>
</kw>
<status status="PASS" starttime="20211022 01:24:40.666" endtime="20211022 01:24:40.684"/>
</kw>
<msg timestamp="20211022 01:24:40.684" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:24:40.665" endtime="20211022 01:24:40.684"/>
</kw>
<status status="PASS" starttime="20211022 01:24:40.664" endtime="20211022 01:24:40.685"/>
</kw>
<status status="PASS" starttime="20211022 01:24:40.663" endtime="20211022 01:24:40.685"/>
</kw>
<status status="PASS" starttime="20211022 01:24:40.645" endtime="20211022 01:24:40.686"/>
</kw>
<status status="PASS" starttime="20211022 01:24:40.644" endtime="20211022 01:24:40.686"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:24:40.693" level="INFO">Running command 'ozone sh bucket link 59539-source/bucket1 59539-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:24:49.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:24:49.171" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:24:40.690" endtime="20211022 01:24:49.171"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:24:49.174" level="INFO"/>
<status status="PASS" starttime="20211022 01:24:49.172" endtime="20211022 01:24:49.174"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:24:49.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:24:49.174" endtime="20211022 01:24:49.176"/>
</kw>
<status status="PASS" starttime="20211022 01:24:40.688" endtime="20211022 01:24:49.176"/>
</kw>
<msg timestamp="20211022 01:24:49.176" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:24:40.687" endtime="20211022 01:24:49.177"/>
</kw>
<status status="PASS" starttime="20211022 01:24:40.686" endtime="20211022 01:24:49.177"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:24:49.185" level="INFO">Running command 'ozone sh key put 59539-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:26:40.644" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20211022 01:24:49.182" endtime="20211022 01:26:40.644"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211022 01:26:40.644" endtime="20211022 01:26:40.645"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211022 01:26:40.645" endtime="20211022 01:26:40.645"/>
</kw>
<status status="FAIL" starttime="20211022 01:24:49.180" endtime="20211022 01:26:40.646"/>
</kw>
<msg timestamp="20211022 01:26:40.646" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211022 01:24:49.180" endtime="20211022 01:26:40.646"/>
</kw>
<status status="FAIL" starttime="20211022 01:24:49.178" endtime="20211022 01:26:40.646"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<status status="NOT RUN" starttime="20211022 01:26:40.647" endtime="20211022 01:26:40.647"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211022 01:24:40.642" endtime="20211022 01:26:40.647">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:26:40.655" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:26:40.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:26:40.660" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211022 01:26:40.652" endtime="20211022 01:26:40.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:26:40.662" level="INFO">scm</msg>
<status status="PASS" starttime="20211022 01:26:40.661" endtime="20211022 01:26:40.663"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:26:40.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:26:40.665" endtime="20211022 01:26:40.666"/>
</kw>
<status status="PASS" starttime="20211022 01:26:40.651" endtime="20211022 01:26:40.667"/>
</kw>
<msg timestamp="20211022 01:26:40.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:26:40.651" endtime="20211022 01:26:40.667"/>
</kw>
<msg timestamp="20211022 01:26:40.667" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211022 01:26:40.651" endtime="20211022 01:26:40.667"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211022 01:26:40.668" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211022 01:26:40.668" endtime="20211022 01:26:40.668"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:26:40.674" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:26:40.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:26:40.683" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:26:40.671" endtime="20211022 01:26:40.683"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:26:40.685" level="INFO"/>
<status status="PASS" starttime="20211022 01:26:40.684" endtime="20211022 01:26:40.685"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:26:40.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:26:40.686" endtime="20211022 01:26:40.687"/>
</kw>
<status status="PASS" starttime="20211022 01:26:40.671" endtime="20211022 01:26:40.687"/>
</kw>
<msg timestamp="20211022 01:26:40.687" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:26:40.670" endtime="20211022 01:26:40.688"/>
</kw>
<status status="PASS" starttime="20211022 01:26:40.669" endtime="20211022 01:26:40.688"/>
</kw>
<status status="PASS" starttime="20211022 01:26:40.669" endtime="20211022 01:26:40.688"/>
</kw>
<status status="PASS" starttime="20211022 01:26:40.650" endtime="20211022 01:26:40.688"/>
</kw>
<status status="PASS" starttime="20211022 01:26:40.649" endtime="20211022 01:26:40.689"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:26:40.694" level="INFO">Running command 'ozone sh bucket delete 59539-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:26:48.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:26:48.628" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:26:40.691" endtime="20211022 01:26:48.628"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:26:48.631" level="INFO"/>
<status status="PASS" starttime="20211022 01:26:48.629" endtime="20211022 01:26:48.631"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:26:48.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:26:48.632" endtime="20211022 01:26:48.634"/>
</kw>
<status status="PASS" starttime="20211022 01:26:40.690" endtime="20211022 01:26:48.635"/>
</kw>
<msg timestamp="20211022 01:26:48.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:26:40.690" endtime="20211022 01:26:48.635"/>
</kw>
<status status="PASS" starttime="20211022 01:26:40.689" endtime="20211022 01:26:48.636"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:26:48.646" level="INFO">Running command 'ozone sh bucket list 59539-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:26:56.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:26:56.284" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "59539-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-2...</msg>
<status status="PASS" starttime="20211022 01:26:48.641" endtime="20211022 01:26:56.284"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:26:56.286" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "59539-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-22T01:23:24.771Z",
  "modificationTime" : "2021-10-22T01:23:24.771Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "59539-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-22T01:17:10.316Z",
  "modificationTime" : "2021-10-22T01:17:10.316Z",
  "sourceVolume" : "59539-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "59539-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-22T01:16:23.082Z",
  "modificationTime" : "2021-10-22T01:17:02.370Z",
  "sourceVolume" : "59539-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "59539-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-22T01:23:06.565Z",
  "modificationTime" : "2021-10-22T01:23:06.565Z",
  "sourceVolume" : "59539-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "59539-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-22T01:24:49.042Z",
  "modificationTime" : "2021-10-22T01:24:49.042Z",
  "sourceVolume" : "59539-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "59539-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-22T01:24:33.274Z",
  "modificationTime" : "2021-10-22T01:24:33.274Z",
  "sourceVolume" : "59539-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "59539-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-22T01:24:16.515Z",
  "modificationTime" : "2021-10-22T01:24:16.515Z",
  "sourceVolume" : "59539-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "59539-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-22T01:24:23.976Z",
  "modificationTime" : "2021-10-22T01:24:23.976Z",
  "sourceVolume" : "59539-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "59539-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-22T01:16:04.983Z",
  "modificationTime" : "2021-10-22T01:16:54.183Z",
  "sourceVolume" : "59539-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "59539-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-22T01:16:13.736Z",
  "modificationTime" : "2021-10-22T01:16:13.736Z",
  "sourceVolume" : "59539-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
} ]</msg>
<status status="PASS" starttime="20211022 01:26:56.285" endtime="20211022 01:26:56.286"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:26:56.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:26:56.287" endtime="20211022 01:26:56.288"/>
</kw>
<status status="PASS" starttime="20211022 01:26:48.640" endtime="20211022 01:26:56.288"/>
</kw>
<msg timestamp="20211022 01:26:56.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:26:48.639" endtime="20211022 01:26:56.289"/>
</kw>
<msg timestamp="20211022 01:26:56.289" level="INFO">${bucket_list} = [ {
  "metadata" : { },
  "volumeName" : "59539-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-2...</msg>
<status status="PASS" starttime="20211022 01:26:48.637" endtime="20211022 01:26:56.289"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211022 01:26:56.289" endtime="20211022 01:26:56.290"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:26:56.296" level="INFO">Running command 'ozone sh key list 59539-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:27:03.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:27:03.581" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20211022 01:26:56.293" endtime="20211022 01:27:03.582"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:27:03.586" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20211022 01:27:03.582" endtime="20211022 01:27:03.586"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:27:03.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:27:03.586" endtime="20211022 01:27:03.587"/>
</kw>
<status status="PASS" starttime="20211022 01:26:56.292" endtime="20211022 01:27:03.587"/>
</kw>
<msg timestamp="20211022 01:27:03.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:26:56.292" endtime="20211022 01:27:03.588"/>
</kw>
<msg timestamp="20211022 01:27:03.589" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20211022 01:26:56.291" endtime="20211022 01:27:03.589"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211022 01:27:03.589" endtime="20211022 01:27:03.590"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211022 01:26:40.648" endtime="20211022 01:27:03.591"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="FAIL" starttime="20211022 01:12:06.680" endtime="20211022 01:27:03.593"/>
</suite>
<suite id="s1-s1-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211022 01:27:03.638" level="INFO">${random} = 15753</msg>
<status status="PASS" starttime="20211022 01:27:03.637" endtime="20211022 01:27:03.638"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211022 01:27:03.639" level="INFO">${prefix} = 15753</msg>
<status status="PASS" starttime="20211022 01:27:03.638" endtime="20211022 01:27:03.639"/>
</kw>
<status status="PASS" starttime="20211022 01:27:03.637" endtime="20211022 01:27:03.639"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:27:03.647" level="INFO">Running command 'ozone sh volume info /15753-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:27:09.988" level="INFO">${rc} = 255</msg>
<msg timestamp="20211022 01:27:09.988" level="INFO">${output} = VOLUME_NOT_FOUND Volume 15753-rpcbasic is not found</msg>
<status status="PASS" starttime="20211022 01:27:03.645" endtime="20211022 01:27:09.988"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:27:09.989" level="INFO">VOLUME_NOT_FOUND Volume 15753-rpcbasic is not found</msg>
<status status="PASS" starttime="20211022 01:27:09.988" endtime="20211022 01:27:09.989"/>
</kw>
<msg timestamp="20211022 01:27:09.990" level="INFO">${result} = VOLUME_NOT_FOUND Volume 15753-rpcbasic is not found</msg>
<status status="PASS" starttime="20211022 01:27:03.643" endtime="20211022 01:27:09.990"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211022 01:27:09.990" endtime="20211022 01:27:09.992"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:27:09.999" level="INFO">Running command 'ozone sh volume create /15753-rpcbasic --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:27:18.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:27:18.727" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:27:09.996" endtime="20211022 01:27:18.727"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:27:18.730" level="INFO"/>
<status status="PASS" starttime="20211022 01:27:18.728" endtime="20211022 01:27:18.730"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:27:18.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:27:18.730" endtime="20211022 01:27:18.731"/>
</kw>
<status status="PASS" starttime="20211022 01:27:09.994" endtime="20211022 01:27:18.732"/>
</kw>
<msg timestamp="20211022 01:27:18.732" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:27:09.994" endtime="20211022 01:27:18.733"/>
</kw>
<msg timestamp="20211022 01:27:18.733" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211022 01:27:09.992" endtime="20211022 01:27:18.734"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211022 01:27:18.734" endtime="20211022 01:27:18.735"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:27:18.742" level="INFO">Running command 'ozone sh volume list / | jq -r '.[] | select(.name=="15753-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:27:26.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:27:26.737" level="INFO">${output} = {
  "metadata": {},
  "name": "15753-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211022 01:27:18.738" endtime="20211022 01:27:26.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:27:26.741" level="INFO">{
  "metadata": {},
  "name": "15753-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-22T01:27:18.600Z",
  "modificationTime": "2021-10-22T01:27:18.600Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211022 01:27:26.738" endtime="20211022 01:27:26.741"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:27:26.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:27:26.742" endtime="20211022 01:27:26.745"/>
</kw>
<status status="PASS" starttime="20211022 01:27:18.737" endtime="20211022 01:27:26.746"/>
</kw>
<msg timestamp="20211022 01:27:26.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:27:18.737" endtime="20211022 01:27:26.747"/>
</kw>
<msg timestamp="20211022 01:27:26.748" level="INFO">${result} = {
  "metadata": {},
  "name": "15753-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211022 01:27:18.735" endtime="20211022 01:27:26.748"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211022 01:27:26.748" endtime="20211022 01:27:26.750"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:27:26.756" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="15753-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:27:35.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:27:35.371" level="INFO">${output} = {
  "metadata": {},
  "name": "15753-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211022 01:27:26.753" endtime="20211022 01:27:35.371"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:27:35.373" level="INFO">{
  "metadata": {},
  "name": "15753-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-22T01:27:18.600Z",
  "modificationTime": "2021-10-22T01:27:18.600Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211022 01:27:35.372" endtime="20211022 01:27:35.373"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:27:35.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:27:35.373" endtime="20211022 01:27:35.375"/>
</kw>
<status status="PASS" starttime="20211022 01:27:26.752" endtime="20211022 01:27:35.375"/>
</kw>
<msg timestamp="20211022 01:27:35.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:27:26.752" endtime="20211022 01:27:35.376"/>
</kw>
<msg timestamp="20211022 01:27:35.376" level="INFO">${result} = {
  "metadata": {},
  "name": "15753-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211022 01:27:26.751" endtime="20211022 01:27:35.376"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211022 01:27:35.376" endtime="20211022 01:27:35.377"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:27:35.383" level="INFO">Running command 'ozone sh volume setquota /15753-rpcbasic --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:27:43.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:27:43.272" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:27:35.379" endtime="20211022 01:27:43.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:27:43.273" level="INFO"/>
<status status="PASS" starttime="20211022 01:27:43.272" endtime="20211022 01:27:43.273"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:27:43.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:27:43.274" endtime="20211022 01:27:43.274"/>
</kw>
<status status="PASS" starttime="20211022 01:27:35.378" endtime="20211022 01:27:43.275"/>
</kw>
<msg timestamp="20211022 01:27:43.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:27:35.378" endtime="20211022 01:27:43.275"/>
</kw>
<status status="PASS" starttime="20211022 01:27:35.377" endtime="20211022 01:27:43.276"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:27:43.282" level="INFO">Running command 'ozone sh volume info /15753-rpcbasic | jq -r '. | select(.name=="15753-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:27:52.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:27:52.790" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211022 01:27:43.279" endtime="20211022 01:27:52.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:27:52.792" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211022 01:27:52.791" endtime="20211022 01:27:52.793"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:27:52.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:27:52.793" endtime="20211022 01:27:52.794"/>
</kw>
<status status="PASS" starttime="20211022 01:27:43.278" endtime="20211022 01:27:52.795"/>
</kw>
<msg timestamp="20211022 01:27:52.795" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:27:43.278" endtime="20211022 01:27:52.795"/>
</kw>
<msg timestamp="20211022 01:27:52.796" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211022 01:27:43.276" endtime="20211022 01:27:52.796"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211022 01:27:52.796" endtime="20211022 01:27:52.797"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:27:52.804" level="INFO">Running command 'ozone sh bucket create /15753-rpcbasic/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:27:59.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:27:59.754" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:27:52.800" endtime="20211022 01:27:59.754"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:27:59.756" level="INFO"/>
<status status="PASS" starttime="20211022 01:27:59.755" endtime="20211022 01:27:59.756"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:27:59.758" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:27:59.757" endtime="20211022 01:27:59.758"/>
</kw>
<status status="PASS" starttime="20211022 01:27:52.799" endtime="20211022 01:27:59.759"/>
</kw>
<msg timestamp="20211022 01:27:59.759" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:27:52.799" endtime="20211022 01:27:59.759"/>
</kw>
<status status="PASS" starttime="20211022 01:27:52.797" endtime="20211022 01:27:59.760"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:27:59.768" level="INFO">Running command 'ozone sh bucket info /15753-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:28:10.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:28:10.036" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211022 01:27:59.765" endtime="20211022 01:28:10.036"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:28:10.037" level="INFO">DISK</msg>
<status status="PASS" starttime="20211022 01:28:10.036" endtime="20211022 01:28:10.037"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:28:10.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:28:10.038" endtime="20211022 01:28:10.039"/>
</kw>
<status status="PASS" starttime="20211022 01:27:59.763" endtime="20211022 01:28:10.039"/>
</kw>
<msg timestamp="20211022 01:28:10.040" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:27:59.762" endtime="20211022 01:28:10.040"/>
</kw>
<msg timestamp="20211022 01:28:10.040" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211022 01:27:59.760" endtime="20211022 01:28:10.040"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211022 01:28:10.040" endtime="20211022 01:28:10.041"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:28:10.050" level="INFO">Running command 'ozone sh bucket info /15753-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:28:16.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:28:16.985" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211022 01:28:10.046" endtime="20211022 01:28:16.985"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:28:16.986" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211022 01:28:16.986" endtime="20211022 01:28:16.987"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:28:16.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:28:16.987" endtime="20211022 01:28:16.987"/>
</kw>
<status status="PASS" starttime="20211022 01:28:10.045" endtime="20211022 01:28:16.988"/>
</kw>
<msg timestamp="20211022 01:28:16.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:28:10.044" endtime="20211022 01:28:16.988"/>
</kw>
<msg timestamp="20211022 01:28:16.988" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211022 01:28:10.042" endtime="20211022 01:28:16.988"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211022 01:28:16.989" endtime="20211022 01:28:16.989"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:28:16.995" level="INFO">Running command 'ozone sh bucket info /15753-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:28:25.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:28:25.738" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211022 01:28:16.992" endtime="20211022 01:28:25.738"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:28:25.740" level="INFO">100</msg>
<status status="PASS" starttime="20211022 01:28:25.739" endtime="20211022 01:28:25.740"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:28:25.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:28:25.741" endtime="20211022 01:28:25.742"/>
</kw>
<status status="PASS" starttime="20211022 01:28:16.991" endtime="20211022 01:28:25.742"/>
</kw>
<msg timestamp="20211022 01:28:25.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:28:16.991" endtime="20211022 01:28:25.743"/>
</kw>
<msg timestamp="20211022 01:28:25.743" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211022 01:28:16.989" endtime="20211022 01:28:25.744"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211022 01:28:25.744" endtime="20211022 01:28:25.745"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:28:25.751" level="INFO">Running command 'ozone sh bucket setquota /15753-rpcbasic/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:28:34.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:28:34.680" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:28:25.748" endtime="20211022 01:28:34.680"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:28:34.683" level="INFO"/>
<status status="PASS" starttime="20211022 01:28:34.681" endtime="20211022 01:28:34.683"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:28:34.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:28:34.683" endtime="20211022 01:28:34.684"/>
</kw>
<status status="PASS" starttime="20211022 01:28:25.747" endtime="20211022 01:28:34.685"/>
</kw>
<msg timestamp="20211022 01:28:34.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:28:25.746" endtime="20211022 01:28:34.685"/>
</kw>
<status status="PASS" starttime="20211022 01:28:25.745" endtime="20211022 01:28:34.687"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:28:34.693" level="INFO">Running command 'ozone sh bucket info /15753-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:28:43.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:28:43.814" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211022 01:28:34.690" endtime="20211022 01:28:43.815"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:28:43.817" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211022 01:28:43.815" endtime="20211022 01:28:43.817"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:28:43.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:28:43.817" endtime="20211022 01:28:43.819"/>
</kw>
<status status="PASS" starttime="20211022 01:28:34.689" endtime="20211022 01:28:43.819"/>
</kw>
<msg timestamp="20211022 01:28:43.820" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:28:34.689" endtime="20211022 01:28:43.820"/>
</kw>
<msg timestamp="20211022 01:28:43.820" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211022 01:28:34.687" endtime="20211022 01:28:43.821"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211022 01:28:43.821" endtime="20211022 01:28:43.822"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:28:43.829" level="INFO">Running command 'ozone sh bucket info /15753-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:28:50.949" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:28:50.949" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211022 01:28:43.826" endtime="20211022 01:28:50.949"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:28:50.951" level="INFO">1000</msg>
<status status="PASS" starttime="20211022 01:28:50.950" endtime="20211022 01:28:50.951"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:28:50.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:28:50.951" endtime="20211022 01:28:50.952"/>
</kw>
<status status="PASS" starttime="20211022 01:28:43.825" endtime="20211022 01:28:50.952"/>
</kw>
<msg timestamp="20211022 01:28:50.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:28:43.824" endtime="20211022 01:28:50.953"/>
</kw>
<msg timestamp="20211022 01:28:50.953" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211022 01:28:43.823" endtime="20211022 01:28:50.953"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211022 01:28:50.953" endtime="20211022 01:28:50.954"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:28:50.959" level="INFO">Running command 'ozone sh bucket list /15753-rpcbasic/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:28:59.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:28:59.902" level="INFO">${output} = 15753-rpcbasic</msg>
<status status="PASS" starttime="20211022 01:28:50.957" endtime="20211022 01:28:59.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:28:59.903" level="INFO">15753-rpcbasic</msg>
<status status="PASS" starttime="20211022 01:28:59.902" endtime="20211022 01:28:59.903"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:28:59.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:28:59.904" endtime="20211022 01:28:59.904"/>
</kw>
<status status="PASS" starttime="20211022 01:28:50.956" endtime="20211022 01:28:59.905"/>
</kw>
<msg timestamp="20211022 01:28:59.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:28:50.955" endtime="20211022 01:28:59.905"/>
</kw>
<msg timestamp="20211022 01:28:59.905" level="INFO">${result} = 15753-rpcbasic</msg>
<status status="PASS" starttime="20211022 01:28:50.954" endtime="20211022 01:28:59.905"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211022 01:28:59.906" endtime="20211022 01:28:59.906"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:28:59.914" level="INFO">Running command 'ozone sh key put /15753-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:32:03.641" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211022 01:28:59.910" endtime="20211022 01:32:03.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211022 01:32:03.642" endtime="20211022 01:32:03.642"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211022 01:32:03.643" endtime="20211022 01:32:03.643"/>
</kw>
<status status="FAIL" starttime="20211022 01:28:59.909" endtime="20211022 01:32:03.643"/>
</kw>
<msg timestamp="20211022 01:32:03.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211022 01:28:59.908" endtime="20211022 01:32:03.643"/>
</kw>
<status status="FAIL" starttime="20211022 01:28:59.908" endtime="20211022 01:32:03.644"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211022 01:32:03.644" endtime="20211022 01:32:03.644"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211022 01:32:03.644" endtime="20211022 01:32:03.644"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211022 01:32:03.644" endtime="20211022 01:32:03.644"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211022 01:32:03.645" endtime="20211022 01:32:03.645"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211022 01:32:03.645" endtime="20211022 01:32:03.645"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211022 01:32:03.645" endtime="20211022 01:32:03.645"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211022 01:32:03.645" endtime="20211022 01:32:03.646"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211022 01:32:03.646" endtime="20211022 01:32:03.646"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211022 01:32:03.646" endtime="20211022 01:32:03.646"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211022 01:32:03.646" endtime="20211022 01:32:03.647"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211022 01:32:03.647" endtime="20211022 01:32:03.647"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211022 01:32:03.648" endtime="20211022 01:32:03.648"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211022 01:32:03.648" endtime="20211022 01:32:03.649"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211022 01:32:03.649" endtime="20211022 01:32:03.649"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211022 01:32:03.650" endtime="20211022 01:32:03.651"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211022 01:32:03.651" endtime="20211022 01:32:03.651"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211022 01:32:03.651" endtime="20211022 01:32:03.652"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211022 01:32:03.652" endtime="20211022 01:32:03.652"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211022 01:32:03.653" endtime="20211022 01:32:03.653"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211022 01:32:03.653" endtime="20211022 01:32:03.653"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211022 01:32:03.654" endtime="20211022 01:32:03.654"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211022 01:32:03.654" endtime="20211022 01:32:03.655"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211022 01:32:03.655" endtime="20211022 01:32:03.655"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211022 01:32:03.656" endtime="20211022 01:32:03.656"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211022 01:32:03.656" endtime="20211022 01:32:03.656"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211022 01:32:03.657" endtime="20211022 01:32:03.657"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211022 01:32:03.657" endtime="20211022 01:32:03.657"/>
</kw>
<status status="FAIL" starttime="20211022 01:28:59.907" endtime="20211022 01:32:03.658"/>
</kw>
<status status="FAIL" starttime="20211022 01:28:59.907" endtime="20211022 01:32:03.658"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211022 01:32:03.658" endtime="20211022 01:32:03.658"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211022 01:32:03.659" endtime="20211022 01:32:03.659"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211022 01:32:03.659" endtime="20211022 01:32:03.659"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211022 01:32:03.660" endtime="20211022 01:32:03.660"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211022 01:32:03.661" endtime="20211022 01:32:03.662"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211022 01:32:03.662" endtime="20211022 01:32:03.662"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211022 01:32:03.663" endtime="20211022 01:32:03.663"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211022 01:32:03.663" endtime="20211022 01:32:03.663"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211022 01:32:03.663" endtime="20211022 01:32:03.664"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211022 01:32:03.664" endtime="20211022 01:32:03.664"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211022 01:32:03.664" endtime="20211022 01:32:03.664"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211022 01:32:03.664" endtime="20211022 01:32:03.664"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211022 01:32:03.664" endtime="20211022 01:32:03.664"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211022 01:32:03.665" endtime="20211022 01:32:03.665"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211022 01:32:03.665" endtime="20211022 01:32:03.665"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211022 01:32:03.665" endtime="20211022 01:32:03.665"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211022 01:32:03.665" endtime="20211022 01:32:03.665"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211022 01:32:03.666" endtime="20211022 01:32:03.666"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211022 01:32:03.666" endtime="20211022 01:32:03.666"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211022 01:32:03.666" endtime="20211022 01:32:03.666"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211022 01:32:03.666" endtime="20211022 01:32:03.666"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211022 01:32:03.667" endtime="20211022 01:32:03.667"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211022 01:32:03.667" endtime="20211022 01:32:03.667"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211022 01:32:03.667" endtime="20211022 01:32:03.667"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211022 01:32:03.668" endtime="20211022 01:32:03.668"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211022 01:32:03.668" endtime="20211022 01:32:03.668"/>
</kw>
<status status="FAIL" starttime="20211022 01:27:03.641" endtime="20211022 01:32:03.668"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211022 01:27:03.640" endtime="20211022 01:32:03.668">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20211022 01:27:03.602" endtime="20211022 01:32:03.670"/>
</suite>
<suite id="s1-s1-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211022 01:32:03.684" level="INFO">${random} = 58244</msg>
<status status="PASS" starttime="20211022 01:32:03.683" endtime="20211022 01:32:03.684"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211022 01:32:03.685" level="INFO">${prefix} = 58244</msg>
<status status="PASS" starttime="20211022 01:32:03.684" endtime="20211022 01:32:03.685"/>
</kw>
<status status="PASS" starttime="20211022 01:32:03.683" endtime="20211022 01:32:03.685"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:32:03.695" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:32:03.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:32:03.700" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211022 01:32:03.692" endtime="20211022 01:32:03.700"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:32:03.703" level="INFO">scm</msg>
<status status="PASS" starttime="20211022 01:32:03.701" endtime="20211022 01:32:03.703"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:32:03.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:32:03.704" endtime="20211022 01:32:03.705"/>
</kw>
<status status="PASS" starttime="20211022 01:32:03.692" endtime="20211022 01:32:03.705"/>
</kw>
<msg timestamp="20211022 01:32:03.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:32:03.691" endtime="20211022 01:32:03.706"/>
</kw>
<msg timestamp="20211022 01:32:03.706" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211022 01:32:03.689" endtime="20211022 01:32:03.706"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211022 01:32:03.709" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211022 01:32:03.707" endtime="20211022 01:32:03.709"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:32:03.714" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:32:03.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:32:03.929" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:32:03.712" endtime="20211022 01:32:03.930"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:32:03.931" level="INFO"/>
<status status="PASS" starttime="20211022 01:32:03.930" endtime="20211022 01:32:03.931"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:32:03.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:32:03.931" endtime="20211022 01:32:03.932"/>
</kw>
<status status="PASS" starttime="20211022 01:32:03.711" endtime="20211022 01:32:03.933"/>
</kw>
<msg timestamp="20211022 01:32:03.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:32:03.710" endtime="20211022 01:32:03.933"/>
</kw>
<status status="PASS" starttime="20211022 01:32:03.709" endtime="20211022 01:32:03.934"/>
</kw>
<status status="PASS" starttime="20211022 01:32:03.709" endtime="20211022 01:32:03.934"/>
</kw>
<status status="PASS" starttime="20211022 01:32:03.689" endtime="20211022 01:32:03.934"/>
</kw>
<status status="PASS" starttime="20211022 01:32:03.688" endtime="20211022 01:32:03.934"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:32:03.940" level="INFO">Running command 'ozone sh volume info o3://om:9862/58244-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:32:13.659" level="INFO">${rc} = 255</msg>
<msg timestamp="20211022 01:32:13.659" level="INFO">${output} = VOLUME_NOT_FOUND Volume 58244-rpcwoport is not found</msg>
<status status="PASS" starttime="20211022 01:32:03.937" endtime="20211022 01:32:13.659"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:32:13.661" level="INFO">VOLUME_NOT_FOUND Volume 58244-rpcwoport is not found</msg>
<status status="PASS" starttime="20211022 01:32:13.660" endtime="20211022 01:32:13.661"/>
</kw>
<msg timestamp="20211022 01:32:13.662" level="INFO">${result} = VOLUME_NOT_FOUND Volume 58244-rpcwoport is not found</msg>
<status status="PASS" starttime="20211022 01:32:03.935" endtime="20211022 01:32:13.662"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211022 01:32:13.662" endtime="20211022 01:32:13.663"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:32:13.669" level="INFO">Running command 'ozone sh volume create o3://om:9862/58244-rpcwoport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:32:23.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:32:23.126" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:32:13.666" endtime="20211022 01:32:23.126"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:32:23.127" level="INFO"/>
<status status="PASS" starttime="20211022 01:32:23.126" endtime="20211022 01:32:23.127"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:32:23.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:32:23.127" endtime="20211022 01:32:23.128"/>
</kw>
<status status="PASS" starttime="20211022 01:32:13.665" endtime="20211022 01:32:23.129"/>
</kw>
<msg timestamp="20211022 01:32:23.129" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:32:13.664" endtime="20211022 01:32:23.129"/>
</kw>
<msg timestamp="20211022 01:32:23.129" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211022 01:32:13.663" endtime="20211022 01:32:23.129"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211022 01:32:23.129" endtime="20211022 01:32:23.130"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:32:23.136" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '.[] | select(.name=="58244-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:32:32.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:32:32.779" level="INFO">${output} = {
  "metadata": {},
  "name": "58244-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211022 01:32:23.133" endtime="20211022 01:32:32.779"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:32:32.781" level="INFO">{
  "metadata": {},
  "name": "58244-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-22T01:32:22.812Z",
  "modificationTime": "2021-10-22T01:32:22.812Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211022 01:32:32.780" endtime="20211022 01:32:32.781"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:32:32.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:32:32.781" endtime="20211022 01:32:32.782"/>
</kw>
<status status="PASS" starttime="20211022 01:32:23.132" endtime="20211022 01:32:32.783"/>
</kw>
<msg timestamp="20211022 01:32:32.783" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:32:23.132" endtime="20211022 01:32:32.783"/>
</kw>
<msg timestamp="20211022 01:32:32.783" level="INFO">${result} = {
  "metadata": {},
  "name": "58244-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211022 01:32:23.131" endtime="20211022 01:32:32.783"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211022 01:32:32.784" endtime="20211022 01:32:32.784"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:32:32.790" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="58244-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:32:42.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:32:42.440" level="INFO">${output} = {
  "metadata": {},
  "name": "58244-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211022 01:32:32.786" endtime="20211022 01:32:42.440"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:32:42.441" level="INFO">{
  "metadata": {},
  "name": "58244-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-22T01:32:22.812Z",
  "modificationTime": "2021-10-22T01:32:22.812Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211022 01:32:42.440" endtime="20211022 01:32:42.441"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:32:42.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:32:42.442" endtime="20211022 01:32:42.443"/>
</kw>
<status status="PASS" starttime="20211022 01:32:32.785" endtime="20211022 01:32:42.443"/>
</kw>
<msg timestamp="20211022 01:32:42.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:32:32.785" endtime="20211022 01:32:42.443"/>
</kw>
<msg timestamp="20211022 01:32:42.444" level="INFO">${result} = {
  "metadata": {},
  "name": "58244-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211022 01:32:32.784" endtime="20211022 01:32:42.444"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211022 01:32:42.444" endtime="20211022 01:32:42.445"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:32:42.451" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/58244-rpcwoport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:32:51.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:32:51.038" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:32:42.448" endtime="20211022 01:32:51.038"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:32:51.041" level="INFO"/>
<status status="PASS" starttime="20211022 01:32:51.039" endtime="20211022 01:32:51.041"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:32:51.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:32:51.042" endtime="20211022 01:32:51.044"/>
</kw>
<status status="PASS" starttime="20211022 01:32:42.447" endtime="20211022 01:32:51.045"/>
</kw>
<msg timestamp="20211022 01:32:51.045" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:32:42.447" endtime="20211022 01:32:51.046"/>
</kw>
<status status="PASS" starttime="20211022 01:32:42.445" endtime="20211022 01:32:51.047"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:32:51.057" level="INFO">Running command 'ozone sh volume info o3://om:9862/58244-rpcwoport | jq -r '. | select(.name=="58244-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:32:59.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:32:59.797" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211022 01:32:51.053" endtime="20211022 01:32:59.797"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:32:59.798" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211022 01:32:59.797" endtime="20211022 01:32:59.798"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:32:59.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:32:59.799" endtime="20211022 01:32:59.799"/>
</kw>
<status status="PASS" starttime="20211022 01:32:51.052" endtime="20211022 01:32:59.800"/>
</kw>
<msg timestamp="20211022 01:32:59.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:32:51.051" endtime="20211022 01:32:59.800"/>
</kw>
<msg timestamp="20211022 01:32:59.801" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211022 01:32:51.048" endtime="20211022 01:32:59.801"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211022 01:32:59.801" endtime="20211022 01:32:59.802"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:32:59.806" level="INFO">Running command 'ozone sh bucket create o3://om:9862/58244-rpcwoport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:33:08.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:33:08.004" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:32:59.804" endtime="20211022 01:33:08.005"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:33:08.007" level="INFO"/>
<status status="PASS" starttime="20211022 01:33:08.005" endtime="20211022 01:33:08.007"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:33:08.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:33:08.007" endtime="20211022 01:33:08.008"/>
</kw>
<status status="PASS" starttime="20211022 01:32:59.803" endtime="20211022 01:33:08.009"/>
</kw>
<msg timestamp="20211022 01:33:08.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:32:59.803" endtime="20211022 01:33:08.009"/>
</kw>
<status status="PASS" starttime="20211022 01:32:59.802" endtime="20211022 01:33:08.010"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:33:08.017" level="INFO">Running command 'ozone sh bucket info o3://om:9862/58244-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:33:18.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:33:18.767" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211022 01:33:08.013" endtime="20211022 01:33:18.767"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:33:18.769" level="INFO">DISK</msg>
<status status="PASS" starttime="20211022 01:33:18.768" endtime="20211022 01:33:18.769"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:33:18.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:33:18.770" endtime="20211022 01:33:18.771"/>
</kw>
<status status="PASS" starttime="20211022 01:33:08.012" endtime="20211022 01:33:18.772"/>
</kw>
<msg timestamp="20211022 01:33:18.772" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:33:08.012" endtime="20211022 01:33:18.772"/>
</kw>
<msg timestamp="20211022 01:33:18.773" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211022 01:33:08.010" endtime="20211022 01:33:18.773"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211022 01:33:18.773" endtime="20211022 01:33:18.774"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:33:18.782" level="INFO">Running command 'ozone sh bucket info o3://om:9862/58244-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:33:27.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:33:27.581" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211022 01:33:18.779" endtime="20211022 01:33:27.581"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:33:27.582" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211022 01:33:27.582" endtime="20211022 01:33:27.583"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:33:27.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:33:27.583" endtime="20211022 01:33:27.583"/>
</kw>
<status status="PASS" starttime="20211022 01:33:18.778" endtime="20211022 01:33:27.584"/>
</kw>
<msg timestamp="20211022 01:33:27.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:33:18.777" endtime="20211022 01:33:27.584"/>
</kw>
<msg timestamp="20211022 01:33:27.584" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211022 01:33:18.775" endtime="20211022 01:33:27.584"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211022 01:33:27.585" endtime="20211022 01:33:27.585"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:33:27.593" level="INFO">Running command 'ozone sh bucket info o3://om:9862/58244-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:33:34.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:33:34.915" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211022 01:33:27.587" endtime="20211022 01:33:34.915"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:33:34.917" level="INFO">100</msg>
<status status="PASS" starttime="20211022 01:33:34.916" endtime="20211022 01:33:34.918"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:33:34.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:33:34.918" endtime="20211022 01:33:34.919"/>
</kw>
<status status="PASS" starttime="20211022 01:33:27.587" endtime="20211022 01:33:34.919"/>
</kw>
<msg timestamp="20211022 01:33:34.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:33:27.586" endtime="20211022 01:33:34.920"/>
</kw>
<msg timestamp="20211022 01:33:34.921" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211022 01:33:27.585" endtime="20211022 01:33:34.921"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211022 01:33:34.921" endtime="20211022 01:33:34.922"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:33:34.928" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/58244-rpcwoport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:33:41.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:33:41.831" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:33:34.925" endtime="20211022 01:33:41.832"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:33:41.833" level="INFO"/>
<status status="PASS" starttime="20211022 01:33:41.832" endtime="20211022 01:33:41.833"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:33:41.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:33:41.833" endtime="20211022 01:33:41.834"/>
</kw>
<status status="PASS" starttime="20211022 01:33:34.924" endtime="20211022 01:33:41.835"/>
</kw>
<msg timestamp="20211022 01:33:41.835" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:33:34.923" endtime="20211022 01:33:41.835"/>
</kw>
<status status="PASS" starttime="20211022 01:33:34.922" endtime="20211022 01:33:41.835"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:33:41.844" level="INFO">Running command 'ozone sh bucket info o3://om:9862/58244-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:33:51.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:33:51.429" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211022 01:33:41.840" endtime="20211022 01:33:51.429"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:33:51.433" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211022 01:33:51.430" endtime="20211022 01:33:51.433"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:33:51.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:33:51.433" endtime="20211022 01:33:51.434"/>
</kw>
<status status="PASS" starttime="20211022 01:33:41.839" endtime="20211022 01:33:51.435"/>
</kw>
<msg timestamp="20211022 01:33:51.435" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:33:41.838" endtime="20211022 01:33:51.435"/>
</kw>
<msg timestamp="20211022 01:33:51.436" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211022 01:33:41.836" endtime="20211022 01:33:51.436"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211022 01:33:51.436" endtime="20211022 01:33:51.438"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:33:51.445" level="INFO">Running command 'ozone sh bucket info o3://om:9862/58244-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:34:01.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:34:01.479" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211022 01:33:51.441" endtime="20211022 01:34:01.480"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:34:01.481" level="INFO">1000</msg>
<status status="PASS" starttime="20211022 01:34:01.480" endtime="20211022 01:34:01.481"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:34:01.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:34:01.481" endtime="20211022 01:34:01.482"/>
</kw>
<status status="PASS" starttime="20211022 01:33:51.440" endtime="20211022 01:34:01.483"/>
</kw>
<msg timestamp="20211022 01:34:01.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:33:51.440" endtime="20211022 01:34:01.483"/>
</kw>
<msg timestamp="20211022 01:34:01.483" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211022 01:33:51.438" endtime="20211022 01:34:01.484"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211022 01:34:01.484" endtime="20211022 01:34:01.484"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:34:01.496" level="INFO">Running command 'ozone sh bucket list o3://om:9862/58244-rpcwoport/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:34:10.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:34:10.732" level="INFO">${output} = 58244-rpcwoport</msg>
<status status="PASS" starttime="20211022 01:34:01.489" endtime="20211022 01:34:10.732"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:34:10.733" level="INFO">58244-rpcwoport</msg>
<status status="PASS" starttime="20211022 01:34:10.732" endtime="20211022 01:34:10.733"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:34:10.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:34:10.734" endtime="20211022 01:34:10.734"/>
</kw>
<status status="PASS" starttime="20211022 01:34:01.487" endtime="20211022 01:34:10.735"/>
</kw>
<msg timestamp="20211022 01:34:10.735" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:34:01.486" endtime="20211022 01:34:10.735"/>
</kw>
<msg timestamp="20211022 01:34:10.736" level="INFO">${result} = 58244-rpcwoport</msg>
<status status="PASS" starttime="20211022 01:34:01.485" endtime="20211022 01:34:10.736"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211022 01:34:10.736" endtime="20211022 01:34:10.737"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:34:10.747" level="INFO">Running command 'ozone sh key put o3://om:9862/58244-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:37:03.686" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211022 01:34:10.744" endtime="20211022 01:37:03.686"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211022 01:37:03.687" endtime="20211022 01:37:03.687"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211022 01:37:03.687" endtime="20211022 01:37:03.687"/>
</kw>
<status status="FAIL" starttime="20211022 01:34:10.742" endtime="20211022 01:37:03.688"/>
</kw>
<msg timestamp="20211022 01:37:03.688" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211022 01:34:10.741" endtime="20211022 01:37:03.688"/>
</kw>
<status status="FAIL" starttime="20211022 01:34:10.740" endtime="20211022 01:37:03.688"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211022 01:37:03.689" endtime="20211022 01:37:03.689"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211022 01:37:03.689" endtime="20211022 01:37:03.689"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211022 01:37:03.689" endtime="20211022 01:37:03.689"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211022 01:37:03.689" endtime="20211022 01:37:03.689"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211022 01:37:03.690" endtime="20211022 01:37:03.690"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211022 01:37:03.690" endtime="20211022 01:37:03.690"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211022 01:37:03.690" endtime="20211022 01:37:03.690"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211022 01:37:03.690" endtime="20211022 01:37:03.692"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211022 01:37:03.692" endtime="20211022 01:37:03.692"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211022 01:37:03.692" endtime="20211022 01:37:03.693"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211022 01:37:03.693" endtime="20211022 01:37:03.693"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211022 01:37:03.693" endtime="20211022 01:37:03.693"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211022 01:37:03.693" endtime="20211022 01:37:03.693"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211022 01:37:03.693" endtime="20211022 01:37:03.694"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211022 01:37:03.694" endtime="20211022 01:37:03.694"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211022 01:37:03.695" endtime="20211022 01:37:03.695"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211022 01:37:03.695" endtime="20211022 01:37:03.695"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211022 01:37:03.695" endtime="20211022 01:37:03.696"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211022 01:37:03.696" endtime="20211022 01:37:03.696"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211022 01:37:03.696" endtime="20211022 01:37:03.696"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211022 01:37:03.696" endtime="20211022 01:37:03.696"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211022 01:37:03.696" endtime="20211022 01:37:03.696"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211022 01:37:03.697" endtime="20211022 01:37:03.697"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211022 01:37:03.697" endtime="20211022 01:37:03.697"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211022 01:37:03.697" endtime="20211022 01:37:03.697"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211022 01:37:03.697" endtime="20211022 01:37:03.697"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211022 01:37:03.698" endtime="20211022 01:37:03.698"/>
</kw>
<status status="FAIL" starttime="20211022 01:34:10.738" endtime="20211022 01:37:03.698"/>
</kw>
<status status="FAIL" starttime="20211022 01:34:10.738" endtime="20211022 01:37:03.698"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211022 01:37:03.699" endtime="20211022 01:37:03.699"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211022 01:37:03.699" endtime="20211022 01:37:03.699"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211022 01:37:03.699" endtime="20211022 01:37:03.699"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211022 01:37:03.699" endtime="20211022 01:37:03.699"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211022 01:37:03.699" endtime="20211022 01:37:03.700"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211022 01:37:03.700" endtime="20211022 01:37:03.700"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211022 01:37:03.700" endtime="20211022 01:37:03.700"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211022 01:37:03.700" endtime="20211022 01:37:03.700"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211022 01:37:03.700" endtime="20211022 01:37:03.701"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211022 01:37:03.701" endtime="20211022 01:37:03.701"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211022 01:37:03.701" endtime="20211022 01:37:03.701"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211022 01:37:03.702" endtime="20211022 01:37:03.702"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211022 01:37:03.702" endtime="20211022 01:37:03.702"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211022 01:37:03.702" endtime="20211022 01:37:03.702"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211022 01:37:03.702" endtime="20211022 01:37:03.702"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211022 01:37:03.702" endtime="20211022 01:37:03.703"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211022 01:37:03.703" endtime="20211022 01:37:03.703"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211022 01:37:03.703" endtime="20211022 01:37:03.703"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211022 01:37:03.703" endtime="20211022 01:37:03.703"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211022 01:37:03.704" endtime="20211022 01:37:03.704"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211022 01:37:03.704" endtime="20211022 01:37:03.704"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211022 01:37:03.704" endtime="20211022 01:37:03.704"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211022 01:37:03.704" endtime="20211022 01:37:03.704"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211022 01:37:03.705" endtime="20211022 01:37:03.705"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211022 01:37:03.705" endtime="20211022 01:37:03.705"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211022 01:37:03.705" endtime="20211022 01:37:03.705"/>
</kw>
<status status="FAIL" starttime="20211022 01:32:03.935" endtime="20211022 01:37:03.706"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211022 01:32:03.685" endtime="20211022 01:37:03.706">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:37:03.717" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:37:03.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:37:03.721" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211022 01:37:03.713" endtime="20211022 01:37:03.721"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:37:03.722" level="INFO">scm</msg>
<status status="PASS" starttime="20211022 01:37:03.721" endtime="20211022 01:37:03.722"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:37:03.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:37:03.723" endtime="20211022 01:37:03.723"/>
</kw>
<status status="PASS" starttime="20211022 01:37:03.712" endtime="20211022 01:37:03.724"/>
</kw>
<msg timestamp="20211022 01:37:03.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:37:03.712" endtime="20211022 01:37:03.724"/>
</kw>
<msg timestamp="20211022 01:37:03.725" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211022 01:37:03.711" endtime="20211022 01:37:03.725"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211022 01:37:03.725" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211022 01:37:03.725" endtime="20211022 01:37:03.726"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:37:03.746" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:37:03.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:37:03.755" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:37:03.729" endtime="20211022 01:37:03.755"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:37:03.756" level="INFO"/>
<status status="PASS" starttime="20211022 01:37:03.756" endtime="20211022 01:37:03.756"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:37:03.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:37:03.757" endtime="20211022 01:37:03.758"/>
</kw>
<status status="PASS" starttime="20211022 01:37:03.728" endtime="20211022 01:37:03.758"/>
</kw>
<msg timestamp="20211022 01:37:03.758" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:37:03.727" endtime="20211022 01:37:03.758"/>
</kw>
<status status="PASS" starttime="20211022 01:37:03.727" endtime="20211022 01:37:03.759"/>
</kw>
<status status="PASS" starttime="20211022 01:37:03.726" endtime="20211022 01:37:03.759"/>
</kw>
<status status="PASS" starttime="20211022 01:37:03.711" endtime="20211022 01:37:03.759"/>
</kw>
<status status="PASS" starttime="20211022 01:37:03.710" endtime="20211022 01:37:03.759"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:37:03.764" level="INFO">Running command 'ozone sh volume create o3://om:9862/58244-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:37:12.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:37:12.297" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:37:03.762" endtime="20211022 01:37:12.297"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:37:12.300" level="INFO"/>
<status status="PASS" starttime="20211022 01:37:12.298" endtime="20211022 01:37:12.300"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:37:12.301" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:37:12.300" endtime="20211022 01:37:12.301"/>
</kw>
<status status="PASS" starttime="20211022 01:37:03.762" endtime="20211022 01:37:12.302"/>
</kw>
<msg timestamp="20211022 01:37:12.303" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:37:03.761" endtime="20211022 01:37:12.303"/>
</kw>
<status status="PASS" starttime="20211022 01:37:03.760" endtime="20211022 01:37:12.304"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:37:12.310" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/58244-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:37:21.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:37:21.140" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211022 01:37:12.307" endtime="20211022 01:37:21.140"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:37:21.142" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211022 01:37:21.141" endtime="20211022 01:37:21.142"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:37:21.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:37:21.142" endtime="20211022 01:37:21.143"/>
</kw>
<status status="PASS" starttime="20211022 01:37:12.306" endtime="20211022 01:37:21.144"/>
</kw>
<msg timestamp="20211022 01:37:21.144" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:37:12.306" endtime="20211022 01:37:21.144"/>
</kw>
<msg timestamp="20211022 01:37:21.144" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211022 01:37:12.304" endtime="20211022 01:37:21.144"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211022 01:37:21.144" endtime="20211022 01:37:21.145"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:37:21.153" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/58244-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:37:31.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:37:31.545" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211022 01:37:21.150" endtime="20211022 01:37:31.545"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:37:31.547" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211022 01:37:31.546" endtime="20211022 01:37:31.547"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:37:31.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:37:31.547" endtime="20211022 01:37:31.548"/>
</kw>
<status status="PASS" starttime="20211022 01:37:21.149" endtime="20211022 01:37:31.548"/>
</kw>
<msg timestamp="20211022 01:37:31.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:37:21.148" endtime="20211022 01:37:31.548"/>
</kw>
<msg timestamp="20211022 01:37:31.549" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211022 01:37:21.146" endtime="20211022 01:37:31.549"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:37:31.553" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/58244-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:37:39.933" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:37:39.934" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211022 01:37:31.551" endtime="20211022 01:37:39.934"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:37:39.938" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211022 01:37:39.935" endtime="20211022 01:37:39.939"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:37:39.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:37:39.939" endtime="20211022 01:37:39.940"/>
</kw>
<status status="PASS" starttime="20211022 01:37:31.550" endtime="20211022 01:37:39.942"/>
</kw>
<msg timestamp="20211022 01:37:39.942" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:37:31.550" endtime="20211022 01:37:39.942"/>
</kw>
<msg timestamp="20211022 01:37:39.943" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211022 01:37:31.549" endtime="20211022 01:37:39.943"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211022 01:37:39.944" endtime="20211022 01:37:39.947"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:37:39.957" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/58244-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:37:49.117" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:37:49.117" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211022 01:37:39.953" endtime="20211022 01:37:49.117"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:37:49.120" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211022 01:37:49.118" endtime="20211022 01:37:49.120"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:37:49.121" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:37:49.120" endtime="20211022 01:37:49.121"/>
</kw>
<status status="PASS" starttime="20211022 01:37:39.951" endtime="20211022 01:37:49.122"/>
</kw>
<msg timestamp="20211022 01:37:49.122" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:37:39.950" endtime="20211022 01:37:49.122"/>
</kw>
<msg timestamp="20211022 01:37:49.123" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211022 01:37:39.948" endtime="20211022 01:37:49.123"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:37:49.129" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/58244-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:37:59.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:37:59.088" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211022 01:37:49.125" endtime="20211022 01:37:59.088"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:37:59.089" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211022 01:37:59.088" endtime="20211022 01:37:59.089"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:37:59.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:37:59.090" endtime="20211022 01:37:59.091"/>
</kw>
<status status="PASS" starttime="20211022 01:37:49.124" endtime="20211022 01:37:59.091"/>
</kw>
<msg timestamp="20211022 01:37:59.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:37:49.124" endtime="20211022 01:37:59.092"/>
</kw>
<msg timestamp="20211022 01:37:59.092" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211022 01:37:49.123" endtime="20211022 01:37:59.092"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211022 01:37:59.092" endtime="20211022 01:37:59.094"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:37:59.100" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/58244-rpcwoport2 -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:38:05.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:38:05.510" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211022 01:37:59.098" endtime="20211022 01:38:05.510"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:38:05.512" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211022 01:38:05.511" endtime="20211022 01:38:05.512"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:38:05.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:38:05.512" endtime="20211022 01:38:05.514"/>
</kw>
<status status="PASS" starttime="20211022 01:37:59.097" endtime="20211022 01:38:05.515"/>
</kw>
<msg timestamp="20211022 01:38:05.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:37:59.096" endtime="20211022 01:38:05.515"/>
</kw>
<msg timestamp="20211022 01:38:05.516" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211022 01:37:59.094" endtime="20211022 01:38:05.516"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:38:05.523" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/58244-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:38:14.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:38:14.253" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211022 01:38:05.519" endtime="20211022 01:38:14.253"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:38:14.255" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211022 01:38:14.254" endtime="20211022 01:38:14.255"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:38:14.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:38:14.255" endtime="20211022 01:38:14.256"/>
</kw>
<status status="PASS" starttime="20211022 01:38:05.518" endtime="20211022 01:38:14.257"/>
</kw>
<msg timestamp="20211022 01:38:14.258" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:38:05.518" endtime="20211022 01:38:14.258"/>
</kw>
<msg timestamp="20211022 01:38:14.259" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211022 01:38:05.516" endtime="20211022 01:38:14.259"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211022 01:38:14.260" endtime="20211022 01:38:14.261"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211022 01:38:14.261" endtime="20211022 01:38:14.263"/>
</kw>
<status status="PASS" starttime="20211022 01:37:03.760" endtime="20211022 01:38:14.263"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211022 01:37:03.709" endtime="20211022 01:38:14.263"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:38:14.273" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:38:14.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:38:14.278" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211022 01:38:14.270" endtime="20211022 01:38:14.278"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:38:14.279" level="INFO">scm</msg>
<status status="PASS" starttime="20211022 01:38:14.279" endtime="20211022 01:38:14.280"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:38:14.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:38:14.280" endtime="20211022 01:38:14.281"/>
</kw>
<status status="PASS" starttime="20211022 01:38:14.269" endtime="20211022 01:38:14.281"/>
</kw>
<msg timestamp="20211022 01:38:14.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:38:14.269" endtime="20211022 01:38:14.281"/>
</kw>
<msg timestamp="20211022 01:38:14.282" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211022 01:38:14.268" endtime="20211022 01:38:14.282"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211022 01:38:14.283" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211022 01:38:14.282" endtime="20211022 01:38:14.283"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:38:14.290" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:38:14.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:38:14.502" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:38:14.287" endtime="20211022 01:38:14.503"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:38:14.505" level="INFO"/>
<status status="PASS" starttime="20211022 01:38:14.504" endtime="20211022 01:38:14.505"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:38:14.507" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:38:14.506" endtime="20211022 01:38:14.507"/>
</kw>
<status status="PASS" starttime="20211022 01:38:14.286" endtime="20211022 01:38:14.508"/>
</kw>
<msg timestamp="20211022 01:38:14.508" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:38:14.285" endtime="20211022 01:38:14.508"/>
</kw>
<status status="PASS" starttime="20211022 01:38:14.284" endtime="20211022 01:38:14.508"/>
</kw>
<status status="PASS" starttime="20211022 01:38:14.283" endtime="20211022 01:38:14.508"/>
</kw>
<status status="PASS" starttime="20211022 01:38:14.267" endtime="20211022 01:38:14.509"/>
</kw>
<status status="PASS" starttime="20211022 01:38:14.266" endtime="20211022 01:38:14.509"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:38:14.518" level="INFO">Running command 'ozone sh bucket create o3://om:9862/58244-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:38:22.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:38:22.943" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:38:14.515" endtime="20211022 01:38:22.943"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:38:22.946" level="INFO"/>
<status status="PASS" starttime="20211022 01:38:22.944" endtime="20211022 01:38:22.946"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:38:22.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:38:22.946" endtime="20211022 01:38:22.949"/>
</kw>
<status status="PASS" starttime="20211022 01:38:14.515" endtime="20211022 01:38:22.949"/>
</kw>
<msg timestamp="20211022 01:38:22.949" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:38:14.514" endtime="20211022 01:38:22.950"/>
</kw>
<status status="PASS" starttime="20211022 01:38:14.512" endtime="20211022 01:38:22.950"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:38:22.958" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/58244-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:38:31.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:38:31.159" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211022 01:38:22.955" endtime="20211022 01:38:31.159"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:38:31.161" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211022 01:38:31.160" endtime="20211022 01:38:31.161"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:38:31.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:38:31.162" endtime="20211022 01:38:31.163"/>
</kw>
<status status="PASS" starttime="20211022 01:38:22.953" endtime="20211022 01:38:31.163"/>
</kw>
<msg timestamp="20211022 01:38:31.163" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:38:22.952" endtime="20211022 01:38:31.164"/>
</kw>
<msg timestamp="20211022 01:38:31.164" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211022 01:38:22.951" endtime="20211022 01:38:31.164"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211022 01:38:31.164" endtime="20211022 01:38:31.165"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:38:31.171" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/58244-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:38:39.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:38:39.011" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20211022 01:38:31.168" endtime="20211022 01:38:39.011"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:38:39.015" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20211022 01:38:39.013" endtime="20211022 01:38:39.015"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:38:39.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:38:39.015" endtime="20211022 01:38:39.016"/>
</kw>
<status status="PASS" starttime="20211022 01:38:31.167" endtime="20211022 01:38:39.017"/>
</kw>
<msg timestamp="20211022 01:38:39.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:38:31.166" endtime="20211022 01:38:39.017"/>
</kw>
<msg timestamp="20211022 01:38:39.017" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20211022 01:38:31.165" endtime="20211022 01:38:39.017"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:38:39.026" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/58244-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:38:48.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:38:48.241" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211022 01:38:39.022" endtime="20211022 01:38:48.241"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:38:48.242" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211022 01:38:48.241" endtime="20211022 01:38:48.243"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:38:48.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:38:48.243" endtime="20211022 01:38:48.244"/>
</kw>
<status status="PASS" starttime="20211022 01:38:39.020" endtime="20211022 01:38:48.244"/>
</kw>
<msg timestamp="20211022 01:38:48.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:38:39.020" endtime="20211022 01:38:48.244"/>
</kw>
<msg timestamp="20211022 01:38:48.245" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211022 01:38:39.018" endtime="20211022 01:38:48.245"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211022 01:38:48.245" endtime="20211022 01:38:48.246"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:38:48.253" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/58244-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:38:56.199" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:38:56.199" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211022 01:38:48.249" endtime="20211022 01:38:56.199"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:38:56.201" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211022 01:38:56.200" endtime="20211022 01:38:56.201"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:38:56.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:38:56.201" endtime="20211022 01:38:56.202"/>
</kw>
<status status="PASS" starttime="20211022 01:38:48.249" endtime="20211022 01:38:56.202"/>
</kw>
<msg timestamp="20211022 01:38:56.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:38:48.248" endtime="20211022 01:38:56.202"/>
</kw>
<msg timestamp="20211022 01:38:56.203" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211022 01:38:48.247" endtime="20211022 01:38:56.203"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:38:56.207" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/58244-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:39:03.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:39:03.690" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211022 01:38:56.205" endtime="20211022 01:39:03.690"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:39:03.692" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211022 01:39:03.691" endtime="20211022 01:39:03.692"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:39:03.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:39:03.692" endtime="20211022 01:39:03.693"/>
</kw>
<status status="PASS" starttime="20211022 01:38:56.204" endtime="20211022 01:39:03.693"/>
</kw>
<msg timestamp="20211022 01:39:03.693" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:38:56.204" endtime="20211022 01:39:03.693"/>
</kw>
<msg timestamp="20211022 01:39:03.694" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211022 01:38:56.203" endtime="20211022 01:39:03.694"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211022 01:39:03.694" endtime="20211022 01:39:03.695"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:39:03.699" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/58244-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:39:12.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:39:12.131" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211022 01:39:03.697" endtime="20211022 01:39:12.131"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:39:12.133" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211022 01:39:12.132" endtime="20211022 01:39:12.134"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:39:12.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:39:12.134" endtime="20211022 01:39:12.137"/>
</kw>
<status status="PASS" starttime="20211022 01:39:03.697" endtime="20211022 01:39:12.138"/>
</kw>
<msg timestamp="20211022 01:39:12.138" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:39:03.696" endtime="20211022 01:39:12.138"/>
</kw>
<msg timestamp="20211022 01:39:12.139" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211022 01:39:03.695" endtime="20211022 01:39:12.139"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:39:12.148" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/58244-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:39:21.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:39:21.486" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211022 01:39:12.144" endtime="20211022 01:39:21.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:39:21.490" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211022 01:39:21.488" endtime="20211022 01:39:21.490"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:39:21.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:39:21.490" endtime="20211022 01:39:21.492"/>
</kw>
<status status="PASS" starttime="20211022 01:39:12.143" endtime="20211022 01:39:21.492"/>
</kw>
<msg timestamp="20211022 01:39:21.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:39:12.142" endtime="20211022 01:39:21.493"/>
</kw>
<msg timestamp="20211022 01:39:21.494" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211022 01:39:12.139" endtime="20211022 01:39:21.494"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211022 01:39:21.495" endtime="20211022 01:39:21.497"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211022 01:39:21.497" endtime="20211022 01:39:21.499"/>
</kw>
<status status="PASS" starttime="20211022 01:38:14.509" endtime="20211022 01:39:21.499"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211022 01:38:14.265" endtime="20211022 01:39:21.500"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:39:21.512" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:39:21.517" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:39:21.517" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211022 01:39:21.509" endtime="20211022 01:39:21.518"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:39:21.519" level="INFO">scm</msg>
<status status="PASS" starttime="20211022 01:39:21.518" endtime="20211022 01:39:21.519"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:39:21.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:39:21.520" endtime="20211022 01:39:21.521"/>
</kw>
<status status="PASS" starttime="20211022 01:39:21.507" endtime="20211022 01:39:21.522"/>
</kw>
<msg timestamp="20211022 01:39:21.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:39:21.507" endtime="20211022 01:39:21.522"/>
</kw>
<msg timestamp="20211022 01:39:21.523" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211022 01:39:21.506" endtime="20211022 01:39:21.523"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211022 01:39:21.524" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211022 01:39:21.523" endtime="20211022 01:39:21.524"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:39:21.532" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:39:21.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:39:21.546" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:39:21.530" endtime="20211022 01:39:21.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:39:21.549" level="INFO"/>
<status status="PASS" starttime="20211022 01:39:21.547" endtime="20211022 01:39:21.550"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:39:21.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:39:21.551" endtime="20211022 01:39:21.552"/>
</kw>
<status status="PASS" starttime="20211022 01:39:21.528" endtime="20211022 01:39:21.553"/>
</kw>
<msg timestamp="20211022 01:39:21.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:39:21.527" endtime="20211022 01:39:21.554"/>
</kw>
<status status="PASS" starttime="20211022 01:39:21.526" endtime="20211022 01:39:21.555"/>
</kw>
<status status="PASS" starttime="20211022 01:39:21.525" endtime="20211022 01:39:21.556"/>
</kw>
<status status="PASS" starttime="20211022 01:39:21.505" endtime="20211022 01:39:21.556"/>
</kw>
<status status="PASS" starttime="20211022 01:39:21.504" endtime="20211022 01:39:21.556"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:39:21.564" level="INFO">Running command 'ozone sh key put o3://om:9862/58244-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:42:36.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:42:36.333" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:39:21.560" endtime="20211022 01:42:36.333"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:42:36.335" level="INFO"/>
<status status="PASS" starttime="20211022 01:42:36.334" endtime="20211022 01:42:36.335"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:42:36.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:42:36.336" endtime="20211022 01:42:36.337"/>
</kw>
<status status="PASS" starttime="20211022 01:39:21.559" endtime="20211022 01:42:36.337"/>
</kw>
<msg timestamp="20211022 01:42:36.337" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:39:21.559" endtime="20211022 01:42:36.338"/>
</kw>
<status status="PASS" starttime="20211022 01:39:21.558" endtime="20211022 01:42:36.338"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:42:36.345" level="INFO">Running command 'ozone sh key getacl o3://om:9862/58244-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:42:45.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:42:45.592" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211022 01:42:36.342" endtime="20211022 01:42:45.592"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:42:45.594" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211022 01:42:45.593" endtime="20211022 01:42:45.594"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:42:45.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:42:45.594" endtime="20211022 01:42:45.595"/>
</kw>
<status status="PASS" starttime="20211022 01:42:36.341" endtime="20211022 01:42:45.595"/>
</kw>
<msg timestamp="20211022 01:42:45.595" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:42:36.340" endtime="20211022 01:42:45.596"/>
</kw>
<msg timestamp="20211022 01:42:45.596" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211022 01:42:36.339" endtime="20211022 01:42:45.596"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211022 01:42:45.596" endtime="20211022 01:42:45.597"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:42:45.603" level="INFO">Running command 'ozone sh key addacl o3://om:9862/58244-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:42:52.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:42:52.133" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211022 01:42:45.600" endtime="20211022 01:42:52.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:42:52.135" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211022 01:42:52.133" endtime="20211022 01:42:52.135"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:42:52.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:42:52.135" endtime="20211022 01:42:52.137"/>
</kw>
<status status="PASS" starttime="20211022 01:42:45.599" endtime="20211022 01:42:52.137"/>
</kw>
<msg timestamp="20211022 01:42:52.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:42:45.598" endtime="20211022 01:42:52.138"/>
</kw>
<msg timestamp="20211022 01:42:52.138" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211022 01:42:45.597" endtime="20211022 01:42:52.139"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:42:52.146" level="INFO">Running command 'ozone sh key getacl o3://om:9862/58244-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:43:01.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:43:01.436" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211022 01:42:52.142" endtime="20211022 01:43:01.436"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:43:01.438" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211022 01:43:01.436" endtime="20211022 01:43:01.439"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:43:01.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:43:01.439" endtime="20211022 01:43:01.441"/>
</kw>
<status status="PASS" starttime="20211022 01:42:52.141" endtime="20211022 01:43:01.442"/>
</kw>
<msg timestamp="20211022 01:43:01.442" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:42:52.141" endtime="20211022 01:43:01.442"/>
</kw>
<msg timestamp="20211022 01:43:01.443" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211022 01:42:52.139" endtime="20211022 01:43:01.443"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211022 01:43:01.443" endtime="20211022 01:43:01.445"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:43:01.452" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/58244-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:43:09.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:43:09.885" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211022 01:43:01.449" endtime="20211022 01:43:09.885"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:43:09.889" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211022 01:43:09.886" endtime="20211022 01:43:09.889"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:43:09.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:43:09.889" endtime="20211022 01:43:09.891"/>
</kw>
<status status="PASS" starttime="20211022 01:43:01.448" endtime="20211022 01:43:09.891"/>
</kw>
<msg timestamp="20211022 01:43:09.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:43:01.447" endtime="20211022 01:43:09.892"/>
</kw>
<msg timestamp="20211022 01:43:09.892" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211022 01:43:01.445" endtime="20211022 01:43:09.893"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:43:09.900" level="INFO">Running command 'ozone sh key getacl o3://om:9862/58244-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:43:19.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:43:19.192" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211022 01:43:09.897" endtime="20211022 01:43:19.192"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:43:19.195" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20211022 01:43:19.193" endtime="20211022 01:43:19.195"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:43:19.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:43:19.196" endtime="20211022 01:43:19.197"/>
</kw>
<status status="PASS" starttime="20211022 01:43:09.895" endtime="20211022 01:43:19.197"/>
</kw>
<msg timestamp="20211022 01:43:19.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:43:09.895" endtime="20211022 01:43:19.198"/>
</kw>
<msg timestamp="20211022 01:43:19.199" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211022 01:43:09.893" endtime="20211022 01:43:19.199"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211022 01:43:19.199" endtime="20211022 01:43:19.201"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:43:19.212" level="INFO">Running command 'ozone sh key setacl o3://om:9862/58244-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:43:27.760" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:43:27.760" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211022 01:43:19.207" endtime="20211022 01:43:27.760"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:43:27.762" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211022 01:43:27.761" endtime="20211022 01:43:27.762"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:43:27.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:43:27.763" endtime="20211022 01:43:27.764"/>
</kw>
<status status="PASS" starttime="20211022 01:43:19.205" endtime="20211022 01:43:27.765"/>
</kw>
<msg timestamp="20211022 01:43:27.765" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:43:19.204" endtime="20211022 01:43:27.765"/>
</kw>
<msg timestamp="20211022 01:43:27.767" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211022 01:43:19.202" endtime="20211022 01:43:27.767"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:43:27.773" level="INFO">Running command 'ozone sh key getacl o3://om:9862/58244-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:43:37.118" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:43:37.118" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211022 01:43:27.769" endtime="20211022 01:43:37.118"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:43:37.119" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211022 01:43:37.118" endtime="20211022 01:43:37.119"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:43:37.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:43:37.120" endtime="20211022 01:43:37.120"/>
</kw>
<status status="PASS" starttime="20211022 01:43:27.769" endtime="20211022 01:43:37.121"/>
</kw>
<msg timestamp="20211022 01:43:37.121" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:43:27.768" endtime="20211022 01:43:37.121"/>
</kw>
<msg timestamp="20211022 01:43:37.121" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211022 01:43:27.768" endtime="20211022 01:43:37.121"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211022 01:43:37.122" endtime="20211022 01:43:37.122"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211022 01:43:37.122" endtime="20211022 01:43:37.123"/>
</kw>
<status status="PASS" starttime="20211022 01:39:21.557" endtime="20211022 01:43:37.124"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211022 01:39:21.502" endtime="20211022 01:43:37.124"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient prefix acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:43:37.134" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:43:37.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:43:37.140" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211022 01:43:37.131" endtime="20211022 01:43:37.141"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:43:37.142" level="INFO">scm</msg>
<status status="PASS" starttime="20211022 01:43:37.141" endtime="20211022 01:43:37.142"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:43:37.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:43:37.142" endtime="20211022 01:43:37.143"/>
</kw>
<status status="PASS" starttime="20211022 01:43:37.130" endtime="20211022 01:43:37.144"/>
</kw>
<msg timestamp="20211022 01:43:37.144" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:43:37.130" endtime="20211022 01:43:37.144"/>
</kw>
<msg timestamp="20211022 01:43:37.145" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211022 01:43:37.129" endtime="20211022 01:43:37.145"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211022 01:43:37.146" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211022 01:43:37.145" endtime="20211022 01:43:37.146"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:43:37.152" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:43:37.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:43:37.331" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:43:37.149" endtime="20211022 01:43:37.331"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:43:37.333" level="INFO"/>
<status status="PASS" starttime="20211022 01:43:37.332" endtime="20211022 01:43:37.333"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:43:37.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:43:37.333" endtime="20211022 01:43:37.334"/>
</kw>
<status status="PASS" starttime="20211022 01:43:37.148" endtime="20211022 01:43:37.335"/>
</kw>
<msg timestamp="20211022 01:43:37.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:43:37.148" endtime="20211022 01:43:37.335"/>
</kw>
<status status="PASS" starttime="20211022 01:43:37.147" endtime="20211022 01:43:37.335"/>
</kw>
<status status="PASS" starttime="20211022 01:43:37.146" endtime="20211022 01:43:37.335"/>
</kw>
<status status="PASS" starttime="20211022 01:43:37.128" endtime="20211022 01:43:37.335"/>
</kw>
<status status="PASS" starttime="20211022 01:43:37.127" endtime="20211022 01:43:37.336"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:43:37.343" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/58244-rpcwoport2/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:43:46.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:43:46.051" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211022 01:43:37.339" endtime="20211022 01:43:46.051"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:43:46.053" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211022 01:43:46.052" endtime="20211022 01:43:46.053"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:43:46.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:43:46.054" endtime="20211022 01:43:46.055"/>
</kw>
<status status="PASS" starttime="20211022 01:43:37.338" endtime="20211022 01:43:46.056"/>
</kw>
<msg timestamp="20211022 01:43:46.056" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:43:37.337" endtime="20211022 01:43:46.057"/>
</kw>
<status status="PASS" starttime="20211022 01:43:37.337" endtime="20211022 01:43:46.057"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:43:46.063" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/58244-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:43:55.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:43:55.227" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211022 01:43:46.059" endtime="20211022 01:43:55.227"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:43:55.229" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211022 01:43:55.228" endtime="20211022 01:43:55.229"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:43:55.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:43:55.229" endtime="20211022 01:43:55.230"/>
</kw>
<status status="PASS" starttime="20211022 01:43:46.059" endtime="20211022 01:43:55.231"/>
</kw>
<msg timestamp="20211022 01:43:55.231" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:43:46.058" endtime="20211022 01:43:55.232"/>
</kw>
<msg timestamp="20211022 01:43:55.232" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211022 01:43:46.057" endtime="20211022 01:43:55.233"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211022 01:43:55.233" endtime="20211022 01:43:55.234"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:43:55.241" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/58244-rpcwoport2/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:44:01.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:44:01.622" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20211022 01:43:55.238" endtime="20211022 01:44:01.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:44:01.625" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20211022 01:44:01.623" endtime="20211022 01:44:01.625"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:44:01.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:44:01.626" endtime="20211022 01:44:01.627"/>
</kw>
<status status="PASS" starttime="20211022 01:43:55.237" endtime="20211022 01:44:01.628"/>
</kw>
<msg timestamp="20211022 01:44:01.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:43:55.236" endtime="20211022 01:44:01.628"/>
</kw>
<msg timestamp="20211022 01:44:01.629" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20211022 01:43:55.234" endtime="20211022 01:44:01.629"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:44:01.640" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/58244-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:44:10.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:44:10.742" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211022 01:44:01.635" endtime="20211022 01:44:10.743"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:44:10.744" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211022 01:44:10.743" endtime="20211022 01:44:10.744"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:44:10.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:44:10.744" endtime="20211022 01:44:10.745"/>
</kw>
<status status="PASS" starttime="20211022 01:44:01.632" endtime="20211022 01:44:10.745"/>
</kw>
<msg timestamp="20211022 01:44:10.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:44:01.632" endtime="20211022 01:44:10.746"/>
</kw>
<msg timestamp="20211022 01:44:10.746" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211022 01:44:01.630" endtime="20211022 01:44:10.746"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211022 01:44:10.746" endtime="20211022 01:44:10.748"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:44:10.752" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/58244-rpcwoport2/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:44:20.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:44:20.295" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211022 01:44:10.750" endtime="20211022 01:44:20.295"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:44:20.297" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211022 01:44:20.296" endtime="20211022 01:44:20.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:44:20.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:44:20.297" endtime="20211022 01:44:20.298"/>
</kw>
<status status="PASS" starttime="20211022 01:44:10.749" endtime="20211022 01:44:20.298"/>
</kw>
<msg timestamp="20211022 01:44:20.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:44:10.749" endtime="20211022 01:44:20.299"/>
</kw>
<msg timestamp="20211022 01:44:20.299" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211022 01:44:10.748" endtime="20211022 01:44:20.299"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:44:20.306" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/58244-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:44:30.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:44:30.945" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20211022 01:44:20.302" endtime="20211022 01:44:30.945"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:44:30.947" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211022 01:44:30.946" endtime="20211022 01:44:30.948"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:44:30.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:44:30.948" endtime="20211022 01:44:30.949"/>
</kw>
<status status="PASS" starttime="20211022 01:44:20.301" endtime="20211022 01:44:30.949"/>
</kw>
<msg timestamp="20211022 01:44:30.950" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:44:20.300" endtime="20211022 01:44:30.950"/>
</kw>
<msg timestamp="20211022 01:44:30.950" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20211022 01:44:20.299" endtime="20211022 01:44:30.950"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211022 01:44:30.951" endtime="20211022 01:44:30.952"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211022 01:44:30.952" endtime="20211022 01:44:30.953"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:44:30.961" level="INFO">Running command 'ozone sh key put o3://om:9862/58244-rpcwoport2/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:47:45.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:47:45.253" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:44:30.957" endtime="20211022 01:47:45.253"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:47:45.255" level="INFO"/>
<status status="PASS" starttime="20211022 01:47:45.254" endtime="20211022 01:47:45.255"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:47:45.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:47:45.255" endtime="20211022 01:47:45.256"/>
</kw>
<status status="PASS" starttime="20211022 01:44:30.956" endtime="20211022 01:47:45.257"/>
</kw>
<msg timestamp="20211022 01:47:45.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:44:30.955" endtime="20211022 01:47:45.257"/>
</kw>
<status status="PASS" starttime="20211022 01:44:30.954" endtime="20211022 01:47:45.257"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:47:45.263" level="INFO">Running command 'ozone sh key getacl o3://om:9862/58244-rpcwoport2/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:47:53.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:47:53.974" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211022 01:47:45.260" endtime="20211022 01:47:53.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:47:53.975" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211022 01:47:53.975" endtime="20211022 01:47:53.976"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:47:53.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:47:53.976" endtime="20211022 01:47:53.977"/>
</kw>
<status status="PASS" starttime="20211022 01:47:45.259" endtime="20211022 01:47:53.978"/>
</kw>
<msg timestamp="20211022 01:47:53.978" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:47:45.259" endtime="20211022 01:47:53.978"/>
</kw>
<msg timestamp="20211022 01:47:53.979" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211022 01:47:45.258" endtime="20211022 01:47:53.979"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211022 01:47:53.979" endtime="20211022 01:47:53.980"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211022 01:47:53.980" endtime="20211022 01:47:53.981"/>
</kw>
<status status="PASS" starttime="20211022 01:43:37.336" endtime="20211022 01:47:53.981"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211022 01:43:37.126" endtime="20211022 01:47:53.982"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:47:53.993" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:47:53.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:47:53.996" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211022 01:47:53.989" endtime="20211022 01:47:53.996"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:47:53.998" level="INFO">scm</msg>
<status status="PASS" starttime="20211022 01:47:53.997" endtime="20211022 01:47:53.998"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:47:53.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:47:53.998" endtime="20211022 01:47:53.999"/>
</kw>
<status status="PASS" starttime="20211022 01:47:53.989" endtime="20211022 01:47:53.999"/>
</kw>
<msg timestamp="20211022 01:47:53.999" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:47:53.988" endtime="20211022 01:47:53.999"/>
</kw>
<msg timestamp="20211022 01:47:53.999" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211022 01:47:53.987" endtime="20211022 01:47:54.000"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211022 01:47:54.000" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211022 01:47:54.000" endtime="20211022 01:47:54.001"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:47:54.008" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:47:54.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:47:54.016" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:47:54.005" endtime="20211022 01:47:54.016"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:47:54.018" level="INFO"/>
<status status="PASS" starttime="20211022 01:47:54.017" endtime="20211022 01:47:54.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:47:54.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:47:54.018" endtime="20211022 01:47:54.019"/>
</kw>
<status status="PASS" starttime="20211022 01:47:54.004" endtime="20211022 01:47:54.019"/>
</kw>
<msg timestamp="20211022 01:47:54.019" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:47:54.003" endtime="20211022 01:47:54.019"/>
</kw>
<status status="PASS" starttime="20211022 01:47:54.001" endtime="20211022 01:47:54.019"/>
</kw>
<status status="PASS" starttime="20211022 01:47:54.001" endtime="20211022 01:47:54.020"/>
</kw>
<status status="PASS" starttime="20211022 01:47:53.986" endtime="20211022 01:47:54.020"/>
</kw>
<status status="PASS" starttime="20211022 01:47:53.984" endtime="20211022 01:47:54.020"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:47:54.025" level="INFO">Running command 'ozone sh volume info o3:///58244-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:48:01.300" level="INFO">${rc} = 255</msg>
<msg timestamp="20211022 01:48:01.300" level="INFO">${output} = VOLUME_NOT_FOUND Volume 58244-rpcwport is not found</msg>
<status status="PASS" starttime="20211022 01:47:54.022" endtime="20211022 01:48:01.300"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:48:01.302" level="INFO">VOLUME_NOT_FOUND Volume 58244-rpcwport is not found</msg>
<status status="PASS" starttime="20211022 01:48:01.301" endtime="20211022 01:48:01.302"/>
</kw>
<msg timestamp="20211022 01:48:01.302" level="INFO">${result} = VOLUME_NOT_FOUND Volume 58244-rpcwport is not found</msg>
<status status="PASS" starttime="20211022 01:47:54.022" endtime="20211022 01:48:01.302"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211022 01:48:01.302" endtime="20211022 01:48:01.303"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:48:01.309" level="INFO">Running command 'ozone sh volume create o3:///58244-rpcwport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:48:08.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:48:08.839" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:48:01.306" endtime="20211022 01:48:08.839"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:48:08.840" level="INFO"/>
<status status="PASS" starttime="20211022 01:48:08.840" endtime="20211022 01:48:08.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:48:08.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:48:08.841" endtime="20211022 01:48:08.841"/>
</kw>
<status status="PASS" starttime="20211022 01:48:01.305" endtime="20211022 01:48:08.842"/>
</kw>
<msg timestamp="20211022 01:48:08.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:48:01.304" endtime="20211022 01:48:08.842"/>
</kw>
<msg timestamp="20211022 01:48:08.842" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211022 01:48:01.304" endtime="20211022 01:48:08.843"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211022 01:48:08.843" endtime="20211022 01:48:08.843"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:48:08.848" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '.[] | select(.name=="58244-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:48:16.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:48:16.884" level="INFO">${output} = {
  "metadata": {},
  "name": "58244-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211022 01:48:08.845" endtime="20211022 01:48:16.884"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:48:16.888" level="INFO">{
  "metadata": {},
  "name": "58244-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-22T01:48:08.776Z",
  "modificationTime": "2021-10-22T01:48:08.776Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211022 01:48:16.886" endtime="20211022 01:48:16.888"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:48:16.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:48:16.888" endtime="20211022 01:48:16.891"/>
</kw>
<status status="PASS" starttime="20211022 01:48:08.845" endtime="20211022 01:48:16.892"/>
</kw>
<msg timestamp="20211022 01:48:16.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:48:08.845" endtime="20211022 01:48:16.893"/>
</kw>
<msg timestamp="20211022 01:48:16.894" level="INFO">${result} = {
  "metadata": {},
  "name": "58244-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211022 01:48:08.843" endtime="20211022 01:48:16.894"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211022 01:48:16.894" endtime="20211022 01:48:16.896"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:48:16.903" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="58244-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:48:26.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:48:26.368" level="INFO">${output} = {
  "metadata": {},
  "name": "58244-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211022 01:48:16.899" endtime="20211022 01:48:26.369"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:48:26.370" level="INFO">{
  "metadata": {},
  "name": "58244-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-22T01:48:08.776Z",
  "modificationTime": "2021-10-22T01:48:08.776Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211022 01:48:26.369" endtime="20211022 01:48:26.370"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:48:26.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:48:26.370" endtime="20211022 01:48:26.373"/>
</kw>
<status status="PASS" starttime="20211022 01:48:16.898" endtime="20211022 01:48:26.373"/>
</kw>
<msg timestamp="20211022 01:48:26.373" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:48:16.897" endtime="20211022 01:48:26.373"/>
</kw>
<msg timestamp="20211022 01:48:26.373" level="INFO">${result} = {
  "metadata": {},
  "name": "58244-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211022 01:48:16.896" endtime="20211022 01:48:26.374"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211022 01:48:26.374" endtime="20211022 01:48:26.374"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:48:26.380" level="INFO">Running command 'ozone sh volume setquota o3:///58244-rpcwport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:48:32.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:48:32.834" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:48:26.377" endtime="20211022 01:48:32.834"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:48:32.836" level="INFO"/>
<status status="PASS" starttime="20211022 01:48:32.835" endtime="20211022 01:48:32.836"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:48:32.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:48:32.836" endtime="20211022 01:48:32.837"/>
</kw>
<status status="PASS" starttime="20211022 01:48:26.376" endtime="20211022 01:48:32.837"/>
</kw>
<msg timestamp="20211022 01:48:32.837" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:48:26.376" endtime="20211022 01:48:32.838"/>
</kw>
<status status="PASS" starttime="20211022 01:48:26.375" endtime="20211022 01:48:32.838"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:48:32.847" level="INFO">Running command 'ozone sh volume info o3:///58244-rpcwport | jq -r '. | select(.name=="58244-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:48:42.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:48:42.200" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211022 01:48:32.842" endtime="20211022 01:48:42.201"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:48:42.203" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211022 01:48:42.201" endtime="20211022 01:48:42.203"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:48:42.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:48:42.204" endtime="20211022 01:48:42.205"/>
</kw>
<status status="PASS" starttime="20211022 01:48:32.841" endtime="20211022 01:48:42.206"/>
</kw>
<msg timestamp="20211022 01:48:42.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:48:32.841" endtime="20211022 01:48:42.206"/>
</kw>
<msg timestamp="20211022 01:48:42.207" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211022 01:48:32.838" endtime="20211022 01:48:42.208"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211022 01:48:42.208" endtime="20211022 01:48:42.209"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:48:42.217" level="INFO">Running command 'ozone sh bucket create o3:///58244-rpcwport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:48:48.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:48:48.327" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:48:42.214" endtime="20211022 01:48:48.327"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:48:48.329" level="INFO"/>
<status status="PASS" starttime="20211022 01:48:48.328" endtime="20211022 01:48:48.329"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:48:48.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:48:48.329" endtime="20211022 01:48:48.330"/>
</kw>
<status status="PASS" starttime="20211022 01:48:42.212" endtime="20211022 01:48:48.336"/>
</kw>
<msg timestamp="20211022 01:48:48.336" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:48:42.212" endtime="20211022 01:48:48.336"/>
</kw>
<status status="PASS" starttime="20211022 01:48:42.210" endtime="20211022 01:48:48.336"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:48:48.352" level="INFO">Running command 'ozone sh bucket info o3:///58244-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:48:57.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:48:57.345" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211022 01:48:48.349" endtime="20211022 01:48:57.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:48:57.348" level="INFO">DISK</msg>
<status status="PASS" starttime="20211022 01:48:57.346" endtime="20211022 01:48:57.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:48:57.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:48:57.349" endtime="20211022 01:48:57.350"/>
</kw>
<status status="PASS" starttime="20211022 01:48:48.346" endtime="20211022 01:48:57.350"/>
</kw>
<msg timestamp="20211022 01:48:57.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:48:48.345" endtime="20211022 01:48:57.351"/>
</kw>
<msg timestamp="20211022 01:48:57.351" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211022 01:48:48.337" endtime="20211022 01:48:57.352"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211022 01:48:57.352" endtime="20211022 01:48:57.353"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:48:57.363" level="INFO">Running command 'ozone sh bucket info o3:///58244-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:49:07.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:49:07.139" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211022 01:48:57.360" endtime="20211022 01:49:07.140"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:49:07.141" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211022 01:49:07.140" endtime="20211022 01:49:07.141"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:49:07.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:49:07.142" endtime="20211022 01:49:07.142"/>
</kw>
<status status="PASS" starttime="20211022 01:48:57.359" endtime="20211022 01:49:07.143"/>
</kw>
<msg timestamp="20211022 01:49:07.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:48:57.358" endtime="20211022 01:49:07.143"/>
</kw>
<msg timestamp="20211022 01:49:07.144" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211022 01:48:57.354" endtime="20211022 01:49:07.144"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211022 01:49:07.144" endtime="20211022 01:49:07.145"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:49:07.151" level="INFO">Running command 'ozone sh bucket info o3:///58244-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:49:16.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:49:16.635" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211022 01:49:07.148" endtime="20211022 01:49:16.635"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:49:16.637" level="INFO">100</msg>
<status status="PASS" starttime="20211022 01:49:16.635" endtime="20211022 01:49:16.637"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:49:16.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:49:16.637" endtime="20211022 01:49:16.639"/>
</kw>
<status status="PASS" starttime="20211022 01:49:07.148" endtime="20211022 01:49:16.640"/>
</kw>
<msg timestamp="20211022 01:49:16.640" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:49:07.147" endtime="20211022 01:49:16.640"/>
</kw>
<msg timestamp="20211022 01:49:16.641" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211022 01:49:07.145" endtime="20211022 01:49:16.642"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211022 01:49:16.642" endtime="20211022 01:49:16.643"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:49:16.649" level="INFO">Running command 'ozone sh bucket setquota o3:///58244-rpcwport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:49:24.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:49:24.571" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:49:16.646" endtime="20211022 01:49:24.571"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:49:24.573" level="INFO"/>
<status status="PASS" starttime="20211022 01:49:24.572" endtime="20211022 01:49:24.573"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:49:24.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:49:24.573" endtime="20211022 01:49:24.574"/>
</kw>
<status status="PASS" starttime="20211022 01:49:16.645" endtime="20211022 01:49:24.574"/>
</kw>
<msg timestamp="20211022 01:49:24.574" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:49:16.645" endtime="20211022 01:49:24.574"/>
</kw>
<status status="PASS" starttime="20211022 01:49:16.644" endtime="20211022 01:49:24.575"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:49:24.580" level="INFO">Running command 'ozone sh bucket info o3:///58244-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:49:32.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:49:32.129" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211022 01:49:24.577" endtime="20211022 01:49:32.129"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:49:32.130" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211022 01:49:32.129" endtime="20211022 01:49:32.130"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:49:32.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:49:32.130" endtime="20211022 01:49:32.131"/>
</kw>
<status status="PASS" starttime="20211022 01:49:24.576" endtime="20211022 01:49:32.132"/>
</kw>
<msg timestamp="20211022 01:49:32.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:49:24.576" endtime="20211022 01:49:32.132"/>
</kw>
<msg timestamp="20211022 01:49:32.133" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211022 01:49:24.575" endtime="20211022 01:49:32.133"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211022 01:49:32.133" endtime="20211022 01:49:32.133"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:49:32.142" level="INFO">Running command 'ozone sh bucket info o3:///58244-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:49:41.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:49:41.947" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211022 01:49:32.139" endtime="20211022 01:49:41.948"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:49:41.951" level="INFO">1000</msg>
<status status="PASS" starttime="20211022 01:49:41.949" endtime="20211022 01:49:41.951"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:49:41.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:49:41.952" endtime="20211022 01:49:41.953"/>
</kw>
<status status="PASS" starttime="20211022 01:49:32.137" endtime="20211022 01:49:41.954"/>
</kw>
<msg timestamp="20211022 01:49:41.955" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:49:32.136" endtime="20211022 01:49:41.955"/>
</kw>
<msg timestamp="20211022 01:49:41.956" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211022 01:49:32.133" endtime="20211022 01:49:41.956"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211022 01:49:41.956" endtime="20211022 01:49:41.957"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:49:41.967" level="INFO">Running command 'ozone sh bucket list o3:///58244-rpcwport/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:49:50.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:49:50.039" level="INFO">${output} = 58244-rpcwport</msg>
<status status="PASS" starttime="20211022 01:49:41.964" endtime="20211022 01:49:50.039"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:49:50.042" level="INFO">58244-rpcwport</msg>
<status status="PASS" starttime="20211022 01:49:50.040" endtime="20211022 01:49:50.042"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:49:50.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:49:50.042" endtime="20211022 01:49:50.044"/>
</kw>
<status status="PASS" starttime="20211022 01:49:41.962" endtime="20211022 01:49:50.045"/>
</kw>
<msg timestamp="20211022 01:49:50.045" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:49:41.961" endtime="20211022 01:49:50.045"/>
</kw>
<msg timestamp="20211022 01:49:50.045" level="INFO">${result} = 58244-rpcwport</msg>
<status status="PASS" starttime="20211022 01:49:41.957" endtime="20211022 01:49:50.045"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211022 01:49:50.046" endtime="20211022 01:49:50.047"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:49:50.056" level="INFO">Running command 'ozone sh key put o3:///58244-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:52:53.984" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211022 01:49:50.053" endtime="20211022 01:52:53.984"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211022 01:52:53.985" endtime="20211022 01:52:53.985"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211022 01:52:53.985" endtime="20211022 01:52:53.985"/>
</kw>
<status status="FAIL" starttime="20211022 01:49:50.052" endtime="20211022 01:52:53.986"/>
</kw>
<msg timestamp="20211022 01:52:53.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211022 01:49:50.051" endtime="20211022 01:52:53.986"/>
</kw>
<status status="FAIL" starttime="20211022 01:49:50.050" endtime="20211022 01:52:53.987"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211022 01:52:53.987" endtime="20211022 01:52:53.987"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211022 01:52:53.987" endtime="20211022 01:52:53.987"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211022 01:52:53.987" endtime="20211022 01:52:53.988"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211022 01:52:53.988" endtime="20211022 01:52:53.988"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211022 01:52:53.988" endtime="20211022 01:52:53.988"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211022 01:52:53.988" endtime="20211022 01:52:53.988"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211022 01:52:53.988" endtime="20211022 01:52:53.989"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211022 01:52:53.989" endtime="20211022 01:52:53.989"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211022 01:52:53.989" endtime="20211022 01:52:53.989"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211022 01:52:53.989" endtime="20211022 01:52:53.989"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211022 01:52:53.989" endtime="20211022 01:52:53.989"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211022 01:52:53.990" endtime="20211022 01:52:53.990"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211022 01:52:53.990" endtime="20211022 01:52:53.990"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211022 01:52:53.990" endtime="20211022 01:52:53.990"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211022 01:52:53.990" endtime="20211022 01:52:53.991"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211022 01:52:53.991" endtime="20211022 01:52:53.991"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211022 01:52:53.991" endtime="20211022 01:52:53.991"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211022 01:52:53.991" endtime="20211022 01:52:53.991"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211022 01:52:53.991" endtime="20211022 01:52:53.992"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211022 01:52:53.992" endtime="20211022 01:52:53.992"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211022 01:52:53.992" endtime="20211022 01:52:53.992"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211022 01:52:53.992" endtime="20211022 01:52:53.992"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211022 01:52:53.993" endtime="20211022 01:52:53.993"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211022 01:52:53.993" endtime="20211022 01:52:53.993"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211022 01:52:53.993" endtime="20211022 01:52:53.993"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211022 01:52:53.993" endtime="20211022 01:52:53.993"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211022 01:52:53.994" endtime="20211022 01:52:53.994"/>
</kw>
<status status="FAIL" starttime="20211022 01:49:50.048" endtime="20211022 01:52:53.994"/>
</kw>
<status status="FAIL" starttime="20211022 01:49:50.047" endtime="20211022 01:52:53.994"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211022 01:52:53.994" endtime="20211022 01:52:53.994"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211022 01:52:53.995" endtime="20211022 01:52:53.995"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211022 01:52:53.995" endtime="20211022 01:52:53.995"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211022 01:52:53.995" endtime="20211022 01:52:53.995"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211022 01:52:53.995" endtime="20211022 01:52:53.995"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211022 01:52:53.996" endtime="20211022 01:52:53.996"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211022 01:52:53.996" endtime="20211022 01:52:53.996"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211022 01:52:53.996" endtime="20211022 01:52:53.996"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211022 01:52:53.997" endtime="20211022 01:52:53.997"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211022 01:52:53.997" endtime="20211022 01:52:53.997"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211022 01:52:53.997" endtime="20211022 01:52:53.997"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211022 01:52:53.997" endtime="20211022 01:52:53.998"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211022 01:52:53.998" endtime="20211022 01:52:53.998"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211022 01:52:53.998" endtime="20211022 01:52:53.999"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211022 01:52:53.999" endtime="20211022 01:52:53.999"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211022 01:52:53.999" endtime="20211022 01:52:54.000"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211022 01:52:54.000" endtime="20211022 01:52:54.000"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211022 01:52:54.000" endtime="20211022 01:52:54.001"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211022 01:52:54.001" endtime="20211022 01:52:54.001"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211022 01:52:54.001" endtime="20211022 01:52:54.001"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211022 01:52:54.002" endtime="20211022 01:52:54.002"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211022 01:52:54.002" endtime="20211022 01:52:54.002"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211022 01:52:54.002" endtime="20211022 01:52:54.002"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211022 01:52:54.002" endtime="20211022 01:52:54.003"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211022 01:52:54.003" endtime="20211022 01:52:54.003"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211022 01:52:54.003" endtime="20211022 01:52:54.003"/>
</kw>
<status status="FAIL" starttime="20211022 01:47:54.020" endtime="20211022 01:52:54.003"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211022 01:47:53.982" endtime="20211022 01:52:54.004">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t7" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:52:54.013" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:52:54.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:52:54.019" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211022 01:52:54.010" endtime="20211022 01:52:54.019"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:52:54.021" level="INFO">scm</msg>
<status status="PASS" starttime="20211022 01:52:54.020" endtime="20211022 01:52:54.021"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:52:54.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:52:54.021" endtime="20211022 01:52:54.023"/>
</kw>
<status status="PASS" starttime="20211022 01:52:54.010" endtime="20211022 01:52:54.024"/>
</kw>
<msg timestamp="20211022 01:52:54.024" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:52:54.009" endtime="20211022 01:52:54.024"/>
</kw>
<msg timestamp="20211022 01:52:54.025" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211022 01:52:54.009" endtime="20211022 01:52:54.025"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211022 01:52:54.026" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211022 01:52:54.025" endtime="20211022 01:52:54.026"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:52:54.031" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:52:54.235" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:52:54.235" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:52:54.029" endtime="20211022 01:52:54.235"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:52:54.238" level="INFO"/>
<status status="PASS" starttime="20211022 01:52:54.236" endtime="20211022 01:52:54.238"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:52:54.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:52:54.239" endtime="20211022 01:52:54.240"/>
</kw>
<status status="PASS" starttime="20211022 01:52:54.028" endtime="20211022 01:52:54.241"/>
</kw>
<msg timestamp="20211022 01:52:54.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:52:54.027" endtime="20211022 01:52:54.241"/>
</kw>
<status status="PASS" starttime="20211022 01:52:54.027" endtime="20211022 01:52:54.241"/>
</kw>
<status status="PASS" starttime="20211022 01:52:54.026" endtime="20211022 01:52:54.242"/>
</kw>
<status status="PASS" starttime="20211022 01:52:54.008" endtime="20211022 01:52:54.242"/>
</kw>
<status status="PASS" starttime="20211022 01:52:54.007" endtime="20211022 01:52:54.242"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:52:54.253" level="INFO">Running command 'ozone sh volume info /58244-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:53:01.319" level="INFO">${rc} = 255</msg>
<msg timestamp="20211022 01:53:01.319" level="INFO">${output} = VOLUME_NOT_FOUND Volume 58244-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20211022 01:52:54.248" endtime="20211022 01:53:01.319"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:53:01.330" level="INFO">VOLUME_NOT_FOUND Volume 58244-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20211022 01:53:01.323" endtime="20211022 01:53:01.330"/>
</kw>
<msg timestamp="20211022 01:53:01.334" level="INFO">${result} = VOLUME_NOT_FOUND Volume 58244-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20211022 01:52:54.247" endtime="20211022 01:53:01.334"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211022 01:53:01.336" endtime="20211022 01:53:01.336"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:53:01.353" level="INFO">Running command 'ozone sh volume create /58244-rpcwoscheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:53:10.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:53:10.088" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:53:01.344" endtime="20211022 01:53:10.088"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:53:10.090" level="INFO"/>
<status status="PASS" starttime="20211022 01:53:10.089" endtime="20211022 01:53:10.091"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:53:10.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:53:10.091" endtime="20211022 01:53:10.093"/>
</kw>
<status status="PASS" starttime="20211022 01:53:01.343" endtime="20211022 01:53:10.094"/>
</kw>
<msg timestamp="20211022 01:53:10.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:53:01.342" endtime="20211022 01:53:10.094"/>
</kw>
<msg timestamp="20211022 01:53:10.095" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211022 01:53:01.339" endtime="20211022 01:53:10.095"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211022 01:53:10.096" endtime="20211022 01:53:10.097"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:53:10.104" level="INFO">Running command 'ozone sh volume list / | jq -r '.[] | select(.name=="58244-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:53:20.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:53:20.006" level="INFO">${output} = {
  "metadata": {},
  "name": "58244-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211022 01:53:10.100" endtime="20211022 01:53:20.006"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:53:20.008" level="INFO">{
  "metadata": {},
  "name": "58244-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-22T01:53:09.900Z",
  "modificationTime": "2021-10-22T01:53:09.900Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211022 01:53:20.006" endtime="20211022 01:53:20.008"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:53:20.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:53:20.008" endtime="20211022 01:53:20.010"/>
</kw>
<status status="PASS" starttime="20211022 01:53:10.099" endtime="20211022 01:53:20.011"/>
</kw>
<msg timestamp="20211022 01:53:20.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:53:10.098" endtime="20211022 01:53:20.011"/>
</kw>
<msg timestamp="20211022 01:53:20.012" level="INFO">${result} = {
  "metadata": {},
  "name": "58244-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211022 01:53:10.097" endtime="20211022 01:53:20.012"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211022 01:53:20.012" endtime="20211022 01:53:20.014"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:53:20.022" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="58244-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:53:30.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:53:30.358" level="INFO">${output} = {
  "metadata": {},
  "name": "58244-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211022 01:53:20.018" endtime="20211022 01:53:30.358"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:53:30.361" level="INFO">{
  "metadata": {},
  "name": "58244-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-22T01:53:09.900Z",
  "modificationTime": "2021-10-22T01:53:09.900Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211022 01:53:30.359" endtime="20211022 01:53:30.361"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:53:30.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:53:30.361" endtime="20211022 01:53:30.363"/>
</kw>
<status status="PASS" starttime="20211022 01:53:20.017" endtime="20211022 01:53:30.364"/>
</kw>
<msg timestamp="20211022 01:53:30.364" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:53:20.016" endtime="20211022 01:53:30.364"/>
</kw>
<msg timestamp="20211022 01:53:30.365" level="INFO">${result} = {
  "metadata": {},
  "name": "58244-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211022 01:53:20.014" endtime="20211022 01:53:30.365"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211022 01:53:30.365" endtime="20211022 01:53:30.366"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:53:30.374" level="INFO">Running command 'ozone sh volume setquota /58244-rpcwoscheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:53:39.508" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:53:39.508" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:53:30.370" endtime="20211022 01:53:39.508"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:53:39.511" level="INFO"/>
<status status="PASS" starttime="20211022 01:53:39.509" endtime="20211022 01:53:39.511"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:53:39.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:53:39.511" endtime="20211022 01:53:39.512"/>
</kw>
<status status="PASS" starttime="20211022 01:53:30.368" endtime="20211022 01:53:39.513"/>
</kw>
<msg timestamp="20211022 01:53:39.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:53:30.367" endtime="20211022 01:53:39.513"/>
</kw>
<status status="PASS" starttime="20211022 01:53:30.366" endtime="20211022 01:53:39.514"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:53:39.521" level="INFO">Running command 'ozone sh volume info /58244-rpcwoscheme | jq -r '. | select(.name=="58244-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:53:49.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:53:49.146" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211022 01:53:39.517" endtime="20211022 01:53:49.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:53:49.149" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211022 01:53:49.148" endtime="20211022 01:53:49.149"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:53:49.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:53:49.150" endtime="20211022 01:53:49.152"/>
</kw>
<status status="PASS" starttime="20211022 01:53:39.516" endtime="20211022 01:53:49.153"/>
</kw>
<msg timestamp="20211022 01:53:49.153" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:53:39.516" endtime="20211022 01:53:49.153"/>
</kw>
<msg timestamp="20211022 01:53:49.154" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211022 01:53:39.514" endtime="20211022 01:53:49.154"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211022 01:53:49.154" endtime="20211022 01:53:49.155"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:53:49.162" level="INFO">Running command 'ozone sh bucket create /58244-rpcwoscheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:53:58.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:53:58.522" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:53:49.159" endtime="20211022 01:53:58.522"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:53:58.525" level="INFO"/>
<status status="PASS" starttime="20211022 01:53:58.523" endtime="20211022 01:53:58.526"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:53:58.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:53:58.526" endtime="20211022 01:53:58.527"/>
</kw>
<status status="PASS" starttime="20211022 01:53:49.158" endtime="20211022 01:53:58.528"/>
</kw>
<msg timestamp="20211022 01:53:58.528" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:53:49.157" endtime="20211022 01:53:58.528"/>
</kw>
<status status="PASS" starttime="20211022 01:53:49.155" endtime="20211022 01:53:58.529"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:53:58.538" level="INFO">Running command 'ozone sh bucket info /58244-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:54:07.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:54:07.539" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211022 01:53:58.534" endtime="20211022 01:54:07.539"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:54:07.541" level="INFO">DISK</msg>
<status status="PASS" starttime="20211022 01:54:07.540" endtime="20211022 01:54:07.541"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:54:07.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:54:07.541" endtime="20211022 01:54:07.542"/>
</kw>
<status status="PASS" starttime="20211022 01:53:58.532" endtime="20211022 01:54:07.542"/>
</kw>
<msg timestamp="20211022 01:54:07.543" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:53:58.531" endtime="20211022 01:54:07.543"/>
</kw>
<msg timestamp="20211022 01:54:07.544" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211022 01:53:58.529" endtime="20211022 01:54:07.544"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211022 01:54:07.544" endtime="20211022 01:54:07.544"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:54:07.552" level="INFO">Running command 'ozone sh bucket info /58244-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:54:15.924" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:54:15.924" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211022 01:54:07.549" endtime="20211022 01:54:15.924"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:54:15.926" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211022 01:54:15.925" endtime="20211022 01:54:15.926"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:54:15.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:54:15.926" endtime="20211022 01:54:15.927"/>
</kw>
<status status="PASS" starttime="20211022 01:54:07.548" endtime="20211022 01:54:15.927"/>
</kw>
<msg timestamp="20211022 01:54:15.927" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:54:07.547" endtime="20211022 01:54:15.928"/>
</kw>
<msg timestamp="20211022 01:54:15.928" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211022 01:54:07.545" endtime="20211022 01:54:15.928"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211022 01:54:15.928" endtime="20211022 01:54:15.929"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:54:15.934" level="INFO">Running command 'ozone sh bucket info /58244-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:54:22.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:54:22.623" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211022 01:54:15.932" endtime="20211022 01:54:22.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:54:22.625" level="INFO">100</msg>
<status status="PASS" starttime="20211022 01:54:22.624" endtime="20211022 01:54:22.625"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:54:22.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:54:22.625" endtime="20211022 01:54:22.627"/>
</kw>
<status status="PASS" starttime="20211022 01:54:15.931" endtime="20211022 01:54:22.628"/>
</kw>
<msg timestamp="20211022 01:54:22.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:54:15.930" endtime="20211022 01:54:22.629"/>
</kw>
<msg timestamp="20211022 01:54:22.629" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211022 01:54:15.929" endtime="20211022 01:54:22.629"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211022 01:54:22.630" endtime="20211022 01:54:22.631"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:54:22.638" level="INFO">Running command 'ozone sh bucket setquota /58244-rpcwoscheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:54:30.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:54:30.905" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:54:22.635" endtime="20211022 01:54:30.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:54:30.907" level="INFO"/>
<status status="PASS" starttime="20211022 01:54:30.906" endtime="20211022 01:54:30.907"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:54:30.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:54:30.908" endtime="20211022 01:54:30.912"/>
</kw>
<status status="PASS" starttime="20211022 01:54:22.633" endtime="20211022 01:54:30.913"/>
</kw>
<msg timestamp="20211022 01:54:30.914" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:54:22.632" endtime="20211022 01:54:30.914"/>
</kw>
<status status="PASS" starttime="20211022 01:54:22.631" endtime="20211022 01:54:30.915"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:54:30.927" level="INFO">Running command 'ozone sh bucket info /58244-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:54:40.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:54:40.229" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211022 01:54:30.922" endtime="20211022 01:54:40.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:54:40.233" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211022 01:54:40.231" endtime="20211022 01:54:40.233"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:54:40.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:54:40.233" endtime="20211022 01:54:40.235"/>
</kw>
<status status="PASS" starttime="20211022 01:54:30.919" endtime="20211022 01:54:40.236"/>
</kw>
<msg timestamp="20211022 01:54:40.236" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:54:30.919" endtime="20211022 01:54:40.237"/>
</kw>
<msg timestamp="20211022 01:54:40.238" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211022 01:54:30.915" endtime="20211022 01:54:40.239"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211022 01:54:40.239" endtime="20211022 01:54:40.242"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:54:40.255" level="INFO">Running command 'ozone sh bucket info /58244-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:54:49.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:54:49.075" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211022 01:54:40.249" endtime="20211022 01:54:49.075"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:54:49.078" level="INFO">1000</msg>
<status status="PASS" starttime="20211022 01:54:49.076" endtime="20211022 01:54:49.078"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:54:49.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:54:49.079" endtime="20211022 01:54:49.081"/>
</kw>
<status status="PASS" starttime="20211022 01:54:40.247" endtime="20211022 01:54:49.081"/>
</kw>
<msg timestamp="20211022 01:54:49.081" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:54:40.246" endtime="20211022 01:54:49.081"/>
</kw>
<msg timestamp="20211022 01:54:49.083" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211022 01:54:40.243" endtime="20211022 01:54:49.083"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211022 01:54:49.083" endtime="20211022 01:54:49.085"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:54:49.094" level="INFO">Running command 'ozone sh bucket list /58244-rpcwoscheme/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:54:55.994" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:54:55.994" level="INFO">${output} = 58244-rpcwoscheme</msg>
<status status="PASS" starttime="20211022 01:54:49.090" endtime="20211022 01:54:55.994"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:54:55.995" level="INFO">58244-rpcwoscheme</msg>
<status status="PASS" starttime="20211022 01:54:55.994" endtime="20211022 01:54:55.995"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:54:55.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:54:55.996" endtime="20211022 01:54:55.997"/>
</kw>
<status status="PASS" starttime="20211022 01:54:49.088" endtime="20211022 01:54:55.997"/>
</kw>
<msg timestamp="20211022 01:54:55.997" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:54:49.087" endtime="20211022 01:54:55.998"/>
</kw>
<msg timestamp="20211022 01:54:55.998" level="INFO">${result} = 58244-rpcwoscheme</msg>
<status status="PASS" starttime="20211022 01:54:49.085" endtime="20211022 01:54:55.998"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211022 01:54:55.998" endtime="20211022 01:54:56.000"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:54:56.009" level="INFO">Running command 'ozone sh key put /58244-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:57:54.007" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211022 01:54:56.006" endtime="20211022 01:57:54.007"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211022 01:57:54.007" endtime="20211022 01:57:54.008"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211022 01:57:54.008" endtime="20211022 01:57:54.008"/>
</kw>
<status status="FAIL" starttime="20211022 01:54:56.005" endtime="20211022 01:57:54.008"/>
</kw>
<msg timestamp="20211022 01:57:54.008" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211022 01:54:56.004" endtime="20211022 01:57:54.009"/>
</kw>
<status status="FAIL" starttime="20211022 01:54:56.003" endtime="20211022 01:57:54.009"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211022 01:57:54.009" endtime="20211022 01:57:54.009"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211022 01:57:54.009" endtime="20211022 01:57:54.009"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211022 01:57:54.010" endtime="20211022 01:57:54.010"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211022 01:57:54.010" endtime="20211022 01:57:54.010"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211022 01:57:54.010" endtime="20211022 01:57:54.010"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211022 01:57:54.010" endtime="20211022 01:57:54.010"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211022 01:57:54.010" endtime="20211022 01:57:54.011"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211022 01:57:54.011" endtime="20211022 01:57:54.011"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211022 01:57:54.011" endtime="20211022 01:57:54.011"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211022 01:57:54.011" endtime="20211022 01:57:54.011"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211022 01:57:54.011" endtime="20211022 01:57:54.011"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211022 01:57:54.012" endtime="20211022 01:57:54.012"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211022 01:57:54.012" endtime="20211022 01:57:54.012"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211022 01:57:54.012" endtime="20211022 01:57:54.012"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211022 01:57:54.012" endtime="20211022 01:57:54.012"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211022 01:57:54.013" endtime="20211022 01:57:54.013"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211022 01:57:54.013" endtime="20211022 01:57:54.013"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211022 01:57:54.013" endtime="20211022 01:57:54.013"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211022 01:57:54.013" endtime="20211022 01:57:54.013"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211022 01:57:54.014" endtime="20211022 01:57:54.014"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211022 01:57:54.014" endtime="20211022 01:57:54.014"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211022 01:57:54.015" endtime="20211022 01:57:54.015"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211022 01:57:54.015" endtime="20211022 01:57:54.015"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211022 01:57:54.015" endtime="20211022 01:57:54.015"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211022 01:57:54.015" endtime="20211022 01:57:54.015"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211022 01:57:54.016" endtime="20211022 01:57:54.016"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211022 01:57:54.016" endtime="20211022 01:57:54.016"/>
</kw>
<status status="FAIL" starttime="20211022 01:54:56.001" endtime="20211022 01:57:54.017"/>
</kw>
<status status="FAIL" starttime="20211022 01:54:56.001" endtime="20211022 01:57:54.017"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211022 01:57:54.017" endtime="20211022 01:57:54.017"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211022 01:57:54.017" endtime="20211022 01:57:54.018"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211022 01:57:54.018" endtime="20211022 01:57:54.018"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211022 01:57:54.018" endtime="20211022 01:57:54.018"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211022 01:57:54.019" endtime="20211022 01:57:54.019"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211022 01:57:54.019" endtime="20211022 01:57:54.019"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211022 01:57:54.020" endtime="20211022 01:57:54.020"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211022 01:57:54.020" endtime="20211022 01:57:54.020"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211022 01:57:54.020" endtime="20211022 01:57:54.020"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211022 01:57:54.020" endtime="20211022 01:57:54.020"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211022 01:57:54.021" endtime="20211022 01:57:54.021"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211022 01:57:54.021" endtime="20211022 01:57:54.021"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211022 01:57:54.021" endtime="20211022 01:57:54.021"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211022 01:57:54.021" endtime="20211022 01:57:54.021"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211022 01:57:54.021" endtime="20211022 01:57:54.021"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211022 01:57:54.022" endtime="20211022 01:57:54.022"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211022 01:57:54.022" endtime="20211022 01:57:54.022"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211022 01:57:54.023" endtime="20211022 01:57:54.023"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211022 01:57:54.023" endtime="20211022 01:57:54.023"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211022 01:57:54.023" endtime="20211022 01:57:54.023"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211022 01:57:54.024" endtime="20211022 01:57:54.024"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211022 01:57:54.024" endtime="20211022 01:57:54.024"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211022 01:57:54.025" endtime="20211022 01:57:54.025"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211022 01:57:54.025" endtime="20211022 01:57:54.025"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211022 01:57:54.025" endtime="20211022 01:57:54.026"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211022 01:57:54.026" endtime="20211022 01:57:54.026"/>
</kw>
<status status="FAIL" starttime="20211022 01:52:54.243" endtime="20211022 01:57:54.026"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211022 01:52:54.006" endtime="20211022 01:57:54.027">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20211022 01:32:03.672" endtime="20211022 01:57:54.029"/>
</suite>
<status status="FAIL" starttime="20211022 01:06:42.567" endtime="20211022 01:57:54.036"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:06:36.672" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:06:36.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:06:36.677" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211022 01:06:36.668" endtime="20211022 01:06:36.678"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:06:36.679" level="INFO">scm</msg>
<status status="PASS" starttime="20211022 01:06:36.678" endtime="20211022 01:06:36.679"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:06:36.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:06:36.680" endtime="20211022 01:06:36.680"/>
</kw>
<status status="PASS" starttime="20211022 01:06:36.668" endtime="20211022 01:06:36.681"/>
</kw>
<msg timestamp="20211022 01:06:36.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:06:36.667" endtime="20211022 01:06:36.681"/>
</kw>
<msg timestamp="20211022 01:06:36.682" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211022 01:06:36.667" endtime="20211022 01:06:36.682"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211022 01:06:36.683" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211022 01:06:36.682" endtime="20211022 01:06:36.684"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211022 01:06:36.690" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211022 01:06:36.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20211022 01:06:36.700" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211022 01:06:36.687" endtime="20211022 01:06:36.700"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211022 01:06:36.702" level="INFO"/>
<status status="PASS" starttime="20211022 01:06:36.701" endtime="20211022 01:06:36.702"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211022 01:06:36.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211022 01:06:36.702" endtime="20211022 01:06:36.703"/>
</kw>
<status status="PASS" starttime="20211022 01:06:36.686" endtime="20211022 01:06:36.703"/>
</kw>
<msg timestamp="20211022 01:06:36.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211022 01:06:36.685" endtime="20211022 01:06:36.704"/>
</kw>
<status status="PASS" starttime="20211022 01:06:36.684" endtime="20211022 01:06:36.704"/>
</kw>
<status status="PASS" starttime="20211022 01:06:36.684" endtime="20211022 01:06:36.704"/>
</kw>
<status status="PASS" starttime="20211022 01:06:36.666" endtime="20211022 01:06:36.704"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211022 01:06:36.665" endtime="20211022 01:06:36.705"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20211022 01:06:36.597" endtime="20211022 01:06:36.706"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="3071578"/>
</suite>
<statistics>
<total>
<stat pass="20" fail="10" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="20" fail="10" skip="0" id="s1" name="ozonesecure">ozonesecure</stat>
<stat pass="19" fail="10" skip="0" id="s1-s1" name="Basic">ozonesecure.Basic</stat>
<stat pass="1" fail="1" skip="0" id="s1-s1-s1" name="Basic">ozonesecure.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Getconf">ozonesecure.Basic.Getconf</stat>
<stat pass="10" fail="5" skip="0" id="s1-s1-s3" name="Links">ozonesecure.Basic.Links</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat pass="4" fail="3" skip="0" id="s1-s1-s5" name="Ozone-Shell">ozonesecure.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
