<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1.1 (Python 3.6.9 on linux)" generated="20211002 01:52:42.660" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:03:20.086" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:03:20.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:03:20.090" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211002 01:03:20.083" endtime="20211002 01:03:20.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:03:20.091" level="INFO">scm</msg>
<status status="PASS" starttime="20211002 01:03:20.091" endtime="20211002 01:03:20.092"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:03:20.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:03:20.092" endtime="20211002 01:03:20.092"/>
</kw>
<status status="PASS" starttime="20211002 01:03:20.083" endtime="20211002 01:03:20.093"/>
</kw>
<msg timestamp="20211002 01:03:20.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:03:20.082" endtime="20211002 01:03:20.093"/>
</kw>
<msg timestamp="20211002 01:03:20.093" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20211002 01:03:20.082" endtime="20211002 01:03:20.093"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:03:20.097" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:03:20.105" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:03:20.105" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:03:20.095" endtime="20211002 01:03:20.105"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:03:20.106" level="INFO"/>
<status status="PASS" starttime="20211002 01:03:20.105" endtime="20211002 01:03:20.106"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:03:20.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:03:20.106" endtime="20211002 01:03:20.107"/>
</kw>
<status status="PASS" starttime="20211002 01:03:20.095" endtime="20211002 01:03:20.107"/>
</kw>
<msg timestamp="20211002 01:03:20.107" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:03:20.095" endtime="20211002 01:03:20.107"/>
</kw>
<status status="PASS" starttime="20211002 01:03:20.094" endtime="20211002 01:03:20.107"/>
</kw>
<status status="PASS" starttime="20211002 01:03:20.093" endtime="20211002 01:03:20.107"/>
</kw>
<status status="PASS" starttime="20211002 01:03:20.081" endtime="20211002 01:03:20.108"/>
</kw>
<status status="PASS" starttime="20211002 01:03:20.081" endtime="20211002 01:03:20.108"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:03:20.112" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:03:20.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:03:20.266" level="INFO">${output} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20211002 01:03:20.109" endtime="20211002 01:03:20.266"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:03:20.267" level="INFO">HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 484

HTTP/1.1 200 OK
Date: Sat, 02 Oct 2021 01:03:20 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCAHIQ6RyG7941i8VBEEq+ELxj9GzaoatIxhNl9YFAzYDsPqOiUo2MOGSElakIVO1T54hhLs9Rq/7hwoyM5k2k/Nz9
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1633172600250&amp;s=G+ia/knyF2AgPir8FLVsJsrWU2FI7Z6Zwoi959V2Q9Y="; Path=/; HttpOnly
Last-Modified: Sat, 02 Oct 2021 00:49:54 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20211002 01:03:20.266" endtime="20211002 01:03:20.267"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:03:20.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:03:20.267" endtime="20211002 01:03:20.268"/>
</kw>
<status status="PASS" starttime="20211002 01:03:20.109" endtime="20211002 01:03:20.268"/>
</kw>
<msg timestamp="20211002 01:03:20.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:03:20.109" endtime="20211002 01:03:20.269"/>
</kw>
<msg timestamp="20211002 01:03:20.269" level="INFO">${result} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20211002 01:03:20.108" endtime="20211002 01:03:20.269"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211002 01:03:20.269" endtime="20211002 01:03:20.270"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211002 01:03:20.080" endtime="20211002 01:03:20.270"/>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:03:20.283" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:03:20.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:03:20.294" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211002 01:03:20.280" endtime="20211002 01:03:20.294"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:03:20.295" level="INFO">scm</msg>
<status status="PASS" starttime="20211002 01:03:20.294" endtime="20211002 01:03:20.295"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:03:20.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:03:20.295" endtime="20211002 01:03:20.296"/>
</kw>
<status status="PASS" starttime="20211002 01:03:20.279" endtime="20211002 01:03:20.296"/>
</kw>
<msg timestamp="20211002 01:03:20.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:03:20.279" endtime="20211002 01:03:20.297"/>
</kw>
<msg timestamp="20211002 01:03:20.297" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211002 01:03:20.279" endtime="20211002 01:03:20.297"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211002 01:03:20.299" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211002 01:03:20.297" endtime="20211002 01:03:20.299"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:03:20.303" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:03:20.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:03:20.310" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:03:20.301" endtime="20211002 01:03:20.310"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:03:20.311" level="INFO"/>
<status status="PASS" starttime="20211002 01:03:20.311" endtime="20211002 01:03:20.312"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:03:20.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:03:20.312" endtime="20211002 01:03:20.313"/>
</kw>
<status status="PASS" starttime="20211002 01:03:20.301" endtime="20211002 01:03:20.313"/>
</kw>
<msg timestamp="20211002 01:03:20.313" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:03:20.300" endtime="20211002 01:03:20.313"/>
</kw>
<status status="PASS" starttime="20211002 01:03:20.300" endtime="20211002 01:03:20.313"/>
</kw>
<status status="PASS" starttime="20211002 01:03:20.299" endtime="20211002 01:03:20.314"/>
</kw>
<status status="PASS" starttime="20211002 01:03:20.278" endtime="20211002 01:03:20.314"/>
</kw>
<status status="PASS" starttime="20211002 01:03:20.274" endtime="20211002 01:03:20.314"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:03:20.317" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:08:20.272" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211002 01:03:20.316" endtime="20211002 01:08:20.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211002 01:08:20.272" endtime="20211002 01:08:20.272"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211002 01:08:20.273" endtime="20211002 01:08:20.273"/>
</kw>
<status status="FAIL" starttime="20211002 01:03:20.315" endtime="20211002 01:08:20.273"/>
</kw>
<msg timestamp="20211002 01:08:20.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211002 01:03:20.314" endtime="20211002 01:08:20.273"/>
</kw>
<status status="FAIL" starttime="20211002 01:03:20.314" endtime="20211002 01:08:20.274"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20211002 01:08:20.274" endtime="20211002 01:08:20.274"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Status: Success</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211002 01:08:20.274" endtime="20211002 01:08:20.274"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211002 01:03:20.271" endtime="20211002 01:08:20.274">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" starttime="20211002 01:03:20.052" endtime="20211002 01:08:20.276"/>
</suite>
<suite id="s1-s1-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s1-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:08:20.286" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:08:23.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:08:23.556" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211002 01:08:20.284" endtime="20211002 01:08:23.556"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:08:23.557" level="INFO">om</msg>
<status status="PASS" starttime="20211002 01:08:23.556" endtime="20211002 01:08:23.557"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:08:23.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:08:23.557" endtime="20211002 01:08:23.558"/>
</kw>
<status status="PASS" starttime="20211002 01:08:20.283" endtime="20211002 01:08:23.558"/>
</kw>
<msg timestamp="20211002 01:08:23.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:08:20.283" endtime="20211002 01:08:23.559"/>
</kw>
<msg timestamp="20211002 01:08:23.559" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211002 01:08:20.282" endtime="20211002 01:08:23.559"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211002 01:08:23.560" endtime="20211002 01:08:23.561"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:08:23.566" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:08:26.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:08:26.436" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211002 01:08:23.563" endtime="20211002 01:08:26.436"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:08:26.437" level="INFO">om</msg>
<status status="PASS" starttime="20211002 01:08:26.436" endtime="20211002 01:08:26.437"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:08:26.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:08:26.437" endtime="20211002 01:08:26.438"/>
</kw>
<status status="PASS" starttime="20211002 01:08:23.562" endtime="20211002 01:08:26.438"/>
</kw>
<msg timestamp="20211002 01:08:26.438" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:08:23.562" endtime="20211002 01:08:26.439"/>
</kw>
<msg timestamp="20211002 01:08:26.439" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211002 01:08:23.562" endtime="20211002 01:08:26.439"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211002 01:08:26.439" endtime="20211002 01:08:26.440"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211002 01:08:20.281" endtime="20211002 01:08:26.440"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:08:26.448" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:08:28.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:08:28.999" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211002 01:08:26.445" endtime="20211002 01:08:28.999"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:08:29.000" level="INFO">scm</msg>
<status status="PASS" starttime="20211002 01:08:29.000" endtime="20211002 01:08:29.000"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:08:29.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:08:29.001" endtime="20211002 01:08:29.001"/>
</kw>
<status status="PASS" starttime="20211002 01:08:26.444" endtime="20211002 01:08:29.002"/>
</kw>
<msg timestamp="20211002 01:08:29.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:08:26.444" endtime="20211002 01:08:29.002"/>
</kw>
<msg timestamp="20211002 01:08:29.002" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20211002 01:08:26.442" endtime="20211002 01:08:29.002"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211002 01:08:29.002" endtime="20211002 01:08:29.003"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:08:29.008" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:08:30.553" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:08:30.554" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211002 01:08:29.005" endtime="20211002 01:08:30.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:08:30.555" level="INFO">scm</msg>
<status status="PASS" starttime="20211002 01:08:30.554" endtime="20211002 01:08:30.555"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:08:30.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:08:30.555" endtime="20211002 01:08:30.556"/>
</kw>
<status status="PASS" starttime="20211002 01:08:29.004" endtime="20211002 01:08:30.556"/>
</kw>
<msg timestamp="20211002 01:08:30.556" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:08:29.004" endtime="20211002 01:08:30.557"/>
</kw>
<msg timestamp="20211002 01:08:30.557" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20211002 01:08:29.003" endtime="20211002 01:08:30.557"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211002 01:08:30.557" endtime="20211002 01:08:30.557"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211002 01:08:26.441" endtime="20211002 01:08:30.558"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:08:30.563" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:08:33.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:08:33.010" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211002 01:08:30.561" endtime="20211002 01:08:33.010"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:08:33.012" level="INFO">om</msg>
<status status="PASS" starttime="20211002 01:08:33.011" endtime="20211002 01:08:33.012"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:08:33.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:08:33.012" endtime="20211002 01:08:33.013"/>
</kw>
<status status="PASS" starttime="20211002 01:08:30.561" endtime="20211002 01:08:33.013"/>
</kw>
<msg timestamp="20211002 01:08:33.013" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:08:30.560" endtime="20211002 01:08:33.013"/>
</kw>
<msg timestamp="20211002 01:08:33.014" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211002 01:08:30.560" endtime="20211002 01:08:33.014"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211002 01:08:33.014" endtime="20211002 01:08:33.014"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211002 01:08:33.014" endtime="20211002 01:08:33.015"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:08:33.020" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:08:34.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:08:34.759" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211002 01:08:33.017" endtime="20211002 01:08:34.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:08:34.760" level="INFO">om</msg>
<status status="PASS" starttime="20211002 01:08:34.760" endtime="20211002 01:08:34.761"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:08:34.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:08:34.761" endtime="20211002 01:08:34.762"/>
</kw>
<status status="PASS" starttime="20211002 01:08:33.016" endtime="20211002 01:08:34.762"/>
</kw>
<msg timestamp="20211002 01:08:34.762" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:08:33.016" endtime="20211002 01:08:34.762"/>
</kw>
<msg timestamp="20211002 01:08:34.763" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211002 01:08:33.015" endtime="20211002 01:08:34.763"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211002 01:08:34.763" endtime="20211002 01:08:34.763"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211002 01:08:34.764" endtime="20211002 01:08:34.764"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211002 01:08:30.559" endtime="20211002 01:08:34.764"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:08:34.773" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:08:36.218" level="INFO">${rc} = 255</msg>
<msg timestamp="20211002 01:08:36.218" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211002 01:08:34.767" endtime="20211002 01:08:36.218"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:08:36.219" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211002 01:08:36.219" endtime="20211002 01:08:36.220"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:08:36.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:08:36.220" endtime="20211002 01:08:36.220"/>
</kw>
<msg timestamp="20211002 01:08:36.221" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211002 01:08:34.766" endtime="20211002 01:08:36.221"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211002 01:08:36.221" endtime="20211002 01:08:36.221"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:08:36.224" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:08:38.826" level="INFO">${rc} = 255</msg>
<msg timestamp="20211002 01:08:38.826" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211002 01:08:36.222" endtime="20211002 01:08:38.826"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:08:38.827" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211002 01:08:38.826" endtime="20211002 01:08:38.827"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:08:38.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:08:38.827" endtime="20211002 01:08:38.828"/>
</kw>
<msg timestamp="20211002 01:08:38.828" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211002 01:08:36.222" endtime="20211002 01:08:38.828"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211002 01:08:38.829" endtime="20211002 01:08:38.829"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211002 01:08:34.765" endtime="20211002 01:08:38.829"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20211002 01:08:20.277" endtime="20211002 01:08:38.831"/>
</suite>
<suite id="s1-s1-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211002 01:08:38.850" level="INFO">${random} = 24477</msg>
<status status="PASS" starttime="20211002 01:08:38.849" endtime="20211002 01:08:38.850"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211002 01:08:38.852" level="INFO">${source} = 24477-source</msg>
<status status="PASS" starttime="20211002 01:08:38.850" endtime="20211002 01:08:38.852"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211002 01:08:38.854" level="INFO">${target} = 24477-target</msg>
<status status="PASS" starttime="20211002 01:08:38.852" endtime="20211002 01:08:38.854"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:08:38.859" level="INFO">Running command 'ozone sh volume create 24477-source 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:08:46.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:08:46.409" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:08:38.856" endtime="20211002 01:08:46.409"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:08:46.410" level="INFO"/>
<status status="PASS" starttime="20211002 01:08:46.409" endtime="20211002 01:08:46.410"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:08:46.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:08:46.410" endtime="20211002 01:08:46.411"/>
</kw>
<status status="PASS" starttime="20211002 01:08:38.855" endtime="20211002 01:08:46.411"/>
</kw>
<msg timestamp="20211002 01:08:46.411" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:08:38.855" endtime="20211002 01:08:46.411"/>
</kw>
<status status="PASS" starttime="20211002 01:08:38.854" endtime="20211002 01:08:46.412"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:08:46.416" level="INFO">Running command 'ozone sh volume create 24477-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:08:51.820" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:08:51.820" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:08:46.413" endtime="20211002 01:08:51.820"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:08:51.822" level="INFO"/>
<status status="PASS" starttime="20211002 01:08:51.821" endtime="20211002 01:08:51.822"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:08:51.822" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:08:51.822" endtime="20211002 01:08:51.822"/>
</kw>
<status status="PASS" starttime="20211002 01:08:46.413" endtime="20211002 01:08:51.823"/>
</kw>
<msg timestamp="20211002 01:08:51.823" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:08:46.412" endtime="20211002 01:08:51.823"/>
</kw>
<status status="PASS" starttime="20211002 01:08:46.412" endtime="20211002 01:08:51.823"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:08:51.830" level="INFO">Running command 'ozone sh bucket create 24477-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:08:59.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:08:59.099" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:08:51.828" endtime="20211002 01:08:59.099"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:08:59.101" level="INFO"/>
<status status="PASS" starttime="20211002 01:08:59.100" endtime="20211002 01:08:59.101"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:08:59.103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:08:59.102" endtime="20211002 01:08:59.103"/>
</kw>
<status status="PASS" starttime="20211002 01:08:51.827" endtime="20211002 01:08:59.103"/>
</kw>
<msg timestamp="20211002 01:08:59.104" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:08:51.825" endtime="20211002 01:08:59.104"/>
</kw>
<status status="PASS" starttime="20211002 01:08:51.825" endtime="20211002 01:08:59.104"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:08:59.109" level="INFO">Running command 'ozone sh key put 24477-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:12:12.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:12:12.384" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:08:59.107" endtime="20211002 01:12:12.384"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:12:12.386" level="INFO"/>
<status status="PASS" starttime="20211002 01:12:12.385" endtime="20211002 01:12:12.386"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:12:12.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:12:12.386" endtime="20211002 01:12:12.386"/>
</kw>
<status status="PASS" starttime="20211002 01:08:59.106" endtime="20211002 01:12:12.387"/>
</kw>
<msg timestamp="20211002 01:12:12.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:08:59.106" endtime="20211002 01:12:12.388"/>
</kw>
<status status="PASS" starttime="20211002 01:08:59.104" endtime="20211002 01:12:12.388"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:12:12.393" level="INFO">Running command 'ozone sh bucket create 24477-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:12:19.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:12:19.338" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:12:12.390" endtime="20211002 01:12:19.338"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:12:19.339" level="INFO"/>
<status status="PASS" starttime="20211002 01:12:19.338" endtime="20211002 01:12:19.339"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:12:19.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:12:19.339" endtime="20211002 01:12:19.340"/>
</kw>
<status status="PASS" starttime="20211002 01:12:12.389" endtime="20211002 01:12:19.340"/>
</kw>
<msg timestamp="20211002 01:12:19.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:12:12.389" endtime="20211002 01:12:19.341"/>
</kw>
<status status="PASS" starttime="20211002 01:12:12.388" endtime="20211002 01:12:19.341"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:12:19.347" level="INFO">Running command 'ozone sh bucket link 24477-source/readable-bucket 24477-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:12:26.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:12:26.884" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:12:19.344" endtime="20211002 01:12:26.884"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:12:26.885" level="INFO"/>
<status status="PASS" starttime="20211002 01:12:26.885" endtime="20211002 01:12:26.885"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:12:26.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:12:26.886" endtime="20211002 01:12:26.886"/>
</kw>
<status status="PASS" starttime="20211002 01:12:19.343" endtime="20211002 01:12:26.887"/>
</kw>
<msg timestamp="20211002 01:12:26.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:12:19.343" endtime="20211002 01:12:26.887"/>
</kw>
<status status="PASS" starttime="20211002 01:12:19.342" endtime="20211002 01:12:26.887"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:12:26.891" level="INFO">Running command 'ozone sh bucket link 24477-source/readable-bucket 24477-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:12:33.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:12:33.391" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:12:26.889" endtime="20211002 01:12:33.391"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:12:33.393" level="INFO"/>
<status status="PASS" starttime="20211002 01:12:33.392" endtime="20211002 01:12:33.393"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:12:33.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:12:33.393" endtime="20211002 01:12:33.393"/>
</kw>
<status status="PASS" starttime="20211002 01:12:26.888" endtime="20211002 01:12:33.394"/>
</kw>
<msg timestamp="20211002 01:12:33.394" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:12:26.888" endtime="20211002 01:12:33.394"/>
</kw>
<status status="PASS" starttime="20211002 01:12:26.887" endtime="20211002 01:12:33.394"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:12:33.398" level="INFO">Running command 'ozone sh bucket link 24477-source/unreadable-bucket 24477-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:12:40.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:12:40.389" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:12:33.396" endtime="20211002 01:12:40.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:12:40.392" level="INFO"/>
<status status="PASS" starttime="20211002 01:12:40.390" endtime="20211002 01:12:40.392"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:12:40.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:12:40.392" endtime="20211002 01:12:40.393"/>
</kw>
<status status="PASS" starttime="20211002 01:12:33.395" endtime="20211002 01:12:40.394"/>
</kw>
<msg timestamp="20211002 01:12:40.394" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:12:33.395" endtime="20211002 01:12:40.395"/>
</kw>
<status status="PASS" starttime="20211002 01:12:33.394" endtime="20211002 01:12:40.396"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:12:40.402" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 24477-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:12:47.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:12:47.357" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211002 01:12:40.399" endtime="20211002 01:12:47.357"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:12:47.358" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211002 01:12:47.357" endtime="20211002 01:12:47.358"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:12:47.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:12:47.358" endtime="20211002 01:12:47.359"/>
</kw>
<status status="PASS" starttime="20211002 01:12:40.398" endtime="20211002 01:12:47.360"/>
</kw>
<msg timestamp="20211002 01:12:47.360" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:12:40.397" endtime="20211002 01:12:47.360"/>
</kw>
<status status="PASS" starttime="20211002 01:12:40.396" endtime="20211002 01:12:47.360"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:12:47.364" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 24477-source 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:12:53.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:12:53.572" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211002 01:12:47.362" endtime="20211002 01:12:53.572"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:12:53.573" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211002 01:12:53.573" endtime="20211002 01:12:53.573"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:12:53.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:12:53.574" endtime="20211002 01:12:53.574"/>
</kw>
<status status="PASS" starttime="20211002 01:12:47.361" endtime="20211002 01:12:53.574"/>
</kw>
<msg timestamp="20211002 01:12:53.574" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:12:47.361" endtime="20211002 01:12:53.575"/>
</kw>
<status status="PASS" starttime="20211002 01:12:47.360" endtime="20211002 01:12:53.575"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:12:53.582" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 24477-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:13:00.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:13:00.484" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211002 01:12:53.579" endtime="20211002 01:13:00.484"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:13:00.485" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211002 01:13:00.484" endtime="20211002 01:13:00.485"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:13:00.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:13:00.485" endtime="20211002 01:13:00.485"/>
</kw>
<status status="PASS" starttime="20211002 01:12:53.577" endtime="20211002 01:13:00.486"/>
</kw>
<msg timestamp="20211002 01:13:00.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:12:53.577" endtime="20211002 01:13:00.486"/>
</kw>
<status status="PASS" starttime="20211002 01:12:53.575" endtime="20211002 01:13:00.486"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:13:00.490" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 24477-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:13:06.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:13:06.133" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211002 01:13:00.488" endtime="20211002 01:13:06.134"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:13:06.136" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211002 01:13:06.135" endtime="20211002 01:13:06.136"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:13:06.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:13:06.136" endtime="20211002 01:13:06.137"/>
</kw>
<status status="PASS" starttime="20211002 01:13:00.487" endtime="20211002 01:13:06.137"/>
</kw>
<msg timestamp="20211002 01:13:06.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:13:00.487" endtime="20211002 01:13:06.137"/>
</kw>
<status status="PASS" starttime="20211002 01:13:00.486" endtime="20211002 01:13:06.138"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:13:06.143" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 24477-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:13:12.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:13:12.691" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211002 01:13:06.140" endtime="20211002 01:13:12.691"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:13:12.693" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211002 01:13:12.692" endtime="20211002 01:13:12.693"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:13:12.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:13:12.693" endtime="20211002 01:13:12.694"/>
</kw>
<status status="PASS" starttime="20211002 01:13:06.139" endtime="20211002 01:13:12.694"/>
</kw>
<msg timestamp="20211002 01:13:12.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:13:06.139" endtime="20211002 01:13:12.694"/>
</kw>
<status status="PASS" starttime="20211002 01:13:06.138" endtime="20211002 01:13:12.695"/>
</kw>
<status status="PASS" starttime="20211002 01:08:51.824" endtime="20211002 01:13:12.695"/>
</kw>
<status status="PASS" starttime="20211002 01:08:51.824" endtime="20211002 01:13:12.695"/>
</kw>
<status status="PASS" starttime="20211002 01:08:38.849" endtime="20211002 01:13:12.695"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:13:12.702" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:13:12.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:13:12.706" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211002 01:13:12.700" endtime="20211002 01:13:12.706"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:13:12.707" level="INFO">scm</msg>
<status status="PASS" starttime="20211002 01:13:12.706" endtime="20211002 01:13:12.707"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:13:12.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:13:12.708" endtime="20211002 01:13:12.709"/>
</kw>
<status status="PASS" starttime="20211002 01:13:12.699" endtime="20211002 01:13:12.709"/>
</kw>
<msg timestamp="20211002 01:13:12.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:13:12.699" endtime="20211002 01:13:12.710"/>
</kw>
<msg timestamp="20211002 01:13:12.710" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211002 01:13:12.698" endtime="20211002 01:13:12.710"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211002 01:13:12.713" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211002 01:13:12.710" endtime="20211002 01:13:12.713"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:13:12.718" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:13:12.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:13:12.966" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:13:12.716" endtime="20211002 01:13:12.966"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:13:12.967" level="INFO"/>
<status status="PASS" starttime="20211002 01:13:12.966" endtime="20211002 01:13:12.967"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:13:12.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:13:12.967" endtime="20211002 01:13:12.968"/>
</kw>
<status status="PASS" starttime="20211002 01:13:12.715" endtime="20211002 01:13:12.968"/>
</kw>
<msg timestamp="20211002 01:13:12.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:13:12.714" endtime="20211002 01:13:12.968"/>
</kw>
<status status="PASS" starttime="20211002 01:13:12.714" endtime="20211002 01:13:12.969"/>
</kw>
<status status="PASS" starttime="20211002 01:13:12.713" endtime="20211002 01:13:12.969"/>
</kw>
<status status="PASS" starttime="20211002 01:13:12.698" endtime="20211002 01:13:12.969"/>
</kw>
<status status="PASS" starttime="20211002 01:13:12.697" endtime="20211002 01:13:12.969"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:13:12.973" level="INFO">Running command 'ozone sh bucket link 24477-source/no-such-bucket 24477-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:13:19.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:13:19.418" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:13:12.971" endtime="20211002 01:13:19.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:13:19.420" level="INFO"/>
<status status="PASS" starttime="20211002 01:13:19.419" endtime="20211002 01:13:19.420"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:13:19.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:13:19.420" endtime="20211002 01:13:19.421"/>
</kw>
<status status="PASS" starttime="20211002 01:13:12.971" endtime="20211002 01:13:19.421"/>
</kw>
<msg timestamp="20211002 01:13:19.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:13:12.970" endtime="20211002 01:13:19.421"/>
</kw>
<status status="PASS" starttime="20211002 01:13:12.969" endtime="20211002 01:13:19.421"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:13:19.425" level="INFO">Running command 'ozone sh key list 24477-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:13:26.893" level="INFO">${rc} = 255</msg>
<msg timestamp="20211002 01:13:26.893" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20211002 01:13:19.422" endtime="20211002 01:13:26.894"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:13:26.895" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20211002 01:13:26.894" endtime="20211002 01:13:26.895"/>
</kw>
<msg timestamp="20211002 01:13:26.895" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20211002 01:13:19.422" endtime="20211002 01:13:26.896"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211002 01:13:26.896" endtime="20211002 01:13:26.896"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211002 01:13:12.696" endtime="20211002 01:13:26.896"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:13:26.908" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:13:26.911" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:13:26.911" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211002 01:13:26.903" endtime="20211002 01:13:26.912"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:13:26.913" level="INFO">scm</msg>
<status status="PASS" starttime="20211002 01:13:26.912" endtime="20211002 01:13:26.913"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:13:26.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:13:26.913" endtime="20211002 01:13:26.915"/>
</kw>
<status status="PASS" starttime="20211002 01:13:26.902" endtime="20211002 01:13:26.916"/>
</kw>
<msg timestamp="20211002 01:13:26.916" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:13:26.902" endtime="20211002 01:13:26.916"/>
</kw>
<msg timestamp="20211002 01:13:26.916" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211002 01:13:26.901" endtime="20211002 01:13:26.916"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211002 01:13:26.917" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211002 01:13:26.916" endtime="20211002 01:13:26.917"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:13:26.922" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:13:26.934" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:13:26.934" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:13:26.920" endtime="20211002 01:13:26.934"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:13:26.937" level="INFO"/>
<status status="PASS" starttime="20211002 01:13:26.935" endtime="20211002 01:13:26.937"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:13:26.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:13:26.937" endtime="20211002 01:13:26.938"/>
</kw>
<status status="PASS" starttime="20211002 01:13:26.919" endtime="20211002 01:13:26.939"/>
</kw>
<msg timestamp="20211002 01:13:26.939" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:13:26.919" endtime="20211002 01:13:26.940"/>
</kw>
<status status="PASS" starttime="20211002 01:13:26.918" endtime="20211002 01:13:26.940"/>
</kw>
<status status="PASS" starttime="20211002 01:13:26.917" endtime="20211002 01:13:26.940"/>
</kw>
<status status="PASS" starttime="20211002 01:13:26.900" endtime="20211002 01:13:26.941"/>
</kw>
<status status="PASS" starttime="20211002 01:13:26.900" endtime="20211002 01:13:26.941"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:13:26.947" level="INFO">Running command 'ozone sh bucket link 24477-source/bucket1 24477-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:13:34.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:13:34.253" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:13:26.945" endtime="20211002 01:13:34.253"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:13:34.256" level="INFO"/>
<status status="PASS" starttime="20211002 01:13:34.254" endtime="20211002 01:13:34.256"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:13:34.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:13:34.256" endtime="20211002 01:13:34.258"/>
</kw>
<status status="PASS" starttime="20211002 01:13:26.944" endtime="20211002 01:13:34.259"/>
</kw>
<msg timestamp="20211002 01:13:34.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:13:26.943" endtime="20211002 01:13:34.259"/>
</kw>
<status status="PASS" starttime="20211002 01:13:26.942" endtime="20211002 01:13:34.259"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:13:34.266" level="INFO">Running command 'ozone sh bucket create 24477-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:13:41.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:13:41.746" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:13:34.263" endtime="20211002 01:13:41.746"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:13:41.748" level="INFO"/>
<status status="PASS" starttime="20211002 01:13:41.747" endtime="20211002 01:13:41.748"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:13:41.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:13:41.748" endtime="20211002 01:13:41.749"/>
</kw>
<status status="PASS" starttime="20211002 01:13:34.262" endtime="20211002 01:13:41.750"/>
</kw>
<msg timestamp="20211002 01:13:41.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:13:34.261" endtime="20211002 01:13:41.750"/>
</kw>
<status status="PASS" starttime="20211002 01:13:34.260" endtime="20211002 01:13:41.750"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:13:41.755" level="INFO">Running command 'ozone sh key put 24477-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:15:26.900" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20211002 01:13:41.753" endtime="20211002 01:15:26.900"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211002 01:15:26.901" endtime="20211002 01:15:26.901"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211002 01:15:26.901" endtime="20211002 01:15:26.901"/>
</kw>
<status status="FAIL" starttime="20211002 01:13:41.752" endtime="20211002 01:15:26.902"/>
</kw>
<msg timestamp="20211002 01:15:26.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211002 01:13:41.751" endtime="20211002 01:15:26.902"/>
</kw>
<status status="FAIL" starttime="20211002 01:13:41.751" endtime="20211002 01:15:26.902"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<status status="NOT RUN" starttime="20211002 01:15:26.902" endtime="20211002 01:15:26.902"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211002 01:13:26.898" endtime="20211002 01:15:26.903">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:15:26.910" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:15:26.916" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:15:26.916" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211002 01:15:26.908" endtime="20211002 01:15:26.916"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:15:26.917" level="INFO">scm</msg>
<status status="PASS" starttime="20211002 01:15:26.916" endtime="20211002 01:15:26.918"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:15:26.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:15:26.918" endtime="20211002 01:15:26.919"/>
</kw>
<status status="PASS" starttime="20211002 01:15:26.907" endtime="20211002 01:15:26.919"/>
</kw>
<msg timestamp="20211002 01:15:26.919" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:15:26.907" endtime="20211002 01:15:26.920"/>
</kw>
<msg timestamp="20211002 01:15:26.920" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211002 01:15:26.906" endtime="20211002 01:15:26.920"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211002 01:15:26.921" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211002 01:15:26.920" endtime="20211002 01:15:26.921"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:15:26.926" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:15:26.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:15:26.937" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:15:26.923" endtime="20211002 01:15:26.937"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:15:26.938" level="INFO"/>
<status status="PASS" starttime="20211002 01:15:26.938" endtime="20211002 01:15:26.939"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:15:26.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:15:26.939" endtime="20211002 01:15:26.940"/>
</kw>
<status status="PASS" starttime="20211002 01:15:26.922" endtime="20211002 01:15:26.941"/>
</kw>
<msg timestamp="20211002 01:15:26.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:15:26.922" endtime="20211002 01:15:26.941"/>
</kw>
<status status="PASS" starttime="20211002 01:15:26.921" endtime="20211002 01:15:26.941"/>
</kw>
<status status="PASS" starttime="20211002 01:15:26.921" endtime="20211002 01:15:26.941"/>
</kw>
<status status="PASS" starttime="20211002 01:15:26.906" endtime="20211002 01:15:26.942"/>
</kw>
<status status="PASS" starttime="20211002 01:15:26.905" endtime="20211002 01:15:26.942"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:15:26.949" level="INFO">Running command 'ozone sh key put 24477-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:17:26.905" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20211002 01:15:26.946" endtime="20211002 01:17:26.906"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211002 01:17:26.907" endtime="20211002 01:17:26.907"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211002 01:17:26.907" endtime="20211002 01:17:26.907"/>
</kw>
<status status="FAIL" starttime="20211002 01:15:26.944" endtime="20211002 01:17:26.907"/>
</kw>
<msg timestamp="20211002 01:17:26.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211002 01:15:26.943" endtime="20211002 01:17:26.908"/>
</kw>
<status status="FAIL" starttime="20211002 01:15:26.942" endtime="20211002 01:17:26.908"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211002 01:17:26.908" endtime="20211002 01:17:26.908"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211002 01:15:26.904" endtime="20211002 01:17:26.909">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:17:26.920" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:17:26.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:17:26.929" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211002 01:17:26.915" endtime="20211002 01:17:26.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:17:26.936" level="INFO">scm</msg>
<status status="PASS" starttime="20211002 01:17:26.930" endtime="20211002 01:17:26.936"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:17:26.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:17:26.939" endtime="20211002 01:17:26.940"/>
</kw>
<status status="PASS" starttime="20211002 01:17:26.915" endtime="20211002 01:17:26.940"/>
</kw>
<msg timestamp="20211002 01:17:26.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:17:26.914" endtime="20211002 01:17:26.941"/>
</kw>
<msg timestamp="20211002 01:17:26.941" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211002 01:17:26.914" endtime="20211002 01:17:26.941"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211002 01:17:26.946" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211002 01:17:26.941" endtime="20211002 01:17:26.946"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:17:26.951" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:17:26.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:17:26.961" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:17:26.948" endtime="20211002 01:17:26.961"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:17:26.962" level="INFO"/>
<status status="PASS" starttime="20211002 01:17:26.961" endtime="20211002 01:17:26.962"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:17:26.963" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:17:26.963" endtime="20211002 01:17:26.963"/>
</kw>
<status status="PASS" starttime="20211002 01:17:26.948" endtime="20211002 01:17:26.964"/>
</kw>
<msg timestamp="20211002 01:17:26.964" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:17:26.948" endtime="20211002 01:17:26.964"/>
</kw>
<status status="PASS" starttime="20211002 01:17:26.947" endtime="20211002 01:17:26.965"/>
</kw>
<status status="PASS" starttime="20211002 01:17:26.946" endtime="20211002 01:17:26.965"/>
</kw>
<status status="PASS" starttime="20211002 01:17:26.913" endtime="20211002 01:17:26.965"/>
</kw>
<status status="PASS" starttime="20211002 01:17:26.913" endtime="20211002 01:17:26.965"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:17:26.969" level="INFO">Running command 'ozone sh key list 24477-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:17:33.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:17:33.409" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20211002 01:17:26.967" endtime="20211002 01:17:33.409"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:17:33.410" level="INFO">key1</msg>
<status status="PASS" starttime="20211002 01:17:33.409" endtime="20211002 01:17:33.410"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:17:33.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:17:33.410" endtime="20211002 01:17:33.412"/>
</kw>
<status status="PASS" starttime="20211002 01:17:26.966" endtime="20211002 01:17:33.412"/>
</kw>
<msg timestamp="20211002 01:17:33.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:17:26.966" endtime="20211002 01:17:33.412"/>
</kw>
<msg timestamp="20211002 01:17:33.413" level="INFO">${target_list} = key1</msg>
<status status="PASS" starttime="20211002 01:17:26.965" endtime="20211002 01:17:33.413"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:17:33.417" level="INFO">Running command 'ozone sh key list 24477-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:17:40.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:17:40.977" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20211002 01:17:33.414" endtime="20211002 01:17:40.977"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:17:40.980" level="INFO">key1</msg>
<status status="PASS" starttime="20211002 01:17:40.978" endtime="20211002 01:17:40.981"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:17:40.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:17:40.981" endtime="20211002 01:17:40.983"/>
</kw>
<status status="PASS" starttime="20211002 01:17:33.414" endtime="20211002 01:17:40.984"/>
</kw>
<msg timestamp="20211002 01:17:40.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:17:33.414" endtime="20211002 01:17:40.984"/>
</kw>
<msg timestamp="20211002 01:17:40.985" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20211002 01:17:33.413" endtime="20211002 01:17:40.985"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211002 01:17:40.986" endtime="20211002 01:17:40.988"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211002 01:17:40.988" endtime="20211002 01:17:40.989"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20211002 01:17:40.990" level="FAIL">'key1' does not contain 'key2'</msg>
<status status="FAIL" starttime="20211002 01:17:40.989" endtime="20211002 01:17:40.991"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211002 01:17:26.911" endtime="20211002 01:17:40.991">'key1' does not contain 'key2'</status>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:17:41.004" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:17:41.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:17:41.009" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211002 01:17:41.001" endtime="20211002 01:17:41.009"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:17:41.011" level="INFO">scm</msg>
<status status="PASS" starttime="20211002 01:17:41.010" endtime="20211002 01:17:41.012"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:17:41.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:17:41.012" endtime="20211002 01:17:41.013"/>
</kw>
<status status="PASS" starttime="20211002 01:17:41.000" endtime="20211002 01:17:41.014"/>
</kw>
<msg timestamp="20211002 01:17:41.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:17:40.999" endtime="20211002 01:17:41.014"/>
</kw>
<msg timestamp="20211002 01:17:41.015" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211002 01:17:40.997" endtime="20211002 01:17:41.015"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211002 01:17:41.017" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211002 01:17:41.016" endtime="20211002 01:17:41.017"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:17:41.024" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:17:41.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:17:41.034" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:17:41.022" endtime="20211002 01:17:41.034"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:17:41.035" level="INFO"/>
<status status="PASS" starttime="20211002 01:17:41.034" endtime="20211002 01:17:41.035"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:17:41.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:17:41.036" endtime="20211002 01:17:41.036"/>
</kw>
<status status="PASS" starttime="20211002 01:17:41.021" endtime="20211002 01:17:41.037"/>
</kw>
<msg timestamp="20211002 01:17:41.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:17:41.021" endtime="20211002 01:17:41.037"/>
</kw>
<status status="PASS" starttime="20211002 01:17:41.018" endtime="20211002 01:17:41.037"/>
</kw>
<status status="PASS" starttime="20211002 01:17:41.018" endtime="20211002 01:17:41.038"/>
</kw>
<status status="PASS" starttime="20211002 01:17:40.996" endtime="20211002 01:17:41.038"/>
</kw>
<status status="PASS" starttime="20211002 01:17:40.995" endtime="20211002 01:17:41.038"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:17:41.042" level="INFO">Running command 'ozone sh key delete 24477-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:17:47.146" level="INFO">${rc} = 255</msg>
<msg timestamp="20211002 01:17:47.146" level="INFO">${output} = KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20211002 01:17:41.040" endtime="20211002 01:17:47.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:17:47.147" level="INFO">KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20211002 01:17:47.146" endtime="20211002 01:17:47.147"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:17:47.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20211002 01:17:47.148" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20211002 01:17:47.147" endtime="20211002 01:17:47.148"/>
</kw>
<status status="FAIL" starttime="20211002 01:17:41.040" endtime="20211002 01:17:47.149"/>
</kw>
<msg timestamp="20211002 01:17:47.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211002 01:17:41.039" endtime="20211002 01:17:47.149"/>
</kw>
<status status="FAIL" starttime="20211002 01:17:41.038" endtime="20211002 01:17:47.149"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20211002 01:17:47.150" endtime="20211002 01:17:47.150"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211002 01:17:47.150" endtime="20211002 01:17:47.150"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211002 01:17:40.993" endtime="20211002 01:17:47.151">255 != 0</status>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:17:47.158" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:17:47.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:17:47.163" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211002 01:17:47.156" endtime="20211002 01:17:47.163"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:17:47.164" level="INFO">scm</msg>
<status status="PASS" starttime="20211002 01:17:47.163" endtime="20211002 01:17:47.164"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:17:47.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:17:47.164" endtime="20211002 01:17:47.165"/>
</kw>
<status status="PASS" starttime="20211002 01:17:47.155" endtime="20211002 01:17:47.165"/>
</kw>
<msg timestamp="20211002 01:17:47.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:17:47.155" endtime="20211002 01:17:47.166"/>
</kw>
<msg timestamp="20211002 01:17:47.166" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211002 01:17:47.154" endtime="20211002 01:17:47.166"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211002 01:17:47.167" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211002 01:17:47.166" endtime="20211002 01:17:47.167"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:17:47.171" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:17:47.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:17:47.180" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:17:47.170" endtime="20211002 01:17:47.180"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:17:47.181" level="INFO"/>
<status status="PASS" starttime="20211002 01:17:47.180" endtime="20211002 01:17:47.181"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:17:47.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:17:47.181" endtime="20211002 01:17:47.182"/>
</kw>
<status status="PASS" starttime="20211002 01:17:47.169" endtime="20211002 01:17:47.182"/>
</kw>
<msg timestamp="20211002 01:17:47.182" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:17:47.168" endtime="20211002 01:17:47.183"/>
</kw>
<status status="PASS" starttime="20211002 01:17:47.168" endtime="20211002 01:17:47.185"/>
</kw>
<status status="PASS" starttime="20211002 01:17:47.167" endtime="20211002 01:17:47.185"/>
</kw>
<status status="PASS" starttime="20211002 01:17:47.153" endtime="20211002 01:17:47.185"/>
</kw>
<status status="PASS" starttime="20211002 01:17:47.153" endtime="20211002 01:17:47.185"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:17:47.189" level="INFO">Running command 'ozone sh bucket list 24477-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:17:53.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:17:53.780" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "24477-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" starttime="20211002 01:17:47.187" endtime="20211002 01:17:53.780"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:17:53.781" level="INFO">{
  "metadata" : { },
  "volumeName" : "24477-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-02T01:13:19.343Z",
  "modificationTime" : "2021-10-02T01:13:19.343Z",
  "sourceVolume" : "24477-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "24477-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-02T01:12:40.141Z",
  "modificationTime" : "2021-10-02T01:13:12.608Z",
  "sourceVolume" : "24477-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "24477-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-02T01:13:34.174Z",
  "modificationTime" : "2021-10-02T01:13:34.174Z",
  "sourceVolume" : "24477-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "24477-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-02T01:12:26.527Z",
  "modificationTime" : "2021-10-02T01:13:05.855Z",
  "sourceVolume" : "24477-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "24477-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-02T01:12:33.272Z",
  "modificationTime" : "2021-10-02T01:12:33.272Z",
  "sourceVolume" : "24477-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}</msg>
<status status="PASS" starttime="20211002 01:17:53.780" endtime="20211002 01:17:53.781"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:17:53.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:17:53.781" endtime="20211002 01:17:53.782"/>
</kw>
<status status="PASS" starttime="20211002 01:17:47.187" endtime="20211002 01:17:53.782"/>
</kw>
<msg timestamp="20211002 01:17:53.782" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:17:47.186" endtime="20211002 01:17:53.783"/>
</kw>
<msg timestamp="20211002 01:17:53.783" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "24477-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" starttime="20211002 01:17:47.185" endtime="20211002 01:17:53.783"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211002 01:17:53.783" endtime="20211002 01:17:53.784"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211002 01:17:53.784" endtime="20211002 01:17:53.784"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211002 01:17:47.152" endtime="20211002 01:17:53.785"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:17:53.793" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:17:53.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:17:53.797" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211002 01:17:53.791" endtime="20211002 01:17:53.798"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:17:53.799" level="INFO">scm</msg>
<status status="PASS" starttime="20211002 01:17:53.798" endtime="20211002 01:17:53.799"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:17:53.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:17:53.799" endtime="20211002 01:17:53.800"/>
</kw>
<status status="PASS" starttime="20211002 01:17:53.790" endtime="20211002 01:17:53.801"/>
</kw>
<msg timestamp="20211002 01:17:53.801" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:17:53.790" endtime="20211002 01:17:53.801"/>
</kw>
<msg timestamp="20211002 01:17:53.803" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211002 01:17:53.789" endtime="20211002 01:17:53.803"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211002 01:17:53.804" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211002 01:17:53.804" endtime="20211002 01:17:53.805"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:17:53.810" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:17:53.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:17:53.818" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:17:53.807" endtime="20211002 01:17:53.818"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:17:53.820" level="INFO"/>
<status status="PASS" starttime="20211002 01:17:53.819" endtime="20211002 01:17:53.820"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:17:53.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:17:53.820" endtime="20211002 01:17:53.821"/>
</kw>
<status status="PASS" starttime="20211002 01:17:53.807" endtime="20211002 01:17:53.822"/>
</kw>
<msg timestamp="20211002 01:17:53.822" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:17:53.806" endtime="20211002 01:17:53.822"/>
</kw>
<status status="PASS" starttime="20211002 01:17:53.805" endtime="20211002 01:17:53.823"/>
</kw>
<status status="PASS" starttime="20211002 01:17:53.805" endtime="20211002 01:17:53.823"/>
</kw>
<status status="PASS" starttime="20211002 01:17:53.788" endtime="20211002 01:17:53.823"/>
</kw>
<status status="PASS" starttime="20211002 01:17:53.787" endtime="20211002 01:17:53.823"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:17:53.827" level="INFO">Running command 'ozone sh bucket info 24477-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:18:00.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:18:00.906" level="INFO">${output} = {
  "volumeName" : "24477-target",
  "bucketName" : "link1",
  "sourceVolume" : "24477-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-10-02T01:13:34.174Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20211002 01:17:53.825" endtime="20211002 01:18:00.906"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:18:00.908" level="INFO">{
  "volumeName" : "24477-target",
  "bucketName" : "link1",
  "sourceVolume" : "24477-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-10-02T01:13:34.174Z",
  "modificationTime" : "2021-10-02T01:13:34.174Z"
}</msg>
<status status="PASS" starttime="20211002 01:18:00.907" endtime="20211002 01:18:00.908"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:18:00.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:18:00.908" endtime="20211002 01:18:00.909"/>
</kw>
<status status="PASS" starttime="20211002 01:17:53.824" endtime="20211002 01:18:00.910"/>
</kw>
<msg timestamp="20211002 01:18:00.910" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:17:53.824" endtime="20211002 01:18:00.910"/>
</kw>
<msg timestamp="20211002 01:18:00.910" level="INFO">${result} = {
  "volumeName" : "24477-target",
  "bucketName" : "link1",
  "sourceVolume" : "24477-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-10-02T01:13:34.174Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20211002 01:17:53.823" endtime="20211002 01:18:00.910"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${source}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211002 01:18:00.911" endtime="20211002 01:18:00.911"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bucket1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211002 01:18:00.911" endtime="20211002 01:18:00.912"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${target}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211002 01:18:00.912" endtime="20211002 01:18:00.913"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211002 01:18:00.913" endtime="20211002 01:18:00.913"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>modificationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211002 01:18:00.914" endtime="20211002 01:18:00.914"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211002 01:18:00.914" endtime="20211002 01:18:00.915"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>metadata</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211002 01:18:00.916" endtime="20211002 01:18:00.916"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211002 01:17:53.786" endtime="20211002 01:18:00.917"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:18:00.926" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:18:00.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:18:00.930" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211002 01:18:00.924" endtime="20211002 01:18:00.930"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:18:00.931" level="INFO">scm</msg>
<status status="PASS" starttime="20211002 01:18:00.931" endtime="20211002 01:18:00.932"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:18:00.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:18:00.932" endtime="20211002 01:18:00.932"/>
</kw>
<status status="PASS" starttime="20211002 01:18:00.923" endtime="20211002 01:18:00.933"/>
</kw>
<msg timestamp="20211002 01:18:00.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:18:00.922" endtime="20211002 01:18:00.933"/>
</kw>
<msg timestamp="20211002 01:18:00.934" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211002 01:18:00.922" endtime="20211002 01:18:00.934"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211002 01:18:00.935" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211002 01:18:00.934" endtime="20211002 01:18:00.935"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:18:00.940" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:18:00.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:18:00.946" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:18:00.937" endtime="20211002 01:18:00.946"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:18:00.947" level="INFO"/>
<status status="PASS" starttime="20211002 01:18:00.947" endtime="20211002 01:18:00.948"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:18:00.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:18:00.948" endtime="20211002 01:18:00.949"/>
</kw>
<status status="PASS" starttime="20211002 01:18:00.937" endtime="20211002 01:18:00.949"/>
</kw>
<msg timestamp="20211002 01:18:00.949" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:18:00.936" endtime="20211002 01:18:00.949"/>
</kw>
<status status="PASS" starttime="20211002 01:18:00.935" endtime="20211002 01:18:00.950"/>
</kw>
<status status="PASS" starttime="20211002 01:18:00.935" endtime="20211002 01:18:00.950"/>
</kw>
<status status="PASS" starttime="20211002 01:18:00.921" endtime="20211002 01:18:00.950"/>
</kw>
<status status="PASS" starttime="20211002 01:18:00.920" endtime="20211002 01:18:00.950"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:18:00.954" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 24477-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:18:09.617" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:18:09.617" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211002 01:18:00.952" endtime="20211002 01:18:09.617"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:18:09.618" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211002 01:18:09.618" endtime="20211002 01:18:09.618"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:18:09.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:18:09.619" endtime="20211002 01:18:09.619"/>
</kw>
<status status="PASS" starttime="20211002 01:18:00.952" endtime="20211002 01:18:09.620"/>
</kw>
<msg timestamp="20211002 01:18:09.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:18:00.951" endtime="20211002 01:18:09.620"/>
</kw>
<status status="PASS" starttime="20211002 01:18:00.951" endtime="20211002 01:18:09.620"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:18:09.626" level="INFO">Running command 'ozone sh bucket getacl 24477-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:18:16.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:18:16.873" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20211002 01:18:09.623" endtime="20211002 01:18:16.873"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:18:16.876" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20211002 01:18:16.874" endtime="20211002 01:18:16.876"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:18:16.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:18:16.876" endtime="20211002 01:18:16.878"/>
</kw>
<status status="PASS" starttime="20211002 01:18:09.622" endtime="20211002 01:18:16.878"/>
</kw>
<msg timestamp="20211002 01:18:16.879" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:18:09.622" endtime="20211002 01:18:16.879"/>
</kw>
<msg timestamp="20211002 01:18:16.879" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20211002 01:18:09.621" endtime="20211002 01:18:16.879"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211002 01:18:16.880" endtime="20211002 01:18:16.881"/>
</kw>
<status status="PASS" starttime="20211002 01:18:09.620" endtime="20211002 01:18:16.881"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:18:16.890" level="INFO">Running command 'ozone sh bucket getacl 24477-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:18:22.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:18:22.649" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:18:16.888" endtime="20211002 01:18:22.649"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:18:22.656" level="INFO"/>
<status status="PASS" starttime="20211002 01:18:22.651" endtime="20211002 01:18:22.656"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:18:22.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:18:22.656" endtime="20211002 01:18:22.657"/>
</kw>
<status status="PASS" starttime="20211002 01:18:16.887" endtime="20211002 01:18:22.658"/>
</kw>
<msg timestamp="20211002 01:18:22.658" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:18:16.886" endtime="20211002 01:18:22.659"/>
</kw>
<msg timestamp="20211002 01:18:22.660" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20211002 01:18:16.884" endtime="20211002 01:18:22.660"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211002 01:18:22.660" endtime="20211002 01:18:22.661"/>
</kw>
<status status="PASS" starttime="20211002 01:18:16.882" endtime="20211002 01:18:22.662"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:18:22.669" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 24477-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:18:29.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:18:29.754" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211002 01:18:22.666" endtime="20211002 01:18:29.755"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:18:29.759" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211002 01:18:29.757" endtime="20211002 01:18:29.759"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:18:29.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:18:29.759" endtime="20211002 01:18:29.760"/>
</kw>
<status status="PASS" starttime="20211002 01:18:22.665" endtime="20211002 01:18:29.760"/>
</kw>
<msg timestamp="20211002 01:18:29.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:18:22.664" endtime="20211002 01:18:29.760"/>
</kw>
<status status="PASS" starttime="20211002 01:18:22.662" endtime="20211002 01:18:29.761"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:18:29.769" level="INFO">Running command 'ozone sh bucket getacl 24477-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:18:34.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:18:34.469" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:18:29.766" endtime="20211002 01:18:34.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:18:34.471" level="INFO"/>
<status status="PASS" starttime="20211002 01:18:34.470" endtime="20211002 01:18:34.471"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:18:34.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:18:34.471" endtime="20211002 01:18:34.472"/>
</kw>
<status status="PASS" starttime="20211002 01:18:29.765" endtime="20211002 01:18:34.473"/>
</kw>
<msg timestamp="20211002 01:18:34.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:18:29.765" endtime="20211002 01:18:34.474"/>
</kw>
<msg timestamp="20211002 01:18:34.474" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20211002 01:18:29.763" endtime="20211002 01:18:34.474"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211002 01:18:34.475" endtime="20211002 01:18:34.475"/>
</kw>
<status status="PASS" starttime="20211002 01:18:29.761" endtime="20211002 01:18:34.476"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:18:34.483" level="INFO">Running command 'ozone sh bucket getacl 24477-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:18:42.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:18:42.441" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20211002 01:18:34.480" endtime="20211002 01:18:42.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:18:42.443" level="INFO">READ</msg>
<status status="PASS" starttime="20211002 01:18:42.442" endtime="20211002 01:18:42.443"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:18:42.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:18:42.444" endtime="20211002 01:18:42.445"/>
</kw>
<status status="PASS" starttime="20211002 01:18:34.479" endtime="20211002 01:18:42.446"/>
</kw>
<msg timestamp="20211002 01:18:42.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:18:34.478" endtime="20211002 01:18:42.446"/>
</kw>
<msg timestamp="20211002 01:18:42.446" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20211002 01:18:34.477" endtime="20211002 01:18:42.446"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211002 01:18:42.447" endtime="20211002 01:18:42.448"/>
</kw>
<status status="PASS" starttime="20211002 01:18:34.476" endtime="20211002 01:18:42.448"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211002 01:18:00.918" endtime="20211002 01:18:42.448"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:18:42.459" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:18:42.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:18:42.463" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211002 01:18:42.456" endtime="20211002 01:18:42.464"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:18:42.466" level="INFO">scm</msg>
<status status="PASS" starttime="20211002 01:18:42.464" endtime="20211002 01:18:42.466"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:18:42.467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:18:42.466" endtime="20211002 01:18:42.467"/>
</kw>
<status status="PASS" starttime="20211002 01:18:42.455" endtime="20211002 01:18:42.468"/>
</kw>
<msg timestamp="20211002 01:18:42.468" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:18:42.454" endtime="20211002 01:18:42.468"/>
</kw>
<msg timestamp="20211002 01:18:42.469" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211002 01:18:42.453" endtime="20211002 01:18:42.469"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211002 01:18:42.470" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211002 01:18:42.469" endtime="20211002 01:18:42.470"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:18:42.475" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:18:42.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:18:42.654" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:18:42.473" endtime="20211002 01:18:42.654"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:18:42.655" level="INFO"/>
<status status="PASS" starttime="20211002 01:18:42.654" endtime="20211002 01:18:42.655"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:18:42.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:18:42.656" endtime="20211002 01:18:42.657"/>
</kw>
<status status="PASS" starttime="20211002 01:18:42.472" endtime="20211002 01:18:42.657"/>
</kw>
<msg timestamp="20211002 01:18:42.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:18:42.472" endtime="20211002 01:18:42.657"/>
</kw>
<status status="PASS" starttime="20211002 01:18:42.471" endtime="20211002 01:18:42.658"/>
</kw>
<status status="PASS" starttime="20211002 01:18:42.470" endtime="20211002 01:18:42.658"/>
</kw>
<status status="PASS" starttime="20211002 01:18:42.452" endtime="20211002 01:18:42.658"/>
</kw>
<status status="PASS" starttime="20211002 01:18:42.451" endtime="20211002 01:18:42.658"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:18:42.663" level="INFO">Running command 'ozone sh bucket link 24477-source/bucket2 24477-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:18:49.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:18:49.634" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:18:42.660" endtime="20211002 01:18:49.634"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:18:49.636" level="INFO"/>
<status status="PASS" starttime="20211002 01:18:49.635" endtime="20211002 01:18:49.637"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:18:49.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:18:49.637" endtime="20211002 01:18:49.639"/>
</kw>
<status status="PASS" starttime="20211002 01:18:42.660" endtime="20211002 01:18:49.640"/>
</kw>
<msg timestamp="20211002 01:18:49.640" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:18:42.659" endtime="20211002 01:18:49.640"/>
</kw>
<status status="PASS" starttime="20211002 01:18:42.658" endtime="20211002 01:18:49.641"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:18:49.646" level="INFO">Running command 'ozone sh bucket create 24477-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:18:54.773" level="INFO">${rc} = 255</msg>
<msg timestamp="20211002 01:18:54.773" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211002 01:18:49.643" endtime="20211002 01:18:54.773"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:18:54.774" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211002 01:18:54.774" endtime="20211002 01:18:54.774"/>
</kw>
<msg timestamp="20211002 01:18:54.775" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211002 01:18:49.641" endtime="20211002 01:18:54.775"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211002 01:18:54.775" endtime="20211002 01:18:54.776"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:18:54.780" level="INFO">Running command 'ozone sh bucket create 24477-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:19:02.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:19:02.219" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:18:54.778" endtime="20211002 01:19:02.219"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:19:02.220" level="INFO"/>
<status status="PASS" starttime="20211002 01:19:02.219" endtime="20211002 01:19:02.220"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:19:02.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:19:02.221" endtime="20211002 01:19:02.221"/>
</kw>
<status status="PASS" starttime="20211002 01:18:54.777" endtime="20211002 01:19:02.222"/>
</kw>
<msg timestamp="20211002 01:19:02.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:18:54.777" endtime="20211002 01:19:02.222"/>
</kw>
<status status="PASS" starttime="20211002 01:18:54.776" endtime="20211002 01:19:02.222"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:19:02.225" level="INFO">Running command 'ozone sh bucket link 24477-source/bucket1 24477-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:19:08.923" level="INFO">${rc} = 255</msg>
<msg timestamp="20211002 01:19:08.923" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211002 01:19:02.223" endtime="20211002 01:19:08.923"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:19:08.925" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211002 01:19:08.924" endtime="20211002 01:19:08.925"/>
</kw>
<msg timestamp="20211002 01:19:08.925" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211002 01:19:02.223" endtime="20211002 01:19:08.925"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211002 01:19:08.925" endtime="20211002 01:19:08.926"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211002 01:18:42.449" endtime="20211002 01:19:08.926"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:19:08.934" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:19:08.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:19:08.939" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211002 01:19:08.932" endtime="20211002 01:19:08.939"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:19:08.941" level="INFO">scm</msg>
<status status="PASS" starttime="20211002 01:19:08.940" endtime="20211002 01:19:08.941"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:19:08.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:19:08.941" endtime="20211002 01:19:08.942"/>
</kw>
<status status="PASS" starttime="20211002 01:19:08.931" endtime="20211002 01:19:08.943"/>
</kw>
<msg timestamp="20211002 01:19:08.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:19:08.931" endtime="20211002 01:19:08.943"/>
</kw>
<msg timestamp="20211002 01:19:08.943" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211002 01:19:08.930" endtime="20211002 01:19:08.944"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211002 01:19:08.945" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211002 01:19:08.944" endtime="20211002 01:19:08.945"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:19:08.950" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:19:08.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:19:08.958" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:19:08.948" endtime="20211002 01:19:08.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:19:08.960" level="INFO"/>
<status status="PASS" starttime="20211002 01:19:08.959" endtime="20211002 01:19:08.960"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:19:08.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:19:08.960" endtime="20211002 01:19:08.961"/>
</kw>
<status status="PASS" starttime="20211002 01:19:08.947" endtime="20211002 01:19:08.961"/>
</kw>
<msg timestamp="20211002 01:19:08.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:19:08.947" endtime="20211002 01:19:08.961"/>
</kw>
<status status="PASS" starttime="20211002 01:19:08.946" endtime="20211002 01:19:08.962"/>
</kw>
<status status="PASS" starttime="20211002 01:19:08.945" endtime="20211002 01:19:08.962"/>
</kw>
<status status="PASS" starttime="20211002 01:19:08.929" endtime="20211002 01:19:08.962"/>
</kw>
<status status="PASS" starttime="20211002 01:19:08.928" endtime="20211002 01:19:08.962"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:19:08.967" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:19:08.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:19:08.971" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:19:08.965" endtime="20211002 01:19:08.971"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:19:08.972" level="INFO"/>
<status status="PASS" starttime="20211002 01:19:08.972" endtime="20211002 01:19:08.972"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:19:08.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:19:08.972" endtime="20211002 01:19:08.973"/>
</kw>
<status status="PASS" starttime="20211002 01:19:08.964" endtime="20211002 01:19:08.973"/>
</kw>
<msg timestamp="20211002 01:19:08.974" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:19:08.964" endtime="20211002 01:19:08.974"/>
</kw>
<status status="PASS" starttime="20211002 01:19:08.964" endtime="20211002 01:19:08.974"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:19:08.980" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:19:08.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:19:08.984" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211002 01:19:08.977" endtime="20211002 01:19:08.984"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:19:08.985" level="INFO">scm</msg>
<status status="PASS" starttime="20211002 01:19:08.984" endtime="20211002 01:19:08.985"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:19:08.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:19:08.985" endtime="20211002 01:19:08.986"/>
</kw>
<status status="PASS" starttime="20211002 01:19:08.977" endtime="20211002 01:19:08.986"/>
</kw>
<msg timestamp="20211002 01:19:08.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:19:08.976" endtime="20211002 01:19:08.986"/>
</kw>
<msg timestamp="20211002 01:19:08.987" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211002 01:19:08.976" endtime="20211002 01:19:08.987"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211002 01:19:08.988" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211002 01:19:08.987" endtime="20211002 01:19:08.988"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:19:08.992" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:19:09.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:19:09.001" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:19:08.990" endtime="20211002 01:19:09.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:19:09.003" level="INFO"/>
<status status="PASS" starttime="20211002 01:19:09.002" endtime="20211002 01:19:09.003"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:19:09.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:19:09.003" endtime="20211002 01:19:09.004"/>
</kw>
<status status="PASS" starttime="20211002 01:19:08.989" endtime="20211002 01:19:09.005"/>
</kw>
<msg timestamp="20211002 01:19:09.005" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:19:08.989" endtime="20211002 01:19:09.005"/>
</kw>
<status status="PASS" starttime="20211002 01:19:08.988" endtime="20211002 01:19:09.006"/>
</kw>
<status status="PASS" starttime="20211002 01:19:08.988" endtime="20211002 01:19:09.006"/>
</kw>
<status status="PASS" starttime="20211002 01:19:08.974" endtime="20211002 01:19:09.006"/>
</kw>
<status status="PASS" starttime="20211002 01:19:08.974" endtime="20211002 01:19:09.006"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:19:09.009" level="INFO">Running command 'ozone sh key list 24477-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:19:16.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:19:16.274" level="INFO">${output} = {
  "volumeName" : "24477-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-10-02T01:09:06.684Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20211002 01:19:09.007" endtime="20211002 01:19:16.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:19:16.276" level="INFO">{
  "volumeName" : "24477-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-10-02T01:09:06.684Z",
  "modificationTime" : "2021-10-02T01:12:10.824Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "replicationFactor" : 3,
  "replicationType" : "RATIS"
}</msg>
<status status="PASS" starttime="20211002 01:19:16.275" endtime="20211002 01:19:16.276"/>
</kw>
<msg timestamp="20211002 01:19:16.276" level="INFO">${result} = {
  "volumeName" : "24477-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-10-02T01:09:06.684Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20211002 01:19:09.006" endtime="20211002 01:19:16.276"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211002 01:19:16.276" endtime="20211002 01:19:16.277"/>
</kw>
<status status="PASS" starttime="20211002 01:19:08.963" endtime="20211002 01:19:16.277"/>
</kw>
<status status="PASS" starttime="20211002 01:19:08.962" endtime="20211002 01:19:16.277"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211002 01:19:08.927" endtime="20211002 01:19:16.277"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:19:16.285" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:19:16.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:19:16.289" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211002 01:19:16.283" endtime="20211002 01:19:16.289"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:19:16.290" level="INFO">scm</msg>
<status status="PASS" starttime="20211002 01:19:16.290" endtime="20211002 01:19:16.290"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:19:16.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:19:16.290" endtime="20211002 01:19:16.291"/>
</kw>
<status status="PASS" starttime="20211002 01:19:16.282" endtime="20211002 01:19:16.291"/>
</kw>
<msg timestamp="20211002 01:19:16.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:19:16.282" endtime="20211002 01:19:16.292"/>
</kw>
<msg timestamp="20211002 01:19:16.292" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211002 01:19:16.281" endtime="20211002 01:19:16.292"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211002 01:19:16.293" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211002 01:19:16.292" endtime="20211002 01:19:16.293"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:19:16.300" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:19:16.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:19:16.317" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:19:16.296" endtime="20211002 01:19:16.317"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:19:16.318" level="INFO"/>
<status status="PASS" starttime="20211002 01:19:16.318" endtime="20211002 01:19:16.318"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:19:16.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:19:16.319" endtime="20211002 01:19:16.319"/>
</kw>
<status status="PASS" starttime="20211002 01:19:16.295" endtime="20211002 01:19:16.320"/>
</kw>
<msg timestamp="20211002 01:19:16.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:19:16.294" endtime="20211002 01:19:16.320"/>
</kw>
<status status="PASS" starttime="20211002 01:19:16.293" endtime="20211002 01:19:16.320"/>
</kw>
<status status="PASS" starttime="20211002 01:19:16.293" endtime="20211002 01:19:16.321"/>
</kw>
<status status="PASS" starttime="20211002 01:19:16.281" endtime="20211002 01:19:16.321"/>
</kw>
<status status="PASS" starttime="20211002 01:19:16.280" endtime="20211002 01:19:16.321"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:19:16.328" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:19:16.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:19:16.335" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:19:16.326" endtime="20211002 01:19:16.335"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:19:16.337" level="INFO"/>
<status status="PASS" starttime="20211002 01:19:16.336" endtime="20211002 01:19:16.338"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:19:16.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:19:16.338" endtime="20211002 01:19:16.340"/>
</kw>
<status status="PASS" starttime="20211002 01:19:16.325" endtime="20211002 01:19:16.341"/>
</kw>
<msg timestamp="20211002 01:19:16.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:19:16.324" endtime="20211002 01:19:16.341"/>
</kw>
<status status="PASS" starttime="20211002 01:19:16.323" endtime="20211002 01:19:16.342"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:19:16.351" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:19:16.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:19:16.357" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211002 01:19:16.348" endtime="20211002 01:19:16.357"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:19:16.359" level="INFO">scm</msg>
<status status="PASS" starttime="20211002 01:19:16.358" endtime="20211002 01:19:16.359"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:19:16.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:19:16.359" endtime="20211002 01:19:16.360"/>
</kw>
<status status="PASS" starttime="20211002 01:19:16.347" endtime="20211002 01:19:16.361"/>
</kw>
<msg timestamp="20211002 01:19:16.361" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:19:16.346" endtime="20211002 01:19:16.361"/>
</kw>
<msg timestamp="20211002 01:19:16.361" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211002 01:19:16.345" endtime="20211002 01:19:16.361"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211002 01:19:16.363" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211002 01:19:16.362" endtime="20211002 01:19:16.363"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:19:16.370" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:19:16.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:19:16.382" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:19:16.367" endtime="20211002 01:19:16.383"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:19:16.385" level="INFO"/>
<status status="PASS" starttime="20211002 01:19:16.384" endtime="20211002 01:19:16.385"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:19:16.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:19:16.386" endtime="20211002 01:19:16.387"/>
</kw>
<status status="PASS" starttime="20211002 01:19:16.365" endtime="20211002 01:19:16.388"/>
</kw>
<msg timestamp="20211002 01:19:16.388" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:19:16.365" endtime="20211002 01:19:16.388"/>
</kw>
<status status="PASS" starttime="20211002 01:19:16.364" endtime="20211002 01:19:16.389"/>
</kw>
<status status="PASS" starttime="20211002 01:19:16.363" endtime="20211002 01:19:16.389"/>
</kw>
<status status="PASS" starttime="20211002 01:19:16.343" endtime="20211002 01:19:16.389"/>
</kw>
<status status="PASS" starttime="20211002 01:19:16.342" endtime="20211002 01:19:16.389"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:19:16.394" level="INFO">Running command 'ozone sh key list 24477-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:19:21.148" level="INFO">${rc} = 255</msg>
<msg timestamp="20211002 01:19:21.148" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 24477-target unreadable-link null</msg>
<status status="PASS" starttime="20211002 01:19:16.391" endtime="20211002 01:19:21.149"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:19:21.150" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 24477-target unreadable-link null</msg>
<status status="PASS" starttime="20211002 01:19:21.149" endtime="20211002 01:19:21.150"/>
</kw>
<msg timestamp="20211002 01:19:21.150" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 24477-target unreadable-link null</msg>
<status status="PASS" starttime="20211002 01:19:16.390" endtime="20211002 01:19:21.150"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211002 01:19:21.150" endtime="20211002 01:19:21.151"/>
</kw>
<status status="PASS" starttime="20211002 01:19:16.322" endtime="20211002 01:19:21.151"/>
</kw>
<status status="PASS" starttime="20211002 01:19:16.321" endtime="20211002 01:19:21.151"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211002 01:19:16.279" endtime="20211002 01:19:21.152"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:19:21.161" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:19:21.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:19:21.167" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211002 01:19:21.158" endtime="20211002 01:19:21.167"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:19:21.169" level="INFO">scm</msg>
<status status="PASS" starttime="20211002 01:19:21.168" endtime="20211002 01:19:21.169"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:19:21.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:19:21.170" endtime="20211002 01:19:21.171"/>
</kw>
<status status="PASS" starttime="20211002 01:19:21.157" endtime="20211002 01:19:21.172"/>
</kw>
<msg timestamp="20211002 01:19:21.172" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:19:21.157" endtime="20211002 01:19:21.172"/>
</kw>
<msg timestamp="20211002 01:19:21.173" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211002 01:19:21.155" endtime="20211002 01:19:21.173"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211002 01:19:21.174" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211002 01:19:21.173" endtime="20211002 01:19:21.174"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:19:21.180" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:19:21.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:19:21.190" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:19:21.177" endtime="20211002 01:19:21.190"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:19:21.192" level="INFO"/>
<status status="PASS" starttime="20211002 01:19:21.191" endtime="20211002 01:19:21.192"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:19:21.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:19:21.192" endtime="20211002 01:19:21.196"/>
</kw>
<status status="PASS" starttime="20211002 01:19:21.176" endtime="20211002 01:19:21.196"/>
</kw>
<msg timestamp="20211002 01:19:21.196" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:19:21.176" endtime="20211002 01:19:21.196"/>
</kw>
<status status="PASS" starttime="20211002 01:19:21.175" endtime="20211002 01:19:21.197"/>
</kw>
<status status="PASS" starttime="20211002 01:19:21.174" endtime="20211002 01:19:21.197"/>
</kw>
<status status="PASS" starttime="20211002 01:19:21.154" endtime="20211002 01:19:21.197"/>
</kw>
<status status="PASS" starttime="20211002 01:19:21.153" endtime="20211002 01:19:21.197"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:19:21.203" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:19:21.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:19:21.208" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:19:21.201" endtime="20211002 01:19:21.208"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:19:21.209" level="INFO"/>
<status status="PASS" starttime="20211002 01:19:21.209" endtime="20211002 01:19:21.210"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:19:21.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:19:21.210" endtime="20211002 01:19:21.211"/>
</kw>
<status status="PASS" starttime="20211002 01:19:21.200" endtime="20211002 01:19:21.211"/>
</kw>
<msg timestamp="20211002 01:19:21.211" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:19:21.200" endtime="20211002 01:19:21.211"/>
</kw>
<status status="PASS" starttime="20211002 01:19:21.199" endtime="20211002 01:19:21.212"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:19:21.217" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:19:21.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:19:21.222" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211002 01:19:21.215" endtime="20211002 01:19:21.222"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:19:21.224" level="INFO">scm</msg>
<status status="PASS" starttime="20211002 01:19:21.223" endtime="20211002 01:19:21.224"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:19:21.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:19:21.224" endtime="20211002 01:19:21.226"/>
</kw>
<status status="PASS" starttime="20211002 01:19:21.214" endtime="20211002 01:19:21.226"/>
</kw>
<msg timestamp="20211002 01:19:21.226" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:19:21.214" endtime="20211002 01:19:21.226"/>
</kw>
<msg timestamp="20211002 01:19:21.227" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211002 01:19:21.213" endtime="20211002 01:19:21.227"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211002 01:19:21.228" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211002 01:19:21.227" endtime="20211002 01:19:21.228"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:19:21.233" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:19:21.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:19:21.243" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:19:21.231" endtime="20211002 01:19:21.243"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:19:21.245" level="INFO"/>
<status status="PASS" starttime="20211002 01:19:21.244" endtime="20211002 01:19:21.245"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:19:21.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:19:21.245" endtime="20211002 01:19:21.246"/>
</kw>
<status status="PASS" starttime="20211002 01:19:21.230" endtime="20211002 01:19:21.246"/>
</kw>
<msg timestamp="20211002 01:19:21.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:19:21.230" endtime="20211002 01:19:21.247"/>
</kw>
<status status="PASS" starttime="20211002 01:19:21.229" endtime="20211002 01:19:21.247"/>
</kw>
<status status="PASS" starttime="20211002 01:19:21.228" endtime="20211002 01:19:21.247"/>
</kw>
<status status="PASS" starttime="20211002 01:19:21.212" endtime="20211002 01:19:21.247"/>
</kw>
<status status="PASS" starttime="20211002 01:19:21.212" endtime="20211002 01:19:21.248"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:19:21.252" level="INFO">Running command 'ozone sh bucket info 24477-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:19:29.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:19:29.226" level="INFO">${output} = {
  "volumeName" : "24477-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "24477-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-10-02T01:12:40.141Z...</msg>
<status status="PASS" starttime="20211002 01:19:21.250" endtime="20211002 01:19:29.226"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:19:29.229" level="INFO">{
  "volumeName" : "24477-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "24477-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-10-02T01:12:40.141Z",
  "modificationTime" : "2021-10-02T01:13:12.608Z"
}</msg>
<status status="PASS" starttime="20211002 01:19:29.227" endtime="20211002 01:19:29.229"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:19:29.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:19:29.230" endtime="20211002 01:19:29.231"/>
</kw>
<status status="PASS" starttime="20211002 01:19:21.249" endtime="20211002 01:19:29.232"/>
</kw>
<msg timestamp="20211002 01:19:29.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:19:21.249" endtime="20211002 01:19:29.238"/>
</kw>
<msg timestamp="20211002 01:19:29.238" level="INFO">${result} = {
  "volumeName" : "24477-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "24477-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-10-02T01:12:40.141Z...</msg>
<status status="PASS" starttime="20211002 01:19:21.248" endtime="20211002 01:19:29.238"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211002 01:19:29.238" endtime="20211002 01:19:29.239"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211002 01:19:29.239" endtime="20211002 01:19:29.239"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:19:29.243" level="INFO">Running command 'ozone sh key list 24477-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:19:36.010" level="INFO">${rc} = 255</msg>
<msg timestamp="20211002 01:19:36.011" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 24477-source unreadable-bucket </msg>
<status status="PASS" starttime="20211002 01:19:29.240" endtime="20211002 01:19:36.011"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:19:36.013" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 24477-source unreadable-bucket </msg>
<status status="PASS" starttime="20211002 01:19:36.012" endtime="20211002 01:19:36.013"/>
</kw>
<msg timestamp="20211002 01:19:36.014" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 24477-source unreadable-bucket </msg>
<status status="PASS" starttime="20211002 01:19:29.240" endtime="20211002 01:19:36.014"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211002 01:19:36.015" endtime="20211002 01:19:36.016"/>
</kw>
<status status="PASS" starttime="20211002 01:19:21.199" endtime="20211002 01:19:36.016"/>
</kw>
<status status="PASS" starttime="20211002 01:19:21.198" endtime="20211002 01:19:36.017"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211002 01:19:21.152" endtime="20211002 01:19:36.017"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:19:36.031" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:19:36.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:19:36.036" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211002 01:19:36.027" endtime="20211002 01:19:36.036"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:19:36.038" level="INFO">scm</msg>
<status status="PASS" starttime="20211002 01:19:36.037" endtime="20211002 01:19:36.038"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:19:36.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:19:36.038" endtime="20211002 01:19:36.040"/>
</kw>
<status status="PASS" starttime="20211002 01:19:36.026" endtime="20211002 01:19:36.041"/>
</kw>
<msg timestamp="20211002 01:19:36.041" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:19:36.024" endtime="20211002 01:19:36.041"/>
</kw>
<msg timestamp="20211002 01:19:36.042" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211002 01:19:36.023" endtime="20211002 01:19:36.042"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211002 01:19:36.043" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211002 01:19:36.042" endtime="20211002 01:19:36.043"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:19:36.052" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:19:36.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:19:36.066" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:19:36.050" endtime="20211002 01:19:36.066"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:19:36.070" level="INFO"/>
<status status="PASS" starttime="20211002 01:19:36.067" endtime="20211002 01:19:36.070"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:19:36.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:19:36.071" endtime="20211002 01:19:36.073"/>
</kw>
<status status="PASS" starttime="20211002 01:19:36.048" endtime="20211002 01:19:36.074"/>
</kw>
<msg timestamp="20211002 01:19:36.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:19:36.046" endtime="20211002 01:19:36.074"/>
</kw>
<status status="PASS" starttime="20211002 01:19:36.045" endtime="20211002 01:19:36.075"/>
</kw>
<status status="PASS" starttime="20211002 01:19:36.044" endtime="20211002 01:19:36.075"/>
</kw>
<status status="PASS" starttime="20211002 01:19:36.021" endtime="20211002 01:19:36.075"/>
</kw>
<status status="PASS" starttime="20211002 01:19:36.020" endtime="20211002 01:19:36.076"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:19:36.082" level="INFO">Running command 'ozone sh bucket link 24477-target/loop1 24477-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:19:44.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:19:44.254" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:19:36.080" endtime="20211002 01:19:44.254"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:19:44.257" level="INFO"/>
<status status="PASS" starttime="20211002 01:19:44.255" endtime="20211002 01:19:44.258"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:19:44.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:19:44.259" endtime="20211002 01:19:44.260"/>
</kw>
<status status="PASS" starttime="20211002 01:19:36.079" endtime="20211002 01:19:44.261"/>
</kw>
<msg timestamp="20211002 01:19:44.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:19:36.078" endtime="20211002 01:19:44.262"/>
</kw>
<status status="PASS" starttime="20211002 01:19:36.076" endtime="20211002 01:19:44.262"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:19:44.268" level="INFO">Running command 'ozone sh bucket link 24477-target/loop2 24477-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:19:51.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:19:51.275" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:19:44.265" endtime="20211002 01:19:51.276"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:19:51.277" level="INFO"/>
<status status="PASS" starttime="20211002 01:19:51.276" endtime="20211002 01:19:51.277"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:19:51.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:19:51.277" endtime="20211002 01:19:51.278"/>
</kw>
<status status="PASS" starttime="20211002 01:19:44.264" endtime="20211002 01:19:51.278"/>
</kw>
<msg timestamp="20211002 01:19:51.278" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:19:44.264" endtime="20211002 01:19:51.278"/>
</kw>
<status status="PASS" starttime="20211002 01:19:44.262" endtime="20211002 01:19:51.279"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:19:51.284" level="INFO">Running command 'ozone sh bucket link 24477-target/loop3 24477-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:19:57.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:19:57.063" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:19:51.281" endtime="20211002 01:19:57.063"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:19:57.064" level="INFO"/>
<status status="PASS" starttime="20211002 01:19:57.063" endtime="20211002 01:19:57.064"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:19:57.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:19:57.064" endtime="20211002 01:19:57.065"/>
</kw>
<status status="PASS" starttime="20211002 01:19:51.281" endtime="20211002 01:19:57.065"/>
</kw>
<msg timestamp="20211002 01:19:57.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:19:51.280" endtime="20211002 01:19:57.065"/>
</kw>
<status status="PASS" starttime="20211002 01:19:51.279" endtime="20211002 01:19:57.066"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:19:57.068" level="INFO">Running command 'ozone sh key list 24477-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:20:05.120" level="INFO">${rc} = 255</msg>
<msg timestamp="20211002 01:20:05.121" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20211002 01:19:57.066" endtime="20211002 01:20:05.121"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:20:05.123" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20211002 01:20:05.121" endtime="20211002 01:20:05.124"/>
</kw>
<msg timestamp="20211002 01:20:05.126" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20211002 01:19:57.066" endtime="20211002 01:20:05.126"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211002 01:20:05.126" endtime="20211002 01:20:05.128"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211002 01:19:36.019" endtime="20211002 01:20:05.128"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:20:05.150" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:20:05.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:20:05.156" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211002 01:20:05.144" endtime="20211002 01:20:05.156"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:20:05.158" level="INFO">scm</msg>
<status status="PASS" starttime="20211002 01:20:05.156" endtime="20211002 01:20:05.158"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:20:05.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:20:05.158" endtime="20211002 01:20:05.159"/>
</kw>
<status status="PASS" starttime="20211002 01:20:05.144" endtime="20211002 01:20:05.160"/>
</kw>
<msg timestamp="20211002 01:20:05.160" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:20:05.143" endtime="20211002 01:20:05.160"/>
</kw>
<msg timestamp="20211002 01:20:05.160" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211002 01:20:05.143" endtime="20211002 01:20:05.160"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211002 01:20:05.161" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211002 01:20:05.161" endtime="20211002 01:20:05.161"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:20:05.167" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:20:05.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:20:05.174" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:20:05.164" endtime="20211002 01:20:05.174"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:20:05.175" level="INFO"/>
<status status="PASS" starttime="20211002 01:20:05.175" endtime="20211002 01:20:05.175"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:20:05.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:20:05.176" endtime="20211002 01:20:05.176"/>
</kw>
<status status="PASS" starttime="20211002 01:20:05.163" endtime="20211002 01:20:05.177"/>
</kw>
<msg timestamp="20211002 01:20:05.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:20:05.163" endtime="20211002 01:20:05.177"/>
</kw>
<status status="PASS" starttime="20211002 01:20:05.162" endtime="20211002 01:20:05.178"/>
</kw>
<status status="PASS" starttime="20211002 01:20:05.161" endtime="20211002 01:20:05.178"/>
</kw>
<status status="PASS" starttime="20211002 01:20:05.141" endtime="20211002 01:20:05.178"/>
</kw>
<status status="PASS" starttime="20211002 01:20:05.140" endtime="20211002 01:20:05.179"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:20:05.184" level="INFO">Running command 'ozone sh bucket link 24477-source/bucket1 24477-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:20:11.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:20:11.689" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:20:05.181" endtime="20211002 01:20:11.689"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:20:11.691" level="INFO"/>
<status status="PASS" starttime="20211002 01:20:11.690" endtime="20211002 01:20:11.691"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:20:11.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:20:11.691" endtime="20211002 01:20:11.692"/>
</kw>
<status status="PASS" starttime="20211002 01:20:05.180" endtime="20211002 01:20:11.692"/>
</kw>
<msg timestamp="20211002 01:20:11.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:20:05.180" endtime="20211002 01:20:11.692"/>
</kw>
<status status="PASS" starttime="20211002 01:20:05.179" endtime="20211002 01:20:11.693"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:20:11.699" level="INFO">Running command 'ozone sh key put 24477-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:22:05.139" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20211002 01:20:11.696" endtime="20211002 01:22:05.139"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211002 01:22:05.139" endtime="20211002 01:22:05.140"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211002 01:22:05.140" endtime="20211002 01:22:05.140"/>
</kw>
<status status="FAIL" starttime="20211002 01:20:11.695" endtime="20211002 01:22:05.140"/>
</kw>
<msg timestamp="20211002 01:22:05.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211002 01:20:11.694" endtime="20211002 01:22:05.141"/>
</kw>
<status status="FAIL" starttime="20211002 01:20:11.693" endtime="20211002 01:22:05.141"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<status status="NOT RUN" starttime="20211002 01:22:05.141" endtime="20211002 01:22:05.141"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211002 01:20:05.138" endtime="20211002 01:22:05.142">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:22:05.148" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:22:05.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:22:05.153" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211002 01:22:05.146" endtime="20211002 01:22:05.153"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:22:05.155" level="INFO">scm</msg>
<status status="PASS" starttime="20211002 01:22:05.154" endtime="20211002 01:22:05.155"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:22:05.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:22:05.155" endtime="20211002 01:22:05.156"/>
</kw>
<status status="PASS" starttime="20211002 01:22:05.145" endtime="20211002 01:22:05.156"/>
</kw>
<msg timestamp="20211002 01:22:05.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:22:05.145" endtime="20211002 01:22:05.157"/>
</kw>
<msg timestamp="20211002 01:22:05.157" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211002 01:22:05.144" endtime="20211002 01:22:05.158"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211002 01:22:05.159" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211002 01:22:05.158" endtime="20211002 01:22:05.159"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:22:05.167" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:22:05.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:22:05.178" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:22:05.162" endtime="20211002 01:22:05.178"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:22:05.179" level="INFO"/>
<status status="PASS" starttime="20211002 01:22:05.178" endtime="20211002 01:22:05.179"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:22:05.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:22:05.179" endtime="20211002 01:22:05.180"/>
</kw>
<status status="PASS" starttime="20211002 01:22:05.161" endtime="20211002 01:22:05.180"/>
</kw>
<msg timestamp="20211002 01:22:05.180" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:22:05.160" endtime="20211002 01:22:05.180"/>
</kw>
<status status="PASS" starttime="20211002 01:22:05.159" endtime="20211002 01:22:05.181"/>
</kw>
<status status="PASS" starttime="20211002 01:22:05.159" endtime="20211002 01:22:05.181"/>
</kw>
<status status="PASS" starttime="20211002 01:22:05.144" endtime="20211002 01:22:05.181"/>
</kw>
<status status="PASS" starttime="20211002 01:22:05.143" endtime="20211002 01:22:05.181"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:22:05.185" level="INFO">Running command 'ozone sh bucket delete 24477-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:22:12.643" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:22:12.643" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:22:05.183" endtime="20211002 01:22:12.643"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:22:12.645" level="INFO"/>
<status status="PASS" starttime="20211002 01:22:12.644" endtime="20211002 01:22:12.645"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:22:12.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:22:12.645" endtime="20211002 01:22:12.646"/>
</kw>
<status status="PASS" starttime="20211002 01:22:05.182" endtime="20211002 01:22:12.647"/>
</kw>
<msg timestamp="20211002 01:22:12.647" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:22:05.182" endtime="20211002 01:22:12.647"/>
</kw>
<status status="PASS" starttime="20211002 01:22:05.181" endtime="20211002 01:22:12.648"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:22:12.654" level="INFO">Running command 'ozone sh bucket list 24477-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:22:20.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:22:20.559" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "24477-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-02T...</msg>
<status status="PASS" starttime="20211002 01:22:12.651" endtime="20211002 01:22:20.560"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:22:20.562" level="INFO">{
  "metadata" : { },
  "volumeName" : "24477-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-02T01:19:02.137Z",
  "modificationTime" : "2021-10-02T01:19:02.137Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "24477-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-02T01:13:19.343Z",
  "modificationTime" : "2021-10-02T01:13:19.343Z",
  "sourceVolume" : "24477-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "24477-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-02T01:12:40.141Z",
  "modificationTime" : "2021-10-02T01:13:12.608Z",
  "sourceVolume" : "24477-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "24477-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-02T01:18:49.531Z",
  "modificationTime" : "2021-10-02T01:18:49.531Z",
  "sourceVolume" : "24477-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "24477-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-02T01:20:11.604Z",
  "modificationTime" : "2021-10-02T01:20:11.604Z",
  "sourceVolume" : "24477-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "24477-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-02T01:19:56.994Z",
  "modificationTime" : "2021-10-02T01:19:56.994Z",
  "sourceVolume" : "24477-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "24477-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-02T01:19:43.691Z",
  "modificationTime" : "2021-10-02T01:19:43.691Z",
  "sourceVolume" : "24477-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "24477-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-02T01:19:51.196Z",
  "modificationTime" : "2021-10-02T01:19:51.196Z",
  "sourceVolume" : "24477-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "24477-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-02T01:12:26.527Z",
  "modificationTime" : "2021-10-02T01:13:05.855Z",
  "sourceVolume" : "24477-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "24477-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-02T01:12:33.272Z",
  "modificationTime" : "2021-10-02T01:12:33.272Z",
  "sourceVolume" : "24477-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}</msg>
<status status="PASS" starttime="20211002 01:22:20.560" endtime="20211002 01:22:20.562"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:22:20.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:22:20.563" endtime="20211002 01:22:20.564"/>
</kw>
<status status="PASS" starttime="20211002 01:22:12.649" endtime="20211002 01:22:20.565"/>
</kw>
<msg timestamp="20211002 01:22:20.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:22:12.649" endtime="20211002 01:22:20.565"/>
</kw>
<msg timestamp="20211002 01:22:20.566" level="INFO">${bucket_list} = {
  "metadata" : { },
  "volumeName" : "24477-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-02T...</msg>
<status status="PASS" starttime="20211002 01:22:12.648" endtime="20211002 01:22:20.566"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211002 01:22:20.566" endtime="20211002 01:22:20.567"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:22:20.572" level="INFO">Running command 'ozone sh key list 24477-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:22:29.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:22:29.442" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20211002 01:22:20.570" endtime="20211002 01:22:29.442"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:22:29.444" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20211002 01:22:29.443" endtime="20211002 01:22:29.444"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:22:29.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:22:29.444" endtime="20211002 01:22:29.445"/>
</kw>
<status status="PASS" starttime="20211002 01:22:20.569" endtime="20211002 01:22:29.445"/>
</kw>
<msg timestamp="20211002 01:22:29.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:22:20.569" endtime="20211002 01:22:29.445"/>
</kw>
<msg timestamp="20211002 01:22:29.446" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20211002 01:22:20.568" endtime="20211002 01:22:29.446"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211002 01:22:29.446" endtime="20211002 01:22:29.446"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211002 01:22:05.142" endtime="20211002 01:22:29.447"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="FAIL" starttime="20211002 01:08:38.835" endtime="20211002 01:22:29.450"/>
</suite>
<suite id="s1-s1-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211002 01:22:29.481" level="INFO">${random} = 78939</msg>
<status status="PASS" starttime="20211002 01:22:29.481" endtime="20211002 01:22:29.482"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211002 01:22:29.484" level="INFO">${prefix} = 78939</msg>
<status status="PASS" starttime="20211002 01:22:29.483" endtime="20211002 01:22:29.484"/>
</kw>
<status status="PASS" starttime="20211002 01:22:29.480" endtime="20211002 01:22:29.484"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:22:29.491" level="INFO">Running command 'ozone sh volume info /78939-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:22:36.292" level="INFO">${rc} = 255</msg>
<msg timestamp="20211002 01:22:36.292" level="INFO">${output} = VOLUME_NOT_FOUND Volume 78939-rpcbasic is not found</msg>
<status status="PASS" starttime="20211002 01:22:29.489" endtime="20211002 01:22:36.292"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:22:36.293" level="INFO">VOLUME_NOT_FOUND Volume 78939-rpcbasic is not found</msg>
<status status="PASS" starttime="20211002 01:22:36.292" endtime="20211002 01:22:36.293"/>
</kw>
<msg timestamp="20211002 01:22:36.294" level="INFO">${result} = VOLUME_NOT_FOUND Volume 78939-rpcbasic is not found</msg>
<status status="PASS" starttime="20211002 01:22:29.488" endtime="20211002 01:22:36.294"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211002 01:22:36.294" endtime="20211002 01:22:36.295"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:22:36.299" level="INFO">Running command 'ozone sh volume create /78939-rpcbasic --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:22:43.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:22:43.900" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:22:36.297" endtime="20211002 01:22:43.900"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:22:43.903" level="INFO"/>
<status status="PASS" starttime="20211002 01:22:43.901" endtime="20211002 01:22:43.903"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:22:43.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:22:43.903" endtime="20211002 01:22:43.904"/>
</kw>
<status status="PASS" starttime="20211002 01:22:36.296" endtime="20211002 01:22:43.904"/>
</kw>
<msg timestamp="20211002 01:22:43.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:22:36.296" endtime="20211002 01:22:43.905"/>
</kw>
<msg timestamp="20211002 01:22:43.906" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211002 01:22:36.295" endtime="20211002 01:22:43.906"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211002 01:22:43.906" endtime="20211002 01:22:43.907"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:22:43.914" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="78939-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:22:52.520" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:22:52.520" level="INFO">${output} = {
  "metadata": {},
  "name": "78939-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211002 01:22:43.911" endtime="20211002 01:22:52.521"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:22:52.522" level="INFO">{
  "metadata": {},
  "name": "78939-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-02T01:22:43.813Z",
  "modificationTime": "2021-10-02T01:22:43.813Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211002 01:22:52.521" endtime="20211002 01:22:52.522"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:22:52.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:22:52.522" endtime="20211002 01:22:52.523"/>
</kw>
<status status="PASS" starttime="20211002 01:22:43.909" endtime="20211002 01:22:52.523"/>
</kw>
<msg timestamp="20211002 01:22:52.523" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:22:43.909" endtime="20211002 01:22:52.524"/>
</kw>
<msg timestamp="20211002 01:22:52.524" level="INFO">${result} = {
  "metadata": {},
  "name": "78939-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211002 01:22:43.907" endtime="20211002 01:22:52.524"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211002 01:22:52.524" endtime="20211002 01:22:52.525"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:22:52.530" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="78939-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:23:01.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:23:01.057" level="INFO">${output} = {
  "metadata": {},
  "name": "78939-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211002 01:22:52.527" endtime="20211002 01:23:01.057"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:23:01.059" level="INFO">{
  "metadata": {},
  "name": "78939-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-02T01:22:43.813Z",
  "modificationTime": "2021-10-02T01:22:43.813Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211002 01:23:01.058" endtime="20211002 01:23:01.059"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:23:01.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:23:01.059" endtime="20211002 01:23:01.060"/>
</kw>
<status status="PASS" starttime="20211002 01:22:52.526" endtime="20211002 01:23:01.061"/>
</kw>
<msg timestamp="20211002 01:23:01.061" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:22:52.526" endtime="20211002 01:23:01.061"/>
</kw>
<msg timestamp="20211002 01:23:01.062" level="INFO">${result} = {
  "metadata": {},
  "name": "78939-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211002 01:22:52.525" endtime="20211002 01:23:01.062"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211002 01:23:01.062" endtime="20211002 01:23:01.063"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:23:01.071" level="INFO">Running command 'ozone sh volume setquota /78939-rpcbasic --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:23:08.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:23:08.775" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:23:01.068" endtime="20211002 01:23:08.776"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:23:08.777" level="INFO"/>
<status status="PASS" starttime="20211002 01:23:08.776" endtime="20211002 01:23:08.777"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:23:08.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:23:08.778" endtime="20211002 01:23:08.779"/>
</kw>
<status status="PASS" starttime="20211002 01:23:01.068" endtime="20211002 01:23:08.779"/>
</kw>
<msg timestamp="20211002 01:23:08.780" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:23:01.066" endtime="20211002 01:23:08.780"/>
</kw>
<status status="PASS" starttime="20211002 01:23:01.063" endtime="20211002 01:23:08.780"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:23:08.785" level="INFO">Running command 'ozone sh volume info /78939-rpcbasic | jq -r '. | select(.name=="78939-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:23:14.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:23:14.049" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211002 01:23:08.783" endtime="20211002 01:23:14.049"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:23:14.051" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211002 01:23:14.050" endtime="20211002 01:23:14.051"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:23:14.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:23:14.051" endtime="20211002 01:23:14.052"/>
</kw>
<status status="PASS" starttime="20211002 01:23:08.782" endtime="20211002 01:23:14.053"/>
</kw>
<msg timestamp="20211002 01:23:14.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:23:08.781" endtime="20211002 01:23:14.053"/>
</kw>
<msg timestamp="20211002 01:23:14.053" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211002 01:23:08.780" endtime="20211002 01:23:14.053"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211002 01:23:14.054" endtime="20211002 01:23:14.054"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:23:14.061" level="INFO">Running command 'ozone sh bucket create /78939-rpcbasic/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:23:21.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:23:21.766" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:23:14.058" endtime="20211002 01:23:21.766"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:23:21.767" level="INFO"/>
<status status="PASS" starttime="20211002 01:23:21.766" endtime="20211002 01:23:21.767"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:23:21.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:23:21.767" endtime="20211002 01:23:21.768"/>
</kw>
<status status="PASS" starttime="20211002 01:23:14.057" endtime="20211002 01:23:21.768"/>
</kw>
<msg timestamp="20211002 01:23:21.768" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:23:14.056" endtime="20211002 01:23:21.768"/>
</kw>
<status status="PASS" starttime="20211002 01:23:14.055" endtime="20211002 01:23:21.769"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:23:21.773" level="INFO">Running command 'ozone sh bucket info /78939-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:23:28.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:23:28.148" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211002 01:23:21.771" endtime="20211002 01:23:28.148"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:23:28.150" level="INFO">DISK</msg>
<status status="PASS" starttime="20211002 01:23:28.149" endtime="20211002 01:23:28.150"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:23:28.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:23:28.150" endtime="20211002 01:23:28.151"/>
</kw>
<status status="PASS" starttime="20211002 01:23:21.770" endtime="20211002 01:23:28.152"/>
</kw>
<msg timestamp="20211002 01:23:28.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:23:21.770" endtime="20211002 01:23:28.152"/>
</kw>
<msg timestamp="20211002 01:23:28.153" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211002 01:23:21.769" endtime="20211002 01:23:28.153"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211002 01:23:28.154" endtime="20211002 01:23:28.155"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:23:28.163" level="INFO">Running command 'ozone sh bucket info /78939-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:23:35.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:23:35.036" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211002 01:23:28.160" endtime="20211002 01:23:35.036"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:23:35.038" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211002 01:23:35.037" endtime="20211002 01:23:35.038"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:23:35.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:23:35.038" endtime="20211002 01:23:35.039"/>
</kw>
<status status="PASS" starttime="20211002 01:23:28.158" endtime="20211002 01:23:35.039"/>
</kw>
<msg timestamp="20211002 01:23:35.039" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:23:28.158" endtime="20211002 01:23:35.040"/>
</kw>
<msg timestamp="20211002 01:23:35.040" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211002 01:23:28.155" endtime="20211002 01:23:35.040"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211002 01:23:35.040" endtime="20211002 01:23:35.041"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:23:35.045" level="INFO">Running command 'ozone sh bucket info /78939-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:23:41.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:23:41.706" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211002 01:23:35.043" endtime="20211002 01:23:41.706"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:23:41.708" level="INFO">100</msg>
<status status="PASS" starttime="20211002 01:23:41.706" endtime="20211002 01:23:41.708"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:23:41.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:23:41.708" endtime="20211002 01:23:41.709"/>
</kw>
<status status="PASS" starttime="20211002 01:23:35.042" endtime="20211002 01:23:41.710"/>
</kw>
<msg timestamp="20211002 01:23:41.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:23:35.042" endtime="20211002 01:23:41.711"/>
</kw>
<msg timestamp="20211002 01:23:41.711" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211002 01:23:35.041" endtime="20211002 01:23:41.711"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211002 01:23:41.712" endtime="20211002 01:23:41.712"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:23:41.720" level="INFO">Running command 'ozone sh bucket setquota /78939-rpcbasic/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:23:49.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:23:49.275" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:23:41.716" endtime="20211002 01:23:49.275"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:23:49.279" level="INFO"/>
<status status="PASS" starttime="20211002 01:23:49.276" endtime="20211002 01:23:49.279"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:23:49.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:23:49.280" endtime="20211002 01:23:49.281"/>
</kw>
<status status="PASS" starttime="20211002 01:23:41.715" endtime="20211002 01:23:49.285"/>
</kw>
<msg timestamp="20211002 01:23:49.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:23:41.714" endtime="20211002 01:23:49.285"/>
</kw>
<status status="PASS" starttime="20211002 01:23:41.713" endtime="20211002 01:23:49.286"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:23:49.298" level="INFO">Running command 'ozone sh bucket info /78939-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:23:57.085" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:23:57.085" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211002 01:23:49.291" endtime="20211002 01:23:57.085"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:23:57.086" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211002 01:23:57.085" endtime="20211002 01:23:57.086"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:23:57.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:23:57.086" endtime="20211002 01:23:57.087"/>
</kw>
<status status="PASS" starttime="20211002 01:23:49.289" endtime="20211002 01:23:57.087"/>
</kw>
<msg timestamp="20211002 01:23:57.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:23:49.289" endtime="20211002 01:23:57.088"/>
</kw>
<msg timestamp="20211002 01:23:57.088" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211002 01:23:49.286" endtime="20211002 01:23:57.088"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211002 01:23:57.088" endtime="20211002 01:23:57.089"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:23:57.093" level="INFO">Running command 'ozone sh bucket info /78939-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:24:03.300" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:24:03.300" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211002 01:23:57.091" endtime="20211002 01:24:03.300"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:24:03.301" level="INFO">1000</msg>
<status status="PASS" starttime="20211002 01:24:03.301" endtime="20211002 01:24:03.301"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:24:03.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:24:03.302" endtime="20211002 01:24:03.302"/>
</kw>
<status status="PASS" starttime="20211002 01:23:57.090" endtime="20211002 01:24:03.303"/>
</kw>
<msg timestamp="20211002 01:24:03.303" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:23:57.090" endtime="20211002 01:24:03.303"/>
</kw>
<msg timestamp="20211002 01:24:03.304" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211002 01:23:57.089" endtime="20211002 01:24:03.304"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211002 01:24:03.304" endtime="20211002 01:24:03.305"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:24:03.312" level="INFO">Running command 'ozone sh bucket list /78939-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:24:11.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:24:11.038" level="INFO">${output} = 78939-rpcbasic</msg>
<status status="PASS" starttime="20211002 01:24:03.307" endtime="20211002 01:24:11.038"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:24:11.040" level="INFO">78939-rpcbasic</msg>
<status status="PASS" starttime="20211002 01:24:11.038" endtime="20211002 01:24:11.040"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:24:11.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:24:11.040" endtime="20211002 01:24:11.042"/>
</kw>
<status status="PASS" starttime="20211002 01:24:03.307" endtime="20211002 01:24:11.042"/>
</kw>
<msg timestamp="20211002 01:24:11.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:24:03.306" endtime="20211002 01:24:11.042"/>
</kw>
<msg timestamp="20211002 01:24:11.043" level="INFO">${result} = 78939-rpcbasic</msg>
<status status="PASS" starttime="20211002 01:24:03.305" endtime="20211002 01:24:11.043"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211002 01:24:11.043" endtime="20211002 01:24:11.044"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:24:11.054" level="INFO">Running command 'ozone sh key put /78939-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:27:22.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:27:22.976" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:24:11.050" endtime="20211002 01:27:22.977"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:27:22.978" level="INFO"/>
<status status="PASS" starttime="20211002 01:27:22.977" endtime="20211002 01:27:22.978"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:27:22.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:27:22.978" endtime="20211002 01:27:22.979"/>
</kw>
<status status="PASS" starttime="20211002 01:24:11.049" endtime="20211002 01:27:22.979"/>
</kw>
<msg timestamp="20211002 01:27:22.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:24:11.048" endtime="20211002 01:27:22.979"/>
</kw>
<status status="PASS" starttime="20211002 01:24:11.047" endtime="20211002 01:27:22.980"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:27:22.987" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:27:22.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:27:22.990" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:27:22.983" endtime="20211002 01:27:22.990"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:27:22.991" level="INFO"/>
<status status="PASS" starttime="20211002 01:27:22.990" endtime="20211002 01:27:22.991"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:27:22.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:27:22.992" endtime="20211002 01:27:22.992"/>
</kw>
<status status="PASS" starttime="20211002 01:27:22.981" endtime="20211002 01:27:22.993"/>
</kw>
<msg timestamp="20211002 01:27:22.993" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:27:22.980" endtime="20211002 01:27:22.993"/>
</kw>
<status status="PASS" starttime="20211002 01:27:22.980" endtime="20211002 01:27:22.993"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:27:22.998" level="INFO">Running command 'ozone sh key get /78939-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:27:29.486" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211002 01:27:22.996" endtime="20211002 01:27:29.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211002 01:27:29.488" endtime="20211002 01:27:29.488"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211002 01:27:29.488" endtime="20211002 01:27:29.488"/>
</kw>
<status status="FAIL" starttime="20211002 01:27:22.995" endtime="20211002 01:27:29.490"/>
</kw>
<msg timestamp="20211002 01:27:29.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211002 01:27:22.994" endtime="20211002 01:27:29.491"/>
</kw>
<status status="FAIL" starttime="20211002 01:27:22.994" endtime="20211002 01:27:29.491"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211002 01:27:29.491" endtime="20211002 01:27:29.491"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211002 01:27:29.491" endtime="20211002 01:27:29.491"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211002 01:27:29.492" endtime="20211002 01:27:29.492"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211002 01:27:29.492" endtime="20211002 01:27:29.492"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211002 01:27:29.492" endtime="20211002 01:27:29.492"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211002 01:27:29.492" endtime="20211002 01:27:29.492"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211002 01:27:29.492" endtime="20211002 01:27:29.492"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211002 01:27:29.493" endtime="20211002 01:27:29.493"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211002 01:27:29.493" endtime="20211002 01:27:29.493"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211002 01:27:29.493" endtime="20211002 01:27:29.493"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211002 01:27:29.493" endtime="20211002 01:27:29.493"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211002 01:27:29.493" endtime="20211002 01:27:29.494"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211002 01:27:29.494" endtime="20211002 01:27:29.494"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211002 01:27:29.494" endtime="20211002 01:27:29.494"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211002 01:27:29.494" endtime="20211002 01:27:29.494"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211002 01:27:29.494" endtime="20211002 01:27:29.494"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211002 01:27:29.495" endtime="20211002 01:27:29.495"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211002 01:27:29.495" endtime="20211002 01:27:29.495"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211002 01:27:29.501" endtime="20211002 01:27:29.501"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211002 01:27:29.502" endtime="20211002 01:27:29.502"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211002 01:27:29.503" endtime="20211002 01:27:29.504"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211002 01:27:29.505" endtime="20211002 01:27:29.506"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20211002 01:27:29.506" endtime="20211002 01:27:29.506"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211002 01:27:29.507" endtime="20211002 01:27:29.507"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211002 01:27:29.508" endtime="20211002 01:27:29.509"/>
</kw>
<status status="FAIL" starttime="20211002 01:24:11.045" endtime="20211002 01:27:29.510"/>
</kw>
<status status="FAIL" starttime="20211002 01:24:11.044" endtime="20211002 01:27:29.510"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211002 01:27:29.511" endtime="20211002 01:27:29.511"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211002 01:27:29.511" endtime="20211002 01:27:29.512"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211002 01:27:29.512" endtime="20211002 01:27:29.512"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211002 01:27:29.513" endtime="20211002 01:27:29.513"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211002 01:27:29.513" endtime="20211002 01:27:29.514"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211002 01:27:29.514" endtime="20211002 01:27:29.515"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211002 01:27:29.515" endtime="20211002 01:27:29.515"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211002 01:27:29.516" endtime="20211002 01:27:29.516"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211002 01:27:29.516" endtime="20211002 01:27:29.516"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211002 01:27:29.516" endtime="20211002 01:27:29.517"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211002 01:27:29.517" endtime="20211002 01:27:29.517"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211002 01:27:29.518" endtime="20211002 01:27:29.518"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211002 01:27:29.519" endtime="20211002 01:27:29.519"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211002 01:27:29.519" endtime="20211002 01:27:29.519"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211002 01:27:29.520" endtime="20211002 01:27:29.520"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211002 01:27:29.521" endtime="20211002 01:27:29.521"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211002 01:27:29.521" endtime="20211002 01:27:29.521"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211002 01:27:29.522" endtime="20211002 01:27:29.523"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211002 01:27:29.523" endtime="20211002 01:27:29.523"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211002 01:27:29.523" endtime="20211002 01:27:29.523"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211002 01:27:29.523" endtime="20211002 01:27:29.525"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211002 01:27:29.525" endtime="20211002 01:27:29.525"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211002 01:27:29.525" endtime="20211002 01:27:29.525"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211002 01:27:29.527" endtime="20211002 01:27:29.527"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211002 01:27:29.527" endtime="20211002 01:27:29.527"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211002 01:27:29.528" endtime="20211002 01:27:29.528"/>
</kw>
<status status="FAIL" starttime="20211002 01:22:29.486" endtime="20211002 01:27:29.528"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211002 01:22:29.485" endtime="20211002 01:27:29.529">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20211002 01:22:29.455" endtime="20211002 01:27:29.534"/>
</suite>
<suite id="s1-s1-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211002 01:27:29.579" level="INFO">${random} = 26725</msg>
<status status="PASS" starttime="20211002 01:27:29.577" endtime="20211002 01:27:29.579"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211002 01:27:29.584" level="INFO">${prefix} = 26725</msg>
<status status="PASS" starttime="20211002 01:27:29.581" endtime="20211002 01:27:29.585"/>
</kw>
<status status="PASS" starttime="20211002 01:27:29.575" endtime="20211002 01:27:29.585"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:27:29.618" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:27:29.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:27:29.643" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211002 01:27:29.602" endtime="20211002 01:27:29.643"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:27:29.644" level="INFO">scm</msg>
<status status="PASS" starttime="20211002 01:27:29.643" endtime="20211002 01:27:29.644"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:27:29.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:27:29.645" endtime="20211002 01:27:29.645"/>
</kw>
<status status="PASS" starttime="20211002 01:27:29.601" endtime="20211002 01:27:29.646"/>
</kw>
<msg timestamp="20211002 01:27:29.646" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:27:29.599" endtime="20211002 01:27:29.646"/>
</kw>
<msg timestamp="20211002 01:27:29.646" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211002 01:27:29.594" endtime="20211002 01:27:29.646"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211002 01:27:29.652" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211002 01:27:29.647" endtime="20211002 01:27:29.652"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:27:29.689" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:27:29.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:27:29.906" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:27:29.663" endtime="20211002 01:27:29.907"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:27:29.909" level="INFO"/>
<status status="PASS" starttime="20211002 01:27:29.907" endtime="20211002 01:27:29.909"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:27:29.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:27:29.909" endtime="20211002 01:27:29.910"/>
</kw>
<status status="PASS" starttime="20211002 01:27:29.660" endtime="20211002 01:27:29.911"/>
</kw>
<msg timestamp="20211002 01:27:29.911" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:27:29.659" endtime="20211002 01:27:29.911"/>
</kw>
<status status="PASS" starttime="20211002 01:27:29.654" endtime="20211002 01:27:29.911"/>
</kw>
<status status="PASS" starttime="20211002 01:27:29.653" endtime="20211002 01:27:29.912"/>
</kw>
<status status="PASS" starttime="20211002 01:27:29.593" endtime="20211002 01:27:29.912"/>
</kw>
<status status="PASS" starttime="20211002 01:27:29.591" endtime="20211002 01:27:29.912"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:27:29.929" level="INFO">Running command 'ozone sh volume info o3://om:9862/26725-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:27:38.514" level="INFO">${rc} = 255</msg>
<msg timestamp="20211002 01:27:38.514" level="INFO">${output} = VOLUME_NOT_FOUND Volume 26725-rpcwoport is not found</msg>
<status status="PASS" starttime="20211002 01:27:29.918" endtime="20211002 01:27:38.515"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:27:38.516" level="INFO">VOLUME_NOT_FOUND Volume 26725-rpcwoport is not found</msg>
<status status="PASS" starttime="20211002 01:27:38.515" endtime="20211002 01:27:38.516"/>
</kw>
<msg timestamp="20211002 01:27:38.516" level="INFO">${result} = VOLUME_NOT_FOUND Volume 26725-rpcwoport is not found</msg>
<status status="PASS" starttime="20211002 01:27:29.915" endtime="20211002 01:27:38.516"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211002 01:27:38.517" endtime="20211002 01:27:38.517"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:27:38.524" level="INFO">Running command 'ozone sh volume create o3://om:9862/26725-rpcwoport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:27:45.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:27:45.885" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:27:38.521" endtime="20211002 01:27:45.886"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:27:45.888" level="INFO"/>
<status status="PASS" starttime="20211002 01:27:45.886" endtime="20211002 01:27:45.888"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:27:45.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:27:45.888" endtime="20211002 01:27:45.889"/>
</kw>
<status status="PASS" starttime="20211002 01:27:38.520" endtime="20211002 01:27:45.890"/>
</kw>
<msg timestamp="20211002 01:27:45.890" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:27:38.519" endtime="20211002 01:27:45.890"/>
</kw>
<msg timestamp="20211002 01:27:45.891" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211002 01:27:38.518" endtime="20211002 01:27:45.891"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211002 01:27:45.891" endtime="20211002 01:27:45.892"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:27:45.899" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="26725-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:27:53.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:27:53.654" level="INFO">${output} = {
  "metadata": {},
  "name": "26725-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211002 01:27:45.896" endtime="20211002 01:27:53.654"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:27:53.656" level="INFO">{
  "metadata": {},
  "name": "26725-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-02T01:27:45.755Z",
  "modificationTime": "2021-10-02T01:27:45.755Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211002 01:27:53.655" endtime="20211002 01:27:53.656"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:27:53.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:27:53.656" endtime="20211002 01:27:53.657"/>
</kw>
<status status="PASS" starttime="20211002 01:27:45.895" endtime="20211002 01:27:53.657"/>
</kw>
<msg timestamp="20211002 01:27:53.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:27:45.895" endtime="20211002 01:27:53.657"/>
</kw>
<msg timestamp="20211002 01:27:53.657" level="INFO">${result} = {
  "metadata": {},
  "name": "26725-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211002 01:27:45.892" endtime="20211002 01:27:53.657"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211002 01:27:53.658" endtime="20211002 01:27:53.658"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:27:53.663" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="26725-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:28:01.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:28:01.606" level="INFO">${output} = {
  "metadata": {},
  "name": "26725-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211002 01:27:53.661" endtime="20211002 01:28:01.606"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:28:01.608" level="INFO">{
  "metadata": {},
  "name": "26725-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-02T01:27:45.755Z",
  "modificationTime": "2021-10-02T01:27:45.755Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211002 01:28:01.607" endtime="20211002 01:28:01.608"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:28:01.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:28:01.609" endtime="20211002 01:28:01.609"/>
</kw>
<status status="PASS" starttime="20211002 01:27:53.660" endtime="20211002 01:28:01.610"/>
</kw>
<msg timestamp="20211002 01:28:01.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:27:53.659" endtime="20211002 01:28:01.610"/>
</kw>
<msg timestamp="20211002 01:28:01.611" level="INFO">${result} = {
  "metadata": {},
  "name": "26725-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211002 01:27:53.658" endtime="20211002 01:28:01.611"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211002 01:28:01.611" endtime="20211002 01:28:01.614"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:28:01.619" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/26725-rpcwoport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:28:08.820" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:28:08.820" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:28:01.616" endtime="20211002 01:28:08.821"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:28:08.822" level="INFO"/>
<status status="PASS" starttime="20211002 01:28:08.821" endtime="20211002 01:28:08.822"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:28:08.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:28:08.822" endtime="20211002 01:28:08.823"/>
</kw>
<status status="PASS" starttime="20211002 01:28:01.616" endtime="20211002 01:28:08.823"/>
</kw>
<msg timestamp="20211002 01:28:08.823" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:28:01.615" endtime="20211002 01:28:08.823"/>
</kw>
<status status="PASS" starttime="20211002 01:28:01.614" endtime="20211002 01:28:08.824"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:28:08.830" level="INFO">Running command 'ozone sh volume info o3://om:9862/26725-rpcwoport | jq -r '. | select(.name=="26725-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:28:16.565" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:28:16.566" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211002 01:28:08.827" endtime="20211002 01:28:16.566"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:28:16.569" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211002 01:28:16.567" endtime="20211002 01:28:16.569"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:28:16.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:28:16.569" endtime="20211002 01:28:16.570"/>
</kw>
<status status="PASS" starttime="20211002 01:28:08.826" endtime="20211002 01:28:16.571"/>
</kw>
<msg timestamp="20211002 01:28:16.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:28:08.825" endtime="20211002 01:28:16.571"/>
</kw>
<msg timestamp="20211002 01:28:16.571" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211002 01:28:08.824" endtime="20211002 01:28:16.571"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211002 01:28:16.572" endtime="20211002 01:28:16.572"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:28:16.578" level="INFO">Running command 'ozone sh bucket create o3://om:9862/26725-rpcwoport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:28:23.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:28:23.462" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:28:16.575" endtime="20211002 01:28:23.462"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:28:23.465" level="INFO"/>
<status status="PASS" starttime="20211002 01:28:23.463" endtime="20211002 01:28:23.465"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:28:23.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:28:23.465" endtime="20211002 01:28:23.467"/>
</kw>
<status status="PASS" starttime="20211002 01:28:16.574" endtime="20211002 01:28:23.467"/>
</kw>
<msg timestamp="20211002 01:28:23.468" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:28:16.573" endtime="20211002 01:28:23.468"/>
</kw>
<status status="PASS" starttime="20211002 01:28:16.572" endtime="20211002 01:28:23.469"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:28:23.475" level="INFO">Running command 'ozone sh bucket info o3://om:9862/26725-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:28:31.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:28:31.771" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211002 01:28:23.472" endtime="20211002 01:28:31.772"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:28:31.773" level="INFO">DISK</msg>
<status status="PASS" starttime="20211002 01:28:31.772" endtime="20211002 01:28:31.773"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:28:31.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:28:31.773" endtime="20211002 01:28:31.774"/>
</kw>
<status status="PASS" starttime="20211002 01:28:23.471" endtime="20211002 01:28:31.774"/>
</kw>
<msg timestamp="20211002 01:28:31.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:28:23.471" endtime="20211002 01:28:31.775"/>
</kw>
<msg timestamp="20211002 01:28:31.775" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211002 01:28:23.469" endtime="20211002 01:28:31.775"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211002 01:28:31.775" endtime="20211002 01:28:31.776"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:28:31.780" level="INFO">Running command 'ozone sh bucket info o3://om:9862/26725-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:28:37.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:28:37.771" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211002 01:28:31.778" endtime="20211002 01:28:37.771"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:28:37.774" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211002 01:28:37.772" endtime="20211002 01:28:37.774"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:28:37.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:28:37.774" endtime="20211002 01:28:37.776"/>
</kw>
<status status="PASS" starttime="20211002 01:28:31.777" endtime="20211002 01:28:37.777"/>
</kw>
<msg timestamp="20211002 01:28:37.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:28:31.777" endtime="20211002 01:28:37.778"/>
</kw>
<msg timestamp="20211002 01:28:37.779" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211002 01:28:31.776" endtime="20211002 01:28:37.779"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211002 01:28:37.779" endtime="20211002 01:28:37.780"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:28:37.788" level="INFO">Running command 'ozone sh bucket info o3://om:9862/26725-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:28:46.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:28:46.263" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211002 01:28:37.784" endtime="20211002 01:28:46.263"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:28:46.264" level="INFO">100</msg>
<status status="PASS" starttime="20211002 01:28:46.263" endtime="20211002 01:28:46.264"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:28:46.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:28:46.265" endtime="20211002 01:28:46.265"/>
</kw>
<status status="PASS" starttime="20211002 01:28:37.783" endtime="20211002 01:28:46.266"/>
</kw>
<msg timestamp="20211002 01:28:46.266" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:28:37.782" endtime="20211002 01:28:46.266"/>
</kw>
<msg timestamp="20211002 01:28:46.266" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211002 01:28:37.780" endtime="20211002 01:28:46.266"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211002 01:28:46.266" endtime="20211002 01:28:46.267"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:28:46.273" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/26725-rpcwoport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:28:51.462" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:28:51.462" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:28:46.269" endtime="20211002 01:28:51.462"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:28:51.463" level="INFO"/>
<status status="PASS" starttime="20211002 01:28:51.462" endtime="20211002 01:28:51.463"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:28:51.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:28:51.463" endtime="20211002 01:28:51.464"/>
</kw>
<status status="PASS" starttime="20211002 01:28:46.268" endtime="20211002 01:28:51.465"/>
</kw>
<msg timestamp="20211002 01:28:51.465" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:28:46.268" endtime="20211002 01:28:51.465"/>
</kw>
<status status="PASS" starttime="20211002 01:28:46.267" endtime="20211002 01:28:51.465"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:28:51.470" level="INFO">Running command 'ozone sh bucket info o3://om:9862/26725-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:28:56.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:28:56.616" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211002 01:28:51.467" endtime="20211002 01:28:56.616"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:28:56.618" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211002 01:28:56.617" endtime="20211002 01:28:56.618"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:28:56.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:28:56.618" endtime="20211002 01:28:56.619"/>
</kw>
<status status="PASS" starttime="20211002 01:28:51.467" endtime="20211002 01:28:56.619"/>
</kw>
<msg timestamp="20211002 01:28:56.619" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:28:51.466" endtime="20211002 01:28:56.620"/>
</kw>
<msg timestamp="20211002 01:28:56.620" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211002 01:28:51.465" endtime="20211002 01:28:56.620"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211002 01:28:56.620" endtime="20211002 01:28:56.621"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:28:56.627" level="INFO">Running command 'ozone sh bucket info o3://om:9862/26725-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:29:04.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:29:04.104" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211002 01:28:56.624" endtime="20211002 01:29:04.104"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:29:04.107" level="INFO">1000</msg>
<status status="PASS" starttime="20211002 01:29:04.105" endtime="20211002 01:29:04.108"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:29:04.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:29:04.108" endtime="20211002 01:29:04.108"/>
</kw>
<status status="PASS" starttime="20211002 01:28:56.623" endtime="20211002 01:29:04.109"/>
</kw>
<msg timestamp="20211002 01:29:04.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:28:56.622" endtime="20211002 01:29:04.109"/>
</kw>
<msg timestamp="20211002 01:29:04.109" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211002 01:28:56.621" endtime="20211002 01:29:04.109"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211002 01:29:04.110" endtime="20211002 01:29:04.110"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:29:04.114" level="INFO">Running command 'ozone sh bucket list o3://om:9862/26725-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:29:10.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:29:10.129" level="INFO">${output} = 26725-rpcwoport</msg>
<status status="PASS" starttime="20211002 01:29:04.112" endtime="20211002 01:29:10.129"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:29:10.130" level="INFO">26725-rpcwoport</msg>
<status status="PASS" starttime="20211002 01:29:10.129" endtime="20211002 01:29:10.130"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:29:10.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:29:10.131" endtime="20211002 01:29:10.132"/>
</kw>
<status status="PASS" starttime="20211002 01:29:04.112" endtime="20211002 01:29:10.132"/>
</kw>
<msg timestamp="20211002 01:29:10.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:29:04.111" endtime="20211002 01:29:10.133"/>
</kw>
<msg timestamp="20211002 01:29:10.133" level="INFO">${result} = 26725-rpcwoport</msg>
<status status="PASS" starttime="20211002 01:29:04.110" endtime="20211002 01:29:10.133"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211002 01:29:10.133" endtime="20211002 01:29:10.134"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:29:10.141" level="INFO">Running command 'ozone sh key put o3://om:9862/26725-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:32:21.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:32:21.330" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:29:10.139" endtime="20211002 01:32:21.330"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:32:21.331" level="INFO"/>
<status status="PASS" starttime="20211002 01:32:21.330" endtime="20211002 01:32:21.331"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:32:21.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:32:21.331" endtime="20211002 01:32:21.332"/>
</kw>
<status status="PASS" starttime="20211002 01:29:10.138" endtime="20211002 01:32:21.332"/>
</kw>
<msg timestamp="20211002 01:32:21.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:29:10.136" endtime="20211002 01:32:21.332"/>
</kw>
<status status="PASS" starttime="20211002 01:29:10.136" endtime="20211002 01:32:21.333"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:32:21.339" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:32:21.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:32:21.342" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:32:21.336" endtime="20211002 01:32:21.342"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:32:21.344" level="INFO"/>
<status status="PASS" starttime="20211002 01:32:21.343" endtime="20211002 01:32:21.344"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:32:21.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:32:21.345" endtime="20211002 01:32:21.346"/>
</kw>
<status status="PASS" starttime="20211002 01:32:21.335" endtime="20211002 01:32:21.347"/>
</kw>
<msg timestamp="20211002 01:32:21.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:32:21.334" endtime="20211002 01:32:21.347"/>
</kw>
<status status="PASS" starttime="20211002 01:32:21.334" endtime="20211002 01:32:21.348"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:32:21.352" level="INFO">Running command 'ozone sh key get o3://om:9862/26725-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:32:29.591" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211002 01:32:21.350" endtime="20211002 01:32:29.592"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211002 01:32:29.594" endtime="20211002 01:32:29.595"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211002 01:32:29.595" endtime="20211002 01:32:29.595"/>
</kw>
<status status="FAIL" starttime="20211002 01:32:21.350" endtime="20211002 01:32:29.597"/>
</kw>
<msg timestamp="20211002 01:32:29.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211002 01:32:21.349" endtime="20211002 01:32:29.597"/>
</kw>
<status status="FAIL" starttime="20211002 01:32:21.348" endtime="20211002 01:32:29.598"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211002 01:32:29.599" endtime="20211002 01:32:29.599"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211002 01:32:29.599" endtime="20211002 01:32:29.599"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211002 01:32:29.599" endtime="20211002 01:32:29.600"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211002 01:32:29.600" endtime="20211002 01:32:29.600"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211002 01:32:29.600" endtime="20211002 01:32:29.600"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211002 01:32:29.600" endtime="20211002 01:32:29.601"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211002 01:32:29.601" endtime="20211002 01:32:29.601"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211002 01:32:29.601" endtime="20211002 01:32:29.601"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211002 01:32:29.602" endtime="20211002 01:32:29.602"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211002 01:32:29.603" endtime="20211002 01:32:29.603"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211002 01:32:29.611" endtime="20211002 01:32:29.611"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211002 01:32:29.613" endtime="20211002 01:32:29.613"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211002 01:32:29.614" endtime="20211002 01:32:29.614"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211002 01:32:29.615" endtime="20211002 01:32:29.615"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211002 01:32:29.617" endtime="20211002 01:32:29.617"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211002 01:32:29.619" endtime="20211002 01:32:29.621"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211002 01:32:29.621" endtime="20211002 01:32:29.621"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211002 01:32:29.621" endtime="20211002 01:32:29.621"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211002 01:32:29.621" endtime="20211002 01:32:29.621"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211002 01:32:29.621" endtime="20211002 01:32:29.622"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211002 01:32:29.622" endtime="20211002 01:32:29.622"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211002 01:32:29.622" endtime="20211002 01:32:29.622"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20211002 01:32:29.622" endtime="20211002 01:32:29.622"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211002 01:32:29.622" endtime="20211002 01:32:29.622"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211002 01:32:29.623" endtime="20211002 01:32:29.623"/>
</kw>
<status status="FAIL" starttime="20211002 01:29:10.135" endtime="20211002 01:32:29.623"/>
</kw>
<status status="FAIL" starttime="20211002 01:29:10.134" endtime="20211002 01:32:29.623"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211002 01:32:29.627" endtime="20211002 01:32:29.627"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211002 01:32:29.627" endtime="20211002 01:32:29.627"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211002 01:32:29.627" endtime="20211002 01:32:29.627"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211002 01:32:29.627" endtime="20211002 01:32:29.627"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211002 01:32:29.628" endtime="20211002 01:32:29.628"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211002 01:32:29.628" endtime="20211002 01:32:29.628"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211002 01:32:29.629" endtime="20211002 01:32:29.630"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211002 01:32:29.630" endtime="20211002 01:32:29.630"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211002 01:32:29.630" endtime="20211002 01:32:29.630"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211002 01:32:29.631" endtime="20211002 01:32:29.631"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211002 01:32:29.632" endtime="20211002 01:32:29.632"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211002 01:32:29.633" endtime="20211002 01:32:29.633"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211002 01:32:29.633" endtime="20211002 01:32:29.633"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211002 01:32:29.633" endtime="20211002 01:32:29.633"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211002 01:32:29.634" endtime="20211002 01:32:29.634"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211002 01:32:29.634" endtime="20211002 01:32:29.635"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211002 01:32:29.635" endtime="20211002 01:32:29.635"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211002 01:32:29.635" endtime="20211002 01:32:29.635"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211002 01:32:29.635" endtime="20211002 01:32:29.635"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211002 01:32:29.635" endtime="20211002 01:32:29.635"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211002 01:32:29.638" endtime="20211002 01:32:29.639"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211002 01:32:29.640" endtime="20211002 01:32:29.641"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211002 01:32:29.642" endtime="20211002 01:32:29.642"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211002 01:32:29.703" endtime="20211002 01:32:29.704"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211002 01:32:29.704" endtime="20211002 01:32:29.705"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211002 01:32:29.705" endtime="20211002 01:32:29.706"/>
</kw>
<status status="FAIL" starttime="20211002 01:27:29.913" endtime="20211002 01:32:29.706"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211002 01:27:29.588" endtime="20211002 01:32:29.706">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:32:29.741" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:32:29.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:32:29.753" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211002 01:32:29.724" endtime="20211002 01:32:29.753"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:32:29.754" level="INFO">scm</msg>
<status status="PASS" starttime="20211002 01:32:29.753" endtime="20211002 01:32:29.754"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:32:29.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:32:29.754" endtime="20211002 01:32:29.757"/>
</kw>
<status status="PASS" starttime="20211002 01:32:29.723" endtime="20211002 01:32:29.758"/>
</kw>
<msg timestamp="20211002 01:32:29.758" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:32:29.723" endtime="20211002 01:32:29.758"/>
</kw>
<msg timestamp="20211002 01:32:29.764" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211002 01:32:29.723" endtime="20211002 01:32:29.765"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211002 01:32:29.767" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211002 01:32:29.766" endtime="20211002 01:32:29.767"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:32:29.794" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:32:30.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:32:30.019" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:32:29.776" endtime="20211002 01:32:30.019"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:32:30.021" level="INFO"/>
<status status="PASS" starttime="20211002 01:32:30.020" endtime="20211002 01:32:30.021"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:32:30.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:32:30.022" endtime="20211002 01:32:30.025"/>
</kw>
<status status="PASS" starttime="20211002 01:32:29.775" endtime="20211002 01:32:30.026"/>
</kw>
<msg timestamp="20211002 01:32:30.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:32:29.769" endtime="20211002 01:32:30.027"/>
</kw>
<status status="PASS" starttime="20211002 01:32:29.768" endtime="20211002 01:32:30.028"/>
</kw>
<status status="PASS" starttime="20211002 01:32:29.767" endtime="20211002 01:32:30.028"/>
</kw>
<status status="PASS" starttime="20211002 01:32:29.722" endtime="20211002 01:32:30.028"/>
</kw>
<status status="PASS" starttime="20211002 01:32:29.720" endtime="20211002 01:32:30.028"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:32:30.053" level="INFO">Running command 'ozone sh volume create o3://om:9862/26725-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:32:40.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:32:40.818" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:32:30.031" endtime="20211002 01:32:40.818"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:32:40.820" level="INFO"/>
<status status="PASS" starttime="20211002 01:32:40.819" endtime="20211002 01:32:40.820"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:32:40.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:32:40.820" endtime="20211002 01:32:40.821"/>
</kw>
<status status="PASS" starttime="20211002 01:32:30.030" endtime="20211002 01:32:40.821"/>
</kw>
<msg timestamp="20211002 01:32:40.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:32:30.030" endtime="20211002 01:32:40.821"/>
</kw>
<status status="PASS" starttime="20211002 01:32:30.029" endtime="20211002 01:32:40.822"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:32:40.827" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/26725-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:32:49.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:32:49.167" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211002 01:32:40.824" endtime="20211002 01:32:49.167"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:32:49.168" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211002 01:32:49.167" endtime="20211002 01:32:49.168"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:32:49.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:32:49.169" endtime="20211002 01:32:49.169"/>
</kw>
<status status="PASS" starttime="20211002 01:32:40.823" endtime="20211002 01:32:49.170"/>
</kw>
<msg timestamp="20211002 01:32:49.170" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:32:40.823" endtime="20211002 01:32:49.170"/>
</kw>
<msg timestamp="20211002 01:32:49.170" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211002 01:32:40.822" endtime="20211002 01:32:49.170"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211002 01:32:49.170" endtime="20211002 01:32:49.172"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:32:49.177" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/26725-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:32:57.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:32:57.303" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211002 01:32:49.175" endtime="20211002 01:32:57.303"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:32:57.305" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211002 01:32:57.304" endtime="20211002 01:32:57.305"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:32:57.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:32:57.305" endtime="20211002 01:32:57.306"/>
</kw>
<status status="PASS" starttime="20211002 01:32:49.173" endtime="20211002 01:32:57.306"/>
</kw>
<msg timestamp="20211002 01:32:57.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:32:49.172" endtime="20211002 01:32:57.306"/>
</kw>
<msg timestamp="20211002 01:32:57.306" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211002 01:32:49.172" endtime="20211002 01:32:57.306"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:32:57.311" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/26725-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:33:03.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:33:03.472" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211002 01:32:57.309" endtime="20211002 01:33:03.472"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:33:03.473" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211002 01:33:03.473" endtime="20211002 01:33:03.473"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:33:03.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:33:03.474" endtime="20211002 01:33:03.474"/>
</kw>
<status status="PASS" starttime="20211002 01:32:57.308" endtime="20211002 01:33:03.475"/>
</kw>
<msg timestamp="20211002 01:33:03.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:32:57.307" endtime="20211002 01:33:03.475"/>
</kw>
<msg timestamp="20211002 01:33:03.475" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211002 01:32:57.307" endtime="20211002 01:33:03.475"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211002 01:33:03.475" endtime="20211002 01:33:03.477"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:33:03.482" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/26725-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:33:10.505" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:33:10.505" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211002 01:33:03.479" endtime="20211002 01:33:10.505"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:33:10.507" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211002 01:33:10.506" endtime="20211002 01:33:10.507"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:33:10.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:33:10.508" endtime="20211002 01:33:10.509"/>
</kw>
<status status="PASS" starttime="20211002 01:33:03.479" endtime="20211002 01:33:10.510"/>
</kw>
<msg timestamp="20211002 01:33:10.510" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:33:03.478" endtime="20211002 01:33:10.511"/>
</kw>
<msg timestamp="20211002 01:33:10.511" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211002 01:33:03.477" endtime="20211002 01:33:10.511"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:33:10.517" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/26725-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:33:18.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:33:18.058" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211002 01:33:10.515" endtime="20211002 01:33:18.058"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:33:18.060" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211002 01:33:18.059" endtime="20211002 01:33:18.060"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:33:18.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:33:18.060" endtime="20211002 01:33:18.061"/>
</kw>
<status status="PASS" starttime="20211002 01:33:10.513" endtime="20211002 01:33:18.061"/>
</kw>
<msg timestamp="20211002 01:33:18.061" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:33:10.513" endtime="20211002 01:33:18.061"/>
</kw>
<msg timestamp="20211002 01:33:18.062" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211002 01:33:10.512" endtime="20211002 01:33:18.062"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211002 01:33:18.062" endtime="20211002 01:33:18.063"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:33:18.067" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/26725-rpcwoport2 -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:33:23.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:33:23.920" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211002 01:33:18.065" endtime="20211002 01:33:23.920"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:33:23.921" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211002 01:33:23.921" endtime="20211002 01:33:23.921"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:33:23.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:33:23.922" endtime="20211002 01:33:23.922"/>
</kw>
<status status="PASS" starttime="20211002 01:33:18.064" endtime="20211002 01:33:23.923"/>
</kw>
<msg timestamp="20211002 01:33:23.923" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:33:18.064" endtime="20211002 01:33:23.923"/>
</kw>
<msg timestamp="20211002 01:33:23.924" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211002 01:33:18.063" endtime="20211002 01:33:23.924"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:33:23.928" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/26725-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:33:30.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:33:30.816" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211002 01:33:23.926" endtime="20211002 01:33:30.816"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:33:30.817" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211002 01:33:30.816" endtime="20211002 01:33:30.817"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:33:30.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:33:30.817" endtime="20211002 01:33:30.818"/>
</kw>
<status status="PASS" starttime="20211002 01:33:23.925" endtime="20211002 01:33:30.818"/>
</kw>
<msg timestamp="20211002 01:33:30.818" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:33:23.925" endtime="20211002 01:33:30.819"/>
</kw>
<msg timestamp="20211002 01:33:30.819" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211002 01:33:23.924" endtime="20211002 01:33:30.819"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211002 01:33:30.819" endtime="20211002 01:33:30.820"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211002 01:33:30.820" endtime="20211002 01:33:30.821"/>
</kw>
<status status="PASS" starttime="20211002 01:32:30.029" endtime="20211002 01:33:30.821"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211002 01:32:29.711" endtime="20211002 01:33:30.821"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:33:30.828" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:33:30.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:33:30.833" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211002 01:33:30.826" endtime="20211002 01:33:30.833"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:33:30.836" level="INFO">scm</msg>
<status status="PASS" starttime="20211002 01:33:30.834" endtime="20211002 01:33:30.836"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:33:30.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:33:30.837" endtime="20211002 01:33:30.838"/>
</kw>
<status status="PASS" starttime="20211002 01:33:30.825" endtime="20211002 01:33:30.838"/>
</kw>
<msg timestamp="20211002 01:33:30.838" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:33:30.825" endtime="20211002 01:33:30.839"/>
</kw>
<msg timestamp="20211002 01:33:30.839" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211002 01:33:30.824" endtime="20211002 01:33:30.839"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211002 01:33:30.841" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211002 01:33:30.840" endtime="20211002 01:33:30.841"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:33:30.848" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:33:30.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:33:30.896" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:33:30.845" endtime="20211002 01:33:30.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:33:30.898" level="INFO"/>
<status status="PASS" starttime="20211002 01:33:30.897" endtime="20211002 01:33:30.898"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:33:30.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:33:30.899" endtime="20211002 01:33:30.899"/>
</kw>
<status status="PASS" starttime="20211002 01:33:30.844" endtime="20211002 01:33:30.900"/>
</kw>
<msg timestamp="20211002 01:33:30.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:33:30.844" endtime="20211002 01:33:30.900"/>
</kw>
<status status="PASS" starttime="20211002 01:33:30.842" endtime="20211002 01:33:30.900"/>
</kw>
<status status="PASS" starttime="20211002 01:33:30.841" endtime="20211002 01:33:30.900"/>
</kw>
<status status="PASS" starttime="20211002 01:33:30.824" endtime="20211002 01:33:30.901"/>
</kw>
<status status="PASS" starttime="20211002 01:33:30.823" endtime="20211002 01:33:30.901"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:33:30.905" level="INFO">Running command 'ozone sh bucket create o3://om:9862/26725-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:33:37.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:33:37.822" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:33:30.903" endtime="20211002 01:33:37.822"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:33:37.824" level="INFO"/>
<status status="PASS" starttime="20211002 01:33:37.823" endtime="20211002 01:33:37.824"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:33:37.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:33:37.824" endtime="20211002 01:33:37.825"/>
</kw>
<status status="PASS" starttime="20211002 01:33:30.903" endtime="20211002 01:33:37.825"/>
</kw>
<msg timestamp="20211002 01:33:37.825" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:33:30.902" endtime="20211002 01:33:37.825"/>
</kw>
<status status="PASS" starttime="20211002 01:33:30.902" endtime="20211002 01:33:37.826"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:33:37.831" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/26725-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:33:45.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:33:45.770" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211002 01:33:37.828" endtime="20211002 01:33:45.771"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:33:45.772" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211002 01:33:45.771" endtime="20211002 01:33:45.773"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:33:45.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:33:45.773" endtime="20211002 01:33:45.775"/>
</kw>
<status status="PASS" starttime="20211002 01:33:37.827" endtime="20211002 01:33:45.776"/>
</kw>
<msg timestamp="20211002 01:33:45.776" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:33:37.827" endtime="20211002 01:33:45.776"/>
</kw>
<msg timestamp="20211002 01:33:45.777" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211002 01:33:37.826" endtime="20211002 01:33:45.777"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211002 01:33:45.777" endtime="20211002 01:33:45.778"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:33:45.784" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/26725-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:33:52.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:33:52.056" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20211002 01:33:45.782" endtime="20211002 01:33:52.056"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:33:52.057" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20211002 01:33:52.056" endtime="20211002 01:33:52.057"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:33:52.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:33:52.057" endtime="20211002 01:33:52.058"/>
</kw>
<status status="PASS" starttime="20211002 01:33:45.781" endtime="20211002 01:33:52.058"/>
</kw>
<msg timestamp="20211002 01:33:52.058" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:33:45.780" endtime="20211002 01:33:52.059"/>
</kw>
<msg timestamp="20211002 01:33:52.059" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20211002 01:33:45.778" endtime="20211002 01:33:52.059"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:33:52.063" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/26725-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:33:58.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:33:58.639" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211002 01:33:52.061" endtime="20211002 01:33:58.640"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:33:58.641" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211002 01:33:58.640" endtime="20211002 01:33:58.642"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:33:58.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:33:58.642" endtime="20211002 01:33:58.645"/>
</kw>
<status status="PASS" starttime="20211002 01:33:52.060" endtime="20211002 01:33:58.645"/>
</kw>
<msg timestamp="20211002 01:33:58.645" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:33:52.060" endtime="20211002 01:33:58.646"/>
</kw>
<msg timestamp="20211002 01:33:58.646" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211002 01:33:52.059" endtime="20211002 01:33:58.646"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211002 01:33:58.646" endtime="20211002 01:33:58.648"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:33:58.655" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/26725-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:34:06.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:34:06.198" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211002 01:33:58.653" endtime="20211002 01:34:06.198"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:34:06.199" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211002 01:34:06.198" endtime="20211002 01:34:06.199"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:34:06.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:34:06.199" endtime="20211002 01:34:06.200"/>
</kw>
<status status="PASS" starttime="20211002 01:33:58.652" endtime="20211002 01:34:06.200"/>
</kw>
<msg timestamp="20211002 01:34:06.200" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:33:58.652" endtime="20211002 01:34:06.201"/>
</kw>
<msg timestamp="20211002 01:34:06.201" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211002 01:33:58.648" endtime="20211002 01:34:06.201"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:34:06.206" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/26725-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:34:13.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:34:13.706" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211002 01:34:06.203" endtime="20211002 01:34:13.706"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:34:13.708" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211002 01:34:13.706" endtime="20211002 01:34:13.708"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:34:13.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:34:13.708" endtime="20211002 01:34:13.709"/>
</kw>
<status status="PASS" starttime="20211002 01:34:06.202" endtime="20211002 01:34:13.709"/>
</kw>
<msg timestamp="20211002 01:34:13.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:34:06.202" endtime="20211002 01:34:13.709"/>
</kw>
<msg timestamp="20211002 01:34:13.710" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211002 01:34:06.201" endtime="20211002 01:34:13.710"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211002 01:34:13.710" endtime="20211002 01:34:13.711"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:34:13.717" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/26725-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:34:21.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:34:21.116" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211002 01:34:13.714" endtime="20211002 01:34:21.116"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:34:21.117" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211002 01:34:21.116" endtime="20211002 01:34:21.117"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:34:21.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:34:21.117" endtime="20211002 01:34:21.118"/>
</kw>
<status status="PASS" starttime="20211002 01:34:13.712" endtime="20211002 01:34:21.118"/>
</kw>
<msg timestamp="20211002 01:34:21.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:34:13.712" endtime="20211002 01:34:21.119"/>
</kw>
<msg timestamp="20211002 01:34:21.119" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211002 01:34:13.711" endtime="20211002 01:34:21.119"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:34:21.124" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/26725-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:34:28.679" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:34:28.680" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211002 01:34:21.121" endtime="20211002 01:34:28.680"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:34:28.682" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211002 01:34:28.680" endtime="20211002 01:34:28.683"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:34:28.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:34:28.683" endtime="20211002 01:34:28.685"/>
</kw>
<status status="PASS" starttime="20211002 01:34:21.121" endtime="20211002 01:34:28.685"/>
</kw>
<msg timestamp="20211002 01:34:28.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:34:21.120" endtime="20211002 01:34:28.686"/>
</kw>
<msg timestamp="20211002 01:34:28.686" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211002 01:34:21.119" endtime="20211002 01:34:28.686"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211002 01:34:28.687" endtime="20211002 01:34:28.688"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211002 01:34:28.688" endtime="20211002 01:34:28.689"/>
</kw>
<status status="PASS" starttime="20211002 01:33:30.901" endtime="20211002 01:34:28.690"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211002 01:33:30.822" endtime="20211002 01:34:28.690"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:34:28.700" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:34:28.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:34:28.710" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211002 01:34:28.697" endtime="20211002 01:34:28.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:34:28.713" level="INFO">scm</msg>
<status status="PASS" starttime="20211002 01:34:28.711" endtime="20211002 01:34:28.713"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:34:28.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:34:28.713" endtime="20211002 01:34:28.715"/>
</kw>
<status status="PASS" starttime="20211002 01:34:28.696" endtime="20211002 01:34:28.715"/>
</kw>
<msg timestamp="20211002 01:34:28.716" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:34:28.695" endtime="20211002 01:34:28.716"/>
</kw>
<msg timestamp="20211002 01:34:28.717" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211002 01:34:28.694" endtime="20211002 01:34:28.717"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211002 01:34:28.719" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211002 01:34:28.717" endtime="20211002 01:34:28.719"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:34:28.727" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:34:28.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:34:28.736" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:34:28.725" endtime="20211002 01:34:28.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:34:28.738" level="INFO"/>
<status status="PASS" starttime="20211002 01:34:28.736" endtime="20211002 01:34:28.738"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:34:28.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:34:28.738" endtime="20211002 01:34:28.739"/>
</kw>
<status status="PASS" starttime="20211002 01:34:28.724" endtime="20211002 01:34:28.739"/>
</kw>
<msg timestamp="20211002 01:34:28.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:34:28.724" endtime="20211002 01:34:28.740"/>
</kw>
<status status="PASS" starttime="20211002 01:34:28.722" endtime="20211002 01:34:28.740"/>
</kw>
<status status="PASS" starttime="20211002 01:34:28.722" endtime="20211002 01:34:28.740"/>
</kw>
<status status="PASS" starttime="20211002 01:34:28.693" endtime="20211002 01:34:28.741"/>
</kw>
<status status="PASS" starttime="20211002 01:34:28.692" endtime="20211002 01:34:28.741"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:34:28.747" level="INFO">Running command 'ozone sh key put o3://om:9862/26725-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:37:39.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:37:39.012" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:34:28.744" endtime="20211002 01:37:39.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:37:39.013" level="INFO"/>
<status status="PASS" starttime="20211002 01:37:39.012" endtime="20211002 01:37:39.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:37:39.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:37:39.013" endtime="20211002 01:37:39.015"/>
</kw>
<status status="PASS" starttime="20211002 01:34:28.743" endtime="20211002 01:37:39.016"/>
</kw>
<msg timestamp="20211002 01:37:39.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:34:28.743" endtime="20211002 01:37:39.016"/>
</kw>
<status status="PASS" starttime="20211002 01:34:28.742" endtime="20211002 01:37:39.017"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:37:39.022" level="INFO">Running command 'ozone sh key getacl o3://om:9862/26725-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:37:45.361" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:37:45.362" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211002 01:37:39.020" endtime="20211002 01:37:45.362"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:37:45.363" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211002 01:37:45.362" endtime="20211002 01:37:45.363"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:37:45.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:37:45.363" endtime="20211002 01:37:45.364"/>
</kw>
<status status="PASS" starttime="20211002 01:37:39.019" endtime="20211002 01:37:45.364"/>
</kw>
<msg timestamp="20211002 01:37:45.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:37:39.018" endtime="20211002 01:37:45.365"/>
</kw>
<msg timestamp="20211002 01:37:45.365" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211002 01:37:39.017" endtime="20211002 01:37:45.365"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211002 01:37:45.365" endtime="20211002 01:37:45.366"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:37:45.370" level="INFO">Running command 'ozone sh key addacl o3://om:9862/26725-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:37:52.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:37:52.035" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211002 01:37:45.368" endtime="20211002 01:37:52.035"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:37:52.038" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211002 01:37:52.036" endtime="20211002 01:37:52.038"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:37:52.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:37:52.039" endtime="20211002 01:37:52.041"/>
</kw>
<status status="PASS" starttime="20211002 01:37:45.367" endtime="20211002 01:37:52.041"/>
</kw>
<msg timestamp="20211002 01:37:52.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:37:45.367" endtime="20211002 01:37:52.042"/>
</kw>
<msg timestamp="20211002 01:37:52.043" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211002 01:37:45.366" endtime="20211002 01:37:52.043"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:37:52.050" level="INFO">Running command 'ozone sh key getacl o3://om:9862/26725-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:37:59.277" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:37:59.277" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211002 01:37:52.046" endtime="20211002 01:37:59.278"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:37:59.280" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211002 01:37:59.278" endtime="20211002 01:37:59.280"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:37:59.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:37:59.280" endtime="20211002 01:37:59.281"/>
</kw>
<status status="PASS" starttime="20211002 01:37:52.045" endtime="20211002 01:37:59.282"/>
</kw>
<msg timestamp="20211002 01:37:59.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:37:52.045" endtime="20211002 01:37:59.282"/>
</kw>
<msg timestamp="20211002 01:37:59.283" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211002 01:37:52.043" endtime="20211002 01:37:59.283"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211002 01:37:59.283" endtime="20211002 01:37:59.285"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:37:59.291" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/26725-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:38:07.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:38:07.114" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211002 01:37:59.289" endtime="20211002 01:38:07.114"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:38:07.117" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211002 01:38:07.115" endtime="20211002 01:38:07.117"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:38:07.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:38:07.117" endtime="20211002 01:38:07.118"/>
</kw>
<status status="PASS" starttime="20211002 01:37:59.288" endtime="20211002 01:38:07.118"/>
</kw>
<msg timestamp="20211002 01:38:07.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:37:59.287" endtime="20211002 01:38:07.119"/>
</kw>
<msg timestamp="20211002 01:38:07.119" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211002 01:37:59.285" endtime="20211002 01:38:07.119"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:38:07.124" level="INFO">Running command 'ozone sh key getacl o3://om:9862/26725-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:38:14.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:38:14.449" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211002 01:38:07.122" endtime="20211002 01:38:14.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:38:14.451" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20211002 01:38:14.450" endtime="20211002 01:38:14.451"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:38:14.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:38:14.451" endtime="20211002 01:38:14.452"/>
</kw>
<status status="PASS" starttime="20211002 01:38:07.121" endtime="20211002 01:38:14.452"/>
</kw>
<msg timestamp="20211002 01:38:14.452" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:38:07.120" endtime="20211002 01:38:14.452"/>
</kw>
<msg timestamp="20211002 01:38:14.453" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211002 01:38:07.119" endtime="20211002 01:38:14.453"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211002 01:38:14.453" endtime="20211002 01:38:14.454"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:38:14.463" level="INFO">Running command 'ozone sh key setacl o3://om:9862/26725-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:38:19.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:38:19.533" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211002 01:38:14.461" endtime="20211002 01:38:19.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:38:19.535" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211002 01:38:19.534" endtime="20211002 01:38:19.535"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:38:19.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:38:19.535" endtime="20211002 01:38:19.536"/>
</kw>
<status status="PASS" starttime="20211002 01:38:14.460" endtime="20211002 01:38:19.536"/>
</kw>
<msg timestamp="20211002 01:38:19.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:38:14.460" endtime="20211002 01:38:19.536"/>
</kw>
<msg timestamp="20211002 01:38:19.537" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211002 01:38:14.454" endtime="20211002 01:38:19.537"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:38:19.541" level="INFO">Running command 'ozone sh key getacl o3://om:9862/26725-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:38:24.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:38:24.337" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211002 01:38:19.539" endtime="20211002 01:38:24.337"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:38:24.338" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211002 01:38:24.338" endtime="20211002 01:38:24.339"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:38:24.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:38:24.339" endtime="20211002 01:38:24.339"/>
</kw>
<status status="PASS" starttime="20211002 01:38:19.538" endtime="20211002 01:38:24.340"/>
</kw>
<msg timestamp="20211002 01:38:24.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:38:19.538" endtime="20211002 01:38:24.340"/>
</kw>
<msg timestamp="20211002 01:38:24.340" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211002 01:38:19.537" endtime="20211002 01:38:24.340"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211002 01:38:24.341" endtime="20211002 01:38:24.341"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211002 01:38:24.341" endtime="20211002 01:38:24.342"/>
</kw>
<status status="PASS" starttime="20211002 01:34:28.741" endtime="20211002 01:38:24.342"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211002 01:34:28.691" endtime="20211002 01:38:24.343"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient prefix acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:38:24.350" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:38:24.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:38:24.357" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211002 01:38:24.348" endtime="20211002 01:38:24.357"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:38:24.358" level="INFO">scm</msg>
<status status="PASS" starttime="20211002 01:38:24.358" endtime="20211002 01:38:24.359"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:38:24.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:38:24.359" endtime="20211002 01:38:24.360"/>
</kw>
<status status="PASS" starttime="20211002 01:38:24.347" endtime="20211002 01:38:24.360"/>
</kw>
<msg timestamp="20211002 01:38:24.360" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:38:24.347" endtime="20211002 01:38:24.360"/>
</kw>
<msg timestamp="20211002 01:38:24.361" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211002 01:38:24.346" endtime="20211002 01:38:24.361"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211002 01:38:24.361" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211002 01:38:24.361" endtime="20211002 01:38:24.362"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:38:24.371" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:38:24.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:38:24.599" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:38:24.367" endtime="20211002 01:38:24.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:38:24.600" level="INFO"/>
<status status="PASS" starttime="20211002 01:38:24.599" endtime="20211002 01:38:24.600"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:38:24.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:38:24.600" endtime="20211002 01:38:24.601"/>
</kw>
<status status="PASS" starttime="20211002 01:38:24.363" endtime="20211002 01:38:24.601"/>
</kw>
<msg timestamp="20211002 01:38:24.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:38:24.363" endtime="20211002 01:38:24.602"/>
</kw>
<status status="PASS" starttime="20211002 01:38:24.362" endtime="20211002 01:38:24.602"/>
</kw>
<status status="PASS" starttime="20211002 01:38:24.362" endtime="20211002 01:38:24.602"/>
</kw>
<status status="PASS" starttime="20211002 01:38:24.346" endtime="20211002 01:38:24.602"/>
</kw>
<status status="PASS" starttime="20211002 01:38:24.345" endtime="20211002 01:38:24.602"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:38:24.609" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/26725-rpcwoport2/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:38:31.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:38:31.700" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211002 01:38:24.605" endtime="20211002 01:38:31.700"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:38:31.701" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211002 01:38:31.700" endtime="20211002 01:38:31.701"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:38:31.702" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:38:31.702" endtime="20211002 01:38:31.702"/>
</kw>
<status status="PASS" starttime="20211002 01:38:24.605" endtime="20211002 01:38:31.703"/>
</kw>
<msg timestamp="20211002 01:38:31.703" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:38:24.604" endtime="20211002 01:38:31.703"/>
</kw>
<status status="PASS" starttime="20211002 01:38:24.603" endtime="20211002 01:38:31.704"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:38:31.710" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/26725-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:38:39.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:38:39.916" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211002 01:38:31.706" endtime="20211002 01:38:39.916"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:38:39.918" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211002 01:38:39.917" endtime="20211002 01:38:39.918"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:38:39.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:38:39.918" endtime="20211002 01:38:39.920"/>
</kw>
<status status="PASS" starttime="20211002 01:38:31.705" endtime="20211002 01:38:39.920"/>
</kw>
<msg timestamp="20211002 01:38:39.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:38:31.705" endtime="20211002 01:38:39.921"/>
</kw>
<msg timestamp="20211002 01:38:39.921" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211002 01:38:31.704" endtime="20211002 01:38:39.921"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211002 01:38:39.921" endtime="20211002 01:38:39.923"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:38:39.931" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/26725-rpcwoport2/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:38:47.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:38:47.310" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20211002 01:38:39.926" endtime="20211002 01:38:47.310"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:38:47.311" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20211002 01:38:47.310" endtime="20211002 01:38:47.311"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:38:47.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:38:47.311" endtime="20211002 01:38:47.313"/>
</kw>
<status status="PASS" starttime="20211002 01:38:39.926" endtime="20211002 01:38:47.314"/>
</kw>
<msg timestamp="20211002 01:38:47.314" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:38:39.924" endtime="20211002 01:38:47.314"/>
</kw>
<msg timestamp="20211002 01:38:47.315" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20211002 01:38:39.923" endtime="20211002 01:38:47.315"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:38:47.321" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/26725-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:38:54.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:38:54.723" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211002 01:38:47.319" endtime="20211002 01:38:54.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:38:54.724" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211002 01:38:54.723" endtime="20211002 01:38:54.724"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:38:54.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:38:54.724" endtime="20211002 01:38:54.725"/>
</kw>
<status status="PASS" starttime="20211002 01:38:47.318" endtime="20211002 01:38:54.725"/>
</kw>
<msg timestamp="20211002 01:38:54.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:38:47.317" endtime="20211002 01:38:54.726"/>
</kw>
<msg timestamp="20211002 01:38:54.726" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211002 01:38:47.315" endtime="20211002 01:38:54.726"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211002 01:38:54.726" endtime="20211002 01:38:54.727"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:38:54.734" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/26725-rpcwoport2/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:39:00.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:39:00.627" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211002 01:38:54.731" endtime="20211002 01:39:00.627"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:39:00.628" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211002 01:39:00.628" endtime="20211002 01:39:00.629"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:39:00.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:39:00.629" endtime="20211002 01:39:00.629"/>
</kw>
<status status="PASS" starttime="20211002 01:38:54.730" endtime="20211002 01:39:00.630"/>
</kw>
<msg timestamp="20211002 01:39:00.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:38:54.729" endtime="20211002 01:39:00.630"/>
</kw>
<msg timestamp="20211002 01:39:00.630" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211002 01:38:54.728" endtime="20211002 01:39:00.630"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:39:00.635" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/26725-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:39:07.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:39:07.577" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20211002 01:39:00.633" endtime="20211002 01:39:07.577"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:39:07.580" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211002 01:39:07.579" endtime="20211002 01:39:07.581"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:39:07.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:39:07.581" endtime="20211002 01:39:07.583"/>
</kw>
<status status="PASS" starttime="20211002 01:39:00.632" endtime="20211002 01:39:07.584"/>
</kw>
<msg timestamp="20211002 01:39:07.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:39:00.632" endtime="20211002 01:39:07.584"/>
</kw>
<msg timestamp="20211002 01:39:07.585" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20211002 01:39:00.631" endtime="20211002 01:39:07.586"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211002 01:39:07.586" endtime="20211002 01:39:07.587"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211002 01:39:07.588" endtime="20211002 01:39:07.589"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:39:07.596" level="INFO">Running command 'ozone sh key put o3://om:9862/26725-rpcwoport2/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:42:19.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:42:19.008" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:39:07.593" endtime="20211002 01:42:19.008"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:42:19.010" level="INFO"/>
<status status="PASS" starttime="20211002 01:42:19.009" endtime="20211002 01:42:19.010"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:42:19.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:42:19.010" endtime="20211002 01:42:19.011"/>
</kw>
<status status="PASS" starttime="20211002 01:39:07.591" endtime="20211002 01:42:19.012"/>
</kw>
<msg timestamp="20211002 01:42:19.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:39:07.591" endtime="20211002 01:42:19.012"/>
</kw>
<status status="PASS" starttime="20211002 01:39:07.589" endtime="20211002 01:42:19.012"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:42:19.018" level="INFO">Running command 'ozone sh key getacl o3://om:9862/26725-rpcwoport2/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:42:23.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:42:23.948" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211002 01:42:19.014" endtime="20211002 01:42:23.948"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:42:23.949" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211002 01:42:23.948" endtime="20211002 01:42:23.949"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:42:23.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:42:23.949" endtime="20211002 01:42:23.950"/>
</kw>
<status status="PASS" starttime="20211002 01:42:19.013" endtime="20211002 01:42:23.950"/>
</kw>
<msg timestamp="20211002 01:42:23.951" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:42:19.013" endtime="20211002 01:42:23.951"/>
</kw>
<msg timestamp="20211002 01:42:23.951" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211002 01:42:19.012" endtime="20211002 01:42:23.951"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211002 01:42:23.951" endtime="20211002 01:42:23.952"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211002 01:42:23.952" endtime="20211002 01:42:23.952"/>
</kw>
<status status="PASS" starttime="20211002 01:38:24.603" endtime="20211002 01:42:23.953"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211002 01:38:24.343" endtime="20211002 01:42:23.953"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:42:23.959" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:42:23.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:42:23.963" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211002 01:42:23.957" endtime="20211002 01:42:23.963"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:42:23.964" level="INFO">scm</msg>
<status status="PASS" starttime="20211002 01:42:23.964" endtime="20211002 01:42:23.965"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:42:23.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:42:23.965" endtime="20211002 01:42:23.965"/>
</kw>
<status status="PASS" starttime="20211002 01:42:23.956" endtime="20211002 01:42:23.966"/>
</kw>
<msg timestamp="20211002 01:42:23.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:42:23.956" endtime="20211002 01:42:23.966"/>
</kw>
<msg timestamp="20211002 01:42:23.966" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211002 01:42:23.955" endtime="20211002 01:42:23.966"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211002 01:42:23.967" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211002 01:42:23.966" endtime="20211002 01:42:23.967"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:42:23.972" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:42:23.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:42:23.980" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:42:23.969" endtime="20211002 01:42:23.980"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:42:23.981" level="INFO"/>
<status status="PASS" starttime="20211002 01:42:23.980" endtime="20211002 01:42:23.981"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:42:23.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:42:23.981" endtime="20211002 01:42:23.982"/>
</kw>
<status status="PASS" starttime="20211002 01:42:23.969" endtime="20211002 01:42:23.982"/>
</kw>
<msg timestamp="20211002 01:42:23.982" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:42:23.968" endtime="20211002 01:42:23.983"/>
</kw>
<status status="PASS" starttime="20211002 01:42:23.968" endtime="20211002 01:42:23.983"/>
</kw>
<status status="PASS" starttime="20211002 01:42:23.967" endtime="20211002 01:42:23.983"/>
</kw>
<status status="PASS" starttime="20211002 01:42:23.955" endtime="20211002 01:42:23.983"/>
</kw>
<status status="PASS" starttime="20211002 01:42:23.954" endtime="20211002 01:42:23.983"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:42:23.988" level="INFO">Running command 'ozone sh volume info o3:///26725-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:42:28.914" level="INFO">${rc} = 255</msg>
<msg timestamp="20211002 01:42:28.915" level="INFO">${output} = VOLUME_NOT_FOUND Volume 26725-rpcwport is not found</msg>
<status status="PASS" starttime="20211002 01:42:23.986" endtime="20211002 01:42:28.915"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:42:28.916" level="INFO">VOLUME_NOT_FOUND Volume 26725-rpcwport is not found</msg>
<status status="PASS" starttime="20211002 01:42:28.915" endtime="20211002 01:42:28.916"/>
</kw>
<msg timestamp="20211002 01:42:28.916" level="INFO">${result} = VOLUME_NOT_FOUND Volume 26725-rpcwport is not found</msg>
<status status="PASS" starttime="20211002 01:42:23.985" endtime="20211002 01:42:28.916"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211002 01:42:28.917" endtime="20211002 01:42:28.917"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:42:28.922" level="INFO">Running command 'ozone sh volume create o3:///26725-rpcwport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:42:35.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:42:35.057" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:42:28.919" endtime="20211002 01:42:35.057"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:42:35.058" level="INFO"/>
<status status="PASS" starttime="20211002 01:42:35.057" endtime="20211002 01:42:35.058"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:42:35.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:42:35.059" endtime="20211002 01:42:35.059"/>
</kw>
<status status="PASS" starttime="20211002 01:42:28.919" endtime="20211002 01:42:35.060"/>
</kw>
<msg timestamp="20211002 01:42:35.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:42:28.918" endtime="20211002 01:42:35.060"/>
</kw>
<msg timestamp="20211002 01:42:35.060" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211002 01:42:28.917" endtime="20211002 01:42:35.060"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211002 01:42:35.061" endtime="20211002 01:42:35.061"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:42:35.066" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="26725-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:42:43.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:42:43.010" level="INFO">${output} = {
  "metadata": {},
  "name": "26725-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211002 01:42:35.063" endtime="20211002 01:42:43.010"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:42:43.012" level="INFO">{
  "metadata": {},
  "name": "26725-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-02T01:42:34.976Z",
  "modificationTime": "2021-10-02T01:42:34.976Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211002 01:42:43.011" endtime="20211002 01:42:43.012"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:42:43.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:42:43.012" endtime="20211002 01:42:43.013"/>
</kw>
<status status="PASS" starttime="20211002 01:42:35.063" endtime="20211002 01:42:43.013"/>
</kw>
<msg timestamp="20211002 01:42:43.013" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:42:35.062" endtime="20211002 01:42:43.013"/>
</kw>
<msg timestamp="20211002 01:42:43.014" level="INFO">${result} = {
  "metadata": {},
  "name": "26725-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211002 01:42:35.061" endtime="20211002 01:42:43.014"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211002 01:42:43.014" endtime="20211002 01:42:43.014"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:42:43.019" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="26725-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:42:50.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:42:50.775" level="INFO">${output} = {
  "metadata": {},
  "name": "26725-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211002 01:42:43.017" endtime="20211002 01:42:50.775"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:42:50.776" level="INFO">{
  "metadata": {},
  "name": "26725-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-02T01:42:34.976Z",
  "modificationTime": "2021-10-02T01:42:34.976Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211002 01:42:50.775" endtime="20211002 01:42:50.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:42:50.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:42:50.776" endtime="20211002 01:42:50.777"/>
</kw>
<status status="PASS" starttime="20211002 01:42:43.016" endtime="20211002 01:42:50.777"/>
</kw>
<msg timestamp="20211002 01:42:50.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:42:43.016" endtime="20211002 01:42:50.777"/>
</kw>
<msg timestamp="20211002 01:42:50.778" level="INFO">${result} = {
  "metadata": {},
  "name": "26725-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211002 01:42:43.015" endtime="20211002 01:42:50.778"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211002 01:42:50.778" endtime="20211002 01:42:50.778"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:42:50.786" level="INFO">Running command 'ozone sh volume setquota o3:///26725-rpcwport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:42:58.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:42:58.037" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:42:50.783" endtime="20211002 01:42:58.037"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:42:58.039" level="INFO"/>
<status status="PASS" starttime="20211002 01:42:58.038" endtime="20211002 01:42:58.039"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:42:58.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:42:58.039" endtime="20211002 01:42:58.041"/>
</kw>
<status status="PASS" starttime="20211002 01:42:50.781" endtime="20211002 01:42:58.041"/>
</kw>
<msg timestamp="20211002 01:42:58.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:42:50.780" endtime="20211002 01:42:58.042"/>
</kw>
<status status="PASS" starttime="20211002 01:42:50.779" endtime="20211002 01:42:58.042"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:42:58.049" level="INFO">Running command 'ozone sh volume info o3:///26725-rpcwport | jq -r '. | select(.name=="26725-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:43:05.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:43:05.417" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211002 01:42:58.046" endtime="20211002 01:43:05.417"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:43:05.418" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211002 01:43:05.417" endtime="20211002 01:43:05.418"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:43:05.419" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:43:05.418" endtime="20211002 01:43:05.419"/>
</kw>
<status status="PASS" starttime="20211002 01:42:58.045" endtime="20211002 01:43:05.419"/>
</kw>
<msg timestamp="20211002 01:43:05.419" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:42:58.045" endtime="20211002 01:43:05.420"/>
</kw>
<msg timestamp="20211002 01:43:05.420" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211002 01:42:58.043" endtime="20211002 01:43:05.420"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211002 01:43:05.421" endtime="20211002 01:43:05.422"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:43:05.429" level="INFO">Running command 'ozone sh bucket create o3:///26725-rpcwport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:43:10.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:43:10.498" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:43:05.425" endtime="20211002 01:43:10.498"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:43:10.500" level="INFO"/>
<status status="PASS" starttime="20211002 01:43:10.499" endtime="20211002 01:43:10.500"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:43:10.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:43:10.500" endtime="20211002 01:43:10.501"/>
</kw>
<status status="PASS" starttime="20211002 01:43:05.425" endtime="20211002 01:43:10.502"/>
</kw>
<msg timestamp="20211002 01:43:10.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:43:05.424" endtime="20211002 01:43:10.502"/>
</kw>
<status status="PASS" starttime="20211002 01:43:05.422" endtime="20211002 01:43:10.502"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:43:10.507" level="INFO">Running command 'ozone sh bucket info o3:///26725-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:43:18.076" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:43:18.077" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211002 01:43:10.504" endtime="20211002 01:43:18.077"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:43:18.079" level="INFO">DISK</msg>
<status status="PASS" starttime="20211002 01:43:18.077" endtime="20211002 01:43:18.079"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:43:18.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:43:18.079" endtime="20211002 01:43:18.080"/>
</kw>
<status status="PASS" starttime="20211002 01:43:10.504" endtime="20211002 01:43:18.081"/>
</kw>
<msg timestamp="20211002 01:43:18.081" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:43:10.503" endtime="20211002 01:43:18.081"/>
</kw>
<msg timestamp="20211002 01:43:18.081" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211002 01:43:10.502" endtime="20211002 01:43:18.081"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211002 01:43:18.082" endtime="20211002 01:43:18.083"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:43:18.089" level="INFO">Running command 'ozone sh bucket info o3:///26725-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:43:25.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:43:25.276" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211002 01:43:18.085" endtime="20211002 01:43:25.277"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:43:25.278" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211002 01:43:25.277" endtime="20211002 01:43:25.278"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:43:25.279" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:43:25.279" endtime="20211002 01:43:25.279"/>
</kw>
<status status="PASS" starttime="20211002 01:43:18.084" endtime="20211002 01:43:25.280"/>
</kw>
<msg timestamp="20211002 01:43:25.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:43:18.084" endtime="20211002 01:43:25.280"/>
</kw>
<msg timestamp="20211002 01:43:25.281" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211002 01:43:18.083" endtime="20211002 01:43:25.281"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211002 01:43:25.281" endtime="20211002 01:43:25.282"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:43:25.289" level="INFO">Running command 'ozone sh bucket info o3:///26725-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:43:33.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:43:33.147" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211002 01:43:25.285" endtime="20211002 01:43:33.148"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:43:33.150" level="INFO">100</msg>
<status status="PASS" starttime="20211002 01:43:33.148" endtime="20211002 01:43:33.150"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:43:33.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:43:33.151" endtime="20211002 01:43:33.152"/>
</kw>
<status status="PASS" starttime="20211002 01:43:25.284" endtime="20211002 01:43:33.153"/>
</kw>
<msg timestamp="20211002 01:43:33.153" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:43:25.283" endtime="20211002 01:43:33.153"/>
</kw>
<msg timestamp="20211002 01:43:33.154" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211002 01:43:25.282" endtime="20211002 01:43:33.154"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211002 01:43:33.154" endtime="20211002 01:43:33.155"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:43:33.160" level="INFO">Running command 'ozone sh bucket setquota o3:///26725-rpcwport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:43:40.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:43:40.582" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:43:33.157" endtime="20211002 01:43:40.582"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:43:40.584" level="INFO"/>
<status status="PASS" starttime="20211002 01:43:40.583" endtime="20211002 01:43:40.584"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:43:40.585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:43:40.584" endtime="20211002 01:43:40.585"/>
</kw>
<status status="PASS" starttime="20211002 01:43:33.156" endtime="20211002 01:43:40.585"/>
</kw>
<msg timestamp="20211002 01:43:40.585" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:43:33.156" endtime="20211002 01:43:40.585"/>
</kw>
<status status="PASS" starttime="20211002 01:43:33.155" endtime="20211002 01:43:40.586"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:43:40.591" level="INFO">Running command 'ozone sh bucket info o3:///26725-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:43:48.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:43:48.375" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211002 01:43:40.589" endtime="20211002 01:43:48.375"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:43:48.377" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211002 01:43:48.375" endtime="20211002 01:43:48.377"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:43:48.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:43:48.377" endtime="20211002 01:43:48.378"/>
</kw>
<status status="PASS" starttime="20211002 01:43:40.587" endtime="20211002 01:43:48.378"/>
</kw>
<msg timestamp="20211002 01:43:48.378" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:43:40.587" endtime="20211002 01:43:48.378"/>
</kw>
<msg timestamp="20211002 01:43:48.379" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211002 01:43:40.586" endtime="20211002 01:43:48.379"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211002 01:43:48.379" endtime="20211002 01:43:48.380"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:43:48.387" level="INFO">Running command 'ozone sh bucket info o3:///26725-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:43:54.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:43:54.097" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211002 01:43:48.383" endtime="20211002 01:43:54.097"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:43:54.098" level="INFO">1000</msg>
<status status="PASS" starttime="20211002 01:43:54.098" endtime="20211002 01:43:54.098"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:43:54.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:43:54.099" endtime="20211002 01:43:54.100"/>
</kw>
<status status="PASS" starttime="20211002 01:43:48.382" endtime="20211002 01:43:54.100"/>
</kw>
<msg timestamp="20211002 01:43:54.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:43:48.382" endtime="20211002 01:43:54.100"/>
</kw>
<msg timestamp="20211002 01:43:54.101" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211002 01:43:48.380" endtime="20211002 01:43:54.101"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211002 01:43:54.101" endtime="20211002 01:43:54.101"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:43:54.107" level="INFO">Running command 'ozone sh bucket list o3:///26725-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:44:01.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:44:01.476" level="INFO">${output} = 26725-rpcwport</msg>
<status status="PASS" starttime="20211002 01:43:54.103" endtime="20211002 01:44:01.476"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:44:01.478" level="INFO">26725-rpcwport</msg>
<status status="PASS" starttime="20211002 01:44:01.477" endtime="20211002 01:44:01.478"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:44:01.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:44:01.478" endtime="20211002 01:44:01.479"/>
</kw>
<status status="PASS" starttime="20211002 01:43:54.103" endtime="20211002 01:44:01.479"/>
</kw>
<msg timestamp="20211002 01:44:01.479" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:43:54.102" endtime="20211002 01:44:01.480"/>
</kw>
<msg timestamp="20211002 01:44:01.480" level="INFO">${result} = 26725-rpcwport</msg>
<status status="PASS" starttime="20211002 01:43:54.101" endtime="20211002 01:44:01.480"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211002 01:44:01.480" endtime="20211002 01:44:01.481"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:44:01.488" level="INFO">Running command 'ozone sh key put o3:///26725-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:47:11.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:47:11.997" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:44:01.485" endtime="20211002 01:47:11.997"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:47:11.998" level="INFO"/>
<status status="PASS" starttime="20211002 01:47:11.998" endtime="20211002 01:47:11.999"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:47:12.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:47:11.999" endtime="20211002 01:47:12.000"/>
</kw>
<status status="PASS" starttime="20211002 01:44:01.484" endtime="20211002 01:47:12.000"/>
</kw>
<msg timestamp="20211002 01:47:12.000" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:44:01.483" endtime="20211002 01:47:12.001"/>
</kw>
<status status="PASS" starttime="20211002 01:44:01.482" endtime="20211002 01:47:12.001"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:47:12.005" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:47:12.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:47:12.010" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:47:12.002" endtime="20211002 01:47:12.010"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:47:12.012" level="INFO"/>
<status status="PASS" starttime="20211002 01:47:12.011" endtime="20211002 01:47:12.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:47:12.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:47:12.013" endtime="20211002 01:47:12.014"/>
</kw>
<status status="PASS" starttime="20211002 01:47:12.002" endtime="20211002 01:47:12.015"/>
</kw>
<msg timestamp="20211002 01:47:12.015" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:47:12.002" endtime="20211002 01:47:12.015"/>
</kw>
<status status="PASS" starttime="20211002 01:47:12.001" endtime="20211002 01:47:12.016"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:47:12.022" level="INFO">Running command 'ozone sh key get o3:///26725-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:47:22.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:47:22.504" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:47:12.019" endtime="20211002 01:47:22.504"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:47:22.505" level="INFO"/>
<status status="PASS" starttime="20211002 01:47:22.505" endtime="20211002 01:47:22.505"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:47:22.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:47:22.506" endtime="20211002 01:47:22.506"/>
</kw>
<status status="PASS" starttime="20211002 01:47:12.018" endtime="20211002 01:47:22.507"/>
</kw>
<msg timestamp="20211002 01:47:22.507" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:47:12.018" endtime="20211002 01:47:22.507"/>
</kw>
<status status="PASS" starttime="20211002 01:47:12.016" endtime="20211002 01:47:22.507"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:47:22.516" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:47:22.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:47:22.521" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:47:22.511" endtime="20211002 01:47:22.521"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:47:22.522" level="INFO"/>
<status status="PASS" starttime="20211002 01:47:22.521" endtime="20211002 01:47:22.522"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:47:22.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:47:22.522" endtime="20211002 01:47:22.523"/>
</kw>
<status status="PASS" starttime="20211002 01:47:22.510" endtime="20211002 01:47:22.525"/>
</kw>
<msg timestamp="20211002 01:47:22.525" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:47:22.509" endtime="20211002 01:47:22.525"/>
</kw>
<status status="PASS" starttime="20211002 01:47:22.509" endtime="20211002 01:47:22.526"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:47:22.534" level="INFO">Running command 'ozone sh key put -t RATIS o3:///26725-rpcwport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:47:23.955" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211002 01:47:22.529" endtime="20211002 01:47:23.955"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211002 01:47:23.956" endtime="20211002 01:47:23.957"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211002 01:47:23.957" endtime="20211002 01:47:23.957"/>
</kw>
<status status="FAIL" starttime="20211002 01:47:22.528" endtime="20211002 01:47:23.958"/>
</kw>
<msg timestamp="20211002 01:47:23.958" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211002 01:47:22.527" endtime="20211002 01:47:23.958"/>
</kw>
<status status="FAIL" starttime="20211002 01:47:22.526" endtime="20211002 01:47:23.959"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211002 01:47:23.959" endtime="20211002 01:47:23.959"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211002 01:47:23.960" endtime="20211002 01:47:23.960"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211002 01:47:23.960" endtime="20211002 01:47:23.960"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211002 01:47:23.960" endtime="20211002 01:47:23.960"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211002 01:47:23.961" endtime="20211002 01:47:23.961"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211002 01:47:23.961" endtime="20211002 01:47:23.961"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211002 01:47:23.961" endtime="20211002 01:47:23.961"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211002 01:47:23.961" endtime="20211002 01:47:23.962"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211002 01:47:23.962" endtime="20211002 01:47:23.962"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211002 01:47:23.962" endtime="20211002 01:47:23.962"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211002 01:47:23.962" endtime="20211002 01:47:23.962"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211002 01:47:23.962" endtime="20211002 01:47:23.962"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211002 01:47:23.965" endtime="20211002 01:47:23.966"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211002 01:47:23.966" endtime="20211002 01:47:23.967"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211002 01:47:23.968" endtime="20211002 01:47:23.968"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211002 01:47:23.969" endtime="20211002 01:47:23.970"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211002 01:47:23.970" endtime="20211002 01:47:23.970"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211002 01:47:23.971" endtime="20211002 01:47:23.972"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211002 01:47:23.972" endtime="20211002 01:47:23.973"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211002 01:47:23.973" endtime="20211002 01:47:23.973"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20211002 01:47:23.974" endtime="20211002 01:47:23.974"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211002 01:47:23.974" endtime="20211002 01:47:23.974"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211002 01:47:23.974" endtime="20211002 01:47:23.974"/>
</kw>
<status status="FAIL" starttime="20211002 01:44:01.481" endtime="20211002 01:47:23.974"/>
</kw>
<status status="FAIL" starttime="20211002 01:44:01.481" endtime="20211002 01:47:23.975"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211002 01:47:23.975" endtime="20211002 01:47:23.975"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211002 01:47:23.978" endtime="20211002 01:47:23.978"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211002 01:47:23.978" endtime="20211002 01:47:23.979"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211002 01:47:23.979" endtime="20211002 01:47:23.979"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211002 01:47:23.980" endtime="20211002 01:47:23.980"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211002 01:47:23.980" endtime="20211002 01:47:23.981"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211002 01:47:23.981" endtime="20211002 01:47:23.981"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211002 01:47:23.982" endtime="20211002 01:47:23.982"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211002 01:47:23.982" endtime="20211002 01:47:23.982"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211002 01:47:23.983" endtime="20211002 01:47:23.984"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211002 01:47:23.984" endtime="20211002 01:47:23.984"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211002 01:47:23.985" endtime="20211002 01:47:23.985"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211002 01:47:23.986" endtime="20211002 01:47:23.986"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211002 01:47:23.986" endtime="20211002 01:47:23.986"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211002 01:47:23.987" endtime="20211002 01:47:23.987"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211002 01:47:23.988" endtime="20211002 01:47:23.988"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211002 01:47:23.988" endtime="20211002 01:47:23.989"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211002 01:47:23.989" endtime="20211002 01:47:23.989"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211002 01:47:23.990" endtime="20211002 01:47:23.990"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211002 01:47:23.991" endtime="20211002 01:47:23.991"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211002 01:47:23.991" endtime="20211002 01:47:23.992"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211002 01:47:23.992" endtime="20211002 01:47:23.993"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211002 01:47:23.994" endtime="20211002 01:47:23.994"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211002 01:47:23.995" endtime="20211002 01:47:23.995"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211002 01:47:23.995" endtime="20211002 01:47:23.996"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211002 01:47:23.996" endtime="20211002 01:47:23.996"/>
</kw>
<status status="FAIL" starttime="20211002 01:42:23.984" endtime="20211002 01:47:23.996"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211002 01:42:23.953" endtime="20211002 01:47:23.998">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t7" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:47:24.030" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:47:24.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:47:24.046" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211002 01:47:24.015" endtime="20211002 01:47:24.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:47:24.049" level="INFO">scm</msg>
<status status="PASS" starttime="20211002 01:47:24.046" endtime="20211002 01:47:24.052"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:47:24.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:47:24.052" endtime="20211002 01:47:24.053"/>
</kw>
<status status="PASS" starttime="20211002 01:47:24.013" endtime="20211002 01:47:24.053"/>
</kw>
<msg timestamp="20211002 01:47:24.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:47:24.012" endtime="20211002 01:47:24.053"/>
</kw>
<msg timestamp="20211002 01:47:24.054" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211002 01:47:24.010" endtime="20211002 01:47:24.054"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211002 01:47:24.055" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211002 01:47:24.054" endtime="20211002 01:47:24.055"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:47:24.067" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:47:24.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:47:24.254" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:47:24.061" endtime="20211002 01:47:24.254"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:47:24.256" level="INFO"/>
<status status="PASS" starttime="20211002 01:47:24.255" endtime="20211002 01:47:24.256"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:47:24.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:47:24.256" endtime="20211002 01:47:24.257"/>
</kw>
<status status="PASS" starttime="20211002 01:47:24.061" endtime="20211002 01:47:24.257"/>
</kw>
<msg timestamp="20211002 01:47:24.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:47:24.060" endtime="20211002 01:47:24.257"/>
</kw>
<status status="PASS" starttime="20211002 01:47:24.059" endtime="20211002 01:47:24.258"/>
</kw>
<status status="PASS" starttime="20211002 01:47:24.055" endtime="20211002 01:47:24.258"/>
</kw>
<status status="PASS" starttime="20211002 01:47:24.007" endtime="20211002 01:47:24.259"/>
</kw>
<status status="PASS" starttime="20211002 01:47:24.004" endtime="20211002 01:47:24.259"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:47:24.273" level="INFO">Running command 'ozone sh volume info /26725-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:47:37.304" level="INFO">${rc} = 255</msg>
<msg timestamp="20211002 01:47:37.304" level="INFO">${output} = VOLUME_NOT_FOUND Volume 26725-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20211002 01:47:24.268" endtime="20211002 01:47:37.304"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:47:37.305" level="INFO">VOLUME_NOT_FOUND Volume 26725-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20211002 01:47:37.304" endtime="20211002 01:47:37.305"/>
</kw>
<msg timestamp="20211002 01:47:37.306" level="INFO">${result} = VOLUME_NOT_FOUND Volume 26725-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20211002 01:47:24.266" endtime="20211002 01:47:37.306"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211002 01:47:37.306" endtime="20211002 01:47:37.306"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:47:37.315" level="INFO">Running command 'ozone sh volume create /26725-rpcwoscheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:47:46.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:47:46.906" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:47:37.309" endtime="20211002 01:47:46.906"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:47:46.908" level="INFO"/>
<status status="PASS" starttime="20211002 01:47:46.907" endtime="20211002 01:47:46.909"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:47:46.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:47:46.909" endtime="20211002 01:47:46.909"/>
</kw>
<status status="PASS" starttime="20211002 01:47:37.308" endtime="20211002 01:47:46.910"/>
</kw>
<msg timestamp="20211002 01:47:46.910" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:47:37.307" endtime="20211002 01:47:46.910"/>
</kw>
<msg timestamp="20211002 01:47:46.910" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211002 01:47:37.307" endtime="20211002 01:47:46.910"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211002 01:47:46.911" endtime="20211002 01:47:46.911"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:47:46.917" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="26725-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:47:54.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:47:54.957" level="INFO">${output} = {
  "metadata": {},
  "name": "26725-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211002 01:47:46.914" endtime="20211002 01:47:54.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:47:54.960" level="INFO">{
  "metadata": {},
  "name": "26725-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-02T01:47:46.528Z",
  "modificationTime": "2021-10-02T01:47:46.528Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211002 01:47:54.958" endtime="20211002 01:47:54.960"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:47:54.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:47:54.960" endtime="20211002 01:47:54.961"/>
</kw>
<status status="PASS" starttime="20211002 01:47:46.914" endtime="20211002 01:47:54.962"/>
</kw>
<msg timestamp="20211002 01:47:54.962" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:47:46.913" endtime="20211002 01:47:54.962"/>
</kw>
<msg timestamp="20211002 01:47:54.963" level="INFO">${result} = {
  "metadata": {},
  "name": "26725-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211002 01:47:46.911" endtime="20211002 01:47:54.963"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211002 01:47:54.963" endtime="20211002 01:47:54.964"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:47:54.971" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="26725-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:48:02.853" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:48:02.853" level="INFO">${output} = {
  "metadata": {},
  "name": "26725-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211002 01:47:54.967" endtime="20211002 01:48:02.853"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:48:02.855" level="INFO">{
  "metadata": {},
  "name": "26725-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-02T01:47:46.528Z",
  "modificationTime": "2021-10-02T01:47:46.528Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211002 01:48:02.854" endtime="20211002 01:48:02.855"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:48:02.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:48:02.855" endtime="20211002 01:48:02.855"/>
</kw>
<status status="PASS" starttime="20211002 01:47:54.966" endtime="20211002 01:48:02.856"/>
</kw>
<msg timestamp="20211002 01:48:02.856" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:47:54.965" endtime="20211002 01:48:02.856"/>
</kw>
<msg timestamp="20211002 01:48:02.856" level="INFO">${result} = {
  "metadata": {},
  "name": "26725-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211002 01:47:54.964" endtime="20211002 01:48:02.856"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211002 01:48:02.857" endtime="20211002 01:48:02.857"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:48:02.862" level="INFO">Running command 'ozone sh volume setquota /26725-rpcwoscheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:48:09.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:48:09.709" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:48:02.860" endtime="20211002 01:48:09.709"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:48:09.711" level="INFO"/>
<status status="PASS" starttime="20211002 01:48:09.710" endtime="20211002 01:48:09.711"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:48:09.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:48:09.712" endtime="20211002 01:48:09.713"/>
</kw>
<status status="PASS" starttime="20211002 01:48:02.859" endtime="20211002 01:48:09.714"/>
</kw>
<msg timestamp="20211002 01:48:09.714" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:48:02.859" endtime="20211002 01:48:09.714"/>
</kw>
<status status="PASS" starttime="20211002 01:48:02.857" endtime="20211002 01:48:09.715"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:48:09.722" level="INFO">Running command 'ozone sh volume info /26725-rpcwoscheme | jq -r '. | select(.name=="26725-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:48:15.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:48:15.821" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211002 01:48:09.719" endtime="20211002 01:48:15.821"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:48:15.822" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211002 01:48:15.822" endtime="20211002 01:48:15.822"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:48:15.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:48:15.823" endtime="20211002 01:48:15.823"/>
</kw>
<status status="PASS" starttime="20211002 01:48:09.718" endtime="20211002 01:48:15.824"/>
</kw>
<msg timestamp="20211002 01:48:15.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:48:09.717" endtime="20211002 01:48:15.824"/>
</kw>
<msg timestamp="20211002 01:48:15.824" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211002 01:48:09.715" endtime="20211002 01:48:15.824"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211002 01:48:15.824" endtime="20211002 01:48:15.825"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:48:15.829" level="INFO">Running command 'ozone sh bucket create /26725-rpcwoscheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:48:21.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:48:21.993" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:48:15.827" endtime="20211002 01:48:21.993"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:48:21.994" level="INFO"/>
<status status="PASS" starttime="20211002 01:48:21.994" endtime="20211002 01:48:21.995"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:48:21.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:48:21.995" endtime="20211002 01:48:21.996"/>
</kw>
<status status="PASS" starttime="20211002 01:48:15.826" endtime="20211002 01:48:21.996"/>
</kw>
<msg timestamp="20211002 01:48:21.996" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:48:15.826" endtime="20211002 01:48:21.996"/>
</kw>
<status status="PASS" starttime="20211002 01:48:15.825" endtime="20211002 01:48:21.997"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:48:22.004" level="INFO">Running command 'ozone sh bucket info /26725-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:48:30.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:48:30.019" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211002 01:48:22.000" endtime="20211002 01:48:30.019"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:48:30.020" level="INFO">DISK</msg>
<status status="PASS" starttime="20211002 01:48:30.019" endtime="20211002 01:48:30.020"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:48:30.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:48:30.020" endtime="20211002 01:48:30.021"/>
</kw>
<status status="PASS" starttime="20211002 01:48:21.999" endtime="20211002 01:48:30.021"/>
</kw>
<msg timestamp="20211002 01:48:30.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:48:21.999" endtime="20211002 01:48:30.021"/>
</kw>
<msg timestamp="20211002 01:48:30.022" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211002 01:48:21.997" endtime="20211002 01:48:30.022"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211002 01:48:30.022" endtime="20211002 01:48:30.022"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:48:30.027" level="INFO">Running command 'ozone sh bucket info /26725-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:48:37.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:48:37.843" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211002 01:48:30.025" endtime="20211002 01:48:37.843"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:48:37.846" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211002 01:48:37.844" endtime="20211002 01:48:37.846"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:48:37.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:48:37.846" endtime="20211002 01:48:37.848"/>
</kw>
<status status="PASS" starttime="20211002 01:48:30.024" endtime="20211002 01:48:37.848"/>
</kw>
<msg timestamp="20211002 01:48:37.848" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:48:30.024" endtime="20211002 01:48:37.849"/>
</kw>
<msg timestamp="20211002 01:48:37.849" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211002 01:48:30.023" endtime="20211002 01:48:37.849"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211002 01:48:37.850" endtime="20211002 01:48:37.850"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:48:37.857" level="INFO">Running command 'ozone sh bucket info /26725-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:48:45.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:48:45.653" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211002 01:48:37.854" endtime="20211002 01:48:45.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:48:45.654" level="INFO">100</msg>
<status status="PASS" starttime="20211002 01:48:45.653" endtime="20211002 01:48:45.655"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:48:45.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:48:45.655" endtime="20211002 01:48:45.656"/>
</kw>
<status status="PASS" starttime="20211002 01:48:37.853" endtime="20211002 01:48:45.657"/>
</kw>
<msg timestamp="20211002 01:48:45.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:48:37.853" endtime="20211002 01:48:45.657"/>
</kw>
<msg timestamp="20211002 01:48:45.657" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211002 01:48:37.851" endtime="20211002 01:48:45.658"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211002 01:48:45.658" endtime="20211002 01:48:45.659"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:48:45.664" level="INFO">Running command 'ozone sh bucket setquota /26725-rpcwoscheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:48:53.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:48:53.219" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:48:45.661" endtime="20211002 01:48:53.219"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:48:53.221" level="INFO"/>
<status status="PASS" starttime="20211002 01:48:53.220" endtime="20211002 01:48:53.221"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:48:53.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:48:53.221" endtime="20211002 01:48:53.222"/>
</kw>
<status status="PASS" starttime="20211002 01:48:45.660" endtime="20211002 01:48:53.222"/>
</kw>
<msg timestamp="20211002 01:48:53.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:48:45.660" endtime="20211002 01:48:53.222"/>
</kw>
<status status="PASS" starttime="20211002 01:48:45.659" endtime="20211002 01:48:53.222"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:48:53.227" level="INFO">Running command 'ozone sh bucket info /26725-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:49:00.644" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:49:00.645" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211002 01:48:53.224" endtime="20211002 01:49:00.645"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:49:00.647" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211002 01:49:00.645" endtime="20211002 01:49:00.647"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:49:00.649" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:49:00.647" endtime="20211002 01:49:00.649"/>
</kw>
<status status="PASS" starttime="20211002 01:48:53.224" endtime="20211002 01:49:00.650"/>
</kw>
<msg timestamp="20211002 01:49:00.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:48:53.224" endtime="20211002 01:49:00.651"/>
</kw>
<msg timestamp="20211002 01:49:00.652" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211002 01:48:53.223" endtime="20211002 01:49:00.652"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211002 01:49:00.652" endtime="20211002 01:49:00.653"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:49:00.661" level="INFO">Running command 'ozone sh bucket info /26725-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:49:08.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:49:08.552" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211002 01:49:00.658" endtime="20211002 01:49:08.552"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:49:08.553" level="INFO">1000</msg>
<status status="PASS" starttime="20211002 01:49:08.553" endtime="20211002 01:49:08.553"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:49:08.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:49:08.554" endtime="20211002 01:49:08.554"/>
</kw>
<status status="PASS" starttime="20211002 01:49:00.657" endtime="20211002 01:49:08.555"/>
</kw>
<msg timestamp="20211002 01:49:08.555" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:49:00.656" endtime="20211002 01:49:08.555"/>
</kw>
<msg timestamp="20211002 01:49:08.555" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211002 01:49:00.654" endtime="20211002 01:49:08.555"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211002 01:49:08.556" endtime="20211002 01:49:08.556"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:49:08.562" level="INFO">Running command 'ozone sh bucket list /26725-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:49:15.366" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:49:15.366" level="INFO">${output} = 26725-rpcwoscheme</msg>
<status status="PASS" starttime="20211002 01:49:08.559" endtime="20211002 01:49:15.366"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:49:15.369" level="INFO">26725-rpcwoscheme</msg>
<status status="PASS" starttime="20211002 01:49:15.367" endtime="20211002 01:49:15.369"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:49:15.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:49:15.370" endtime="20211002 01:49:15.371"/>
</kw>
<status status="PASS" starttime="20211002 01:49:08.558" endtime="20211002 01:49:15.371"/>
</kw>
<msg timestamp="20211002 01:49:15.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:49:08.558" endtime="20211002 01:49:15.372"/>
</kw>
<msg timestamp="20211002 01:49:15.372" level="INFO">${result} = 26725-rpcwoscheme</msg>
<status status="PASS" starttime="20211002 01:49:08.556" endtime="20211002 01:49:15.373"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211002 01:49:15.373" endtime="20211002 01:49:15.374"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:49:15.389" level="INFO">Running command 'ozone sh key put /26725-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:52:24.002" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211002 01:49:15.383" endtime="20211002 01:52:24.002"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211002 01:52:24.003" endtime="20211002 01:52:24.003"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211002 01:52:24.003" endtime="20211002 01:52:24.003"/>
</kw>
<status status="FAIL" starttime="20211002 01:49:15.381" endtime="20211002 01:52:24.003"/>
</kw>
<msg timestamp="20211002 01:52:24.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211002 01:49:15.380" endtime="20211002 01:52:24.004"/>
</kw>
<status status="FAIL" starttime="20211002 01:49:15.378" endtime="20211002 01:52:24.004"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211002 01:52:24.004" endtime="20211002 01:52:24.004"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211002 01:52:24.004" endtime="20211002 01:52:24.004"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211002 01:52:24.005" endtime="20211002 01:52:24.005"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211002 01:52:24.005" endtime="20211002 01:52:24.005"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211002 01:52:24.005" endtime="20211002 01:52:24.005"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211002 01:52:24.005" endtime="20211002 01:52:24.005"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211002 01:52:24.005" endtime="20211002 01:52:24.005"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211002 01:52:24.005" endtime="20211002 01:52:24.006"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211002 01:52:24.006" endtime="20211002 01:52:24.006"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211002 01:52:24.006" endtime="20211002 01:52:24.006"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211002 01:52:24.006" endtime="20211002 01:52:24.006"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211002 01:52:24.006" endtime="20211002 01:52:24.006"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211002 01:52:24.006" endtime="20211002 01:52:24.007"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211002 01:52:24.007" endtime="20211002 01:52:24.007"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211002 01:52:24.007" endtime="20211002 01:52:24.007"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211002 01:52:24.007" endtime="20211002 01:52:24.007"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211002 01:52:24.007" endtime="20211002 01:52:24.007"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211002 01:52:24.008" endtime="20211002 01:52:24.008"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211002 01:52:24.008" endtime="20211002 01:52:24.008"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211002 01:52:24.008" endtime="20211002 01:52:24.008"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211002 01:52:24.008" endtime="20211002 01:52:24.008"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211002 01:52:24.009" endtime="20211002 01:52:24.009"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211002 01:52:24.009" endtime="20211002 01:52:24.009"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211002 01:52:24.009" endtime="20211002 01:52:24.009"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20211002 01:52:24.009" endtime="20211002 01:52:24.009"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211002 01:52:24.010" endtime="20211002 01:52:24.010"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211002 01:52:24.010" endtime="20211002 01:52:24.010"/>
</kw>
<status status="FAIL" starttime="20211002 01:49:15.375" endtime="20211002 01:52:24.010"/>
</kw>
<status status="FAIL" starttime="20211002 01:49:15.374" endtime="20211002 01:52:24.010"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211002 01:52:24.010" endtime="20211002 01:52:24.010"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211002 01:52:24.011" endtime="20211002 01:52:24.011"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211002 01:52:24.011" endtime="20211002 01:52:24.011"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211002 01:52:24.011" endtime="20211002 01:52:24.011"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211002 01:52:24.011" endtime="20211002 01:52:24.011"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211002 01:52:24.012" endtime="20211002 01:52:24.012"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211002 01:52:24.012" endtime="20211002 01:52:24.012"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211002 01:52:24.012" endtime="20211002 01:52:24.012"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211002 01:52:24.012" endtime="20211002 01:52:24.012"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211002 01:52:24.012" endtime="20211002 01:52:24.012"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211002 01:52:24.013" endtime="20211002 01:52:24.013"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211002 01:52:24.013" endtime="20211002 01:52:24.013"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211002 01:52:24.013" endtime="20211002 01:52:24.013"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211002 01:52:24.013" endtime="20211002 01:52:24.013"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211002 01:52:24.013" endtime="20211002 01:52:24.013"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211002 01:52:24.014" endtime="20211002 01:52:24.014"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211002 01:52:24.014" endtime="20211002 01:52:24.014"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211002 01:52:24.014" endtime="20211002 01:52:24.014"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211002 01:52:24.014" endtime="20211002 01:52:24.014"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211002 01:52:24.014" endtime="20211002 01:52:24.014"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211002 01:52:24.015" endtime="20211002 01:52:24.015"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211002 01:52:24.015" endtime="20211002 01:52:24.015"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211002 01:52:24.015" endtime="20211002 01:52:24.015"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211002 01:52:24.016" endtime="20211002 01:52:24.016"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211002 01:52:24.016" endtime="20211002 01:52:24.016"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211002 01:52:24.016" endtime="20211002 01:52:24.017"/>
</kw>
<status status="FAIL" starttime="20211002 01:47:24.260" endtime="20211002 01:52:24.017"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211002 01:47:24.000" endtime="20211002 01:52:24.018">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20211002 01:27:29.541" endtime="20211002 01:52:24.020"/>
</suite>
<status status="FAIL" starttime="20211002 01:03:20.018" endtime="20211002 01:52:24.028"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:03:15.083" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:03:15.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:03:15.087" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211002 01:03:15.079" endtime="20211002 01:03:15.087"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:03:15.088" level="INFO">scm</msg>
<status status="PASS" starttime="20211002 01:03:15.087" endtime="20211002 01:03:15.088"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:03:15.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:03:15.088" endtime="20211002 01:03:15.089"/>
</kw>
<status status="PASS" starttime="20211002 01:03:15.078" endtime="20211002 01:03:15.089"/>
</kw>
<msg timestamp="20211002 01:03:15.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:03:15.078" endtime="20211002 01:03:15.090"/>
</kw>
<msg timestamp="20211002 01:03:15.090" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211002 01:03:15.077" endtime="20211002 01:03:15.090"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211002 01:03:15.091" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211002 01:03:15.090" endtime="20211002 01:03:15.091"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211002 01:03:15.095" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211002 01:03:15.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20211002 01:03:15.102" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211002 01:03:15.093" endtime="20211002 01:03:15.102"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211002 01:03:15.103" level="INFO"/>
<status status="PASS" starttime="20211002 01:03:15.103" endtime="20211002 01:03:15.104"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211002 01:03:15.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211002 01:03:15.104" endtime="20211002 01:03:15.104"/>
</kw>
<status status="PASS" starttime="20211002 01:03:15.092" endtime="20211002 01:03:15.105"/>
</kw>
<msg timestamp="20211002 01:03:15.105" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211002 01:03:15.092" endtime="20211002 01:03:15.105"/>
</kw>
<status status="PASS" starttime="20211002 01:03:15.091" endtime="20211002 01:03:15.105"/>
</kw>
<status status="PASS" starttime="20211002 01:03:15.091" endtime="20211002 01:03:15.105"/>
</kw>
<status status="PASS" starttime="20211002 01:03:15.077" endtime="20211002 01:03:15.105"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211002 01:03:15.076" endtime="20211002 01:03:15.106"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20211002 01:03:15.013" endtime="20211002 01:03:15.107"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="2944104"/>
</suite>
<statistics>
<total>
<stat pass="20" fail="10" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="20" fail="10" skip="0" id="s1" name="ozonesecure">ozonesecure</stat>
<stat pass="19" fail="10" skip="0" id="s1-s1" name="Basic">ozonesecure.Basic</stat>
<stat pass="1" fail="1" skip="0" id="s1-s1-s1" name="Basic">ozonesecure.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Getconf">ozonesecure.Basic.Getconf</stat>
<stat pass="10" fail="5" skip="0" id="s1-s1-s3" name="Links">ozonesecure.Basic.Links</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat pass="4" fail="3" skip="0" id="s1-s1-s5" name="Ozone-Shell">ozonesecure.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
