<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1.1 (Python 3.6.9 on linux)" generated="20211014 01:51:25.132" rpa="false" schemaversion="2">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211014 01:41:24.869" level="INFO">${random} = 71971</msg>
<status status="PASS" starttime="20211014 01:41:24.868" endtime="20211014 01:41:24.869"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 01:41:24.875" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-71971 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 01:41:30.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 01:41:30.163" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 01:41:24.871" endtime="20211014 01:41:30.163"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 01:41:30.164" level="INFO"/>
<status status="PASS" starttime="20211014 01:41:30.163" endtime="20211014 01:41:30.165"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 01:41:30.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 01:41:30.165" endtime="20211014 01:41:30.166"/>
</kw>
<status status="PASS" starttime="20211014 01:41:24.870" endtime="20211014 01:41:30.166"/>
</kw>
<msg timestamp="20211014 01:41:30.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 01:41:24.870" endtime="20211014 01:41:30.167"/>
</kw>
<msg timestamp="20211014 01:41:30.167" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 01:41:24.869" endtime="20211014 01:41:30.167"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 01:41:30.167" endtime="20211014 01:41:30.168"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211014 01:41:24.867" endtime="20211014 01:41:30.168"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211014 01:41:24.805" endtime="20211014 01:41:30.170"/>
</suite>
<suite id="s1-s2" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s2-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211014 01:46:02.623" level="INFO">${random} = 65469</msg>
<status status="PASS" starttime="20211014 01:46:02.622" endtime="20211014 01:46:02.623"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 01:46:02.629" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-65469 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 01:46:06.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 01:46:06.938" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 01:46:02.625" endtime="20211014 01:46:06.938"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 01:46:06.940" level="INFO"/>
<status status="PASS" starttime="20211014 01:46:06.939" endtime="20211014 01:46:06.940"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 01:46:06.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 01:46:06.940" endtime="20211014 01:46:06.941"/>
</kw>
<status status="PASS" starttime="20211014 01:46:02.624" endtime="20211014 01:46:06.941"/>
</kw>
<msg timestamp="20211014 01:46:06.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 01:46:02.624" endtime="20211014 01:46:06.941"/>
</kw>
<msg timestamp="20211014 01:46:06.941" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 01:46:02.623" endtime="20211014 01:46:06.941"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 01:46:06.942" endtime="20211014 01:46:06.942"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211014 01:46:02.621" endtime="20211014 01:46:06.942"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211014 01:46:02.554" endtime="20211014 01:46:06.945"/>
</suite>
<suite id="s1-s3" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 01:46:11.065" level="INFO">Running command 'ozone sh volume create old2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 01:46:13.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 01:46:13.902" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 01:46:11.061" endtime="20211014 01:46:13.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 01:46:13.909" level="INFO"/>
<status status="PASS" starttime="20211014 01:46:13.902" endtime="20211014 01:46:13.909"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 01:46:13.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 01:46:13.910" endtime="20211014 01:46:13.911"/>
</kw>
<status status="PASS" starttime="20211014 01:46:11.060" endtime="20211014 01:46:13.912"/>
</kw>
<msg timestamp="20211014 01:46:13.912" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 01:46:11.060" endtime="20211014 01:46:13.912"/>
</kw>
<msg timestamp="20211014 01:46:13.913" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 01:46:11.059" endtime="20211014 01:46:13.913"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 01:46:13.913" endtime="20211014 01:46:13.913"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 01:46:13.923" level="INFO">Running command 'ozone sh bucket create /old2-volume/old2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 01:46:16.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 01:46:16.623" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 01:46:13.919" endtime="20211014 01:46:16.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 01:46:16.624" level="INFO"/>
<status status="PASS" starttime="20211014 01:46:16.623" endtime="20211014 01:46:16.624"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 01:46:16.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 01:46:16.625" endtime="20211014 01:46:16.626"/>
</kw>
<status status="PASS" starttime="20211014 01:46:13.915" endtime="20211014 01:46:16.626"/>
</kw>
<msg timestamp="20211014 01:46:16.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 01:46:13.914" endtime="20211014 01:46:16.626"/>
</kw>
<msg timestamp="20211014 01:46:16.626" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 01:46:13.914" endtime="20211014 01:46:16.627"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 01:46:16.627" endtime="20211014 01:46:16.627"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 01:46:16.633" level="INFO">Running command 'ozone sh key put /old2-volume/old2-bucket/old2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 01:46:22.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 01:46:22.550" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 01:46:16.630" endtime="20211014 01:46:22.550"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 01:46:22.551" level="INFO"/>
<status status="PASS" starttime="20211014 01:46:22.550" endtime="20211014 01:46:22.551"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 01:46:22.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 01:46:22.552" endtime="20211014 01:46:22.552"/>
</kw>
<status status="PASS" starttime="20211014 01:46:16.630" endtime="20211014 01:46:22.553"/>
</kw>
<msg timestamp="20211014 01:46:22.553" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 01:46:16.629" endtime="20211014 01:46:22.553"/>
</kw>
<msg timestamp="20211014 01:46:22.553" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 01:46:16.628" endtime="20211014 01:46:22.553"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 01:46:22.554" endtime="20211014 01:46:22.554"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211014 01:46:11.058" endtime="20211014 01:46:22.554"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20211014 01:46:10.988" endtime="20211014 01:46:22.556"/>
</suite>
<suite id="s1-s4" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211014 01:46:26.673" level="INFO">${random} = 19133</msg>
<status status="PASS" starttime="20211014 01:46:26.672" endtime="20211014 01:46:26.673"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 01:46:26.681" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-19133 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 01:46:32.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 01:46:32.580" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 01:46:26.676" endtime="20211014 01:46:32.580"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 01:46:32.581" level="INFO"/>
<status status="PASS" starttime="20211014 01:46:32.580" endtime="20211014 01:46:32.581"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 01:46:32.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 01:46:32.582" endtime="20211014 01:46:32.582"/>
</kw>
<status status="PASS" starttime="20211014 01:46:26.675" endtime="20211014 01:46:32.583"/>
</kw>
<msg timestamp="20211014 01:46:32.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 01:46:26.675" endtime="20211014 01:46:32.583"/>
</kw>
<msg timestamp="20211014 01:46:32.583" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 01:46:26.673" endtime="20211014 01:46:32.583"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 01:46:32.584" endtime="20211014 01:46:32.584"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211014 01:46:26.671" endtime="20211014 01:46:32.585"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211014 01:46:26.585" endtime="20211014 01:46:32.586"/>
</suite>
<suite id="s1-s5" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211014 01:45:53.469" level="INFO">${random} = 39470</msg>
<status status="PASS" starttime="20211014 01:45:53.469" endtime="20211014 01:45:53.469"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 01:45:53.475" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-39470 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 01:45:58.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 01:45:58.340" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 01:45:53.472" endtime="20211014 01:45:58.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 01:45:58.342" level="INFO"/>
<status status="PASS" starttime="20211014 01:45:58.341" endtime="20211014 01:45:58.342"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 01:45:58.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 01:45:58.342" endtime="20211014 01:45:58.343"/>
</kw>
<status status="PASS" starttime="20211014 01:45:53.471" endtime="20211014 01:45:58.343"/>
</kw>
<msg timestamp="20211014 01:45:58.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 01:45:53.471" endtime="20211014 01:45:58.343"/>
</kw>
<msg timestamp="20211014 01:45:58.344" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 01:45:53.469" endtime="20211014 01:45:58.344"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 01:45:58.344" endtime="20211014 01:45:58.345"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211014 01:45:53.467" endtime="20211014 01:45:58.345"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211014 01:45:53.402" endtime="20211014 01:45:58.347"/>
</suite>
<suite id="s1-s6" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s6-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 01:41:06.558" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 01:41:09.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 01:41:09.281" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 01:41:06.554" endtime="20211014 01:41:09.281"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 01:41:09.283" level="INFO"/>
<status status="PASS" starttime="20211014 01:41:09.282" endtime="20211014 01:41:09.284"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 01:41:09.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 01:41:09.284" endtime="20211014 01:41:09.286"/>
</kw>
<status status="PASS" starttime="20211014 01:41:06.554" endtime="20211014 01:41:09.287"/>
</kw>
<msg timestamp="20211014 01:41:09.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 01:41:06.553" endtime="20211014 01:41:09.287"/>
</kw>
<msg timestamp="20211014 01:41:09.288" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 01:41:06.552" endtime="20211014 01:41:09.288"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 01:41:09.289" endtime="20211014 01:41:09.289"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 01:41:09.300" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 01:41:11.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 01:41:11.767" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 01:41:09.295" endtime="20211014 01:41:11.767"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 01:41:11.777" level="INFO"/>
<status status="PASS" starttime="20211014 01:41:11.772" endtime="20211014 01:41:11.778"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 01:41:11.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 01:41:11.778" endtime="20211014 01:41:11.779"/>
</kw>
<status status="PASS" starttime="20211014 01:41:09.292" endtime="20211014 01:41:11.779"/>
</kw>
<msg timestamp="20211014 01:41:11.779" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 01:41:09.292" endtime="20211014 01:41:11.780"/>
</kw>
<msg timestamp="20211014 01:41:11.780" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 01:41:09.291" endtime="20211014 01:41:11.780"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 01:41:11.781" endtime="20211014 01:41:11.781"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 01:41:11.789" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 01:41:20.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 01:41:20.985" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 01:41:11.784" endtime="20211014 01:41:20.985"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 01:41:20.986" level="INFO"/>
<status status="PASS" starttime="20211014 01:41:20.985" endtime="20211014 01:41:20.986"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 01:41:20.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 01:41:20.986" endtime="20211014 01:41:20.987"/>
</kw>
<status status="PASS" starttime="20211014 01:41:11.783" endtime="20211014 01:41:20.987"/>
</kw>
<msg timestamp="20211014 01:41:20.987" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 01:41:11.783" endtime="20211014 01:41:20.988"/>
</kw>
<msg timestamp="20211014 01:41:20.988" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 01:41:11.782" endtime="20211014 01:41:20.988"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 01:41:20.988" endtime="20211014 01:41:20.989"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211014 01:41:06.551" endtime="20211014 01:41:20.989"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20211014 01:41:06.487" endtime="20211014 01:41:20.991"/>
</suite>
<suite id="s1-s7" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s7-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211014 01:49:51.021" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20211014 01:49:51.020" endtime="20211014 01:49:51.021"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211014 01:49:51.021" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211014 01:49:51.021" endtime="20211014 01:49:51.021"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211014 01:49:51.022" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211014 01:49:51.021" endtime="20211014 01:49:51.022"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211014 01:49:51.023" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20211014 01:49:51.022" endtime="20211014 01:49:51.023"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211014 01:49:51.026" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211014 01:49:51.026" level="INFO">${version_file_contents} = #Thu Oct 14 01:48:27 UTC 2021
cTime=1634175566212
clusterID=CID-bb6e0e14-cfdc-46c1-90f5-af13d11e60db
nodeType=SCM
scmUuid=b1a271e1-5cda-483b-b2d8-7df1c663fedf
layoutVersion=2
</msg>
<status status="PASS" starttime="20211014 01:49:51.026" endtime="20211014 01:49:51.027"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211014 01:49:51.027" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20211014 01:49:51.027" endtime="20211014 01:49:51.027"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 01:49:51.028" endtime="20211014 01:49:51.028"/>
</kw>
<status status="PASS" starttime="20211014 01:49:51.025" endtime="20211014 01:49:51.028"/>
</kw>
<status status="PASS" starttime="20211014 01:49:51.023" endtime="20211014 01:49:51.028"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211014 01:49:51.019" endtime="20211014 01:49:51.029"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211014 01:49:50.949" endtime="20211014 01:49:51.029"/>
</suite>
<suite id="s1-s8" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s8-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211014 01:50:38.308" level="INFO">${random} = 69076</msg>
<status status="PASS" starttime="20211014 01:50:38.308" endtime="20211014 01:50:38.309"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 01:50:38.315" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-69076 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 01:50:43.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 01:50:43.336" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211014 01:50:38.311" endtime="20211014 01:50:43.336"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 01:50:43.337" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211014 01:50:43.336" endtime="20211014 01:50:43.338"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 01:50:43.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 01:50:43.338" endtime="20211014 01:50:43.338"/>
</kw>
<status status="PASS" starttime="20211014 01:50:38.310" endtime="20211014 01:50:43.339"/>
</kw>
<msg timestamp="20211014 01:50:43.339" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 01:50:38.310" endtime="20211014 01:50:43.339"/>
</kw>
<msg timestamp="20211014 01:50:43.339" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211014 01:50:38.309" endtime="20211014 01:50:43.340"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 01:50:43.340" endtime="20211014 01:50:43.340"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211014 01:50:38.307" endtime="20211014 01:50:43.341"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211014 01:50:38.242" endtime="20211014 01:50:43.343"/>
</suite>
<suite id="s1-s9" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s9-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 01:50:47.443" level="INFO">Running command 'ozone sh volume create new2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 01:50:50.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 01:50:50.689" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211014 01:50:47.438" endtime="20211014 01:50:50.689"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 01:50:50.690" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211014 01:50:50.690" endtime="20211014 01:50:50.691"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 01:50:50.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 01:50:50.691" endtime="20211014 01:50:50.692"/>
</kw>
<status status="PASS" starttime="20211014 01:50:47.438" endtime="20211014 01:50:50.692"/>
</kw>
<msg timestamp="20211014 01:50:50.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 01:50:47.437" endtime="20211014 01:50:50.692"/>
</kw>
<msg timestamp="20211014 01:50:50.692" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211014 01:50:47.436" endtime="20211014 01:50:50.693"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 01:50:50.693" endtime="20211014 01:50:50.693"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 01:50:50.700" level="INFO">Running command 'ozone sh bucket create /new2-volume/new2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 01:50:53.644" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 01:50:53.644" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211014 01:50:50.696" endtime="20211014 01:50:53.644"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 01:50:53.645" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211014 01:50:53.644" endtime="20211014 01:50:53.645"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 01:50:53.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 01:50:53.645" endtime="20211014 01:50:53.646"/>
</kw>
<status status="PASS" starttime="20211014 01:50:50.695" endtime="20211014 01:50:53.647"/>
</kw>
<msg timestamp="20211014 01:50:53.647" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 01:50:50.695" endtime="20211014 01:50:53.647"/>
</kw>
<msg timestamp="20211014 01:50:53.647" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211014 01:50:50.694" endtime="20211014 01:50:53.647"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 01:50:53.648" endtime="20211014 01:50:53.648"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 01:50:53.656" level="INFO">Running command 'ozone sh key put /new2-volume/new2-bucket/new2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 01:50:59.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 01:50:59.897" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211014 01:50:53.650" endtime="20211014 01:50:59.898"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 01:50:59.899" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211014 01:50:59.898" endtime="20211014 01:50:59.899"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 01:50:59.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 01:50:59.900" endtime="20211014 01:50:59.900"/>
</kw>
<status status="PASS" starttime="20211014 01:50:53.649" endtime="20211014 01:50:59.901"/>
</kw>
<msg timestamp="20211014 01:50:59.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 01:50:53.649" endtime="20211014 01:50:59.901"/>
</kw>
<msg timestamp="20211014 01:50:59.901" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211014 01:50:53.648" endtime="20211014 01:50:59.901"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 01:50:59.902" endtime="20211014 01:50:59.902"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211014 01:50:47.431" endtime="20211014 01:50:59.902"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20211014 01:50:47.362" endtime="20211014 01:50:59.904"/>
</suite>
<suite id="s1-s10" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s10-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211014 01:51:04.327" level="INFO">${random} = 05141</msg>
<status status="PASS" starttime="20211014 01:51:04.326" endtime="20211014 01:51:04.327"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 01:51:04.333" level="INFO">Running command 'ozone sh key get /new2-volume/new2-bucket/new2-key /tmp/key-05141 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 01:51:09.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 01:51:09.440" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211014 01:51:04.329" endtime="20211014 01:51:09.440"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 01:51:09.441" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211014 01:51:09.440" endtime="20211014 01:51:09.441"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 01:51:09.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 01:51:09.442" endtime="20211014 01:51:09.442"/>
</kw>
<status status="PASS" starttime="20211014 01:51:04.328" endtime="20211014 01:51:09.443"/>
</kw>
<msg timestamp="20211014 01:51:09.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 01:51:04.328" endtime="20211014 01:51:09.443"/>
</kw>
<msg timestamp="20211014 01:51:09.443" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211014 01:51:04.327" endtime="20211014 01:51:09.444"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 01:51:09.444" endtime="20211014 01:51:09.444"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211014 01:51:04.325" endtime="20211014 01:51:09.444"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211014 01:51:04.254" endtime="20211014 01:51:09.447"/>
</suite>
<suite id="s1-s11" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s11-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211014 01:49:55.196" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211014 01:49:55.195" endtime="20211014 01:49:55.196"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211014 01:49:55.197" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211014 01:49:55.197" endtime="20211014 01:49:55.197"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211014 01:49:55.198" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211014 01:49:55.198" endtime="20211014 01:49:55.198"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211014 01:49:55.199" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211014 01:49:55.198" endtime="20211014 01:49:55.199"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211014 01:49:55.201" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211014 01:49:55.201" level="INFO">${version_file_contents} = #Thu Oct 14 01:48:43 UTC 2021
cTime=1634175719872
clusterID=5b1a69c0-30c6-4d62-8471-373d8c1fe6c4
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20211014 01:49:55.200" endtime="20211014 01:49:55.201"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211014 01:49:55.202" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20211014 01:49:55.201" endtime="20211014 01:49:55.202"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 01:49:55.202" endtime="20211014 01:49:55.203"/>
</kw>
<status status="PASS" starttime="20211014 01:49:55.200" endtime="20211014 01:49:55.203"/>
</kw>
<status status="PASS" starttime="20211014 01:49:55.199" endtime="20211014 01:49:55.203"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211014 01:49:55.194" endtime="20211014 01:49:55.203"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211014 01:49:55.122" endtime="20211014 01:49:55.204"/>
</suite>
<suite id="s1-s12" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s12-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211014 01:49:59.349" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211014 01:49:59.349" endtime="20211014 01:49:59.350"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211014 01:49:59.350" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211014 01:49:59.350" endtime="20211014 01:49:59.350"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211014 01:49:59.351" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211014 01:49:59.350" endtime="20211014 01:49:59.351"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211014 01:49:59.352" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211014 01:49:59.351" endtime="20211014 01:49:59.352"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211014 01:49:59.353" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211014 01:49:59.353" level="INFO">${version_file_contents} = #Thu Oct 14 01:48:29 UTC 2021
cTime=1634175736708
clusterID=77417213-4ec0-45f0-aea4-afca73da6928
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20211014 01:49:59.353" endtime="20211014 01:49:59.354"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211014 01:49:59.354" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20211014 01:49:59.354" endtime="20211014 01:49:59.354"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 01:49:59.354" endtime="20211014 01:49:59.355"/>
</kw>
<status status="PASS" starttime="20211014 01:49:59.352" endtime="20211014 01:49:59.355"/>
</kw>
<status status="PASS" starttime="20211014 01:49:59.352" endtime="20211014 01:49:59.355"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211014 01:49:59.348" endtime="20211014 01:49:59.356"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211014 01:49:59.279" endtime="20211014 01:49:59.357"/>
</suite>
<suite id="s1-s13" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s13-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211014 01:50:03.704" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211014 01:50:03.703" endtime="20211014 01:50:03.705"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211014 01:50:03.705" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211014 01:50:03.705" endtime="20211014 01:50:03.705"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211014 01:50:03.706" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211014 01:50:03.705" endtime="20211014 01:50:03.706"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211014 01:50:03.707" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211014 01:50:03.707" endtime="20211014 01:50:03.708"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211014 01:50:03.710" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211014 01:50:03.711" level="INFO">${version_file_contents} = #Thu Oct 14 01:48:53 UTC 2021
cTime=1634175734541
clusterID=63ba3aae-1c00-47fe-ad36-f746a6751d44
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20211014 01:50:03.710" endtime="20211014 01:50:03.711"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211014 01:50:03.712" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20211014 01:50:03.711" endtime="20211014 01:50:03.712"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 01:50:03.712" endtime="20211014 01:50:03.713"/>
</kw>
<status status="PASS" starttime="20211014 01:50:03.709" endtime="20211014 01:50:03.713"/>
</kw>
<status status="PASS" starttime="20211014 01:50:03.709" endtime="20211014 01:50:03.713"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211014 01:50:03.702" endtime="20211014 01:50:03.713"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211014 01:50:03.618" endtime="20211014 01:50:03.715"/>
</suite>
<suite id="s1-s14" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s14-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211014 01:50:07.824" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211014 01:50:07.823" endtime="20211014 01:50:07.824"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211014 01:50:07.824" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211014 01:50:07.824" endtime="20211014 01:50:07.824"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211014 01:50:07.825" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211014 01:50:07.825" endtime="20211014 01:50:07.825"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211014 01:50:07.826" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211014 01:50:07.825" endtime="20211014 01:50:07.826"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211014 01:50:07.827" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211014 01:50:07.828" level="INFO">${version_file_contents} = #Thu Oct 14 01:40:07 UTC 2021
cTime=1634175587146
clusterID=CID-bb6e0e14-cfdc-46c1-90f5-af13d11e60db
omUuid=d7eff5d7-d9fe-45a8-b77f-20f3790ccf01
nodeType=OM
scmUuid=b1a271e1-5cda-483b-b2d8-7df1c663fed...</msg>
<status status="PASS" starttime="20211014 01:50:07.827" endtime="20211014 01:50:07.828"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211014 01:50:07.829" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211014 01:50:07.828" endtime="20211014 01:50:07.829"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 01:50:07.829" endtime="20211014 01:50:07.830"/>
</kw>
<status status="PASS" starttime="20211014 01:50:07.826" endtime="20211014 01:50:07.830"/>
</kw>
<status status="PASS" starttime="20211014 01:50:07.826" endtime="20211014 01:50:07.830"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211014 01:50:07.821" endtime="20211014 01:50:07.831"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211014 01:50:07.751" endtime="20211014 01:50:07.832"/>
</suite>
<suite id="s1-s15" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s15-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211014 01:50:11.940" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211014 01:50:11.939" endtime="20211014 01:50:11.940"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211014 01:50:11.941" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211014 01:50:11.940" endtime="20211014 01:50:11.941"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211014 01:50:11.942" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211014 01:50:11.941" endtime="20211014 01:50:11.942"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211014 01:50:11.942" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211014 01:50:11.942" endtime="20211014 01:50:11.943"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211014 01:50:11.944" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211014 01:50:11.944" level="INFO">${version_file_contents} = #Thu Oct 14 01:40:07 UTC 2021
cTime=1634175586138
clusterID=CID-bb6e0e14-cfdc-46c1-90f5-af13d11e60db
omUuid=e8bb5669-264c-4568-a9fa-1419b2c0e589
nodeType=OM
scmUuid=b1a271e1-5cda-483b-b2d8-7df1c663fed...</msg>
<status status="PASS" starttime="20211014 01:50:11.944" endtime="20211014 01:50:11.944"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211014 01:50:11.945" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211014 01:50:11.945" endtime="20211014 01:50:11.945"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 01:50:11.945" endtime="20211014 01:50:11.946"/>
</kw>
<status status="PASS" starttime="20211014 01:50:11.943" endtime="20211014 01:50:11.946"/>
</kw>
<status status="PASS" starttime="20211014 01:50:11.943" endtime="20211014 01:50:11.946"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211014 01:50:11.938" endtime="20211014 01:50:11.946"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211014 01:50:11.866" endtime="20211014 01:50:11.947"/>
</suite>
<suite id="s1-s16" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s16-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211014 01:50:16.017" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211014 01:50:16.016" endtime="20211014 01:50:16.017"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211014 01:50:16.018" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211014 01:50:16.017" endtime="20211014 01:50:16.018"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211014 01:50:16.018" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211014 01:50:16.018" endtime="20211014 01:50:16.018"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211014 01:50:16.019" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211014 01:50:16.019" endtime="20211014 01:50:16.019"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211014 01:50:16.021" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211014 01:50:16.021" level="INFO">${version_file_contents} = #Thu Oct 14 01:40:07 UTC 2021
cTime=1634175585687
clusterID=CID-bb6e0e14-cfdc-46c1-90f5-af13d11e60db
omUuid=935b282a-4674-430c-8aed-f4c11dfdff90
nodeType=OM
scmUuid=b1a271e1-5cda-483b-b2d8-7df1c663fed...</msg>
<status status="PASS" starttime="20211014 01:50:16.020" endtime="20211014 01:50:16.021"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211014 01:50:16.022" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211014 01:50:16.021" endtime="20211014 01:50:16.022"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 01:50:16.022" endtime="20211014 01:50:16.022"/>
</kw>
<status status="PASS" starttime="20211014 01:50:16.020" endtime="20211014 01:50:16.022"/>
</kw>
<status status="PASS" starttime="20211014 01:50:16.019" endtime="20211014 01:50:16.022"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211014 01:50:16.016" endtime="20211014 01:50:16.023"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211014 01:50:15.955" endtime="20211014 01:50:16.024"/>
</suite>
<suite id="s1-s17" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s17-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211014 01:50:20.061" level="INFO">${random} = 94978</msg>
<status status="PASS" starttime="20211014 01:50:20.060" endtime="20211014 01:50:20.061"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 01:50:20.067" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-94978 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 01:50:25.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 01:50:25.108" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211014 01:50:20.063" endtime="20211014 01:50:25.108"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 01:50:25.109" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211014 01:50:25.108" endtime="20211014 01:50:25.110"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 01:50:25.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 01:50:25.110" endtime="20211014 01:50:25.110"/>
</kw>
<status status="PASS" starttime="20211014 01:50:20.063" endtime="20211014 01:50:25.111"/>
</kw>
<msg timestamp="20211014 01:50:25.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 01:50:20.062" endtime="20211014 01:50:25.111"/>
</kw>
<msg timestamp="20211014 01:50:25.112" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211014 01:50:20.061" endtime="20211014 01:50:25.112"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 01:50:25.112" endtime="20211014 01:50:25.112"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211014 01:50:20.059" endtime="20211014 01:50:25.113"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211014 01:50:19.992" endtime="20211014 01:50:25.114"/>
</suite>
<suite id="s1-s18" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s18-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211014 01:50:29.360" level="INFO">${random} = 74593</msg>
<status status="PASS" starttime="20211014 01:50:29.359" endtime="20211014 01:50:29.360"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 01:50:29.372" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-74593 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 01:50:34.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 01:50:34.295" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211014 01:50:29.362" endtime="20211014 01:50:34.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 01:50:34.297" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211014 01:50:34.296" endtime="20211014 01:50:34.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 01:50:34.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 01:50:34.297" endtime="20211014 01:50:34.298"/>
</kw>
<status status="PASS" starttime="20211014 01:50:29.362" endtime="20211014 01:50:34.298"/>
</kw>
<msg timestamp="20211014 01:50:34.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 01:50:29.361" endtime="20211014 01:50:34.298"/>
</kw>
<msg timestamp="20211014 01:50:34.299" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211014 01:50:29.360" endtime="20211014 01:50:34.299"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 01:50:34.299" endtime="20211014 01:50:34.299"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211014 01:50:29.358" endtime="20211014 01:50:34.300"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211014 01:50:29.290" endtime="20211014 01:50:34.301"/>
</suite>
<suite id="s1-s19" name="Finalize" source="/opt/hadoop/smoketest/upgrade/finalize.robot">
<test id="s1-s19-t1" name="Finalize SCM">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20211014 01:48:19.686" endtime="20211014 01:48:19.687"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizeupgrade</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 01:48:19.693" level="INFO">Running command 'ozone admin scm finalizeupgrade 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 01:49:43.321" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 01:49:43.321" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20211014 01:48:19.689" endtime="20211014 01:49:43.321"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 01:49:43.323" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20211014 01:49:43.322" endtime="20211014 01:49:43.323"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 01:49:43.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 01:49:43.323" endtime="20211014 01:49:43.324"/>
</kw>
<status status="PASS" starttime="20211014 01:48:19.688" endtime="20211014 01:49:43.324"/>
</kw>
<msg timestamp="20211014 01:49:43.324" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 01:48:19.688" endtime="20211014 01:49:43.325"/>
</kw>
<msg timestamp="20211014 01:49:43.325" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20211014 01:48:19.687" endtime="20211014 01:49:43.325"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 01:49:43.326" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20211014 01:49:43.325" endtime="20211014 01:49:43.326"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211014 01:48:19.685" endtime="20211014 01:49:43.326"/>
</test>
<test id="s1-s19-t2" name="Finalize OMs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20211014 01:49:43.328" endtime="20211014 01:49:43.329"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizeupgrade -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 01:49:43.334" level="INFO">Running command 'ozone admin om finalizeupgrade -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 01:49:46.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 01:49:46.819" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20211014 01:49:43.331" endtime="20211014 01:49:46.819"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 01:49:46.820" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20211014 01:49:46.819" endtime="20211014 01:49:46.820"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 01:49:46.822" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 01:49:46.821" endtime="20211014 01:49:46.822"/>
</kw>
<status status="PASS" starttime="20211014 01:49:43.330" endtime="20211014 01:49:46.823"/>
</kw>
<msg timestamp="20211014 01:49:46.823" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 01:49:43.329" endtime="20211014 01:49:46.824"/>
</kw>
<msg timestamp="20211014 01:49:46.827" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20211014 01:49:43.329" endtime="20211014 01:49:46.827"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 01:49:46.828" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20211014 01:49:46.828" endtime="20211014 01:49:46.828"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211014 01:49:43.327" endtime="20211014 01:49:46.828"/>
</test>
<doc>Finalize Upgrade of OMs and SCM</doc>
<status status="PASS" starttime="20211014 01:48:19.622" endtime="20211014 01:49:46.834"/>
</suite>
<suite id="s1-s20" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s20-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211014 01:43:19.199" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211014 01:43:19.198" endtime="20211014 01:43:19.199"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211014 01:43:19.200" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211014 01:43:19.199" endtime="20211014 01:43:19.200"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211014 01:43:19.200" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211014 01:43:19.200" endtime="20211014 01:43:19.201"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211014 01:43:19.201" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211014 01:43:19.201" endtime="20211014 01:43:19.201"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211014 01:43:19.203" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211014 01:43:19.203" level="INFO">${version_file_contents} = #Thu Oct 14 01:41:59 UTC 2021
cTime=1634175719872
clusterID=5b1a69c0-30c6-4d62-8471-373d8c1fe6c4
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20211014 01:43:19.203" endtime="20211014 01:43:19.203"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211014 01:43:19.204" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211014 01:43:19.204" endtime="20211014 01:43:19.204"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 01:43:19.204" endtime="20211014 01:43:19.205"/>
</kw>
<status status="PASS" starttime="20211014 01:43:19.202" endtime="20211014 01:43:19.205"/>
</kw>
<status status="PASS" starttime="20211014 01:43:19.202" endtime="20211014 01:43:19.206"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211014 01:43:19.197" endtime="20211014 01:43:19.206"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211014 01:43:19.128" endtime="20211014 01:43:19.206"/>
</suite>
<suite id="s1-s21" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s21-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211014 01:43:23.159" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211014 01:43:23.158" endtime="20211014 01:43:23.160"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211014 01:43:23.161" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211014 01:43:23.160" endtime="20211014 01:43:23.161"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211014 01:43:23.162" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211014 01:43:23.161" endtime="20211014 01:43:23.162"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211014 01:43:23.162" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211014 01:43:23.162" endtime="20211014 01:43:23.163"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211014 01:43:23.164" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211014 01:43:23.164" level="INFO">${version_file_contents} = #Thu Oct 14 01:42:16 UTC 2021
cTime=1634175736708
clusterID=77417213-4ec0-45f0-aea4-afca73da6928
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20211014 01:43:23.164" endtime="20211014 01:43:23.164"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211014 01:43:23.165" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211014 01:43:23.164" endtime="20211014 01:43:23.165"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 01:43:23.165" endtime="20211014 01:43:23.166"/>
</kw>
<status status="PASS" starttime="20211014 01:43:23.163" endtime="20211014 01:43:23.166"/>
</kw>
<status status="PASS" starttime="20211014 01:43:23.163" endtime="20211014 01:43:23.166"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211014 01:43:23.157" endtime="20211014 01:43:23.166"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211014 01:43:23.089" endtime="20211014 01:43:23.167"/>
</suite>
<suite id="s1-s22" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s22-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211014 01:43:27.159" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211014 01:43:27.159" endtime="20211014 01:43:27.160"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211014 01:43:27.160" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211014 01:43:27.160" endtime="20211014 01:43:27.161"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211014 01:43:27.161" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211014 01:43:27.161" endtime="20211014 01:43:27.161"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211014 01:43:27.162" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211014 01:43:27.162" endtime="20211014 01:43:27.162"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211014 01:43:27.164" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211014 01:43:27.164" level="INFO">${version_file_contents} = #Thu Oct 14 01:42:14 UTC 2021
cTime=1634175734541
clusterID=63ba3aae-1c00-47fe-ad36-f746a6751d44
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20211014 01:43:27.163" endtime="20211014 01:43:27.164"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211014 01:43:27.165" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211014 01:43:27.164" endtime="20211014 01:43:27.165"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 01:43:27.165" endtime="20211014 01:43:27.166"/>
</kw>
<status status="PASS" starttime="20211014 01:43:27.163" endtime="20211014 01:43:27.166"/>
</kw>
<status status="PASS" starttime="20211014 01:43:27.162" endtime="20211014 01:43:27.166"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211014 01:43:27.158" endtime="20211014 01:43:27.166"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211014 01:43:27.089" endtime="20211014 01:43:27.167"/>
</suite>
<suite id="s1-s23" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s23-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211014 01:43:31.404" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211014 01:43:31.403" endtime="20211014 01:43:31.404"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211014 01:43:31.405" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211014 01:43:31.404" endtime="20211014 01:43:31.405"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211014 01:43:31.406" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211014 01:43:31.405" endtime="20211014 01:43:31.406"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211014 01:43:31.406" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211014 01:43:31.406" endtime="20211014 01:43:31.407"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211014 01:43:31.408" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211014 01:43:31.409" level="INFO">${version_file_contents} = #Thu Oct 14 01:40:07 UTC 2021
cTime=1634175587146
clusterID=CID-bb6e0e14-cfdc-46c1-90f5-af13d11e60db
omUuid=d7eff5d7-d9fe-45a8-b77f-20f3790ccf01
nodeType=OM
scmUuid=b1a271e1-5cda-483b-b2d8-7df1c663fed...</msg>
<status status="PASS" starttime="20211014 01:43:31.408" endtime="20211014 01:43:31.409"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211014 01:43:31.410" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211014 01:43:31.409" endtime="20211014 01:43:31.410"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 01:43:31.410" endtime="20211014 01:43:31.410"/>
</kw>
<status status="PASS" starttime="20211014 01:43:31.407" endtime="20211014 01:43:31.411"/>
</kw>
<status status="PASS" starttime="20211014 01:43:31.407" endtime="20211014 01:43:31.411"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211014 01:43:31.402" endtime="20211014 01:43:31.411"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211014 01:43:31.335" endtime="20211014 01:43:31.412"/>
</suite>
<suite id="s1-s24" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s24-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211014 01:43:35.308" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211014 01:43:35.308" endtime="20211014 01:43:35.309"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211014 01:43:35.310" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211014 01:43:35.309" endtime="20211014 01:43:35.310"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211014 01:43:35.310" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211014 01:43:35.310" endtime="20211014 01:43:35.310"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211014 01:43:35.311" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211014 01:43:35.311" endtime="20211014 01:43:35.311"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211014 01:43:35.313" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211014 01:43:35.314" level="INFO">${version_file_contents} = #Thu Oct 14 01:40:07 UTC 2021
cTime=1634175586138
clusterID=CID-bb6e0e14-cfdc-46c1-90f5-af13d11e60db
omUuid=e8bb5669-264c-4568-a9fa-1419b2c0e589
nodeType=OM
scmUuid=b1a271e1-5cda-483b-b2d8-7df1c663fed...</msg>
<status status="PASS" starttime="20211014 01:43:35.312" endtime="20211014 01:43:35.314"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211014 01:43:35.314" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211014 01:43:35.314" endtime="20211014 01:43:35.314"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 01:43:35.314" endtime="20211014 01:43:35.315"/>
</kw>
<status status="PASS" starttime="20211014 01:43:35.312" endtime="20211014 01:43:35.315"/>
</kw>
<status status="PASS" starttime="20211014 01:43:35.311" endtime="20211014 01:43:35.315"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211014 01:43:35.306" endtime="20211014 01:43:35.315"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211014 01:43:35.240" endtime="20211014 01:43:35.317"/>
</suite>
<suite id="s1-s25" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s25-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211014 01:43:39.309" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211014 01:43:39.309" endtime="20211014 01:43:39.310"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211014 01:43:39.310" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211014 01:43:39.310" endtime="20211014 01:43:39.311"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211014 01:43:39.311" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211014 01:43:39.311" endtime="20211014 01:43:39.311"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211014 01:43:39.312" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211014 01:43:39.312" endtime="20211014 01:43:39.312"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211014 01:43:39.314" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211014 01:43:39.314" level="INFO">${version_file_contents} = #Thu Oct 14 01:40:07 UTC 2021
cTime=1634175585687
clusterID=CID-bb6e0e14-cfdc-46c1-90f5-af13d11e60db
omUuid=935b282a-4674-430c-8aed-f4c11dfdff90
nodeType=OM
scmUuid=b1a271e1-5cda-483b-b2d8-7df1c663fed...</msg>
<status status="PASS" starttime="20211014 01:43:39.313" endtime="20211014 01:43:39.314"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211014 01:43:39.315" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211014 01:43:39.315" endtime="20211014 01:43:39.315"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 01:43:39.315" endtime="20211014 01:43:39.316"/>
</kw>
<status status="PASS" starttime="20211014 01:43:39.313" endtime="20211014 01:43:39.316"/>
</kw>
<status status="PASS" starttime="20211014 01:43:39.312" endtime="20211014 01:43:39.316"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211014 01:43:39.308" endtime="20211014 01:43:39.316"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211014 01:43:39.237" endtime="20211014 01:43:39.317"/>
</suite>
<suite id="s1-s26" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s26-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211014 01:43:43.277" level="INFO">${random} = 65850</msg>
<status status="PASS" starttime="20211014 01:43:43.276" endtime="20211014 01:43:43.277"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 01:43:43.283" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-65850 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 01:43:48.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 01:43:48.196" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211014 01:43:43.280" endtime="20211014 01:43:48.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 01:43:48.197" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211014 01:43:48.196" endtime="20211014 01:43:48.197"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 01:43:48.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 01:43:48.197" endtime="20211014 01:43:48.198"/>
</kw>
<status status="PASS" starttime="20211014 01:43:43.279" endtime="20211014 01:43:48.198"/>
</kw>
<msg timestamp="20211014 01:43:48.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 01:43:43.278" endtime="20211014 01:43:48.198"/>
</kw>
<msg timestamp="20211014 01:43:48.199" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211014 01:43:43.277" endtime="20211014 01:43:48.199"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 01:43:48.199" endtime="20211014 01:43:48.199"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211014 01:43:43.275" endtime="20211014 01:43:48.200"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211014 01:43:43.191" endtime="20211014 01:43:48.201"/>
</suite>
<suite id="s1-s27" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s27-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 01:43:52.115" level="INFO">Running command 'ozone sh volume create new1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 01:43:55.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 01:43:55.150" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211014 01:43:52.112" endtime="20211014 01:43:55.151"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 01:43:55.152" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211014 01:43:55.151" endtime="20211014 01:43:55.152"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 01:43:55.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 01:43:55.152" endtime="20211014 01:43:55.153"/>
</kw>
<status status="PASS" starttime="20211014 01:43:52.111" endtime="20211014 01:43:55.153"/>
</kw>
<msg timestamp="20211014 01:43:55.153" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 01:43:52.111" endtime="20211014 01:43:55.154"/>
</kw>
<msg timestamp="20211014 01:43:55.154" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211014 01:43:52.110" endtime="20211014 01:43:55.154"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 01:43:55.154" endtime="20211014 01:43:55.155"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 01:43:55.167" level="INFO">Running command 'ozone sh bucket create /new1-volume/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 01:43:58.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 01:43:58.391" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211014 01:43:55.157" endtime="20211014 01:43:58.391"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 01:43:58.392" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211014 01:43:58.391" endtime="20211014 01:43:58.392"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 01:43:58.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 01:43:58.392" endtime="20211014 01:43:58.393"/>
</kw>
<status status="PASS" starttime="20211014 01:43:55.156" endtime="20211014 01:43:58.393"/>
</kw>
<msg timestamp="20211014 01:43:58.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 01:43:55.156" endtime="20211014 01:43:58.393"/>
</kw>
<msg timestamp="20211014 01:43:58.394" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211014 01:43:55.155" endtime="20211014 01:43:58.394"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 01:43:58.397" endtime="20211014 01:43:58.398"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 01:43:58.403" level="INFO">Running command 'ozone sh key put /new1-volume/new1-bucket/new1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 01:44:04.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 01:44:04.019" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211014 01:43:58.400" endtime="20211014 01:44:04.019"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 01:44:04.021" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211014 01:44:04.020" endtime="20211014 01:44:04.021"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 01:44:04.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 01:44:04.021" endtime="20211014 01:44:04.021"/>
</kw>
<status status="PASS" starttime="20211014 01:43:58.400" endtime="20211014 01:44:04.022"/>
</kw>
<msg timestamp="20211014 01:44:04.022" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 01:43:58.399" endtime="20211014 01:44:04.022"/>
</kw>
<msg timestamp="20211014 01:44:04.023" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211014 01:43:58.398" endtime="20211014 01:44:04.023"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 01:44:04.023" endtime="20211014 01:44:04.024"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211014 01:43:52.109" endtime="20211014 01:44:04.024"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20211014 01:43:52.043" endtime="20211014 01:44:04.025"/>
</suite>
<suite id="s1-s28" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s28-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211014 01:44:07.851" level="INFO">${random} = 04640</msg>
<status status="PASS" starttime="20211014 01:44:07.851" endtime="20211014 01:44:07.851"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 01:44:07.857" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-04640 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 01:44:12.764" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 01:44:12.764" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211014 01:44:07.854" endtime="20211014 01:44:12.764"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 01:44:12.766" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211014 01:44:12.764" endtime="20211014 01:44:12.766"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 01:44:12.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 01:44:12.766" endtime="20211014 01:44:12.767"/>
</kw>
<status status="PASS" starttime="20211014 01:44:07.853" endtime="20211014 01:44:12.767"/>
</kw>
<msg timestamp="20211014 01:44:12.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 01:44:07.853" endtime="20211014 01:44:12.768"/>
</kw>
<msg timestamp="20211014 01:44:12.768" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211014 01:44:07.852" endtime="20211014 01:44:12.768"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 01:44:12.768" endtime="20211014 01:44:12.769"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211014 01:44:07.850" endtime="20211014 01:44:12.769"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211014 01:44:07.785" endtime="20211014 01:44:12.771"/>
</suite>
<suite id="s1-s29" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s29-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211014 01:43:15.152" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20211014 01:43:15.151" endtime="20211014 01:43:15.152"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211014 01:43:15.153" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211014 01:43:15.152" endtime="20211014 01:43:15.153"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211014 01:43:15.153" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211014 01:43:15.153" endtime="20211014 01:43:15.153"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211014 01:43:15.154" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20211014 01:43:15.154" endtime="20211014 01:43:15.154"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211014 01:43:15.155" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211014 01:43:15.156" level="INFO">${version_file_contents} = #Thu Oct 14 01:39:26 UTC 2021
cTime=1634175566212
clusterID=CID-bb6e0e14-cfdc-46c1-90f5-af13d11e60db
nodeType=SCM
scmUuid=b1a271e1-5cda-483b-b2d8-7df1c663fedf
layoutVersion=0
</msg>
<status status="PASS" starttime="20211014 01:43:15.155" endtime="20211014 01:43:15.156"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211014 01:43:15.156" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211014 01:43:15.156" endtime="20211014 01:43:15.156"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 01:43:15.157" endtime="20211014 01:43:15.157"/>
</kw>
<status status="PASS" starttime="20211014 01:43:15.155" endtime="20211014 01:43:15.157"/>
</kw>
<status status="PASS" starttime="20211014 01:43:15.154" endtime="20211014 01:43:15.157"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211014 01:43:15.151" endtime="20211014 01:43:15.157"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211014 01:43:15.088" endtime="20211014 01:43:15.158"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="190039"/>
</suite>
<statistics>
<total>
<stat pass="30" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="30" fail="0" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s8" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s9" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s10" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s11" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s12" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s13" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s14" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s15" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s16" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s17" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s18" name="Validate">upgrade.Validate</stat>
<stat pass="2" fail="0" skip="0" id="s1-s19" name="Finalize">upgrade.Finalize</stat>
<stat pass="1" fail="0" skip="0" id="s1-s20" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s21" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s22" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s23" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s24" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s25" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s26" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s27" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s28" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s29" name="Check-Mlv">upgrade.Check-Mlv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
