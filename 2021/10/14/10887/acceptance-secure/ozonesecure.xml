<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1.1 (Python 3.6.9 on linux)" generated="20211014 19:59:14.857" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:08:23.235" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:08:23.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:08:23.240" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211014 19:08:23.231" endtime="20211014 19:08:23.240"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:08:23.246" level="INFO">scm</msg>
<status status="PASS" starttime="20211014 19:08:23.240" endtime="20211014 19:08:23.246"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:08:23.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:08:23.246" endtime="20211014 19:08:23.247"/>
</kw>
<status status="PASS" starttime="20211014 19:08:23.230" endtime="20211014 19:08:23.249"/>
</kw>
<msg timestamp="20211014 19:08:23.249" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:08:23.230" endtime="20211014 19:08:23.249"/>
</kw>
<msg timestamp="20211014 19:08:23.251" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20211014 19:08:23.229" endtime="20211014 19:08:23.251"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:08:23.259" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:08:23.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:08:23.266" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:08:23.254" endtime="20211014 19:08:23.266"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:08:23.268" level="INFO"/>
<status status="PASS" starttime="20211014 19:08:23.267" endtime="20211014 19:08:23.268"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:08:23.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:08:23.268" endtime="20211014 19:08:23.269"/>
</kw>
<status status="PASS" starttime="20211014 19:08:23.253" endtime="20211014 19:08:23.269"/>
</kw>
<msg timestamp="20211014 19:08:23.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:08:23.253" endtime="20211014 19:08:23.269"/>
</kw>
<status status="PASS" starttime="20211014 19:08:23.252" endtime="20211014 19:08:23.269"/>
</kw>
<status status="PASS" starttime="20211014 19:08:23.251" endtime="20211014 19:08:23.269"/>
</kw>
<status status="PASS" starttime="20211014 19:08:23.229" endtime="20211014 19:08:23.270"/>
</kw>
<status status="PASS" starttime="20211014 19:08:23.228" endtime="20211014 19:08:23.270"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:08:23.274" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:08:23.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:08:23.415" level="INFO">${output} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20211014 19:08:23.272" endtime="20211014 19:08:23.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:08:23.416" level="INFO">HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 482

HTTP/1.1 200 OK
Date: Thu, 14 Oct 2021 19:08:23 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCKm8N2ewiTqrsZTmtvDU5JxcFI035ZzjEpgwLjXqjkt9NHiZTYnazD+PP7iKcNoCHrBnrB5RuvE/geeayfyS0a/x7
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1634274503401&amp;s=kakYYEYwBMpMJVKzCRODrKB8qefD8yon8MTuWzLy0aQ="; Path=/; HttpOnly
Last-Modified: Thu, 14 Oct 2021 18:54:14 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20211014 19:08:23.416" endtime="20211014 19:08:23.417"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:08:23.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:08:23.417" endtime="20211014 19:08:23.418"/>
</kw>
<status status="PASS" starttime="20211014 19:08:23.271" endtime="20211014 19:08:23.418"/>
</kw>
<msg timestamp="20211014 19:08:23.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:08:23.271" endtime="20211014 19:08:23.419"/>
</kw>
<msg timestamp="20211014 19:08:23.419" level="INFO">${result} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20211014 19:08:23.270" endtime="20211014 19:08:23.419"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 19:08:23.419" endtime="20211014 19:08:23.420"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211014 19:08:23.227" endtime="20211014 19:08:23.420"/>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:08:23.430" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:08:23.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:08:23.439" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211014 19:08:23.427" endtime="20211014 19:08:23.439"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:08:23.440" level="INFO">scm</msg>
<status status="PASS" starttime="20211014 19:08:23.439" endtime="20211014 19:08:23.440"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:08:23.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:08:23.440" endtime="20211014 19:08:23.442"/>
</kw>
<status status="PASS" starttime="20211014 19:08:23.427" endtime="20211014 19:08:23.442"/>
</kw>
<msg timestamp="20211014 19:08:23.442" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:08:23.426" endtime="20211014 19:08:23.443"/>
</kw>
<msg timestamp="20211014 19:08:23.443" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211014 19:08:23.426" endtime="20211014 19:08:23.443"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211014 19:08:23.446" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211014 19:08:23.443" endtime="20211014 19:08:23.446"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:08:23.452" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:08:23.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:08:23.461" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:08:23.450" endtime="20211014 19:08:23.461"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:08:23.462" level="INFO"/>
<status status="PASS" starttime="20211014 19:08:23.461" endtime="20211014 19:08:23.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:08:23.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:08:23.462" endtime="20211014 19:08:23.463"/>
</kw>
<status status="PASS" starttime="20211014 19:08:23.449" endtime="20211014 19:08:23.464"/>
</kw>
<msg timestamp="20211014 19:08:23.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:08:23.448" endtime="20211014 19:08:23.464"/>
</kw>
<status status="PASS" starttime="20211014 19:08:23.447" endtime="20211014 19:08:23.465"/>
</kw>
<status status="PASS" starttime="20211014 19:08:23.447" endtime="20211014 19:08:23.465"/>
</kw>
<status status="PASS" starttime="20211014 19:08:23.425" endtime="20211014 19:08:23.465"/>
</kw>
<status status="PASS" starttime="20211014 19:08:23.425" endtime="20211014 19:08:23.465"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:08:23.470" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:13:23.425" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211014 19:08:23.468" endtime="20211014 19:13:23.425"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211014 19:13:23.426" endtime="20211014 19:13:23.426"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211014 19:13:23.426" endtime="20211014 19:13:23.426"/>
</kw>
<status status="FAIL" starttime="20211014 19:08:23.467" endtime="20211014 19:13:23.426"/>
</kw>
<msg timestamp="20211014 19:13:23.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211014 19:08:23.466" endtime="20211014 19:13:23.427"/>
</kw>
<status status="FAIL" starttime="20211014 19:08:23.465" endtime="20211014 19:13:23.427"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20211014 19:13:23.428" endtime="20211014 19:13:23.428"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Status: Success</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211014 19:13:23.428" endtime="20211014 19:13:23.428"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211014 19:08:23.423" endtime="20211014 19:13:23.428">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" starttime="20211014 19:08:23.193" endtime="20211014 19:13:23.430"/>
</suite>
<suite id="s1-s1-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s1-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:13:23.446" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:13:26.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:13:26.573" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211014 19:13:23.442" endtime="20211014 19:13:26.573"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:13:26.574" level="INFO">om</msg>
<status status="PASS" starttime="20211014 19:13:26.574" endtime="20211014 19:13:26.575"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:13:26.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:13:26.575" endtime="20211014 19:13:26.576"/>
</kw>
<status status="PASS" starttime="20211014 19:13:23.441" endtime="20211014 19:13:26.576"/>
</kw>
<msg timestamp="20211014 19:13:26.577" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:13:23.440" endtime="20211014 19:13:26.577"/>
</kw>
<msg timestamp="20211014 19:13:26.577" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211014 19:13:23.438" endtime="20211014 19:13:26.577"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 19:13:26.577" endtime="20211014 19:13:26.578"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:13:26.584" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:13:29.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:13:29.866" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211014 19:13:26.581" endtime="20211014 19:13:29.867"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:13:29.868" level="INFO">om</msg>
<status status="PASS" starttime="20211014 19:13:29.867" endtime="20211014 19:13:29.868"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:13:29.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:13:29.868" endtime="20211014 19:13:29.869"/>
</kw>
<status status="PASS" starttime="20211014 19:13:26.579" endtime="20211014 19:13:29.869"/>
</kw>
<msg timestamp="20211014 19:13:29.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:13:26.579" endtime="20211014 19:13:29.870"/>
</kw>
<msg timestamp="20211014 19:13:29.870" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211014 19:13:26.578" endtime="20211014 19:13:29.870"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 19:13:29.870" endtime="20211014 19:13:29.871"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211014 19:13:23.437" endtime="20211014 19:13:29.871"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:13:29.880" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:13:33.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:13:33.169" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211014 19:13:29.876" endtime="20211014 19:13:33.169"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:13:33.171" level="INFO">scm</msg>
<status status="PASS" starttime="20211014 19:13:33.169" endtime="20211014 19:13:33.172"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:13:33.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:13:33.172" endtime="20211014 19:13:33.174"/>
</kw>
<status status="PASS" starttime="20211014 19:13:29.876" endtime="20211014 19:13:33.175"/>
</kw>
<msg timestamp="20211014 19:13:33.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:13:29.875" endtime="20211014 19:13:33.175"/>
</kw>
<msg timestamp="20211014 19:13:33.176" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20211014 19:13:29.875" endtime="20211014 19:13:33.176"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 19:13:33.177" endtime="20211014 19:13:33.178"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:13:33.187" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:13:36.553" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:13:36.553" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211014 19:13:33.183" endtime="20211014 19:13:36.553"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:13:36.555" level="INFO">scm</msg>
<status status="PASS" starttime="20211014 19:13:36.554" endtime="20211014 19:13:36.555"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:13:36.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:13:36.555" endtime="20211014 19:13:36.556"/>
</kw>
<status status="PASS" starttime="20211014 19:13:33.181" endtime="20211014 19:13:36.556"/>
</kw>
<msg timestamp="20211014 19:13:36.556" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:13:33.180" endtime="20211014 19:13:36.557"/>
</kw>
<msg timestamp="20211014 19:13:36.557" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20211014 19:13:33.178" endtime="20211014 19:13:36.557"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 19:13:36.557" endtime="20211014 19:13:36.558"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211014 19:13:29.873" endtime="20211014 19:13:36.558"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:13:36.566" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:13:39.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:13:39.511" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211014 19:13:36.563" endtime="20211014 19:13:39.511"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:13:39.512" level="INFO">om</msg>
<status status="PASS" starttime="20211014 19:13:39.511" endtime="20211014 19:13:39.512"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:13:39.513" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:13:39.512" endtime="20211014 19:13:39.513"/>
</kw>
<status status="PASS" starttime="20211014 19:13:36.562" endtime="20211014 19:13:39.514"/>
</kw>
<msg timestamp="20211014 19:13:39.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:13:36.562" endtime="20211014 19:13:39.514"/>
</kw>
<msg timestamp="20211014 19:13:39.514" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211014 19:13:36.561" endtime="20211014 19:13:39.514"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 19:13:39.514" endtime="20211014 19:13:39.515"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 19:13:39.515" endtime="20211014 19:13:39.516"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:13:39.522" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:13:42.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:13:42.285" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211014 19:13:39.517" endtime="20211014 19:13:42.285"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:13:42.286" level="INFO">om</msg>
<status status="PASS" starttime="20211014 19:13:42.286" endtime="20211014 19:13:42.286"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:13:42.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:13:42.287" endtime="20211014 19:13:42.287"/>
</kw>
<status status="PASS" starttime="20211014 19:13:39.517" endtime="20211014 19:13:42.288"/>
</kw>
<msg timestamp="20211014 19:13:42.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:13:39.516" endtime="20211014 19:13:42.288"/>
</kw>
<msg timestamp="20211014 19:13:42.288" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211014 19:13:39.516" endtime="20211014 19:13:42.288"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 19:13:42.288" endtime="20211014 19:13:42.289"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 19:13:42.289" endtime="20211014 19:13:42.289"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211014 19:13:36.559" endtime="20211014 19:13:42.290"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:13:42.295" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:13:45.313" level="INFO">${rc} = 255</msg>
<msg timestamp="20211014 19:13:45.314" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211014 19:13:42.292" endtime="20211014 19:13:45.314"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:13:45.316" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211014 19:13:45.315" endtime="20211014 19:13:45.316"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:13:45.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:13:45.316" endtime="20211014 19:13:45.318"/>
</kw>
<msg timestamp="20211014 19:13:45.318" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211014 19:13:42.292" endtime="20211014 19:13:45.318"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 19:13:45.319" endtime="20211014 19:13:45.320"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:13:45.324" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:13:47.125" level="INFO">${rc} = 255</msg>
<msg timestamp="20211014 19:13:47.125" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211014 19:13:45.321" endtime="20211014 19:13:47.125"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:13:47.128" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211014 19:13:47.127" endtime="20211014 19:13:47.128"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:13:47.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:13:47.128" endtime="20211014 19:13:47.129"/>
</kw>
<msg timestamp="20211014 19:13:47.130" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211014 19:13:45.320" endtime="20211014 19:13:47.130"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 19:13:47.130" endtime="20211014 19:13:47.130"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211014 19:13:42.290" endtime="20211014 19:13:47.131"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20211014 19:13:23.432" endtime="20211014 19:13:47.133"/>
</suite>
<suite id="s1-s1-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211014 19:13:47.155" level="INFO">${random} = 96518</msg>
<status status="PASS" starttime="20211014 19:13:47.154" endtime="20211014 19:13:47.155"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211014 19:13:47.157" level="INFO">${source} = 96518-source</msg>
<status status="PASS" starttime="20211014 19:13:47.155" endtime="20211014 19:13:47.157"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211014 19:13:47.159" level="INFO">${target} = 96518-target</msg>
<status status="PASS" starttime="20211014 19:13:47.157" endtime="20211014 19:13:47.159"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:13:47.164" level="INFO">Running command 'ozone sh volume create 96518-source 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:13:54.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:13:54.661" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:13:47.162" endtime="20211014 19:13:54.661"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:13:54.662" level="INFO"/>
<status status="PASS" starttime="20211014 19:13:54.661" endtime="20211014 19:13:54.662"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:13:54.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:13:54.662" endtime="20211014 19:13:54.663"/>
</kw>
<status status="PASS" starttime="20211014 19:13:47.161" endtime="20211014 19:13:54.663"/>
</kw>
<msg timestamp="20211014 19:13:54.664" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:13:47.161" endtime="20211014 19:13:54.664"/>
</kw>
<status status="PASS" starttime="20211014 19:13:47.160" endtime="20211014 19:13:54.664"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:13:54.669" level="INFO">Running command 'ozone sh volume create 96518-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:14:01.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:14:01.641" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:13:54.666" endtime="20211014 19:14:01.641"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:14:01.642" level="INFO"/>
<status status="PASS" starttime="20211014 19:14:01.641" endtime="20211014 19:14:01.642"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:14:01.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:14:01.642" endtime="20211014 19:14:01.643"/>
</kw>
<status status="PASS" starttime="20211014 19:13:54.666" endtime="20211014 19:14:01.643"/>
</kw>
<msg timestamp="20211014 19:14:01.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:13:54.665" endtime="20211014 19:14:01.644"/>
</kw>
<status status="PASS" starttime="20211014 19:13:54.664" endtime="20211014 19:14:01.644"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:14:01.650" level="INFO">Running command 'ozone sh bucket create 96518-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:14:07.644" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:14:07.644" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:14:01.648" endtime="20211014 19:14:07.644"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:14:07.652" level="INFO"/>
<status status="PASS" starttime="20211014 19:14:07.651" endtime="20211014 19:14:07.652"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:14:07.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:14:07.652" endtime="20211014 19:14:07.653"/>
</kw>
<status status="PASS" starttime="20211014 19:14:01.647" endtime="20211014 19:14:07.653"/>
</kw>
<msg timestamp="20211014 19:14:07.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:14:01.646" endtime="20211014 19:14:07.654"/>
</kw>
<status status="PASS" starttime="20211014 19:14:01.645" endtime="20211014 19:14:07.654"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:14:07.660" level="INFO">Running command 'ozone sh key put 96518-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:17:18.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:17:18.737" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:14:07.656" endtime="20211014 19:17:18.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:17:18.739" level="INFO"/>
<status status="PASS" starttime="20211014 19:17:18.738" endtime="20211014 19:17:18.739"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:17:18.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:17:18.739" endtime="20211014 19:17:18.740"/>
</kw>
<status status="PASS" starttime="20211014 19:14:07.655" endtime="20211014 19:17:18.740"/>
</kw>
<msg timestamp="20211014 19:17:18.740" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:14:07.655" endtime="20211014 19:17:18.740"/>
</kw>
<status status="PASS" starttime="20211014 19:14:07.654" endtime="20211014 19:17:18.741"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:17:18.751" level="INFO">Running command 'ozone sh bucket create 96518-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:17:27.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:17:27.184" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:17:18.744" endtime="20211014 19:17:27.184"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:17:27.186" level="INFO"/>
<status status="PASS" starttime="20211014 19:17:27.185" endtime="20211014 19:17:27.186"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:17:27.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:17:27.186" endtime="20211014 19:17:27.187"/>
</kw>
<status status="PASS" starttime="20211014 19:17:18.743" endtime="20211014 19:17:27.187"/>
</kw>
<msg timestamp="20211014 19:17:27.187" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:17:18.742" endtime="20211014 19:17:27.188"/>
</kw>
<status status="PASS" starttime="20211014 19:17:18.741" endtime="20211014 19:17:27.188"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:17:27.194" level="INFO">Running command 'ozone sh bucket link 96518-source/readable-bucket 96518-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:17:35.553" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:17:35.554" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:17:27.191" endtime="20211014 19:17:35.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:17:35.556" level="INFO"/>
<status status="PASS" starttime="20211014 19:17:35.554" endtime="20211014 19:17:35.556"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:17:35.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:17:35.556" endtime="20211014 19:17:35.557"/>
</kw>
<status status="PASS" starttime="20211014 19:17:27.190" endtime="20211014 19:17:35.557"/>
</kw>
<msg timestamp="20211014 19:17:35.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:17:27.190" endtime="20211014 19:17:35.558"/>
</kw>
<status status="PASS" starttime="20211014 19:17:27.189" endtime="20211014 19:17:35.558"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:17:35.564" level="INFO">Running command 'ozone sh bucket link 96518-source/readable-bucket 96518-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:17:43.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:17:43.896" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:17:35.561" endtime="20211014 19:17:43.897"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:17:43.898" level="INFO"/>
<status status="PASS" starttime="20211014 19:17:43.897" endtime="20211014 19:17:43.898"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:17:43.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:17:43.898" endtime="20211014 19:17:43.899"/>
</kw>
<status status="PASS" starttime="20211014 19:17:35.560" endtime="20211014 19:17:43.899"/>
</kw>
<msg timestamp="20211014 19:17:43.899" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:17:35.559" endtime="20211014 19:17:43.899"/>
</kw>
<status status="PASS" starttime="20211014 19:17:35.558" endtime="20211014 19:17:43.900"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:17:43.905" level="INFO">Running command 'ozone sh bucket link 96518-source/unreadable-bucket 96518-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:17:52.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:17:52.070" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:17:43.902" endtime="20211014 19:17:52.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:17:52.071" level="INFO"/>
<status status="PASS" starttime="20211014 19:17:52.070" endtime="20211014 19:17:52.071"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:17:52.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:17:52.072" endtime="20211014 19:17:52.072"/>
</kw>
<status status="PASS" starttime="20211014 19:17:43.901" endtime="20211014 19:17:52.073"/>
</kw>
<msg timestamp="20211014 19:17:52.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:17:43.901" endtime="20211014 19:17:52.074"/>
</kw>
<status status="PASS" starttime="20211014 19:17:43.900" endtime="20211014 19:17:52.074"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:17:52.079" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 96518-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:18:00.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:18:00.397" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211014 19:17:52.077" endtime="20211014 19:18:00.397"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:18:00.399" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211014 19:18:00.398" endtime="20211014 19:18:00.399"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:18:00.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:18:00.399" endtime="20211014 19:18:00.400"/>
</kw>
<status status="PASS" starttime="20211014 19:17:52.076" endtime="20211014 19:18:00.400"/>
</kw>
<msg timestamp="20211014 19:18:00.400" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:17:52.075" endtime="20211014 19:18:00.400"/>
</kw>
<status status="PASS" starttime="20211014 19:17:52.074" endtime="20211014 19:18:00.401"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:18:00.404" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 96518-source 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:18:07.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:18:07.883" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211014 19:18:00.402" endtime="20211014 19:18:07.883"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:18:07.885" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211014 19:18:07.884" endtime="20211014 19:18:07.885"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:18:07.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:18:07.885" endtime="20211014 19:18:07.886"/>
</kw>
<status status="PASS" starttime="20211014 19:18:00.402" endtime="20211014 19:18:07.887"/>
</kw>
<msg timestamp="20211014 19:18:07.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:18:00.401" endtime="20211014 19:18:07.887"/>
</kw>
<status status="PASS" starttime="20211014 19:18:00.401" endtime="20211014 19:18:07.887"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:18:07.894" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 96518-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:18:16.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:18:16.941" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211014 19:18:07.890" endtime="20211014 19:18:16.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:18:16.942" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211014 19:18:16.941" endtime="20211014 19:18:16.942"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:18:16.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:18:16.943" endtime="20211014 19:18:16.943"/>
</kw>
<status status="PASS" starttime="20211014 19:18:07.889" endtime="20211014 19:18:16.944"/>
</kw>
<msg timestamp="20211014 19:18:16.944" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:18:07.889" endtime="20211014 19:18:16.944"/>
</kw>
<status status="PASS" starttime="20211014 19:18:07.888" endtime="20211014 19:18:16.944"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:18:16.950" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 96518-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:18:25.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:18:25.886" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211014 19:18:16.947" endtime="20211014 19:18:25.886"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:18:25.887" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211014 19:18:25.886" endtime="20211014 19:18:25.887"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:18:25.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:18:25.887" endtime="20211014 19:18:25.888"/>
</kw>
<status status="PASS" starttime="20211014 19:18:16.946" endtime="20211014 19:18:25.888"/>
</kw>
<msg timestamp="20211014 19:18:25.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:18:16.945" endtime="20211014 19:18:25.889"/>
</kw>
<status status="PASS" starttime="20211014 19:18:16.945" endtime="20211014 19:18:25.889"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:18:25.894" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 96518-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:18:34.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:18:34.238" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211014 19:18:25.891" endtime="20211014 19:18:34.238"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:18:34.241" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211014 19:18:34.239" endtime="20211014 19:18:34.241"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:18:34.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:18:34.242" endtime="20211014 19:18:34.243"/>
</kw>
<status status="PASS" starttime="20211014 19:18:25.890" endtime="20211014 19:18:34.244"/>
</kw>
<msg timestamp="20211014 19:18:34.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:18:25.890" endtime="20211014 19:18:34.244"/>
</kw>
<status status="PASS" starttime="20211014 19:18:25.889" endtime="20211014 19:18:34.245"/>
</kw>
<status status="PASS" starttime="20211014 19:14:01.645" endtime="20211014 19:18:34.245"/>
</kw>
<status status="PASS" starttime="20211014 19:14:01.644" endtime="20211014 19:18:34.245"/>
</kw>
<status status="PASS" starttime="20211014 19:13:47.154" endtime="20211014 19:18:34.246"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:18:34.256" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:18:34.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:18:34.262" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211014 19:18:34.253" endtime="20211014 19:18:34.263"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:18:34.265" level="INFO">scm</msg>
<status status="PASS" starttime="20211014 19:18:34.264" endtime="20211014 19:18:34.266"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:18:34.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:18:34.266" endtime="20211014 19:18:34.268"/>
</kw>
<status status="PASS" starttime="20211014 19:18:34.252" endtime="20211014 19:18:34.269"/>
</kw>
<msg timestamp="20211014 19:18:34.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:18:34.251" endtime="20211014 19:18:34.270"/>
</kw>
<msg timestamp="20211014 19:18:34.270" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211014 19:18:34.251" endtime="20211014 19:18:34.271"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211014 19:18:34.274" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211014 19:18:34.271" endtime="20211014 19:18:34.274"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:18:34.279" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:18:34.324" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:18:34.324" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:18:34.277" endtime="20211014 19:18:34.324"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:18:34.325" level="INFO"/>
<status status="PASS" starttime="20211014 19:18:34.324" endtime="20211014 19:18:34.325"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:18:34.326" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:18:34.326" endtime="20211014 19:18:34.326"/>
</kw>
<status status="PASS" starttime="20211014 19:18:34.276" endtime="20211014 19:18:34.327"/>
</kw>
<msg timestamp="20211014 19:18:34.327" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:18:34.276" endtime="20211014 19:18:34.327"/>
</kw>
<status status="PASS" starttime="20211014 19:18:34.275" endtime="20211014 19:18:34.327"/>
</kw>
<status status="PASS" starttime="20211014 19:18:34.274" endtime="20211014 19:18:34.327"/>
</kw>
<status status="PASS" starttime="20211014 19:18:34.249" endtime="20211014 19:18:34.328"/>
</kw>
<status status="PASS" starttime="20211014 19:18:34.248" endtime="20211014 19:18:34.328"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:18:34.333" level="INFO">Running command 'ozone sh bucket link 96518-source/no-such-bucket 96518-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:18:42.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:18:42.741" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:18:34.330" endtime="20211014 19:18:42.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:18:42.743" level="INFO"/>
<status status="PASS" starttime="20211014 19:18:42.741" endtime="20211014 19:18:42.743"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:18:42.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:18:42.743" endtime="20211014 19:18:42.745"/>
</kw>
<status status="PASS" starttime="20211014 19:18:34.329" endtime="20211014 19:18:42.745"/>
</kw>
<msg timestamp="20211014 19:18:42.745" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:18:34.329" endtime="20211014 19:18:42.746"/>
</kw>
<status status="PASS" starttime="20211014 19:18:34.328" endtime="20211014 19:18:42.746"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:18:42.752" level="INFO">Running command 'ozone sh key list 96518-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:18:50.896" level="INFO">${rc} = 255</msg>
<msg timestamp="20211014 19:18:50.896" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20211014 19:18:42.748" endtime="20211014 19:18:50.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:18:50.898" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20211014 19:18:50.897" endtime="20211014 19:18:50.898"/>
</kw>
<msg timestamp="20211014 19:18:50.898" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20211014 19:18:42.746" endtime="20211014 19:18:50.899"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 19:18:50.899" endtime="20211014 19:18:50.899"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211014 19:18:34.246" endtime="20211014 19:18:50.899"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:18:50.912" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:18:50.916" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:18:50.916" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211014 19:18:50.910" endtime="20211014 19:18:50.916"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:18:50.918" level="INFO">scm</msg>
<status status="PASS" starttime="20211014 19:18:50.917" endtime="20211014 19:18:50.918"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:18:50.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:18:50.918" endtime="20211014 19:18:50.919"/>
</kw>
<status status="PASS" starttime="20211014 19:18:50.909" endtime="20211014 19:18:50.919"/>
</kw>
<msg timestamp="20211014 19:18:50.919" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:18:50.909" endtime="20211014 19:18:50.919"/>
</kw>
<msg timestamp="20211014 19:18:50.920" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211014 19:18:50.908" endtime="20211014 19:18:50.920"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211014 19:18:50.921" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211014 19:18:50.920" endtime="20211014 19:18:50.921"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:18:50.925" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:18:50.933" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:18:50.933" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:18:50.923" endtime="20211014 19:18:50.934"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:18:50.935" level="INFO"/>
<status status="PASS" starttime="20211014 19:18:50.934" endtime="20211014 19:18:50.935"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:18:50.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:18:50.935" endtime="20211014 19:18:50.936"/>
</kw>
<status status="PASS" starttime="20211014 19:18:50.923" endtime="20211014 19:18:50.937"/>
</kw>
<msg timestamp="20211014 19:18:50.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:18:50.922" endtime="20211014 19:18:50.937"/>
</kw>
<status status="PASS" starttime="20211014 19:18:50.922" endtime="20211014 19:18:50.937"/>
</kw>
<status status="PASS" starttime="20211014 19:18:50.921" endtime="20211014 19:18:50.937"/>
</kw>
<status status="PASS" starttime="20211014 19:18:50.907" endtime="20211014 19:18:50.938"/>
</kw>
<status status="PASS" starttime="20211014 19:18:50.907" endtime="20211014 19:18:50.938"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:18:50.942" level="INFO">Running command 'ozone sh bucket link 96518-source/bucket1 96518-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:18:57.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:18:57.848" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:18:50.940" endtime="20211014 19:18:57.848"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:18:57.851" level="INFO"/>
<status status="PASS" starttime="20211014 19:18:57.849" endtime="20211014 19:18:57.851"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:18:57.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:18:57.852" endtime="20211014 19:18:57.853"/>
</kw>
<status status="PASS" starttime="20211014 19:18:50.939" endtime="20211014 19:18:57.854"/>
</kw>
<msg timestamp="20211014 19:18:57.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:18:50.939" endtime="20211014 19:18:57.855"/>
</kw>
<status status="PASS" starttime="20211014 19:18:50.938" endtime="20211014 19:18:57.856"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:18:57.861" level="INFO">Running command 'ozone sh bucket create 96518-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:19:03.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:19:03.613" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:18:57.858" endtime="20211014 19:19:03.613"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:19:03.615" level="INFO"/>
<status status="PASS" starttime="20211014 19:19:03.614" endtime="20211014 19:19:03.615"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:19:03.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:19:03.615" endtime="20211014 19:19:03.616"/>
</kw>
<status status="PASS" starttime="20211014 19:18:57.858" endtime="20211014 19:19:03.616"/>
</kw>
<msg timestamp="20211014 19:19:03.617" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:18:57.857" endtime="20211014 19:19:03.617"/>
</kw>
<status status="PASS" starttime="20211014 19:18:57.856" endtime="20211014 19:19:03.617"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:19:03.622" level="INFO">Running command 'ozone sh key put 96518-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:20:50.908" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20211014 19:19:03.619" endtime="20211014 19:20:50.908"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211014 19:20:50.909" endtime="20211014 19:20:50.909"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211014 19:20:50.909" endtime="20211014 19:20:50.909"/>
</kw>
<status status="FAIL" starttime="20211014 19:19:03.619" endtime="20211014 19:20:50.910"/>
</kw>
<msg timestamp="20211014 19:20:50.910" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211014 19:19:03.618" endtime="20211014 19:20:50.910"/>
</kw>
<status status="FAIL" starttime="20211014 19:19:03.617" endtime="20211014 19:20:50.911"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<status status="NOT RUN" starttime="20211014 19:20:50.911" endtime="20211014 19:20:50.911"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211014 19:18:50.906" endtime="20211014 19:20:50.911">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:20:50.919" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:20:50.924" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:20:50.924" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211014 19:20:50.916" endtime="20211014 19:20:50.924"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:20:50.925" level="INFO">scm</msg>
<status status="PASS" starttime="20211014 19:20:50.925" endtime="20211014 19:20:50.925"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:20:50.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:20:50.925" endtime="20211014 19:20:50.926"/>
</kw>
<status status="PASS" starttime="20211014 19:20:50.915" endtime="20211014 19:20:50.927"/>
</kw>
<msg timestamp="20211014 19:20:50.927" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:20:50.915" endtime="20211014 19:20:50.927"/>
</kw>
<msg timestamp="20211014 19:20:50.927" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211014 19:20:50.914" endtime="20211014 19:20:50.927"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211014 19:20:50.928" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211014 19:20:50.928" endtime="20211014 19:20:50.928"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:20:50.933" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:20:50.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:20:50.942" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:20:50.931" endtime="20211014 19:20:50.942"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:20:50.943" level="INFO"/>
<status status="PASS" starttime="20211014 19:20:50.942" endtime="20211014 19:20:50.943"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:20:50.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:20:50.944" endtime="20211014 19:20:50.944"/>
</kw>
<status status="PASS" starttime="20211014 19:20:50.930" endtime="20211014 19:20:50.945"/>
</kw>
<msg timestamp="20211014 19:20:50.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:20:50.930" endtime="20211014 19:20:50.945"/>
</kw>
<status status="PASS" starttime="20211014 19:20:50.929" endtime="20211014 19:20:50.945"/>
</kw>
<status status="PASS" starttime="20211014 19:20:50.928" endtime="20211014 19:20:50.946"/>
</kw>
<status status="PASS" starttime="20211014 19:20:50.914" endtime="20211014 19:20:50.946"/>
</kw>
<status status="PASS" starttime="20211014 19:20:50.913" endtime="20211014 19:20:50.946"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:20:50.950" level="INFO">Running command 'ozone sh key put 96518-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:22:50.913" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20211014 19:20:50.948" endtime="20211014 19:22:50.913"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211014 19:22:50.915" endtime="20211014 19:22:50.915"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211014 19:22:50.915" endtime="20211014 19:22:50.915"/>
</kw>
<status status="FAIL" starttime="20211014 19:20:50.947" endtime="20211014 19:22:50.916"/>
</kw>
<msg timestamp="20211014 19:22:50.916" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211014 19:20:50.947" endtime="20211014 19:22:50.916"/>
</kw>
<status status="FAIL" starttime="20211014 19:20:50.946" endtime="20211014 19:22:50.916"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211014 19:22:50.917" endtime="20211014 19:22:50.917"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211014 19:20:50.912" endtime="20211014 19:22:50.917">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:22:50.931" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:22:50.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:22:50.936" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211014 19:22:50.923" endtime="20211014 19:22:50.936"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:22:50.937" level="INFO">scm</msg>
<status status="PASS" starttime="20211014 19:22:50.936" endtime="20211014 19:22:50.937"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:22:50.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:22:50.938" endtime="20211014 19:22:50.942"/>
</kw>
<status status="PASS" starttime="20211014 19:22:50.922" endtime="20211014 19:22:50.942"/>
</kw>
<msg timestamp="20211014 19:22:50.942" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:22:50.922" endtime="20211014 19:22:50.942"/>
</kw>
<msg timestamp="20211014 19:22:50.943" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211014 19:22:50.921" endtime="20211014 19:22:50.943"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211014 19:22:50.951" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211014 19:22:50.943" endtime="20211014 19:22:50.951"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:22:50.961" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:22:50.987" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:22:50.987" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:22:50.958" endtime="20211014 19:22:50.987"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:22:50.989" level="INFO"/>
<status status="PASS" starttime="20211014 19:22:50.988" endtime="20211014 19:22:50.989"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:22:50.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:22:50.989" endtime="20211014 19:22:50.990"/>
</kw>
<status status="PASS" starttime="20211014 19:22:50.954" endtime="20211014 19:22:50.991"/>
</kw>
<msg timestamp="20211014 19:22:50.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:22:50.953" endtime="20211014 19:22:50.991"/>
</kw>
<status status="PASS" starttime="20211014 19:22:50.952" endtime="20211014 19:22:50.992"/>
</kw>
<status status="PASS" starttime="20211014 19:22:50.952" endtime="20211014 19:22:50.992"/>
</kw>
<status status="PASS" starttime="20211014 19:22:50.921" endtime="20211014 19:22:50.992"/>
</kw>
<status status="PASS" starttime="20211014 19:22:50.920" endtime="20211014 19:22:50.992"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:22:50.999" level="INFO">Running command 'ozone sh key list 96518-target/link1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:23:00.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:23:00.070" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20211014 19:22:50.995" endtime="20211014 19:23:00.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:23:00.072" level="INFO">key1</msg>
<status status="PASS" starttime="20211014 19:23:00.070" endtime="20211014 19:23:00.072"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:23:00.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:23:00.072" endtime="20211014 19:23:00.075"/>
</kw>
<status status="PASS" starttime="20211014 19:22:50.994" endtime="20211014 19:23:00.076"/>
</kw>
<msg timestamp="20211014 19:23:00.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:22:50.994" endtime="20211014 19:23:00.077"/>
</kw>
<msg timestamp="20211014 19:23:00.078" level="INFO">${target_list} = key1</msg>
<status status="PASS" starttime="20211014 19:22:50.993" endtime="20211014 19:23:00.078"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:23:00.088" level="INFO">Running command 'ozone sh key list 96518-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:23:09.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:23:09.209" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20211014 19:23:00.084" endtime="20211014 19:23:09.209"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:23:09.210" level="INFO">key1</msg>
<status status="PASS" starttime="20211014 19:23:09.209" endtime="20211014 19:23:09.210"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:23:09.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:23:09.210" endtime="20211014 19:23:09.212"/>
</kw>
<status status="PASS" starttime="20211014 19:23:00.082" endtime="20211014 19:23:09.212"/>
</kw>
<msg timestamp="20211014 19:23:09.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:23:00.081" endtime="20211014 19:23:09.212"/>
</kw>
<msg timestamp="20211014 19:23:09.213" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20211014 19:23:00.079" endtime="20211014 19:23:09.213"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211014 19:23:09.213" endtime="20211014 19:23:09.214"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 19:23:09.214" endtime="20211014 19:23:09.214"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20211014 19:23:09.215" level="FAIL">'key1' does not contain 'key2'</msg>
<status status="FAIL" starttime="20211014 19:23:09.215" endtime="20211014 19:23:09.215"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211014 19:22:50.919" endtime="20211014 19:23:09.217">'key1' does not contain 'key2'</status>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:23:09.227" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:23:09.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:23:09.233" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211014 19:23:09.224" endtime="20211014 19:23:09.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:23:09.236" level="INFO">scm</msg>
<status status="PASS" starttime="20211014 19:23:09.234" endtime="20211014 19:23:09.236"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:23:09.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:23:09.236" endtime="20211014 19:23:09.238"/>
</kw>
<status status="PASS" starttime="20211014 19:23:09.223" endtime="20211014 19:23:09.238"/>
</kw>
<msg timestamp="20211014 19:23:09.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:23:09.223" endtime="20211014 19:23:09.239"/>
</kw>
<msg timestamp="20211014 19:23:09.239" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211014 19:23:09.222" endtime="20211014 19:23:09.239"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211014 19:23:09.240" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211014 19:23:09.240" endtime="20211014 19:23:09.241"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:23:09.247" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:23:09.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:23:09.257" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:23:09.244" endtime="20211014 19:23:09.258"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:23:09.260" level="INFO"/>
<status status="PASS" starttime="20211014 19:23:09.258" endtime="20211014 19:23:09.261"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:23:09.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:23:09.261" endtime="20211014 19:23:09.263"/>
</kw>
<status status="PASS" starttime="20211014 19:23:09.243" endtime="20211014 19:23:09.264"/>
</kw>
<msg timestamp="20211014 19:23:09.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:23:09.243" endtime="20211014 19:23:09.264"/>
</kw>
<status status="PASS" starttime="20211014 19:23:09.241" endtime="20211014 19:23:09.264"/>
</kw>
<status status="PASS" starttime="20211014 19:23:09.241" endtime="20211014 19:23:09.264"/>
</kw>
<status status="PASS" starttime="20211014 19:23:09.222" endtime="20211014 19:23:09.265"/>
</kw>
<status status="PASS" starttime="20211014 19:23:09.221" endtime="20211014 19:23:09.265"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:23:09.270" level="INFO">Running command 'ozone sh key delete 96518-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:23:17.936" level="INFO">${rc} = 255</msg>
<msg timestamp="20211014 19:23:17.936" level="INFO">${output} = KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20211014 19:23:09.267" endtime="20211014 19:23:17.937"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:23:17.940" level="INFO">KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20211014 19:23:17.937" endtime="20211014 19:23:17.940"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:23:17.941" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20211014 19:23:17.942" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20211014 19:23:17.940" endtime="20211014 19:23:17.942"/>
</kw>
<status status="FAIL" starttime="20211014 19:23:09.266" endtime="20211014 19:23:17.943"/>
</kw>
<msg timestamp="20211014 19:23:17.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211014 19:23:09.266" endtime="20211014 19:23:17.944"/>
</kw>
<status status="FAIL" starttime="20211014 19:23:09.265" endtime="20211014 19:23:17.944"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211014 19:23:17.945" endtime="20211014 19:23:17.945"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211014 19:23:17.945" endtime="20211014 19:23:17.946"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211014 19:23:09.219" endtime="20211014 19:23:17.946">255 != 0</status>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:23:17.959" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:23:17.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:23:17.968" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211014 19:23:17.955" endtime="20211014 19:23:17.968"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:23:17.970" level="INFO">scm</msg>
<status status="PASS" starttime="20211014 19:23:17.968" endtime="20211014 19:23:17.970"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:23:17.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:23:17.970" endtime="20211014 19:23:17.972"/>
</kw>
<status status="PASS" starttime="20211014 19:23:17.954" endtime="20211014 19:23:17.973"/>
</kw>
<msg timestamp="20211014 19:23:17.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:23:17.953" endtime="20211014 19:23:17.974"/>
</kw>
<msg timestamp="20211014 19:23:17.974" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211014 19:23:17.953" endtime="20211014 19:23:17.974"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211014 19:23:17.978" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211014 19:23:17.975" endtime="20211014 19:23:17.978"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:23:17.989" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:23:18.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:23:18.000" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:23:17.986" endtime="20211014 19:23:18.000"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:23:18.001" level="INFO"/>
<status status="PASS" starttime="20211014 19:23:18.000" endtime="20211014 19:23:18.001"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:23:18.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:23:18.002" endtime="20211014 19:23:18.002"/>
</kw>
<status status="PASS" starttime="20211014 19:23:17.985" endtime="20211014 19:23:18.003"/>
</kw>
<msg timestamp="20211014 19:23:18.003" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:23:17.984" endtime="20211014 19:23:18.004"/>
</kw>
<status status="PASS" starttime="20211014 19:23:17.980" endtime="20211014 19:23:18.004"/>
</kw>
<status status="PASS" starttime="20211014 19:23:17.979" endtime="20211014 19:23:18.004"/>
</kw>
<status status="PASS" starttime="20211014 19:23:17.952" endtime="20211014 19:23:18.005"/>
</kw>
<status status="PASS" starttime="20211014 19:23:17.951" endtime="20211014 19:23:18.005"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:23:18.011" level="INFO">Running command 'ozone sh bucket list 96518-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:23:26.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:23:26.864" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "96518-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "202...</msg>
<status status="PASS" starttime="20211014 19:23:18.008" endtime="20211014 19:23:26.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:23:26.865" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "96518-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-14T19:18:42.653Z",
  "modificationTime" : "2021-10-14T19:18:42.653Z",
  "sourceVolume" : "96518-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "96518-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-14T19:17:51.946Z",
  "modificationTime" : "2021-10-14T19:18:34.139Z",
  "sourceVolume" : "96518-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "96518-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-14T19:18:57.407Z",
  "modificationTime" : "2021-10-14T19:18:57.407Z",
  "sourceVolume" : "96518-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "96518-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-14T19:17:35.452Z",
  "modificationTime" : "2021-10-14T19:18:25.613Z",
  "sourceVolume" : "96518-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "96518-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-14T19:17:43.714Z",
  "modificationTime" : "2021-10-14T19:17:43.714Z",
  "sourceVolume" : "96518-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
} ]</msg>
<status status="PASS" starttime="20211014 19:23:26.864" endtime="20211014 19:23:26.865"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:23:26.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:23:26.865" endtime="20211014 19:23:26.866"/>
</kw>
<status status="PASS" starttime="20211014 19:23:18.007" endtime="20211014 19:23:26.867"/>
</kw>
<msg timestamp="20211014 19:23:26.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:23:18.007" endtime="20211014 19:23:26.867"/>
</kw>
<msg timestamp="20211014 19:23:26.868" level="INFO">${result} = [ {
  "metadata" : { },
  "volumeName" : "96518-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "202...</msg>
<status status="PASS" starttime="20211014 19:23:18.006" endtime="20211014 19:23:26.868"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 19:23:26.869" endtime="20211014 19:23:26.869"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 19:23:26.870" endtime="20211014 19:23:26.870"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211014 19:23:17.950" endtime="20211014 19:23:26.871"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:23:26.882" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:23:26.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:23:26.887" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211014 19:23:26.878" endtime="20211014 19:23:26.888"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:23:26.889" level="INFO">scm</msg>
<status status="PASS" starttime="20211014 19:23:26.888" endtime="20211014 19:23:26.889"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:23:26.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:23:26.889" endtime="20211014 19:23:26.890"/>
</kw>
<status status="PASS" starttime="20211014 19:23:26.877" endtime="20211014 19:23:26.891"/>
</kw>
<msg timestamp="20211014 19:23:26.891" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:23:26.876" endtime="20211014 19:23:26.891"/>
</kw>
<msg timestamp="20211014 19:23:26.892" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211014 19:23:26.875" endtime="20211014 19:23:26.892"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211014 19:23:26.894" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211014 19:23:26.893" endtime="20211014 19:23:26.894"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:23:26.901" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:23:26.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:23:26.912" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:23:26.898" endtime="20211014 19:23:26.913"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:23:26.916" level="INFO"/>
<status status="PASS" starttime="20211014 19:23:26.914" endtime="20211014 19:23:26.916"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:23:26.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:23:26.917" endtime="20211014 19:23:26.918"/>
</kw>
<status status="PASS" starttime="20211014 19:23:26.897" endtime="20211014 19:23:26.919"/>
</kw>
<msg timestamp="20211014 19:23:26.919" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:23:26.896" endtime="20211014 19:23:26.920"/>
</kw>
<status status="PASS" starttime="20211014 19:23:26.895" endtime="20211014 19:23:26.921"/>
</kw>
<status status="PASS" starttime="20211014 19:23:26.895" endtime="20211014 19:23:26.921"/>
</kw>
<status status="PASS" starttime="20211014 19:23:26.874" endtime="20211014 19:23:26.922"/>
</kw>
<status status="PASS" starttime="20211014 19:23:26.873" endtime="20211014 19:23:26.922"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:23:26.928" level="INFO">Running command 'ozone sh bucket info 96518-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:23:34.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:23:34.350" level="INFO">${output} = {
  "volumeName" : "96518-target",
  "bucketName" : "link1",
  "sourceVolume" : "96518-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-10-14T19:18:57.407Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20211014 19:23:26.925" endtime="20211014 19:23:34.350"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:23:34.351" level="INFO">{
  "volumeName" : "96518-target",
  "bucketName" : "link1",
  "sourceVolume" : "96518-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-10-14T19:18:57.407Z",
  "modificationTime" : "2021-10-14T19:18:57.407Z"
}</msg>
<status status="PASS" starttime="20211014 19:23:34.350" endtime="20211014 19:23:34.351"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:23:34.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:23:34.351" endtime="20211014 19:23:34.352"/>
</kw>
<status status="PASS" starttime="20211014 19:23:26.925" endtime="20211014 19:23:34.352"/>
</kw>
<msg timestamp="20211014 19:23:34.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:23:26.924" endtime="20211014 19:23:34.353"/>
</kw>
<msg timestamp="20211014 19:23:34.353" level="INFO">${result} = {
  "volumeName" : "96518-target",
  "bucketName" : "link1",
  "sourceVolume" : "96518-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-10-14T19:18:57.407Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20211014 19:23:26.923" endtime="20211014 19:23:34.353"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${source}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 19:23:34.353" endtime="20211014 19:23:34.354"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bucket1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 19:23:34.354" endtime="20211014 19:23:34.355"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${target}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 19:23:34.355" endtime="20211014 19:23:34.356"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 19:23:34.356" endtime="20211014 19:23:34.356"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>modificationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 19:23:34.357" endtime="20211014 19:23:34.357"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 19:23:34.357" endtime="20211014 19:23:34.358"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>metadata</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 19:23:34.358" endtime="20211014 19:23:34.358"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211014 19:23:26.871" endtime="20211014 19:23:34.359"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:23:34.365" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:23:34.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:23:34.369" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211014 19:23:34.363" endtime="20211014 19:23:34.369"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:23:34.371" level="INFO">scm</msg>
<status status="PASS" starttime="20211014 19:23:34.370" endtime="20211014 19:23:34.371"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:23:34.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:23:34.371" endtime="20211014 19:23:34.372"/>
</kw>
<status status="PASS" starttime="20211014 19:23:34.362" endtime="20211014 19:23:34.372"/>
</kw>
<msg timestamp="20211014 19:23:34.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:23:34.362" endtime="20211014 19:23:34.372"/>
</kw>
<msg timestamp="20211014 19:23:34.373" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211014 19:23:34.361" endtime="20211014 19:23:34.373"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211014 19:23:34.374" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211014 19:23:34.373" endtime="20211014 19:23:34.374"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:23:34.379" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:23:34.411" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:23:34.411" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:23:34.377" endtime="20211014 19:23:34.411"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:23:34.413" level="INFO"/>
<status status="PASS" starttime="20211014 19:23:34.412" endtime="20211014 19:23:34.413"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:23:34.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:23:34.413" endtime="20211014 19:23:34.414"/>
</kw>
<status status="PASS" starttime="20211014 19:23:34.377" endtime="20211014 19:23:34.414"/>
</kw>
<msg timestamp="20211014 19:23:34.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:23:34.376" endtime="20211014 19:23:34.414"/>
</kw>
<status status="PASS" starttime="20211014 19:23:34.375" endtime="20211014 19:23:34.415"/>
</kw>
<status status="PASS" starttime="20211014 19:23:34.374" endtime="20211014 19:23:34.415"/>
</kw>
<status status="PASS" starttime="20211014 19:23:34.361" endtime="20211014 19:23:34.415"/>
</kw>
<status status="PASS" starttime="20211014 19:23:34.360" endtime="20211014 19:23:34.415"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:23:34.420" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 96518-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:23:43.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:23:43.228" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211014 19:23:34.417" endtime="20211014 19:23:43.228"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:23:43.237" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211014 19:23:43.231" endtime="20211014 19:23:43.237"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:23:43.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:23:43.238" endtime="20211014 19:23:43.239"/>
</kw>
<status status="PASS" starttime="20211014 19:23:34.416" endtime="20211014 19:23:43.239"/>
</kw>
<msg timestamp="20211014 19:23:43.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:23:34.416" endtime="20211014 19:23:43.240"/>
</kw>
<status status="PASS" starttime="20211014 19:23:34.415" endtime="20211014 19:23:43.240"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:23:43.254" level="INFO">Running command 'ozone sh bucket getacl 96518-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:23:52.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:23:52.093" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20211014 19:23:43.250" endtime="20211014 19:23:52.093"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:23:52.095" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20211014 19:23:52.094" endtime="20211014 19:23:52.095"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:23:52.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:23:52.095" endtime="20211014 19:23:52.096"/>
</kw>
<status status="PASS" starttime="20211014 19:23:43.249" endtime="20211014 19:23:52.097"/>
</kw>
<msg timestamp="20211014 19:23:52.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:23:43.248" endtime="20211014 19:23:52.097"/>
</kw>
<msg timestamp="20211014 19:23:52.097" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20211014 19:23:43.246" endtime="20211014 19:23:52.097"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211014 19:23:52.098" endtime="20211014 19:23:52.098"/>
</kw>
<status status="PASS" starttime="20211014 19:23:43.245" endtime="20211014 19:23:52.099"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:23:52.110" level="INFO">Running command 'ozone sh bucket getacl 96518-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:24:01.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:24:01.060" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:23:52.107" endtime="20211014 19:24:01.061"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:24:01.067" level="INFO"/>
<status status="PASS" starttime="20211014 19:24:01.061" endtime="20211014 19:24:01.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:24:01.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:24:01.067" endtime="20211014 19:24:01.068"/>
</kw>
<status status="PASS" starttime="20211014 19:23:52.105" endtime="20211014 19:24:01.069"/>
</kw>
<msg timestamp="20211014 19:24:01.069" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:23:52.105" endtime="20211014 19:24:01.074"/>
</kw>
<msg timestamp="20211014 19:24:01.075" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20211014 19:23:52.102" endtime="20211014 19:24:01.075"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211014 19:24:01.075" endtime="20211014 19:24:01.076"/>
</kw>
<status status="PASS" starttime="20211014 19:23:52.099" endtime="20211014 19:24:01.080"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:24:01.089" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 96518-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:24:10.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:24:10.062" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211014 19:24:01.082" endtime="20211014 19:24:10.062"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:24:10.063" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211014 19:24:10.062" endtime="20211014 19:24:10.063"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:24:10.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:24:10.063" endtime="20211014 19:24:10.064"/>
</kw>
<status status="PASS" starttime="20211014 19:24:01.081" endtime="20211014 19:24:10.065"/>
</kw>
<msg timestamp="20211014 19:24:10.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:24:01.081" endtime="20211014 19:24:10.065"/>
</kw>
<status status="PASS" starttime="20211014 19:24:01.080" endtime="20211014 19:24:10.065"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:24:10.075" level="INFO">Running command 'ozone sh bucket getacl 96518-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:24:19.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:24:19.498" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:24:10.072" endtime="20211014 19:24:19.499"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:24:19.501" level="INFO"/>
<status status="PASS" starttime="20211014 19:24:19.500" endtime="20211014 19:24:19.501"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:24:19.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:24:19.502" endtime="20211014 19:24:19.503"/>
</kw>
<status status="PASS" starttime="20211014 19:24:10.070" endtime="20211014 19:24:19.504"/>
</kw>
<msg timestamp="20211014 19:24:19.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:24:10.070" endtime="20211014 19:24:19.504"/>
</kw>
<msg timestamp="20211014 19:24:19.505" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20211014 19:24:10.068" endtime="20211014 19:24:19.505"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211014 19:24:19.505" endtime="20211014 19:24:19.506"/>
</kw>
<status status="PASS" starttime="20211014 19:24:10.066" endtime="20211014 19:24:19.506"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:24:19.515" level="INFO">Running command 'ozone sh bucket getacl 96518-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:24:28.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:24:28.198" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20211014 19:24:19.511" endtime="20211014 19:24:28.198"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:24:28.199" level="INFO">READ</msg>
<status status="PASS" starttime="20211014 19:24:28.198" endtime="20211014 19:24:28.199"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:24:28.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:24:28.200" endtime="20211014 19:24:28.200"/>
</kw>
<status status="PASS" starttime="20211014 19:24:19.511" endtime="20211014 19:24:28.201"/>
</kw>
<msg timestamp="20211014 19:24:28.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:24:19.510" endtime="20211014 19:24:28.202"/>
</kw>
<msg timestamp="20211014 19:24:28.202" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20211014 19:24:19.509" endtime="20211014 19:24:28.202"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211014 19:24:28.202" endtime="20211014 19:24:28.203"/>
</kw>
<status status="PASS" starttime="20211014 19:24:19.507" endtime="20211014 19:24:28.203"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211014 19:23:34.359" endtime="20211014 19:24:28.204"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:24:28.212" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:24:28.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:24:28.218" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211014 19:24:28.210" endtime="20211014 19:24:28.218"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:24:28.221" level="INFO">scm</msg>
<status status="PASS" starttime="20211014 19:24:28.219" endtime="20211014 19:24:28.221"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:24:28.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:24:28.221" endtime="20211014 19:24:28.222"/>
</kw>
<status status="PASS" starttime="20211014 19:24:28.209" endtime="20211014 19:24:28.222"/>
</kw>
<msg timestamp="20211014 19:24:28.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:24:28.208" endtime="20211014 19:24:28.222"/>
</kw>
<msg timestamp="20211014 19:24:28.223" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211014 19:24:28.207" endtime="20211014 19:24:28.223"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211014 19:24:28.224" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211014 19:24:28.223" endtime="20211014 19:24:28.224"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:24:28.231" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:24:28.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:24:28.242" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:24:28.226" endtime="20211014 19:24:28.243"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:24:28.244" level="INFO"/>
<status status="PASS" starttime="20211014 19:24:28.243" endtime="20211014 19:24:28.245"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:24:28.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:24:28.245" endtime="20211014 19:24:28.245"/>
</kw>
<status status="PASS" starttime="20211014 19:24:28.226" endtime="20211014 19:24:28.246"/>
</kw>
<msg timestamp="20211014 19:24:28.246" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:24:28.225" endtime="20211014 19:24:28.246"/>
</kw>
<status status="PASS" starttime="20211014 19:24:28.225" endtime="20211014 19:24:28.247"/>
</kw>
<status status="PASS" starttime="20211014 19:24:28.224" endtime="20211014 19:24:28.247"/>
</kw>
<status status="PASS" starttime="20211014 19:24:28.206" endtime="20211014 19:24:28.247"/>
</kw>
<status status="PASS" starttime="20211014 19:24:28.206" endtime="20211014 19:24:28.247"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:24:28.253" level="INFO">Running command 'ozone sh bucket link 96518-source/bucket2 96518-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:24:36.699" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:24:36.699" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:24:28.250" endtime="20211014 19:24:36.699"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:24:36.702" level="INFO"/>
<status status="PASS" starttime="20211014 19:24:36.700" endtime="20211014 19:24:36.702"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:24:36.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:24:36.702" endtime="20211014 19:24:36.706"/>
</kw>
<status status="PASS" starttime="20211014 19:24:28.249" endtime="20211014 19:24:36.707"/>
</kw>
<msg timestamp="20211014 19:24:36.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:24:28.249" endtime="20211014 19:24:36.707"/>
</kw>
<status status="PASS" starttime="20211014 19:24:28.248" endtime="20211014 19:24:36.707"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:24:36.712" level="INFO">Running command 'ozone sh bucket create 96518-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:24:43.257" level="INFO">${rc} = 255</msg>
<msg timestamp="20211014 19:24:43.257" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211014 19:24:36.709" endtime="20211014 19:24:43.257"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:24:43.259" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211014 19:24:43.258" endtime="20211014 19:24:43.260"/>
</kw>
<msg timestamp="20211014 19:24:43.260" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211014 19:24:36.708" endtime="20211014 19:24:43.261"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 19:24:43.261" endtime="20211014 19:24:43.262"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:24:43.268" level="INFO">Running command 'ozone sh bucket create 96518-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:24:51.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:24:51.367" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:24:43.265" endtime="20211014 19:24:51.367"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:24:51.371" level="INFO"/>
<status status="PASS" starttime="20211014 19:24:51.369" endtime="20211014 19:24:51.372"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:24:51.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:24:51.372" endtime="20211014 19:24:51.374"/>
</kw>
<status status="PASS" starttime="20211014 19:24:43.264" endtime="20211014 19:24:51.375"/>
</kw>
<msg timestamp="20211014 19:24:51.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:24:43.263" endtime="20211014 19:24:51.376"/>
</kw>
<status status="PASS" starttime="20211014 19:24:43.262" endtime="20211014 19:24:51.377"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:24:51.384" level="INFO">Running command 'ozone sh bucket link 96518-source/bucket1 96518-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:25:00.076" level="INFO">${rc} = 255</msg>
<msg timestamp="20211014 19:25:00.076" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211014 19:24:51.379" endtime="20211014 19:25:00.076"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:25:00.079" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211014 19:25:00.078" endtime="20211014 19:25:00.079"/>
</kw>
<msg timestamp="20211014 19:25:00.080" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211014 19:24:51.377" endtime="20211014 19:25:00.080"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 19:25:00.081" endtime="20211014 19:25:00.082"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211014 19:24:28.204" endtime="20211014 19:25:00.082"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:25:00.094" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:25:00.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:25:00.100" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211014 19:25:00.090" endtime="20211014 19:25:00.100"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:25:00.102" level="INFO">scm</msg>
<status status="PASS" starttime="20211014 19:25:00.101" endtime="20211014 19:25:00.102"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:25:00.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:25:00.103" endtime="20211014 19:25:00.104"/>
</kw>
<status status="PASS" starttime="20211014 19:25:00.089" endtime="20211014 19:25:00.104"/>
</kw>
<msg timestamp="20211014 19:25:00.104" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:25:00.089" endtime="20211014 19:25:00.105"/>
</kw>
<msg timestamp="20211014 19:25:00.105" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211014 19:25:00.088" endtime="20211014 19:25:00.105"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211014 19:25:00.106" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211014 19:25:00.105" endtime="20211014 19:25:00.106"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:25:00.115" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:25:00.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:25:00.129" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:25:00.112" endtime="20211014 19:25:00.129"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:25:00.132" level="INFO"/>
<status status="PASS" starttime="20211014 19:25:00.130" endtime="20211014 19:25:00.136"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:25:00.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:25:00.136" endtime="20211014 19:25:00.136"/>
</kw>
<status status="PASS" starttime="20211014 19:25:00.110" endtime="20211014 19:25:00.137"/>
</kw>
<msg timestamp="20211014 19:25:00.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:25:00.109" endtime="20211014 19:25:00.137"/>
</kw>
<status status="PASS" starttime="20211014 19:25:00.107" endtime="20211014 19:25:00.137"/>
</kw>
<status status="PASS" starttime="20211014 19:25:00.106" endtime="20211014 19:25:00.137"/>
</kw>
<status status="PASS" starttime="20211014 19:25:00.087" endtime="20211014 19:25:00.138"/>
</kw>
<status status="PASS" starttime="20211014 19:25:00.086" endtime="20211014 19:25:00.138"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:25:00.146" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:25:00.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:25:00.151" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:25:00.142" endtime="20211014 19:25:00.151"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:25:00.152" level="INFO"/>
<status status="PASS" starttime="20211014 19:25:00.151" endtime="20211014 19:25:00.153"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:25:00.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:25:00.153" endtime="20211014 19:25:00.153"/>
</kw>
<status status="PASS" starttime="20211014 19:25:00.141" endtime="20211014 19:25:00.154"/>
</kw>
<msg timestamp="20211014 19:25:00.154" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:25:00.140" endtime="20211014 19:25:00.154"/>
</kw>
<status status="PASS" starttime="20211014 19:25:00.139" endtime="20211014 19:25:00.154"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:25:00.161" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:25:00.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:25:00.165" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211014 19:25:00.158" endtime="20211014 19:25:00.165"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:25:00.166" level="INFO">scm</msg>
<status status="PASS" starttime="20211014 19:25:00.165" endtime="20211014 19:25:00.166"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:25:00.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:25:00.167" endtime="20211014 19:25:00.167"/>
</kw>
<status status="PASS" starttime="20211014 19:25:00.157" endtime="20211014 19:25:00.168"/>
</kw>
<msg timestamp="20211014 19:25:00.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:25:00.157" endtime="20211014 19:25:00.168"/>
</kw>
<msg timestamp="20211014 19:25:00.169" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211014 19:25:00.156" endtime="20211014 19:25:00.169"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211014 19:25:00.169" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211014 19:25:00.169" endtime="20211014 19:25:00.169"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:25:00.175" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:25:00.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:25:00.185" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:25:00.173" endtime="20211014 19:25:00.185"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:25:00.188" level="INFO"/>
<status status="PASS" starttime="20211014 19:25:00.186" endtime="20211014 19:25:00.188"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:25:00.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:25:00.188" endtime="20211014 19:25:00.190"/>
</kw>
<status status="PASS" starttime="20211014 19:25:00.172" endtime="20211014 19:25:00.191"/>
</kw>
<msg timestamp="20211014 19:25:00.192" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:25:00.171" endtime="20211014 19:25:00.192"/>
</kw>
<status status="PASS" starttime="20211014 19:25:00.170" endtime="20211014 19:25:00.193"/>
</kw>
<status status="PASS" starttime="20211014 19:25:00.170" endtime="20211014 19:25:00.193"/>
</kw>
<status status="PASS" starttime="20211014 19:25:00.155" endtime="20211014 19:25:00.193"/>
</kw>
<status status="PASS" starttime="20211014 19:25:00.155" endtime="20211014 19:25:00.193"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:25:00.198" level="INFO">Running command 'ozone sh key list 96518-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:25:09.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:25:09.669" level="INFO">${output} = [ {
  "volumeName" : "96518-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-10-14T19:14:14.099Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20211014 19:25:00.195" endtime="20211014 19:25:09.669"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:25:09.670" level="INFO">[ {
  "volumeName" : "96518-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-10-14T19:14:14.099Z",
  "modificationTime" : "2021-10-14T19:17:17.975Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "replicationFactor" : 3,
  "replicationType" : "RATIS"
} ]</msg>
<status status="PASS" starttime="20211014 19:25:09.670" endtime="20211014 19:25:09.671"/>
</kw>
<msg timestamp="20211014 19:25:09.671" level="INFO">${result} = [ {
  "volumeName" : "96518-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-10-14T19:14:14.099Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20211014 19:25:00.194" endtime="20211014 19:25:09.671"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 19:25:09.671" endtime="20211014 19:25:09.672"/>
</kw>
<status status="PASS" starttime="20211014 19:25:00.139" endtime="20211014 19:25:09.672"/>
</kw>
<status status="PASS" starttime="20211014 19:25:00.138" endtime="20211014 19:25:09.672"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211014 19:25:00.084" endtime="20211014 19:25:09.673"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:25:09.683" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:25:09.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:25:09.689" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211014 19:25:09.680" endtime="20211014 19:25:09.689"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:25:09.691" level="INFO">scm</msg>
<status status="PASS" starttime="20211014 19:25:09.690" endtime="20211014 19:25:09.691"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:25:09.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:25:09.691" endtime="20211014 19:25:09.693"/>
</kw>
<status status="PASS" starttime="20211014 19:25:09.679" endtime="20211014 19:25:09.693"/>
</kw>
<msg timestamp="20211014 19:25:09.693" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:25:09.679" endtime="20211014 19:25:09.694"/>
</kw>
<msg timestamp="20211014 19:25:09.694" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211014 19:25:09.678" endtime="20211014 19:25:09.695"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211014 19:25:09.696" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211014 19:25:09.695" endtime="20211014 19:25:09.696"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:25:09.703" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:25:09.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:25:09.712" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:25:09.701" endtime="20211014 19:25:09.712"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:25:09.714" level="INFO"/>
<status status="PASS" starttime="20211014 19:25:09.712" endtime="20211014 19:25:09.714"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:25:09.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:25:09.714" endtime="20211014 19:25:09.715"/>
</kw>
<status status="PASS" starttime="20211014 19:25:09.700" endtime="20211014 19:25:09.716"/>
</kw>
<msg timestamp="20211014 19:25:09.716" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:25:09.699" endtime="20211014 19:25:09.716"/>
</kw>
<status status="PASS" starttime="20211014 19:25:09.698" endtime="20211014 19:25:09.716"/>
</kw>
<status status="PASS" starttime="20211014 19:25:09.697" endtime="20211014 19:25:09.717"/>
</kw>
<status status="PASS" starttime="20211014 19:25:09.676" endtime="20211014 19:25:09.717"/>
</kw>
<status status="PASS" starttime="20211014 19:25:09.675" endtime="20211014 19:25:09.717"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:25:09.723" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:25:09.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:25:09.728" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:25:09.721" endtime="20211014 19:25:09.728"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:25:09.730" level="INFO"/>
<status status="PASS" starttime="20211014 19:25:09.729" endtime="20211014 19:25:09.730"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:25:09.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:25:09.730" endtime="20211014 19:25:09.732"/>
</kw>
<status status="PASS" starttime="20211014 19:25:09.720" endtime="20211014 19:25:09.732"/>
</kw>
<msg timestamp="20211014 19:25:09.732" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:25:09.720" endtime="20211014 19:25:09.732"/>
</kw>
<status status="PASS" starttime="20211014 19:25:09.719" endtime="20211014 19:25:09.732"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:25:09.737" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:25:09.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:25:09.743" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211014 19:25:09.735" endtime="20211014 19:25:09.743"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:25:09.745" level="INFO">scm</msg>
<status status="PASS" starttime="20211014 19:25:09.744" endtime="20211014 19:25:09.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:25:09.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:25:09.745" endtime="20211014 19:25:09.747"/>
</kw>
<status status="PASS" starttime="20211014 19:25:09.734" endtime="20211014 19:25:09.748"/>
</kw>
<msg timestamp="20211014 19:25:09.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:25:09.734" endtime="20211014 19:25:09.748"/>
</kw>
<msg timestamp="20211014 19:25:09.749" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211014 19:25:09.734" endtime="20211014 19:25:09.749"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211014 19:25:09.750" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211014 19:25:09.749" endtime="20211014 19:25:09.750"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:25:09.757" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:25:09.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:25:09.765" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:25:09.753" endtime="20211014 19:25:09.765"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:25:09.766" level="INFO"/>
<status status="PASS" starttime="20211014 19:25:09.765" endtime="20211014 19:25:09.766"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:25:09.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:25:09.767" endtime="20211014 19:25:09.767"/>
</kw>
<status status="PASS" starttime="20211014 19:25:09.752" endtime="20211014 19:25:09.768"/>
</kw>
<msg timestamp="20211014 19:25:09.768" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:25:09.752" endtime="20211014 19:25:09.768"/>
</kw>
<status status="PASS" starttime="20211014 19:25:09.751" endtime="20211014 19:25:09.769"/>
</kw>
<status status="PASS" starttime="20211014 19:25:09.750" endtime="20211014 19:25:09.769"/>
</kw>
<status status="PASS" starttime="20211014 19:25:09.733" endtime="20211014 19:25:09.769"/>
</kw>
<status status="PASS" starttime="20211014 19:25:09.733" endtime="20211014 19:25:09.769"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:25:09.774" level="INFO">Running command 'ozone sh key list 96518-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:25:16.159" level="INFO">${rc} = 255</msg>
<msg timestamp="20211014 19:25:16.160" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 96518-target unreadable-link null</msg>
<status status="PASS" starttime="20211014 19:25:09.771" endtime="20211014 19:25:16.160"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:25:16.162" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 96518-target unreadable-link null</msg>
<status status="PASS" starttime="20211014 19:25:16.161" endtime="20211014 19:25:16.162"/>
</kw>
<msg timestamp="20211014 19:25:16.163" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 96518-target unreadable-link null</msg>
<status status="PASS" starttime="20211014 19:25:09.770" endtime="20211014 19:25:16.163"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 19:25:16.164" endtime="20211014 19:25:16.165"/>
</kw>
<status status="PASS" starttime="20211014 19:25:09.718" endtime="20211014 19:25:16.166"/>
</kw>
<status status="PASS" starttime="20211014 19:25:09.718" endtime="20211014 19:25:16.166"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211014 19:25:09.674" endtime="20211014 19:25:16.167"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:25:16.181" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:25:16.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:25:16.187" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211014 19:25:16.177" endtime="20211014 19:25:16.188"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:25:16.190" level="INFO">scm</msg>
<status status="PASS" starttime="20211014 19:25:16.188" endtime="20211014 19:25:16.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:25:16.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:25:16.190" endtime="20211014 19:25:16.191"/>
</kw>
<status status="PASS" starttime="20211014 19:25:16.176" endtime="20211014 19:25:16.192"/>
</kw>
<msg timestamp="20211014 19:25:16.192" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:25:16.175" endtime="20211014 19:25:16.192"/>
</kw>
<msg timestamp="20211014 19:25:16.193" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211014 19:25:16.173" endtime="20211014 19:25:16.193"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211014 19:25:16.195" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211014 19:25:16.194" endtime="20211014 19:25:16.195"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:25:16.202" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:25:16.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:25:16.214" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:25:16.199" endtime="20211014 19:25:16.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:25:16.217" level="INFO"/>
<status status="PASS" starttime="20211014 19:25:16.215" endtime="20211014 19:25:16.217"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:25:16.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:25:16.217" endtime="20211014 19:25:16.218"/>
</kw>
<status status="PASS" starttime="20211014 19:25:16.199" endtime="20211014 19:25:16.218"/>
</kw>
<msg timestamp="20211014 19:25:16.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:25:16.198" endtime="20211014 19:25:16.218"/>
</kw>
<status status="PASS" starttime="20211014 19:25:16.196" endtime="20211014 19:25:16.219"/>
</kw>
<status status="PASS" starttime="20211014 19:25:16.195" endtime="20211014 19:25:16.219"/>
</kw>
<status status="PASS" starttime="20211014 19:25:16.171" endtime="20211014 19:25:16.219"/>
</kw>
<status status="PASS" starttime="20211014 19:25:16.170" endtime="20211014 19:25:16.219"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:25:16.227" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:25:16.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:25:16.232" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:25:16.224" endtime="20211014 19:25:16.232"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:25:16.234" level="INFO"/>
<status status="PASS" starttime="20211014 19:25:16.233" endtime="20211014 19:25:16.234"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:25:16.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:25:16.235" endtime="20211014 19:25:16.236"/>
</kw>
<status status="PASS" starttime="20211014 19:25:16.224" endtime="20211014 19:25:16.236"/>
</kw>
<msg timestamp="20211014 19:25:16.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:25:16.223" endtime="20211014 19:25:16.237"/>
</kw>
<status status="PASS" starttime="20211014 19:25:16.222" endtime="20211014 19:25:16.237"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:25:16.245" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:25:16.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:25:16.248" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211014 19:25:16.241" endtime="20211014 19:25:16.249"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:25:16.250" level="INFO">scm</msg>
<status status="PASS" starttime="20211014 19:25:16.249" endtime="20211014 19:25:16.250"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:25:16.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:25:16.251" endtime="20211014 19:25:16.251"/>
</kw>
<status status="PASS" starttime="20211014 19:25:16.241" endtime="20211014 19:25:16.252"/>
</kw>
<msg timestamp="20211014 19:25:16.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:25:16.240" endtime="20211014 19:25:16.252"/>
</kw>
<msg timestamp="20211014 19:25:16.253" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211014 19:25:16.239" endtime="20211014 19:25:16.253"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211014 19:25:16.254" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211014 19:25:16.253" endtime="20211014 19:25:16.254"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:25:16.259" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:25:16.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:25:16.272" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:25:16.257" endtime="20211014 19:25:16.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:25:16.273" level="INFO"/>
<status status="PASS" starttime="20211014 19:25:16.273" endtime="20211014 19:25:16.273"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:25:16.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:25:16.274" endtime="20211014 19:25:16.274"/>
</kw>
<status status="PASS" starttime="20211014 19:25:16.256" endtime="20211014 19:25:16.275"/>
</kw>
<msg timestamp="20211014 19:25:16.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:25:16.256" endtime="20211014 19:25:16.275"/>
</kw>
<status status="PASS" starttime="20211014 19:25:16.255" endtime="20211014 19:25:16.276"/>
</kw>
<status status="PASS" starttime="20211014 19:25:16.254" endtime="20211014 19:25:16.276"/>
</kw>
<status status="PASS" starttime="20211014 19:25:16.238" endtime="20211014 19:25:16.276"/>
</kw>
<status status="PASS" starttime="20211014 19:25:16.238" endtime="20211014 19:25:16.277"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:25:16.281" level="INFO">Running command 'ozone sh bucket info 96518-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:25:25.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:25:25.450" level="INFO">${output} = {
  "volumeName" : "96518-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "96518-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-10-14T19:17:51.946Z...</msg>
<status status="PASS" starttime="20211014 19:25:16.278" endtime="20211014 19:25:25.450"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:25:25.452" level="INFO">{
  "volumeName" : "96518-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "96518-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-10-14T19:17:51.946Z",
  "modificationTime" : "2021-10-14T19:18:34.139Z"
}</msg>
<status status="PASS" starttime="20211014 19:25:25.451" endtime="20211014 19:25:25.452"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:25:25.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:25:25.452" endtime="20211014 19:25:25.453"/>
</kw>
<status status="PASS" starttime="20211014 19:25:16.278" endtime="20211014 19:25:25.453"/>
</kw>
<msg timestamp="20211014 19:25:25.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:25:16.278" endtime="20211014 19:25:25.454"/>
</kw>
<msg timestamp="20211014 19:25:25.454" level="INFO">${result} = {
  "volumeName" : "96518-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "96518-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-10-14T19:17:51.946Z...</msg>
<status status="PASS" starttime="20211014 19:25:16.277" endtime="20211014 19:25:25.454"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 19:25:25.454" endtime="20211014 19:25:25.455"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 19:25:25.455" endtime="20211014 19:25:25.456"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:25:25.461" level="INFO">Running command 'ozone sh key list 96518-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:25:31.625" level="INFO">${rc} = 255</msg>
<msg timestamp="20211014 19:25:31.625" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 96518-source unreadable-bucket </msg>
<status status="PASS" starttime="20211014 19:25:25.457" endtime="20211014 19:25:31.625"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:25:31.626" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 96518-source unreadable-bucket </msg>
<status status="PASS" starttime="20211014 19:25:31.625" endtime="20211014 19:25:31.626"/>
</kw>
<msg timestamp="20211014 19:25:31.627" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 96518-source unreadable-bucket </msg>
<status status="PASS" starttime="20211014 19:25:25.456" endtime="20211014 19:25:31.627"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 19:25:31.627" endtime="20211014 19:25:31.628"/>
</kw>
<status status="PASS" starttime="20211014 19:25:16.221" endtime="20211014 19:25:31.628"/>
</kw>
<status status="PASS" starttime="20211014 19:25:16.220" endtime="20211014 19:25:31.629"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211014 19:25:16.168" endtime="20211014 19:25:31.629"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:25:31.640" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:25:31.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:25:31.646" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211014 19:25:31.637" endtime="20211014 19:25:31.646"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:25:31.647" level="INFO">scm</msg>
<status status="PASS" starttime="20211014 19:25:31.646" endtime="20211014 19:25:31.647"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:25:31.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:25:31.648" endtime="20211014 19:25:31.649"/>
</kw>
<status status="PASS" starttime="20211014 19:25:31.635" endtime="20211014 19:25:31.649"/>
</kw>
<msg timestamp="20211014 19:25:31.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:25:31.634" endtime="20211014 19:25:31.650"/>
</kw>
<msg timestamp="20211014 19:25:31.650" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211014 19:25:31.633" endtime="20211014 19:25:31.650"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211014 19:25:31.652" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211014 19:25:31.651" endtime="20211014 19:25:31.652"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:25:31.658" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:25:31.667" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:25:31.668" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:25:31.656" endtime="20211014 19:25:31.668"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:25:31.669" level="INFO"/>
<status status="PASS" starttime="20211014 19:25:31.669" endtime="20211014 19:25:31.670"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:25:31.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:25:31.670" endtime="20211014 19:25:31.671"/>
</kw>
<status status="PASS" starttime="20211014 19:25:31.654" endtime="20211014 19:25:31.671"/>
</kw>
<msg timestamp="20211014 19:25:31.671" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:25:31.654" endtime="20211014 19:25:31.672"/>
</kw>
<status status="PASS" starttime="20211014 19:25:31.653" endtime="20211014 19:25:31.672"/>
</kw>
<status status="PASS" starttime="20211014 19:25:31.652" endtime="20211014 19:25:31.672"/>
</kw>
<status status="PASS" starttime="20211014 19:25:31.632" endtime="20211014 19:25:31.673"/>
</kw>
<status status="PASS" starttime="20211014 19:25:31.631" endtime="20211014 19:25:31.673"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:25:31.678" level="INFO">Running command 'ozone sh bucket link 96518-target/loop1 96518-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:25:37.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:25:37.821" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:25:31.675" endtime="20211014 19:25:37.821"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:25:37.824" level="INFO"/>
<status status="PASS" starttime="20211014 19:25:37.822" endtime="20211014 19:25:37.824"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:25:37.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:25:37.824" endtime="20211014 19:25:37.825"/>
</kw>
<status status="PASS" starttime="20211014 19:25:31.674" endtime="20211014 19:25:37.826"/>
</kw>
<msg timestamp="20211014 19:25:37.826" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:25:31.674" endtime="20211014 19:25:37.826"/>
</kw>
<status status="PASS" starttime="20211014 19:25:31.673" endtime="20211014 19:25:37.827"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:25:37.833" level="INFO">Running command 'ozone sh bucket link 96518-target/loop2 96518-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:25:46.160" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:25:46.160" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:25:37.830" endtime="20211014 19:25:46.160"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:25:46.162" level="INFO"/>
<status status="PASS" starttime="20211014 19:25:46.161" endtime="20211014 19:25:46.162"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:25:46.163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:25:46.162" endtime="20211014 19:25:46.163"/>
</kw>
<status status="PASS" starttime="20211014 19:25:37.829" endtime="20211014 19:25:46.164"/>
</kw>
<msg timestamp="20211014 19:25:46.164" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:25:37.828" endtime="20211014 19:25:46.165"/>
</kw>
<status status="PASS" starttime="20211014 19:25:37.827" endtime="20211014 19:25:46.165"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:25:46.174" level="INFO">Running command 'ozone sh bucket link 96518-target/loop3 96518-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:25:54.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:25:54.327" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:25:46.170" endtime="20211014 19:25:54.327"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:25:54.329" level="INFO"/>
<status status="PASS" starttime="20211014 19:25:54.328" endtime="20211014 19:25:54.329"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:25:54.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:25:54.330" endtime="20211014 19:25:54.331"/>
</kw>
<status status="PASS" starttime="20211014 19:25:46.169" endtime="20211014 19:25:54.332"/>
</kw>
<msg timestamp="20211014 19:25:54.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:25:46.168" endtime="20211014 19:25:54.332"/>
</kw>
<status status="PASS" starttime="20211014 19:25:46.166" endtime="20211014 19:25:54.332"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:25:54.339" level="INFO">Running command 'ozone sh key list 96518-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:26:02.661" level="INFO">${rc} = 255</msg>
<msg timestamp="20211014 19:26:02.661" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20211014 19:25:54.335" endtime="20211014 19:26:02.661"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:26:02.663" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20211014 19:26:02.662" endtime="20211014 19:26:02.663"/>
</kw>
<msg timestamp="20211014 19:26:02.663" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20211014 19:25:54.333" endtime="20211014 19:26:02.663"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 19:26:02.664" endtime="20211014 19:26:02.664"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211014 19:25:31.629" endtime="20211014 19:26:02.665"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:26:02.671" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:26:02.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:26:02.676" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211014 19:26:02.669" endtime="20211014 19:26:02.676"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:26:02.678" level="INFO">scm</msg>
<status status="PASS" starttime="20211014 19:26:02.677" endtime="20211014 19:26:02.678"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:26:02.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:26:02.678" endtime="20211014 19:26:02.679"/>
</kw>
<status status="PASS" starttime="20211014 19:26:02.668" endtime="20211014 19:26:02.679"/>
</kw>
<msg timestamp="20211014 19:26:02.680" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:26:02.668" endtime="20211014 19:26:02.680"/>
</kw>
<msg timestamp="20211014 19:26:02.681" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211014 19:26:02.668" endtime="20211014 19:26:02.681"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211014 19:26:02.682" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211014 19:26:02.681" endtime="20211014 19:26:02.682"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:26:02.694" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:26:02.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:26:02.719" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:26:02.687" endtime="20211014 19:26:02.719"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:26:02.721" level="INFO"/>
<status status="PASS" starttime="20211014 19:26:02.720" endtime="20211014 19:26:02.722"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:26:02.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:26:02.722" endtime="20211014 19:26:02.723"/>
</kw>
<status status="PASS" starttime="20211014 19:26:02.684" endtime="20211014 19:26:02.723"/>
</kw>
<msg timestamp="20211014 19:26:02.723" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:26:02.684" endtime="20211014 19:26:02.723"/>
</kw>
<status status="PASS" starttime="20211014 19:26:02.683" endtime="20211014 19:26:02.724"/>
</kw>
<status status="PASS" starttime="20211014 19:26:02.682" endtime="20211014 19:26:02.724"/>
</kw>
<status status="PASS" starttime="20211014 19:26:02.667" endtime="20211014 19:26:02.724"/>
</kw>
<status status="PASS" starttime="20211014 19:26:02.666" endtime="20211014 19:26:02.724"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:26:02.729" level="INFO">Running command 'ozone sh bucket link 96518-source/bucket1 96518-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:26:10.445" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:26:10.445" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:26:02.727" endtime="20211014 19:26:10.445"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:26:10.446" level="INFO"/>
<status status="PASS" starttime="20211014 19:26:10.445" endtime="20211014 19:26:10.446"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:26:10.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:26:10.447" endtime="20211014 19:26:10.447"/>
</kw>
<status status="PASS" starttime="20211014 19:26:02.726" endtime="20211014 19:26:10.448"/>
</kw>
<msg timestamp="20211014 19:26:10.448" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:26:02.725" endtime="20211014 19:26:10.448"/>
</kw>
<status status="PASS" starttime="20211014 19:26:02.724" endtime="20211014 19:26:10.449"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:26:10.455" level="INFO">Running command 'ozone sh key put 96518-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:28:02.666" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20211014 19:26:10.451" endtime="20211014 19:28:02.666"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211014 19:28:02.667" endtime="20211014 19:28:02.667"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211014 19:28:02.667" endtime="20211014 19:28:02.668"/>
</kw>
<status status="FAIL" starttime="20211014 19:26:10.450" endtime="20211014 19:28:02.668"/>
</kw>
<msg timestamp="20211014 19:28:02.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211014 19:26:10.450" endtime="20211014 19:28:02.668"/>
</kw>
<status status="FAIL" starttime="20211014 19:26:10.449" endtime="20211014 19:28:02.669"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<status status="NOT RUN" starttime="20211014 19:28:02.669" endtime="20211014 19:28:02.669"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211014 19:26:02.665" endtime="20211014 19:28:02.669">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:28:02.678" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:28:02.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:28:02.684" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211014 19:28:02.676" endtime="20211014 19:28:02.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:28:02.685" level="INFO">scm</msg>
<status status="PASS" starttime="20211014 19:28:02.684" endtime="20211014 19:28:02.685"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:28:02.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:28:02.685" endtime="20211014 19:28:02.686"/>
</kw>
<status status="PASS" starttime="20211014 19:28:02.675" endtime="20211014 19:28:02.686"/>
</kw>
<msg timestamp="20211014 19:28:02.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:28:02.674" endtime="20211014 19:28:02.686"/>
</kw>
<msg timestamp="20211014 19:28:02.687" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211014 19:28:02.674" endtime="20211014 19:28:02.687"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211014 19:28:02.689" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211014 19:28:02.687" endtime="20211014 19:28:02.689"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:28:02.695" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:28:02.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:28:02.707" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:28:02.693" endtime="20211014 19:28:02.707"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:28:02.708" level="INFO"/>
<status status="PASS" starttime="20211014 19:28:02.707" endtime="20211014 19:28:02.708"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:28:02.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:28:02.709" endtime="20211014 19:28:02.716"/>
</kw>
<status status="PASS" starttime="20211014 19:28:02.692" endtime="20211014 19:28:02.716"/>
</kw>
<msg timestamp="20211014 19:28:02.716" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:28:02.691" endtime="20211014 19:28:02.717"/>
</kw>
<status status="PASS" starttime="20211014 19:28:02.690" endtime="20211014 19:28:02.717"/>
</kw>
<status status="PASS" starttime="20211014 19:28:02.689" endtime="20211014 19:28:02.717"/>
</kw>
<status status="PASS" starttime="20211014 19:28:02.673" endtime="20211014 19:28:02.717"/>
</kw>
<status status="PASS" starttime="20211014 19:28:02.672" endtime="20211014 19:28:02.717"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:28:02.723" level="INFO">Running command 'ozone sh bucket delete 96518-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:28:12.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:28:12.130" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:28:02.720" endtime="20211014 19:28:12.130"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:28:12.133" level="INFO"/>
<status status="PASS" starttime="20211014 19:28:12.131" endtime="20211014 19:28:12.133"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:28:12.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:28:12.133" endtime="20211014 19:28:12.134"/>
</kw>
<status status="PASS" starttime="20211014 19:28:02.719" endtime="20211014 19:28:12.135"/>
</kw>
<msg timestamp="20211014 19:28:12.135" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:28:02.719" endtime="20211014 19:28:12.136"/>
</kw>
<status status="PASS" starttime="20211014 19:28:02.718" endtime="20211014 19:28:12.136"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:28:12.143" level="INFO">Running command 'ozone sh bucket list 96518-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:28:19.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:28:19.031" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "96518-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-1...</msg>
<status status="PASS" starttime="20211014 19:28:12.139" endtime="20211014 19:28:19.031"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:28:19.034" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "96518-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-14T19:24:51.238Z",
  "modificationTime" : "2021-10-14T19:24:51.238Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "96518-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-14T19:18:42.653Z",
  "modificationTime" : "2021-10-14T19:18:42.653Z",
  "sourceVolume" : "96518-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "96518-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-14T19:17:51.946Z",
  "modificationTime" : "2021-10-14T19:18:34.139Z",
  "sourceVolume" : "96518-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "96518-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-14T19:24:36.556Z",
  "modificationTime" : "2021-10-14T19:24:36.556Z",
  "sourceVolume" : "96518-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "96518-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-14T19:26:10.074Z",
  "modificationTime" : "2021-10-14T19:26:10.074Z",
  "sourceVolume" : "96518-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "96518-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-14T19:25:54.226Z",
  "modificationTime" : "2021-10-14T19:25:54.226Z",
  "sourceVolume" : "96518-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "96518-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-14T19:25:37.750Z",
  "modificationTime" : "2021-10-14T19:25:37.750Z",
  "sourceVolume" : "96518-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "96518-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-14T19:25:45.974Z",
  "modificationTime" : "2021-10-14T19:25:45.974Z",
  "sourceVolume" : "96518-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "96518-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-14T19:17:35.452Z",
  "modificationTime" : "2021-10-14T19:18:25.613Z",
  "sourceVolume" : "96518-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "96518-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-14T19:17:43.714Z",
  "modificationTime" : "2021-10-14T19:17:43.714Z",
  "sourceVolume" : "96518-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
} ]</msg>
<status status="PASS" starttime="20211014 19:28:19.032" endtime="20211014 19:28:19.035"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:28:19.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:28:19.035" endtime="20211014 19:28:19.036"/>
</kw>
<status status="PASS" starttime="20211014 19:28:12.138" endtime="20211014 19:28:19.037"/>
</kw>
<msg timestamp="20211014 19:28:19.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:28:12.138" endtime="20211014 19:28:19.037"/>
</kw>
<msg timestamp="20211014 19:28:19.038" level="INFO">${bucket_list} = [ {
  "metadata" : { },
  "volumeName" : "96518-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-1...</msg>
<status status="PASS" starttime="20211014 19:28:12.137" endtime="20211014 19:28:19.038"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 19:28:19.039" endtime="20211014 19:28:19.040"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:28:19.048" level="INFO">Running command 'ozone sh key list 96518-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:28:28.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:28:28.089" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20211014 19:28:19.045" endtime="20211014 19:28:28.089"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:28:28.091" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20211014 19:28:28.090" endtime="20211014 19:28:28.091"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:28:28.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:28:28.092" endtime="20211014 19:28:28.093"/>
</kw>
<status status="PASS" starttime="20211014 19:28:19.043" endtime="20211014 19:28:28.093"/>
</kw>
<msg timestamp="20211014 19:28:28.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:28:19.042" endtime="20211014 19:28:28.094"/>
</kw>
<msg timestamp="20211014 19:28:28.094" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20211014 19:28:19.040" endtime="20211014 19:28:28.094"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 19:28:28.095" endtime="20211014 19:28:28.095"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211014 19:28:02.671" endtime="20211014 19:28:28.096"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="FAIL" starttime="20211014 19:13:47.137" endtime="20211014 19:28:28.101"/>
</suite>
<suite id="s1-s1-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211014 19:28:28.142" level="INFO">${random} = 36861</msg>
<status status="PASS" starttime="20211014 19:28:28.141" endtime="20211014 19:28:28.142"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211014 19:28:28.143" level="INFO">${prefix} = 36861</msg>
<status status="PASS" starttime="20211014 19:28:28.142" endtime="20211014 19:28:28.143"/>
</kw>
<status status="PASS" starttime="20211014 19:28:28.141" endtime="20211014 19:28:28.143"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:28:28.150" level="INFO">Running command 'ozone sh volume info /36861-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:28:36.230" level="INFO">${rc} = 255</msg>
<msg timestamp="20211014 19:28:36.231" level="INFO">${output} = VOLUME_NOT_FOUND Volume 36861-rpcbasic is not found</msg>
<status status="PASS" starttime="20211014 19:28:28.148" endtime="20211014 19:28:36.231"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:28:36.233" level="INFO">VOLUME_NOT_FOUND Volume 36861-rpcbasic is not found</msg>
<status status="PASS" starttime="20211014 19:28:36.231" endtime="20211014 19:28:36.233"/>
</kw>
<msg timestamp="20211014 19:28:36.233" level="INFO">${result} = VOLUME_NOT_FOUND Volume 36861-rpcbasic is not found</msg>
<status status="PASS" starttime="20211014 19:28:28.147" endtime="20211014 19:28:36.233"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 19:28:36.234" endtime="20211014 19:28:36.235"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:28:36.247" level="INFO">Running command 'ozone sh volume create /36861-rpcbasic --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:28:44.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:28:44.896" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:28:36.243" endtime="20211014 19:28:44.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:28:44.898" level="INFO"/>
<status status="PASS" starttime="20211014 19:28:44.897" endtime="20211014 19:28:44.898"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:28:44.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:28:44.898" endtime="20211014 19:28:44.900"/>
</kw>
<status status="PASS" starttime="20211014 19:28:36.241" endtime="20211014 19:28:44.900"/>
</kw>
<msg timestamp="20211014 19:28:44.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:28:36.240" endtime="20211014 19:28:44.901"/>
</kw>
<msg timestamp="20211014 19:28:44.902" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211014 19:28:36.235" endtime="20211014 19:28:44.902"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 19:28:44.902" endtime="20211014 19:28:44.903"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:28:44.910" level="INFO">Running command 'ozone sh volume list / | jq -r '.[] | select(.name=="36861-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:28:52.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:28:52.327" level="INFO">${output} = {
  "metadata": {},
  "name": "36861-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211014 19:28:44.906" endtime="20211014 19:28:52.327"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:28:52.328" level="INFO">{
  "metadata": {},
  "name": "36861-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-14T19:28:44.609Z",
  "modificationTime": "2021-10-14T19:28:44.609Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211014 19:28:52.328" endtime="20211014 19:28:52.329"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:28:52.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:28:52.329" endtime="20211014 19:28:52.330"/>
</kw>
<status status="PASS" starttime="20211014 19:28:44.905" endtime="20211014 19:28:52.330"/>
</kw>
<msg timestamp="20211014 19:28:52.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:28:44.905" endtime="20211014 19:28:52.330"/>
</kw>
<msg timestamp="20211014 19:28:52.331" level="INFO">${result} = {
  "metadata": {},
  "name": "36861-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211014 19:28:44.903" endtime="20211014 19:28:52.331"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 19:28:52.331" endtime="20211014 19:28:52.332"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:28:52.337" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="36861-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:29:01.565" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:29:01.565" level="INFO">${output} = {
  "metadata": {},
  "name": "36861-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211014 19:28:52.334" endtime="20211014 19:29:01.565"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:29:01.567" level="INFO">{
  "metadata": {},
  "name": "36861-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-14T19:28:44.609Z",
  "modificationTime": "2021-10-14T19:28:44.609Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211014 19:29:01.566" endtime="20211014 19:29:01.567"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:29:01.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:29:01.567" endtime="20211014 19:29:01.569"/>
</kw>
<status status="PASS" starttime="20211014 19:28:52.333" endtime="20211014 19:29:01.569"/>
</kw>
<msg timestamp="20211014 19:29:01.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:28:52.333" endtime="20211014 19:29:01.570"/>
</kw>
<msg timestamp="20211014 19:29:01.570" level="INFO">${result} = {
  "metadata": {},
  "name": "36861-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211014 19:28:52.332" endtime="20211014 19:29:01.570"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 19:29:01.571" endtime="20211014 19:29:01.571"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:29:01.578" level="INFO">Running command 'ozone sh volume setquota /36861-rpcbasic --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:29:10.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:29:10.075" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:29:01.575" endtime="20211014 19:29:10.075"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:29:10.077" level="INFO"/>
<status status="PASS" starttime="20211014 19:29:10.076" endtime="20211014 19:29:10.078"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:29:10.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:29:10.078" endtime="20211014 19:29:10.079"/>
</kw>
<status status="PASS" starttime="20211014 19:29:01.574" endtime="20211014 19:29:10.079"/>
</kw>
<msg timestamp="20211014 19:29:10.079" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:29:01.573" endtime="20211014 19:29:10.080"/>
</kw>
<status status="PASS" starttime="20211014 19:29:01.572" endtime="20211014 19:29:10.080"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:29:10.095" level="INFO">Running command 'ozone sh volume info /36861-rpcbasic | jq -r '. | select(.name=="36861-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:29:18.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:29:18.709" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211014 19:29:10.087" endtime="20211014 19:29:18.709"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:29:18.711" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211014 19:29:18.710" endtime="20211014 19:29:18.711"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:29:18.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:29:18.712" endtime="20211014 19:29:18.713"/>
</kw>
<status status="PASS" starttime="20211014 19:29:10.084" endtime="20211014 19:29:18.714"/>
</kw>
<msg timestamp="20211014 19:29:18.714" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:29:10.083" endtime="20211014 19:29:18.714"/>
</kw>
<msg timestamp="20211014 19:29:18.715" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211014 19:29:10.081" endtime="20211014 19:29:18.715"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211014 19:29:18.715" endtime="20211014 19:29:18.716"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:29:18.724" level="INFO">Running command 'ozone sh bucket create /36861-rpcbasic/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:29:27.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:29:27.828" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:29:18.720" endtime="20211014 19:29:27.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:29:27.830" level="INFO"/>
<status status="PASS" starttime="20211014 19:29:27.829" endtime="20211014 19:29:27.830"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:29:27.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:29:27.831" endtime="20211014 19:29:27.831"/>
</kw>
<status status="PASS" starttime="20211014 19:29:18.719" endtime="20211014 19:29:27.832"/>
</kw>
<msg timestamp="20211014 19:29:27.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:29:18.718" endtime="20211014 19:29:27.832"/>
</kw>
<status status="PASS" starttime="20211014 19:29:18.716" endtime="20211014 19:29:27.832"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:29:27.837" level="INFO">Running command 'ozone sh bucket info /36861-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:29:36.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:29:36.737" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211014 19:29:27.834" endtime="20211014 19:29:36.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:29:36.740" level="INFO">DISK</msg>
<status status="PASS" starttime="20211014 19:29:36.738" endtime="20211014 19:29:36.740"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:29:36.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:29:36.740" endtime="20211014 19:29:36.742"/>
</kw>
<status status="PASS" starttime="20211014 19:29:27.834" endtime="20211014 19:29:36.743"/>
</kw>
<msg timestamp="20211014 19:29:36.745" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:29:27.833" endtime="20211014 19:29:36.745"/>
</kw>
<msg timestamp="20211014 19:29:36.746" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211014 19:29:27.832" endtime="20211014 19:29:36.746"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211014 19:29:36.747" endtime="20211014 19:29:36.748"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:29:36.757" level="INFO">Running command 'ozone sh bucket info /36861-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:29:43.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:29:43.819" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211014 19:29:36.753" endtime="20211014 19:29:43.819"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:29:43.821" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211014 19:29:43.820" endtime="20211014 19:29:43.821"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:29:43.822" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:29:43.821" endtime="20211014 19:29:43.822"/>
</kw>
<status status="PASS" starttime="20211014 19:29:36.752" endtime="20211014 19:29:43.822"/>
</kw>
<msg timestamp="20211014 19:29:43.822" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:29:36.751" endtime="20211014 19:29:43.823"/>
</kw>
<msg timestamp="20211014 19:29:43.823" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211014 19:29:36.748" endtime="20211014 19:29:43.823"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211014 19:29:43.823" endtime="20211014 19:29:43.824"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:29:43.829" level="INFO">Running command 'ozone sh bucket info /36861-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:29:50.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:29:50.898" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211014 19:29:43.826" endtime="20211014 19:29:50.898"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:29:50.899" level="INFO">100</msg>
<status status="PASS" starttime="20211014 19:29:50.898" endtime="20211014 19:29:50.900"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:29:50.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:29:50.901" endtime="20211014 19:29:50.902"/>
</kw>
<status status="PASS" starttime="20211014 19:29:43.826" endtime="20211014 19:29:50.903"/>
</kw>
<msg timestamp="20211014 19:29:50.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:29:43.825" endtime="20211014 19:29:50.903"/>
</kw>
<msg timestamp="20211014 19:29:50.904" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211014 19:29:43.824" endtime="20211014 19:29:50.904"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211014 19:29:50.905" endtime="20211014 19:29:50.906"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:29:50.915" level="INFO">Running command 'ozone sh bucket setquota /36861-rpcbasic/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:29:57.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:29:57.849" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:29:50.912" endtime="20211014 19:29:57.849"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:29:57.852" level="INFO"/>
<status status="PASS" starttime="20211014 19:29:57.850" endtime="20211014 19:29:57.852"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:29:57.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:29:57.852" endtime="20211014 19:29:57.853"/>
</kw>
<status status="PASS" starttime="20211014 19:29:50.909" endtime="20211014 19:29:57.853"/>
</kw>
<msg timestamp="20211014 19:29:57.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:29:50.908" endtime="20211014 19:29:57.853"/>
</kw>
<status status="PASS" starttime="20211014 19:29:50.906" endtime="20211014 19:29:57.854"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:29:57.859" level="INFO">Running command 'ozone sh bucket info /36861-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:30:08.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:30:08.172" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211014 19:29:57.856" endtime="20211014 19:30:08.172"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:30:08.175" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211014 19:30:08.174" endtime="20211014 19:30:08.175"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:30:08.177" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:30:08.176" endtime="20211014 19:30:08.177"/>
</kw>
<status status="PASS" starttime="20211014 19:29:57.855" endtime="20211014 19:30:08.178"/>
</kw>
<msg timestamp="20211014 19:30:08.178" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:29:57.855" endtime="20211014 19:30:08.178"/>
</kw>
<msg timestamp="20211014 19:30:08.179" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211014 19:29:57.854" endtime="20211014 19:30:08.179"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211014 19:30:08.180" endtime="20211014 19:30:08.181"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:30:08.189" level="INFO">Running command 'ozone sh bucket info /36861-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:30:16.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:30:16.945" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211014 19:30:08.186" endtime="20211014 19:30:16.945"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:30:16.947" level="INFO">1000</msg>
<status status="PASS" starttime="20211014 19:30:16.946" endtime="20211014 19:30:16.947"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:30:16.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:30:16.947" endtime="20211014 19:30:16.949"/>
</kw>
<status status="PASS" starttime="20211014 19:30:08.185" endtime="20211014 19:30:16.950"/>
</kw>
<msg timestamp="20211014 19:30:16.950" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:30:08.184" endtime="20211014 19:30:16.950"/>
</kw>
<msg timestamp="20211014 19:30:16.951" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211014 19:30:08.182" endtime="20211014 19:30:16.951"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211014 19:30:16.951" endtime="20211014 19:30:16.952"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:30:16.960" level="INFO">Running command 'ozone sh bucket list /36861-rpcbasic/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:30:23.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:30:23.759" level="INFO">${output} = 36861-rpcbasic</msg>
<status status="PASS" starttime="20211014 19:30:16.956" endtime="20211014 19:30:23.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:30:23.760" level="INFO">36861-rpcbasic</msg>
<status status="PASS" starttime="20211014 19:30:23.759" endtime="20211014 19:30:23.760"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:30:23.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:30:23.760" endtime="20211014 19:30:23.761"/>
</kw>
<status status="PASS" starttime="20211014 19:30:16.955" endtime="20211014 19:30:23.761"/>
</kw>
<msg timestamp="20211014 19:30:23.761" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:30:16.954" endtime="20211014 19:30:23.762"/>
</kw>
<msg timestamp="20211014 19:30:23.762" level="INFO">${result} = 36861-rpcbasic</msg>
<status status="PASS" starttime="20211014 19:30:16.952" endtime="20211014 19:30:23.762"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211014 19:30:23.762" endtime="20211014 19:30:23.763"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:30:23.768" level="INFO">Running command 'ozone sh key put /36861-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:33:28.145" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211014 19:30:23.766" endtime="20211014 19:33:28.145"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211014 19:33:28.145" endtime="20211014 19:33:28.145"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211014 19:33:28.146" endtime="20211014 19:33:28.146"/>
</kw>
<status status="FAIL" starttime="20211014 19:30:23.765" endtime="20211014 19:33:28.146"/>
</kw>
<msg timestamp="20211014 19:33:28.146" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211014 19:30:23.765" endtime="20211014 19:33:28.147"/>
</kw>
<status status="FAIL" starttime="20211014 19:30:23.764" endtime="20211014 19:33:28.147"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211014 19:33:28.147" endtime="20211014 19:33:28.148"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211014 19:33:28.148" endtime="20211014 19:33:28.148"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211014 19:33:28.148" endtime="20211014 19:33:28.148"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211014 19:33:28.148" endtime="20211014 19:33:28.149"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211014 19:33:28.149" endtime="20211014 19:33:28.149"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211014 19:33:28.149" endtime="20211014 19:33:28.149"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211014 19:33:28.149" endtime="20211014 19:33:28.149"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211014 19:33:28.150" endtime="20211014 19:33:28.150"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211014 19:33:28.150" endtime="20211014 19:33:28.150"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211014 19:33:28.150" endtime="20211014 19:33:28.150"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211014 19:33:28.150" endtime="20211014 19:33:28.150"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211014 19:33:28.151" endtime="20211014 19:33:28.151"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211014 19:33:28.151" endtime="20211014 19:33:28.151"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211014 19:33:28.151" endtime="20211014 19:33:28.151"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211014 19:33:28.151" endtime="20211014 19:33:28.151"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211014 19:33:28.152" endtime="20211014 19:33:28.152"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211014 19:33:28.152" endtime="20211014 19:33:28.152"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211014 19:33:28.152" endtime="20211014 19:33:28.152"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211014 19:33:28.152" endtime="20211014 19:33:28.152"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211014 19:33:28.153" endtime="20211014 19:33:28.153"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211014 19:33:28.153" endtime="20211014 19:33:28.153"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211014 19:33:28.153" endtime="20211014 19:33:28.153"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211014 19:33:28.154" endtime="20211014 19:33:28.154"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211014 19:33:28.154" endtime="20211014 19:33:28.154"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211014 19:33:28.154" endtime="20211014 19:33:28.154"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211014 19:33:28.155" endtime="20211014 19:33:28.155"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211014 19:33:28.155" endtime="20211014 19:33:28.155"/>
</kw>
<status status="FAIL" starttime="20211014 19:30:23.763" endtime="20211014 19:33:28.155"/>
</kw>
<status status="FAIL" starttime="20211014 19:30:23.763" endtime="20211014 19:33:28.155"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211014 19:33:28.156" endtime="20211014 19:33:28.156"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211014 19:33:28.157" endtime="20211014 19:33:28.157"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211014 19:33:28.157" endtime="20211014 19:33:28.158"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211014 19:33:28.158" endtime="20211014 19:33:28.158"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211014 19:33:28.158" endtime="20211014 19:33:28.159"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211014 19:33:28.159" endtime="20211014 19:33:28.159"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211014 19:33:28.159" endtime="20211014 19:33:28.160"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211014 19:33:28.160" endtime="20211014 19:33:28.160"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211014 19:33:28.161" endtime="20211014 19:33:28.161"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211014 19:33:28.161" endtime="20211014 19:33:28.161"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211014 19:33:28.162" endtime="20211014 19:33:28.163"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211014 19:33:28.164" endtime="20211014 19:33:28.164"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211014 19:33:28.164" endtime="20211014 19:33:28.165"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211014 19:33:28.165" endtime="20211014 19:33:28.165"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211014 19:33:28.165" endtime="20211014 19:33:28.166"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211014 19:33:28.166" endtime="20211014 19:33:28.166"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211014 19:33:28.166" endtime="20211014 19:33:28.166"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211014 19:33:28.166" endtime="20211014 19:33:28.166"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211014 19:33:28.166" endtime="20211014 19:33:28.167"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211014 19:33:28.167" endtime="20211014 19:33:28.167"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211014 19:33:28.167" endtime="20211014 19:33:28.167"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211014 19:33:28.167" endtime="20211014 19:33:28.167"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211014 19:33:28.167" endtime="20211014 19:33:28.168"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211014 19:33:28.168" endtime="20211014 19:33:28.168"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211014 19:33:28.169" endtime="20211014 19:33:28.169"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211014 19:33:28.169" endtime="20211014 19:33:28.169"/>
</kw>
<status status="FAIL" starttime="20211014 19:28:28.145" endtime="20211014 19:33:28.170"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211014 19:28:28.143" endtime="20211014 19:33:28.171">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20211014 19:28:28.111" endtime="20211014 19:33:28.172"/>
</suite>
<suite id="s1-s1-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211014 19:33:28.192" level="INFO">${random} = 81044</msg>
<status status="PASS" starttime="20211014 19:33:28.191" endtime="20211014 19:33:28.192"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211014 19:33:28.192" level="INFO">${prefix} = 81044</msg>
<status status="PASS" starttime="20211014 19:33:28.192" endtime="20211014 19:33:28.193"/>
</kw>
<status status="PASS" starttime="20211014 19:33:28.190" endtime="20211014 19:33:28.193"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:33:28.200" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:33:28.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:33:28.206" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211014 19:33:28.197" endtime="20211014 19:33:28.207"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:33:28.209" level="INFO">scm</msg>
<status status="PASS" starttime="20211014 19:33:28.208" endtime="20211014 19:33:28.209"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:33:28.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:33:28.209" endtime="20211014 19:33:28.210"/>
</kw>
<status status="PASS" starttime="20211014 19:33:28.196" endtime="20211014 19:33:28.211"/>
</kw>
<msg timestamp="20211014 19:33:28.211" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:33:28.195" endtime="20211014 19:33:28.211"/>
</kw>
<msg timestamp="20211014 19:33:28.211" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211014 19:33:28.195" endtime="20211014 19:33:28.212"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211014 19:33:28.214" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211014 19:33:28.212" endtime="20211014 19:33:28.214"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:33:28.222" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:33:28.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:33:28.258" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:33:28.219" endtime="20211014 19:33:28.259"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:33:28.260" level="INFO"/>
<status status="PASS" starttime="20211014 19:33:28.259" endtime="20211014 19:33:28.260"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:33:28.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:33:28.260" endtime="20211014 19:33:28.261"/>
</kw>
<status status="PASS" starttime="20211014 19:33:28.217" endtime="20211014 19:33:28.262"/>
</kw>
<msg timestamp="20211014 19:33:28.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:33:28.216" endtime="20211014 19:33:28.262"/>
</kw>
<status status="PASS" starttime="20211014 19:33:28.216" endtime="20211014 19:33:28.262"/>
</kw>
<status status="PASS" starttime="20211014 19:33:28.215" endtime="20211014 19:33:28.262"/>
</kw>
<status status="PASS" starttime="20211014 19:33:28.194" endtime="20211014 19:33:28.262"/>
</kw>
<status status="PASS" starttime="20211014 19:33:28.194" endtime="20211014 19:33:28.263"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:33:28.267" level="INFO">Running command 'ozone sh volume info o3://om:9862/81044-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:33:36.281" level="INFO">${rc} = 255</msg>
<msg timestamp="20211014 19:33:36.281" level="INFO">${output} = VOLUME_NOT_FOUND Volume 81044-rpcwoport is not found</msg>
<status status="PASS" starttime="20211014 19:33:28.265" endtime="20211014 19:33:36.282"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:33:36.283" level="INFO">VOLUME_NOT_FOUND Volume 81044-rpcwoport is not found</msg>
<status status="PASS" starttime="20211014 19:33:36.282" endtime="20211014 19:33:36.283"/>
</kw>
<msg timestamp="20211014 19:33:36.284" level="INFO">${result} = VOLUME_NOT_FOUND Volume 81044-rpcwoport is not found</msg>
<status status="PASS" starttime="20211014 19:33:28.264" endtime="20211014 19:33:36.284"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 19:33:36.284" endtime="20211014 19:33:36.285"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:33:36.290" level="INFO">Running command 'ozone sh volume create o3://om:9862/81044-rpcwoport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:33:44.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:33:44.264" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:33:36.287" endtime="20211014 19:33:44.265"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:33:44.266" level="INFO"/>
<status status="PASS" starttime="20211014 19:33:44.265" endtime="20211014 19:33:44.266"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:33:44.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:33:44.266" endtime="20211014 19:33:44.268"/>
</kw>
<status status="PASS" starttime="20211014 19:33:36.286" endtime="20211014 19:33:44.268"/>
</kw>
<msg timestamp="20211014 19:33:44.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:33:36.286" endtime="20211014 19:33:44.269"/>
</kw>
<msg timestamp="20211014 19:33:44.269" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211014 19:33:36.285" endtime="20211014 19:33:44.269"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 19:33:44.270" endtime="20211014 19:33:44.270"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:33:44.277" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '.[] | select(.name=="81044-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:33:53.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:33:53.169" level="INFO">${output} = {
  "metadata": {},
  "name": "81044-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211014 19:33:44.273" endtime="20211014 19:33:53.170"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:33:53.171" level="INFO">{
  "metadata": {},
  "name": "81044-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-14T19:33:44.045Z",
  "modificationTime": "2021-10-14T19:33:44.045Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211014 19:33:53.170" endtime="20211014 19:33:53.171"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:33:53.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:33:53.171" endtime="20211014 19:33:53.172"/>
</kw>
<status status="PASS" starttime="20211014 19:33:44.272" endtime="20211014 19:33:53.173"/>
</kw>
<msg timestamp="20211014 19:33:53.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:33:44.271" endtime="20211014 19:33:53.173"/>
</kw>
<msg timestamp="20211014 19:33:53.174" level="INFO">${result} = {
  "metadata": {},
  "name": "81044-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211014 19:33:44.270" endtime="20211014 19:33:53.174"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 19:33:53.174" endtime="20211014 19:33:53.174"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:33:53.179" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="81044-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:34:00.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:34:00.659" level="INFO">${output} = {
  "metadata": {},
  "name": "81044-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211014 19:33:53.176" endtime="20211014 19:34:00.659"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:34:00.661" level="INFO">{
  "metadata": {},
  "name": "81044-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-14T19:33:44.045Z",
  "modificationTime": "2021-10-14T19:33:44.045Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211014 19:34:00.660" endtime="20211014 19:34:00.662"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:34:00.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:34:00.662" endtime="20211014 19:34:00.663"/>
</kw>
<status status="PASS" starttime="20211014 19:33:53.176" endtime="20211014 19:34:00.664"/>
</kw>
<msg timestamp="20211014 19:34:00.664" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:33:53.175" endtime="20211014 19:34:00.664"/>
</kw>
<msg timestamp="20211014 19:34:00.665" level="INFO">${result} = {
  "metadata": {},
  "name": "81044-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211014 19:33:53.175" endtime="20211014 19:34:00.665"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 19:34:00.665" endtime="20211014 19:34:00.666"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:34:00.671" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/81044-rpcwoport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:34:09.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:34:09.321" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:34:00.669" endtime="20211014 19:34:09.321"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:34:09.323" level="INFO"/>
<status status="PASS" starttime="20211014 19:34:09.321" endtime="20211014 19:34:09.323"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:34:09.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:34:09.324" endtime="20211014 19:34:09.325"/>
</kw>
<status status="PASS" starttime="20211014 19:34:00.668" endtime="20211014 19:34:09.326"/>
</kw>
<msg timestamp="20211014 19:34:09.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:34:00.667" endtime="20211014 19:34:09.326"/>
</kw>
<status status="PASS" starttime="20211014 19:34:00.666" endtime="20211014 19:34:09.327"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:34:09.334" level="INFO">Running command 'ozone sh volume info o3://om:9862/81044-rpcwoport | jq -r '. | select(.name=="81044-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:34:17.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:34:17.140" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211014 19:34:09.331" endtime="20211014 19:34:17.140"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:34:17.141" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211014 19:34:17.140" endtime="20211014 19:34:17.142"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:34:17.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:34:17.142" endtime="20211014 19:34:17.143"/>
</kw>
<status status="PASS" starttime="20211014 19:34:09.330" endtime="20211014 19:34:17.144"/>
</kw>
<msg timestamp="20211014 19:34:17.144" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:34:09.329" endtime="20211014 19:34:17.144"/>
</kw>
<msg timestamp="20211014 19:34:17.145" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211014 19:34:09.327" endtime="20211014 19:34:17.145"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211014 19:34:17.145" endtime="20211014 19:34:17.146"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:34:17.151" level="INFO">Running command 'ozone sh bucket create o3://om:9862/81044-rpcwoport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:34:25.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:34:25.177" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:34:17.148" endtime="20211014 19:34:25.177"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:34:25.179" level="INFO"/>
<status status="PASS" starttime="20211014 19:34:25.178" endtime="20211014 19:34:25.180"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:34:25.181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:34:25.180" endtime="20211014 19:34:25.181"/>
</kw>
<status status="PASS" starttime="20211014 19:34:17.147" endtime="20211014 19:34:25.182"/>
</kw>
<msg timestamp="20211014 19:34:25.182" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:34:17.147" endtime="20211014 19:34:25.182"/>
</kw>
<status status="PASS" starttime="20211014 19:34:17.146" endtime="20211014 19:34:25.183"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:34:25.189" level="INFO">Running command 'ozone sh bucket info o3://om:9862/81044-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:34:34.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:34:34.158" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211014 19:34:25.186" endtime="20211014 19:34:34.158"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:34:34.165" level="INFO">DISK</msg>
<status status="PASS" starttime="20211014 19:34:34.158" endtime="20211014 19:34:34.165"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:34:34.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:34:34.165" endtime="20211014 19:34:34.167"/>
</kw>
<status status="PASS" starttime="20211014 19:34:25.185" endtime="20211014 19:34:34.168"/>
</kw>
<msg timestamp="20211014 19:34:34.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:34:25.184" endtime="20211014 19:34:34.169"/>
</kw>
<msg timestamp="20211014 19:34:34.169" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211014 19:34:25.183" endtime="20211014 19:34:34.169"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211014 19:34:34.169" endtime="20211014 19:34:34.170"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:34:34.183" level="INFO">Running command 'ozone sh bucket info o3://om:9862/81044-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:34:42.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:34:42.637" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211014 19:34:34.176" endtime="20211014 19:34:42.637"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:34:42.641" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211014 19:34:42.638" endtime="20211014 19:34:42.641"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:34:42.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:34:42.641" endtime="20211014 19:34:42.643"/>
</kw>
<status status="PASS" starttime="20211014 19:34:34.174" endtime="20211014 19:34:42.644"/>
</kw>
<msg timestamp="20211014 19:34:42.644" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:34:34.171" endtime="20211014 19:34:42.644"/>
</kw>
<msg timestamp="20211014 19:34:42.645" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211014 19:34:34.170" endtime="20211014 19:34:42.645"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211014 19:34:42.646" endtime="20211014 19:34:42.647"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:34:42.655" level="INFO">Running command 'ozone sh bucket info o3://om:9862/81044-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:34:51.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:34:51.026" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211014 19:34:42.651" endtime="20211014 19:34:51.026"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:34:51.029" level="INFO">100</msg>
<status status="PASS" starttime="20211014 19:34:51.027" endtime="20211014 19:34:51.029"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:34:51.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:34:51.029" endtime="20211014 19:34:51.031"/>
</kw>
<status status="PASS" starttime="20211014 19:34:42.650" endtime="20211014 19:34:51.032"/>
</kw>
<msg timestamp="20211014 19:34:51.032" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:34:42.649" endtime="20211014 19:34:51.033"/>
</kw>
<msg timestamp="20211014 19:34:51.033" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211014 19:34:42.647" endtime="20211014 19:34:51.033"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211014 19:34:51.034" endtime="20211014 19:34:51.035"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:34:51.044" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/81044-rpcwoport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:34:58.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:34:58.948" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:34:51.038" endtime="20211014 19:34:58.948"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:34:58.950" level="INFO"/>
<status status="PASS" starttime="20211014 19:34:58.949" endtime="20211014 19:34:58.950"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:34:58.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:34:58.950" endtime="20211014 19:34:58.951"/>
</kw>
<status status="PASS" starttime="20211014 19:34:51.037" endtime="20211014 19:34:58.952"/>
</kw>
<msg timestamp="20211014 19:34:58.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:34:51.036" endtime="20211014 19:34:58.952"/>
</kw>
<status status="PASS" starttime="20211014 19:34:51.035" endtime="20211014 19:34:58.952"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:34:58.958" level="INFO">Running command 'ozone sh bucket info o3://om:9862/81044-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:35:08.324" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:35:08.324" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211014 19:34:58.955" endtime="20211014 19:35:08.324"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:35:08.326" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211014 19:35:08.324" endtime="20211014 19:35:08.326"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:35:08.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:35:08.326" endtime="20211014 19:35:08.327"/>
</kw>
<status status="PASS" starttime="20211014 19:34:58.954" endtime="20211014 19:35:08.328"/>
</kw>
<msg timestamp="20211014 19:35:08.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:34:58.954" endtime="20211014 19:35:08.328"/>
</kw>
<msg timestamp="20211014 19:35:08.328" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211014 19:34:58.952" endtime="20211014 19:35:08.328"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211014 19:35:08.328" endtime="20211014 19:35:08.329"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:35:08.334" level="INFO">Running command 'ozone sh bucket info o3://om:9862/81044-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:35:16.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:35:16.854" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211014 19:35:08.331" endtime="20211014 19:35:16.854"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:35:16.856" level="INFO">1000</msg>
<status status="PASS" starttime="20211014 19:35:16.855" endtime="20211014 19:35:16.856"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:35:16.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:35:16.856" endtime="20211014 19:35:16.857"/>
</kw>
<status status="PASS" starttime="20211014 19:35:08.330" endtime="20211014 19:35:16.857"/>
</kw>
<msg timestamp="20211014 19:35:16.858" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:35:08.330" endtime="20211014 19:35:16.858"/>
</kw>
<msg timestamp="20211014 19:35:16.858" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211014 19:35:08.329" endtime="20211014 19:35:16.858"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211014 19:35:16.859" endtime="20211014 19:35:16.861"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:35:16.867" level="INFO">Running command 'ozone sh bucket list o3://om:9862/81044-rpcwoport/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:35:25.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:35:25.010" level="INFO">${output} = 81044-rpcwoport</msg>
<status status="PASS" starttime="20211014 19:35:16.864" endtime="20211014 19:35:25.010"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:35:25.012" level="INFO">81044-rpcwoport</msg>
<status status="PASS" starttime="20211014 19:35:25.011" endtime="20211014 19:35:25.012"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:35:25.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:35:25.012" endtime="20211014 19:35:25.013"/>
</kw>
<status status="PASS" starttime="20211014 19:35:16.863" endtime="20211014 19:35:25.014"/>
</kw>
<msg timestamp="20211014 19:35:25.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:35:16.863" endtime="20211014 19:35:25.014"/>
</kw>
<msg timestamp="20211014 19:35:25.014" level="INFO">${result} = 81044-rpcwoport</msg>
<status status="PASS" starttime="20211014 19:35:16.861" endtime="20211014 19:35:25.014"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211014 19:35:25.014" endtime="20211014 19:35:25.015"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:35:25.020" level="INFO">Running command 'ozone sh key put o3://om:9862/81044-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:38:28.195" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211014 19:35:25.018" endtime="20211014 19:38:28.195"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211014 19:38:28.195" endtime="20211014 19:38:28.196"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211014 19:38:28.196" endtime="20211014 19:38:28.196"/>
</kw>
<status status="FAIL" starttime="20211014 19:35:25.017" endtime="20211014 19:38:28.197"/>
</kw>
<msg timestamp="20211014 19:38:28.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211014 19:35:25.017" endtime="20211014 19:38:28.197"/>
</kw>
<status status="FAIL" starttime="20211014 19:35:25.016" endtime="20211014 19:38:28.197"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211014 19:38:28.198" endtime="20211014 19:38:28.198"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211014 19:38:28.198" endtime="20211014 19:38:28.198"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211014 19:38:28.198" endtime="20211014 19:38:28.198"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211014 19:38:28.199" endtime="20211014 19:38:28.199"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211014 19:38:28.199" endtime="20211014 19:38:28.199"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211014 19:38:28.199" endtime="20211014 19:38:28.199"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211014 19:38:28.199" endtime="20211014 19:38:28.200"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211014 19:38:28.200" endtime="20211014 19:38:28.202"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211014 19:38:28.202" endtime="20211014 19:38:28.202"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211014 19:38:28.202" endtime="20211014 19:38:28.203"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211014 19:38:28.203" endtime="20211014 19:38:28.203"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211014 19:38:28.203" endtime="20211014 19:38:28.203"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211014 19:38:28.203" endtime="20211014 19:38:28.203"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211014 19:38:28.204" endtime="20211014 19:38:28.204"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211014 19:38:28.204" endtime="20211014 19:38:28.204"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211014 19:38:28.204" endtime="20211014 19:38:28.204"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211014 19:38:28.205" endtime="20211014 19:38:28.205"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211014 19:38:28.205" endtime="20211014 19:38:28.205"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211014 19:38:28.205" endtime="20211014 19:38:28.205"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211014 19:38:28.206" endtime="20211014 19:38:28.206"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211014 19:38:28.206" endtime="20211014 19:38:28.206"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211014 19:38:28.206" endtime="20211014 19:38:28.206"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211014 19:38:28.206" endtime="20211014 19:38:28.206"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211014 19:38:28.207" endtime="20211014 19:38:28.207"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211014 19:38:28.207" endtime="20211014 19:38:28.207"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211014 19:38:28.207" endtime="20211014 19:38:28.208"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211014 19:38:28.208" endtime="20211014 19:38:28.208"/>
</kw>
<status status="FAIL" starttime="20211014 19:35:25.016" endtime="20211014 19:38:28.208"/>
</kw>
<status status="FAIL" starttime="20211014 19:35:25.015" endtime="20211014 19:38:28.209"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211014 19:38:28.209" endtime="20211014 19:38:28.209"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211014 19:38:28.209" endtime="20211014 19:38:28.209"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211014 19:38:28.209" endtime="20211014 19:38:28.209"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211014 19:38:28.210" endtime="20211014 19:38:28.210"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211014 19:38:28.210" endtime="20211014 19:38:28.210"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211014 19:38:28.210" endtime="20211014 19:38:28.210"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211014 19:38:28.210" endtime="20211014 19:38:28.211"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211014 19:38:28.211" endtime="20211014 19:38:28.211"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211014 19:38:28.211" endtime="20211014 19:38:28.211"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211014 19:38:28.211" endtime="20211014 19:38:28.211"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211014 19:38:28.211" endtime="20211014 19:38:28.212"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211014 19:38:28.212" endtime="20211014 19:38:28.212"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211014 19:38:28.212" endtime="20211014 19:38:28.212"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211014 19:38:28.213" endtime="20211014 19:38:28.213"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211014 19:38:28.213" endtime="20211014 19:38:28.213"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211014 19:38:28.213" endtime="20211014 19:38:28.213"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211014 19:38:28.213" endtime="20211014 19:38:28.213"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211014 19:38:28.213" endtime="20211014 19:38:28.214"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211014 19:38:28.214" endtime="20211014 19:38:28.214"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211014 19:38:28.214" endtime="20211014 19:38:28.214"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211014 19:38:28.214" endtime="20211014 19:38:28.215"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211014 19:38:28.215" endtime="20211014 19:38:28.215"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211014 19:38:28.215" endtime="20211014 19:38:28.215"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211014 19:38:28.215" endtime="20211014 19:38:28.216"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211014 19:38:28.216" endtime="20211014 19:38:28.217"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211014 19:38:28.217" endtime="20211014 19:38:28.217"/>
</kw>
<status status="FAIL" starttime="20211014 19:33:28.263" endtime="20211014 19:38:28.218"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211014 19:33:28.193" endtime="20211014 19:38:28.218">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:38:28.232" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:38:28.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:38:28.239" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211014 19:38:28.228" endtime="20211014 19:38:28.239"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:38:28.241" level="INFO">scm</msg>
<status status="PASS" starttime="20211014 19:38:28.240" endtime="20211014 19:38:28.241"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:38:28.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:38:28.241" endtime="20211014 19:38:28.243"/>
</kw>
<status status="PASS" starttime="20211014 19:38:28.227" endtime="20211014 19:38:28.244"/>
</kw>
<msg timestamp="20211014 19:38:28.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:38:28.226" endtime="20211014 19:38:28.244"/>
</kw>
<msg timestamp="20211014 19:38:28.244" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211014 19:38:28.225" endtime="20211014 19:38:28.245"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211014 19:38:28.245" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211014 19:38:28.245" endtime="20211014 19:38:28.246"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:38:28.270" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:38:28.308" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:38:28.308" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:38:28.250" endtime="20211014 19:38:28.308"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:38:28.309" level="INFO"/>
<status status="PASS" starttime="20211014 19:38:28.309" endtime="20211014 19:38:28.309"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:38:28.310" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:38:28.310" endtime="20211014 19:38:28.310"/>
</kw>
<status status="PASS" starttime="20211014 19:38:28.249" endtime="20211014 19:38:28.311"/>
</kw>
<msg timestamp="20211014 19:38:28.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:38:28.248" endtime="20211014 19:38:28.311"/>
</kw>
<status status="PASS" starttime="20211014 19:38:28.247" endtime="20211014 19:38:28.311"/>
</kw>
<status status="PASS" starttime="20211014 19:38:28.246" endtime="20211014 19:38:28.311"/>
</kw>
<status status="PASS" starttime="20211014 19:38:28.224" endtime="20211014 19:38:28.312"/>
</kw>
<status status="PASS" starttime="20211014 19:38:28.223" endtime="20211014 19:38:28.312"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:38:28.318" level="INFO">Running command 'ozone sh volume create o3://om:9862/81044-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:38:35.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:38:35.296" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:38:28.316" endtime="20211014 19:38:35.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:38:35.298" level="INFO"/>
<status status="PASS" starttime="20211014 19:38:35.297" endtime="20211014 19:38:35.298"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:38:35.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:38:35.298" endtime="20211014 19:38:35.299"/>
</kw>
<status status="PASS" starttime="20211014 19:38:28.315" endtime="20211014 19:38:35.299"/>
</kw>
<msg timestamp="20211014 19:38:35.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:38:28.314" endtime="20211014 19:38:35.299"/>
</kw>
<status status="PASS" starttime="20211014 19:38:28.313" endtime="20211014 19:38:35.300"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:38:35.304" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/81044-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:38:44.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:38:44.276" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211014 19:38:35.302" endtime="20211014 19:38:44.276"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:38:44.279" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211014 19:38:44.277" endtime="20211014 19:38:44.279"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:38:44.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:38:44.280" endtime="20211014 19:38:44.281"/>
</kw>
<status status="PASS" starttime="20211014 19:38:35.301" endtime="20211014 19:38:44.282"/>
</kw>
<msg timestamp="20211014 19:38:44.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:38:35.301" endtime="20211014 19:38:44.282"/>
</kw>
<msg timestamp="20211014 19:38:44.283" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211014 19:38:35.300" endtime="20211014 19:38:44.283"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211014 19:38:44.284" endtime="20211014 19:38:44.286"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:38:44.293" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/81044-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:38:51.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:38:51.443" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211014 19:38:44.290" endtime="20211014 19:38:51.443"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:38:51.444" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211014 19:38:51.443" endtime="20211014 19:38:51.444"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:38:51.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:38:51.444" endtime="20211014 19:38:51.445"/>
</kw>
<status status="PASS" starttime="20211014 19:38:44.288" endtime="20211014 19:38:51.446"/>
</kw>
<msg timestamp="20211014 19:38:51.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:38:44.287" endtime="20211014 19:38:51.446"/>
</kw>
<msg timestamp="20211014 19:38:51.446" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211014 19:38:44.286" endtime="20211014 19:38:51.446"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:38:51.451" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/81044-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:38:56.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:38:56.982" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211014 19:38:51.448" endtime="20211014 19:38:56.982"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:38:56.985" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211014 19:38:56.983" endtime="20211014 19:38:56.985"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:38:56.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:38:56.986" endtime="20211014 19:38:56.988"/>
</kw>
<status status="PASS" starttime="20211014 19:38:51.448" endtime="20211014 19:38:56.989"/>
</kw>
<msg timestamp="20211014 19:38:56.989" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:38:51.447" endtime="20211014 19:38:56.989"/>
</kw>
<msg timestamp="20211014 19:38:56.990" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211014 19:38:51.446" endtime="20211014 19:38:56.990"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211014 19:38:56.990" endtime="20211014 19:38:56.992"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:38:56.999" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/81044-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:39:05.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:39:05.206" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211014 19:38:56.996" endtime="20211014 19:39:05.206"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:39:05.208" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211014 19:39:05.207" endtime="20211014 19:39:05.209"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:39:05.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:39:05.209" endtime="20211014 19:39:05.210"/>
</kw>
<status status="PASS" starttime="20211014 19:38:56.995" endtime="20211014 19:39:05.210"/>
</kw>
<msg timestamp="20211014 19:39:05.210" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:38:56.994" endtime="20211014 19:39:05.210"/>
</kw>
<msg timestamp="20211014 19:39:05.211" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211014 19:38:56.993" endtime="20211014 19:39:05.211"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:39:05.225" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/81044-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:39:13.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:39:13.843" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211014 19:39:05.214" endtime="20211014 19:39:13.844"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:39:13.849" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211014 19:39:13.846" endtime="20211014 19:39:13.849"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:39:13.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:39:13.850" endtime="20211014 19:39:13.850"/>
</kw>
<status status="PASS" starttime="20211014 19:39:05.213" endtime="20211014 19:39:13.851"/>
</kw>
<msg timestamp="20211014 19:39:13.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:39:05.212" endtime="20211014 19:39:13.851"/>
</kw>
<msg timestamp="20211014 19:39:13.852" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211014 19:39:05.211" endtime="20211014 19:39:13.852"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211014 19:39:13.853" endtime="20211014 19:39:13.855"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:39:13.862" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/81044-rpcwoport2 -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:39:21.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:39:21.939" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211014 19:39:13.858" endtime="20211014 19:39:21.939"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:39:21.942" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211014 19:39:21.940" endtime="20211014 19:39:21.942"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:39:21.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:39:21.943" endtime="20211014 19:39:21.944"/>
</kw>
<status status="PASS" starttime="20211014 19:39:13.857" endtime="20211014 19:39:21.945"/>
</kw>
<msg timestamp="20211014 19:39:21.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:39:13.856" endtime="20211014 19:39:21.946"/>
</kw>
<msg timestamp="20211014 19:39:21.947" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211014 19:39:13.855" endtime="20211014 19:39:21.947"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:39:21.955" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/81044-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:39:30.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:39:30.215" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211014 19:39:21.952" endtime="20211014 19:39:30.216"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:39:30.217" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211014 19:39:30.216" endtime="20211014 19:39:30.217"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:39:30.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:39:30.218" endtime="20211014 19:39:30.218"/>
</kw>
<status status="PASS" starttime="20211014 19:39:21.951" endtime="20211014 19:39:30.219"/>
</kw>
<msg timestamp="20211014 19:39:30.219" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:39:21.949" endtime="20211014 19:39:30.219"/>
</kw>
<msg timestamp="20211014 19:39:30.220" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211014 19:39:21.947" endtime="20211014 19:39:30.220"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211014 19:39:30.220" endtime="20211014 19:39:30.221"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211014 19:39:30.221" endtime="20211014 19:39:30.222"/>
</kw>
<status status="PASS" starttime="20211014 19:38:28.312" endtime="20211014 19:39:30.223"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211014 19:38:28.220" endtime="20211014 19:39:30.223"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:39:30.233" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:39:30.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:39:30.238" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211014 19:39:30.229" endtime="20211014 19:39:30.238"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:39:30.240" level="INFO">scm</msg>
<status status="PASS" starttime="20211014 19:39:30.238" endtime="20211014 19:39:30.240"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:39:30.241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:39:30.240" endtime="20211014 19:39:30.241"/>
</kw>
<status status="PASS" starttime="20211014 19:39:30.229" endtime="20211014 19:39:30.242"/>
</kw>
<msg timestamp="20211014 19:39:30.242" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:39:30.228" endtime="20211014 19:39:30.243"/>
</kw>
<msg timestamp="20211014 19:39:30.244" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211014 19:39:30.227" endtime="20211014 19:39:30.244"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211014 19:39:30.246" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211014 19:39:30.245" endtime="20211014 19:39:30.246"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:39:30.253" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:39:30.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:39:30.284" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:39:30.250" endtime="20211014 19:39:30.284"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:39:30.285" level="INFO"/>
<status status="PASS" starttime="20211014 19:39:30.284" endtime="20211014 19:39:30.285"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:39:30.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:39:30.286" endtime="20211014 19:39:30.286"/>
</kw>
<status status="PASS" starttime="20211014 19:39:30.249" endtime="20211014 19:39:30.287"/>
</kw>
<msg timestamp="20211014 19:39:30.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:39:30.248" endtime="20211014 19:39:30.287"/>
</kw>
<status status="PASS" starttime="20211014 19:39:30.247" endtime="20211014 19:39:30.287"/>
</kw>
<status status="PASS" starttime="20211014 19:39:30.246" endtime="20211014 19:39:30.287"/>
</kw>
<status status="PASS" starttime="20211014 19:39:30.226" endtime="20211014 19:39:30.288"/>
</kw>
<status status="PASS" starttime="20211014 19:39:30.226" endtime="20211014 19:39:30.288"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:39:30.297" level="INFO">Running command 'ozone sh bucket create o3://om:9862/81044-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:39:38.657" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:39:38.657" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:39:30.293" endtime="20211014 19:39:38.657"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:39:38.658" level="INFO"/>
<status status="PASS" starttime="20211014 19:39:38.658" endtime="20211014 19:39:38.659"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:39:38.659" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:39:38.659" endtime="20211014 19:39:38.659"/>
</kw>
<status status="PASS" starttime="20211014 19:39:30.293" endtime="20211014 19:39:38.660"/>
</kw>
<msg timestamp="20211014 19:39:38.660" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:39:30.292" endtime="20211014 19:39:38.661"/>
</kw>
<status status="PASS" starttime="20211014 19:39:30.291" endtime="20211014 19:39:38.661"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:39:38.667" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/81044-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:39:47.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:39:47.875" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211014 19:39:38.664" endtime="20211014 19:39:47.875"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:39:47.877" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211014 19:39:47.876" endtime="20211014 19:39:47.877"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:39:47.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:39:47.878" endtime="20211014 19:39:47.878"/>
</kw>
<status status="PASS" starttime="20211014 19:39:38.663" endtime="20211014 19:39:47.879"/>
</kw>
<msg timestamp="20211014 19:39:47.879" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:39:38.662" endtime="20211014 19:39:47.879"/>
</kw>
<msg timestamp="20211014 19:39:47.880" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211014 19:39:38.661" endtime="20211014 19:39:47.880"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211014 19:39:47.880" endtime="20211014 19:39:47.881"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:39:47.887" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/81044-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:39:53.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:39:53.431" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20211014 19:39:47.884" endtime="20211014 19:39:53.431"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:39:53.433" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20211014 19:39:53.432" endtime="20211014 19:39:53.433"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:39:53.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:39:53.434" endtime="20211014 19:39:53.435"/>
</kw>
<status status="PASS" starttime="20211014 19:39:47.883" endtime="20211014 19:39:53.436"/>
</kw>
<msg timestamp="20211014 19:39:53.436" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:39:47.882" endtime="20211014 19:39:53.436"/>
</kw>
<msg timestamp="20211014 19:39:53.437" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20211014 19:39:47.881" endtime="20211014 19:39:53.437"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:39:53.446" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/81044-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:40:02.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:40:02.750" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211014 19:39:53.442" endtime="20211014 19:40:02.751"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:40:02.752" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211014 19:40:02.751" endtime="20211014 19:40:02.752"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:40:02.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:40:02.752" endtime="20211014 19:40:02.753"/>
</kw>
<status status="PASS" starttime="20211014 19:39:53.440" endtime="20211014 19:40:02.753"/>
</kw>
<msg timestamp="20211014 19:40:02.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:39:53.439" endtime="20211014 19:40:02.754"/>
</kw>
<msg timestamp="20211014 19:40:02.754" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211014 19:39:53.437" endtime="20211014 19:40:02.754"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211014 19:40:02.755" endtime="20211014 19:40:02.756"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:40:02.762" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/81044-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:40:11.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:40:11.011" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211014 19:40:02.759" endtime="20211014 19:40:11.011"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:40:11.012" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211014 19:40:11.011" endtime="20211014 19:40:11.012"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:40:11.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:40:11.013" endtime="20211014 19:40:11.013"/>
</kw>
<status status="PASS" starttime="20211014 19:40:02.758" endtime="20211014 19:40:11.014"/>
</kw>
<msg timestamp="20211014 19:40:11.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:40:02.757" endtime="20211014 19:40:11.015"/>
</kw>
<msg timestamp="20211014 19:40:11.015" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211014 19:40:02.756" endtime="20211014 19:40:11.015"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:40:11.021" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/81044-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:40:20.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:40:20.016" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211014 19:40:11.018" endtime="20211014 19:40:20.016"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:40:20.020" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211014 19:40:20.018" endtime="20211014 19:40:20.020"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:40:20.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:40:20.021" endtime="20211014 19:40:20.022"/>
</kw>
<status status="PASS" starttime="20211014 19:40:11.017" endtime="20211014 19:40:20.023"/>
</kw>
<msg timestamp="20211014 19:40:20.023" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:40:11.017" endtime="20211014 19:40:20.024"/>
</kw>
<msg timestamp="20211014 19:40:20.024" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211014 19:40:11.015" endtime="20211014 19:40:20.024"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211014 19:40:20.025" endtime="20211014 19:40:20.027"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:40:20.035" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/81044-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:40:28.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:40:28.538" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211014 19:40:20.032" endtime="20211014 19:40:28.539"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:40:28.540" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211014 19:40:28.539" endtime="20211014 19:40:28.541"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:40:28.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:40:28.541" endtime="20211014 19:40:28.542"/>
</kw>
<status status="PASS" starttime="20211014 19:40:20.030" endtime="20211014 19:40:28.542"/>
</kw>
<msg timestamp="20211014 19:40:28.542" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:40:20.030" endtime="20211014 19:40:28.543"/>
</kw>
<msg timestamp="20211014 19:40:28.543" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211014 19:40:20.027" endtime="20211014 19:40:28.543"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:40:28.550" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/81044-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:40:37.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:40:37.426" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211014 19:40:28.546" endtime="20211014 19:40:37.426"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:40:37.428" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211014 19:40:37.427" endtime="20211014 19:40:37.428"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:40:37.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:40:37.429" endtime="20211014 19:40:37.430"/>
</kw>
<status status="PASS" starttime="20211014 19:40:28.545" endtime="20211014 19:40:37.431"/>
</kw>
<msg timestamp="20211014 19:40:37.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:40:28.545" endtime="20211014 19:40:37.431"/>
</kw>
<msg timestamp="20211014 19:40:37.432" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211014 19:40:28.543" endtime="20211014 19:40:37.432"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211014 19:40:37.432" endtime="20211014 19:40:37.434"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211014 19:40:37.434" endtime="20211014 19:40:37.435"/>
</kw>
<status status="PASS" starttime="20211014 19:39:30.289" endtime="20211014 19:40:37.436"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211014 19:39:30.225" endtime="20211014 19:40:37.436"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:40:37.450" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:40:37.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:40:37.456" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211014 19:40:37.446" endtime="20211014 19:40:37.456"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:40:37.459" level="INFO">scm</msg>
<status status="PASS" starttime="20211014 19:40:37.457" endtime="20211014 19:40:37.459"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:40:37.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:40:37.460" endtime="20211014 19:40:37.461"/>
</kw>
<status status="PASS" starttime="20211014 19:40:37.444" endtime="20211014 19:40:37.462"/>
</kw>
<msg timestamp="20211014 19:40:37.462" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:40:37.444" endtime="20211014 19:40:37.462"/>
</kw>
<msg timestamp="20211014 19:40:37.462" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211014 19:40:37.442" endtime="20211014 19:40:37.462"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211014 19:40:37.463" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211014 19:40:37.463" endtime="20211014 19:40:37.464"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:40:37.469" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:40:37.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:40:37.479" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:40:37.466" endtime="20211014 19:40:37.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:40:37.481" level="INFO"/>
<status status="PASS" starttime="20211014 19:40:37.479" endtime="20211014 19:40:37.481"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:40:37.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:40:37.482" endtime="20211014 19:40:37.482"/>
</kw>
<status status="PASS" starttime="20211014 19:40:37.465" endtime="20211014 19:40:37.483"/>
</kw>
<msg timestamp="20211014 19:40:37.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:40:37.465" endtime="20211014 19:40:37.483"/>
</kw>
<status status="PASS" starttime="20211014 19:40:37.464" endtime="20211014 19:40:37.484"/>
</kw>
<status status="PASS" starttime="20211014 19:40:37.464" endtime="20211014 19:40:37.484"/>
</kw>
<status status="PASS" starttime="20211014 19:40:37.441" endtime="20211014 19:40:37.484"/>
</kw>
<status status="PASS" starttime="20211014 19:40:37.440" endtime="20211014 19:40:37.484"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:40:37.491" level="INFO">Running command 'ozone sh key put o3://om:9862/81044-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:43:48.321" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:43:48.321" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:40:37.488" endtime="20211014 19:43:48.321"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:43:48.323" level="INFO"/>
<status status="PASS" starttime="20211014 19:43:48.322" endtime="20211014 19:43:48.323"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:43:48.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:43:48.323" endtime="20211014 19:43:48.324"/>
</kw>
<status status="PASS" starttime="20211014 19:40:37.487" endtime="20211014 19:43:48.325"/>
</kw>
<msg timestamp="20211014 19:43:48.325" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:40:37.486" endtime="20211014 19:43:48.326"/>
</kw>
<status status="PASS" starttime="20211014 19:40:37.485" endtime="20211014 19:43:48.326"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:43:48.333" level="INFO">Running command 'ozone sh key getacl o3://om:9862/81044-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:43:55.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:43:55.394" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211014 19:43:48.330" endtime="20211014 19:43:55.394"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:43:55.397" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211014 19:43:55.396" endtime="20211014 19:43:55.397"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:43:55.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:43:55.397" endtime="20211014 19:43:55.399"/>
</kw>
<status status="PASS" starttime="20211014 19:43:48.329" endtime="20211014 19:43:55.400"/>
</kw>
<msg timestamp="20211014 19:43:55.400" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:43:48.328" endtime="20211014 19:43:55.400"/>
</kw>
<msg timestamp="20211014 19:43:55.400" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211014 19:43:48.326" endtime="20211014 19:43:55.400"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211014 19:43:55.401" endtime="20211014 19:43:55.402"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:43:55.408" level="INFO">Running command 'ozone sh key addacl o3://om:9862/81044-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:44:04.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:44:04.313" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211014 19:43:55.405" endtime="20211014 19:44:04.313"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:44:04.315" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211014 19:44:04.314" endtime="20211014 19:44:04.316"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:44:04.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:44:04.317" endtime="20211014 19:44:04.319"/>
</kw>
<status status="PASS" starttime="20211014 19:43:55.404" endtime="20211014 19:44:04.320"/>
</kw>
<msg timestamp="20211014 19:44:04.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:43:55.403" endtime="20211014 19:44:04.320"/>
</kw>
<msg timestamp="20211014 19:44:04.321" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211014 19:43:55.402" endtime="20211014 19:44:04.321"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:44:04.330" level="INFO">Running command 'ozone sh key getacl o3://om:9862/81044-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:44:11.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:44:11.599" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211014 19:44:04.323" endtime="20211014 19:44:11.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:44:11.601" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211014 19:44:11.600" endtime="20211014 19:44:11.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:44:11.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:44:11.601" endtime="20211014 19:44:11.602"/>
</kw>
<status status="PASS" starttime="20211014 19:44:04.322" endtime="20211014 19:44:11.603"/>
</kw>
<msg timestamp="20211014 19:44:11.603" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:44:04.322" endtime="20211014 19:44:11.603"/>
</kw>
<msg timestamp="20211014 19:44:11.603" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211014 19:44:04.321" endtime="20211014 19:44:11.603"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211014 19:44:11.603" endtime="20211014 19:44:11.605"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:44:11.609" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/81044-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:44:19.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:44:19.828" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211014 19:44:11.607" endtime="20211014 19:44:19.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:44:19.830" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211014 19:44:19.829" endtime="20211014 19:44:19.830"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:44:19.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:44:19.830" endtime="20211014 19:44:19.831"/>
</kw>
<status status="PASS" starttime="20211014 19:44:11.606" endtime="20211014 19:44:19.832"/>
</kw>
<msg timestamp="20211014 19:44:19.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:44:11.606" endtime="20211014 19:44:19.832"/>
</kw>
<msg timestamp="20211014 19:44:19.832" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211014 19:44:11.605" endtime="20211014 19:44:19.832"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:44:19.838" level="INFO">Running command 'ozone sh key getacl o3://om:9862/81044-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:44:28.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:44:28.137" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211014 19:44:19.834" endtime="20211014 19:44:28.137"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:44:28.140" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20211014 19:44:28.139" endtime="20211014 19:44:28.140"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:44:28.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:44:28.141" endtime="20211014 19:44:28.142"/>
</kw>
<status status="PASS" starttime="20211014 19:44:19.834" endtime="20211014 19:44:28.143"/>
</kw>
<msg timestamp="20211014 19:44:28.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:44:19.833" endtime="20211014 19:44:28.144"/>
</kw>
<msg timestamp="20211014 19:44:28.145" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211014 19:44:19.832" endtime="20211014 19:44:28.145"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211014 19:44:28.145" endtime="20211014 19:44:28.146"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:44:28.156" level="INFO">Running command 'ozone sh key setacl o3://om:9862/81044-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:44:36.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:44:36.792" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211014 19:44:28.152" endtime="20211014 19:44:36.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:44:36.794" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211014 19:44:36.793" endtime="20211014 19:44:36.795"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:44:36.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:44:36.795" endtime="20211014 19:44:36.796"/>
</kw>
<status status="PASS" starttime="20211014 19:44:28.150" endtime="20211014 19:44:36.797"/>
</kw>
<msg timestamp="20211014 19:44:36.797" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:44:28.149" endtime="20211014 19:44:36.797"/>
</kw>
<msg timestamp="20211014 19:44:36.797" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211014 19:44:28.147" endtime="20211014 19:44:36.797"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:44:36.804" level="INFO">Running command 'ozone sh key getacl o3://om:9862/81044-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:44:45.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:44:45.581" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211014 19:44:36.801" endtime="20211014 19:44:45.581"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:44:45.584" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211014 19:44:45.582" endtime="20211014 19:44:45.585"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:44:45.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:44:45.585" endtime="20211014 19:44:45.586"/>
</kw>
<status status="PASS" starttime="20211014 19:44:36.800" endtime="20211014 19:44:45.587"/>
</kw>
<msg timestamp="20211014 19:44:45.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:44:36.800" endtime="20211014 19:44:45.587"/>
</kw>
<msg timestamp="20211014 19:44:45.588" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211014 19:44:36.798" endtime="20211014 19:44:45.588"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211014 19:44:45.588" endtime="20211014 19:44:45.590"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211014 19:44:45.590" endtime="20211014 19:44:45.593"/>
</kw>
<status status="PASS" starttime="20211014 19:40:37.484" endtime="20211014 19:44:45.593"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211014 19:40:37.438" endtime="20211014 19:44:45.594"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient prefix acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:44:45.605" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:44:45.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:44:45.612" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211014 19:44:45.602" endtime="20211014 19:44:45.612"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:44:45.614" level="INFO">scm</msg>
<status status="PASS" starttime="20211014 19:44:45.613" endtime="20211014 19:44:45.614"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:44:45.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:44:45.615" endtime="20211014 19:44:45.618"/>
</kw>
<status status="PASS" starttime="20211014 19:44:45.600" endtime="20211014 19:44:45.618"/>
</kw>
<msg timestamp="20211014 19:44:45.618" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:44:45.600" endtime="20211014 19:44:45.618"/>
</kw>
<msg timestamp="20211014 19:44:45.619" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211014 19:44:45.598" endtime="20211014 19:44:45.619"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211014 19:44:45.620" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211014 19:44:45.619" endtime="20211014 19:44:45.620"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:44:45.624" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:44:45.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:44:45.662" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:44:45.622" endtime="20211014 19:44:45.662"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:44:45.664" level="INFO"/>
<status status="PASS" starttime="20211014 19:44:45.663" endtime="20211014 19:44:45.664"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:44:45.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:44:45.664" endtime="20211014 19:44:45.665"/>
</kw>
<status status="PASS" starttime="20211014 19:44:45.622" endtime="20211014 19:44:45.665"/>
</kw>
<msg timestamp="20211014 19:44:45.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:44:45.621" endtime="20211014 19:44:45.666"/>
</kw>
<status status="PASS" starttime="20211014 19:44:45.620" endtime="20211014 19:44:45.666"/>
</kw>
<status status="PASS" starttime="20211014 19:44:45.620" endtime="20211014 19:44:45.666"/>
</kw>
<status status="PASS" starttime="20211014 19:44:45.598" endtime="20211014 19:44:45.666"/>
</kw>
<status status="PASS" starttime="20211014 19:44:45.596" endtime="20211014 19:44:45.666"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:44:45.681" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/81044-rpcwoport2/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:44:53.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:44:53.824" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211014 19:44:45.673" endtime="20211014 19:44:53.824"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:44:53.827" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211014 19:44:53.826" endtime="20211014 19:44:53.827"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:44:53.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:44:53.827" endtime="20211014 19:44:53.828"/>
</kw>
<status status="PASS" starttime="20211014 19:44:45.672" endtime="20211014 19:44:53.828"/>
</kw>
<msg timestamp="20211014 19:44:53.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:44:45.671" endtime="20211014 19:44:53.828"/>
</kw>
<status status="PASS" starttime="20211014 19:44:45.669" endtime="20211014 19:44:53.829"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:44:53.835" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/81044-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:45:00.817" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:45:00.817" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211014 19:44:53.832" endtime="20211014 19:45:00.817"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:45:00.818" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211014 19:45:00.817" endtime="20211014 19:45:00.818"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:45:00.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:45:00.818" endtime="20211014 19:45:00.819"/>
</kw>
<status status="PASS" starttime="20211014 19:44:53.831" endtime="20211014 19:45:00.820"/>
</kw>
<msg timestamp="20211014 19:45:00.820" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:44:53.830" endtime="20211014 19:45:00.820"/>
</kw>
<msg timestamp="20211014 19:45:00.821" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211014 19:44:53.829" endtime="20211014 19:45:00.821"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211014 19:45:00.821" endtime="20211014 19:45:00.823"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:45:00.830" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/81044-rpcwoport2/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:45:07.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:45:07.790" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20211014 19:45:00.827" endtime="20211014 19:45:07.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:45:07.792" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20211014 19:45:07.791" endtime="20211014 19:45:07.792"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:45:07.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:45:07.792" endtime="20211014 19:45:07.793"/>
</kw>
<status status="PASS" starttime="20211014 19:45:00.825" endtime="20211014 19:45:07.794"/>
</kw>
<msg timestamp="20211014 19:45:07.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:45:00.824" endtime="20211014 19:45:07.794"/>
</kw>
<msg timestamp="20211014 19:45:07.795" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20211014 19:45:00.823" endtime="20211014 19:45:07.795"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:45:07.801" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/81044-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:45:16.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:45:16.138" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211014 19:45:07.797" endtime="20211014 19:45:16.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:45:16.141" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211014 19:45:16.139" endtime="20211014 19:45:16.141"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:45:16.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:45:16.141" endtime="20211014 19:45:16.144"/>
</kw>
<status status="PASS" starttime="20211014 19:45:07.796" endtime="20211014 19:45:16.144"/>
</kw>
<msg timestamp="20211014 19:45:16.144" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:45:07.796" endtime="20211014 19:45:16.144"/>
</kw>
<msg timestamp="20211014 19:45:16.145" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211014 19:45:07.795" endtime="20211014 19:45:16.145"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211014 19:45:16.145" endtime="20211014 19:45:16.147"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:45:16.155" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/81044-rpcwoport2/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:45:24.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:45:24.274" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211014 19:45:16.151" endtime="20211014 19:45:24.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:45:24.277" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211014 19:45:24.275" endtime="20211014 19:45:24.277"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:45:24.279" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:45:24.278" endtime="20211014 19:45:24.279"/>
</kw>
<status status="PASS" starttime="20211014 19:45:16.150" endtime="20211014 19:45:24.280"/>
</kw>
<msg timestamp="20211014 19:45:24.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:45:16.149" endtime="20211014 19:45:24.280"/>
</kw>
<msg timestamp="20211014 19:45:24.281" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211014 19:45:16.147" endtime="20211014 19:45:24.281"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:45:24.287" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/81044-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:45:33.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:45:33.535" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20211014 19:45:24.284" endtime="20211014 19:45:33.536"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:45:33.539" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211014 19:45:33.537" endtime="20211014 19:45:33.539"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:45:33.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:45:33.540" endtime="20211014 19:45:33.541"/>
</kw>
<status status="PASS" starttime="20211014 19:45:24.283" endtime="20211014 19:45:33.543"/>
</kw>
<msg timestamp="20211014 19:45:33.543" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:45:24.283" endtime="20211014 19:45:33.544"/>
</kw>
<msg timestamp="20211014 19:45:33.547" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20211014 19:45:24.282" endtime="20211014 19:45:33.548"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211014 19:45:33.548" endtime="20211014 19:45:33.549"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211014 19:45:33.549" endtime="20211014 19:45:33.550"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:45:33.560" level="INFO">Running command 'ozone sh key put o3://om:9862/81044-rpcwoport2/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:48:47.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:48:47.186" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:45:33.555" endtime="20211014 19:48:47.186"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:48:47.188" level="INFO"/>
<status status="PASS" starttime="20211014 19:48:47.187" endtime="20211014 19:48:47.188"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:48:47.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:48:47.188" endtime="20211014 19:48:47.189"/>
</kw>
<status status="PASS" starttime="20211014 19:45:33.552" endtime="20211014 19:48:47.190"/>
</kw>
<msg timestamp="20211014 19:48:47.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:45:33.552" endtime="20211014 19:48:47.190"/>
</kw>
<status status="PASS" starttime="20211014 19:45:33.550" endtime="20211014 19:48:47.191"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:48:47.196" level="INFO">Running command 'ozone sh key getacl o3://om:9862/81044-rpcwoport2/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:48:54.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:48:54.482" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211014 19:48:47.194" endtime="20211014 19:48:54.482"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:48:54.483" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211014 19:48:54.482" endtime="20211014 19:48:54.483"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:48:54.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:48:54.483" endtime="20211014 19:48:54.484"/>
</kw>
<status status="PASS" starttime="20211014 19:48:47.193" endtime="20211014 19:48:54.485"/>
</kw>
<msg timestamp="20211014 19:48:54.485" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:48:47.192" endtime="20211014 19:48:54.485"/>
</kw>
<msg timestamp="20211014 19:48:54.485" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211014 19:48:47.191" endtime="20211014 19:48:54.485"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211014 19:48:54.486" endtime="20211014 19:48:54.486"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211014 19:48:54.486" endtime="20211014 19:48:54.487"/>
</kw>
<status status="PASS" starttime="20211014 19:44:45.667" endtime="20211014 19:48:54.487"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211014 19:44:45.595" endtime="20211014 19:48:54.488"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:48:54.497" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:48:54.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:48:54.503" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211014 19:48:54.494" endtime="20211014 19:48:54.503"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:48:54.506" level="INFO">scm</msg>
<status status="PASS" starttime="20211014 19:48:54.504" endtime="20211014 19:48:54.506"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:48:54.507" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:48:54.506" endtime="20211014 19:48:54.507"/>
</kw>
<status status="PASS" starttime="20211014 19:48:54.493" endtime="20211014 19:48:54.508"/>
</kw>
<msg timestamp="20211014 19:48:54.508" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:48:54.493" endtime="20211014 19:48:54.509"/>
</kw>
<msg timestamp="20211014 19:48:54.509" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211014 19:48:54.492" endtime="20211014 19:48:54.509"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211014 19:48:54.511" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211014 19:48:54.510" endtime="20211014 19:48:54.511"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:48:54.518" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:48:54.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:48:54.529" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:48:54.515" endtime="20211014 19:48:54.529"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:48:54.532" level="INFO"/>
<status status="PASS" starttime="20211014 19:48:54.530" endtime="20211014 19:48:54.532"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:48:54.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:48:54.532" endtime="20211014 19:48:54.533"/>
</kw>
<status status="PASS" starttime="20211014 19:48:54.514" endtime="20211014 19:48:54.533"/>
</kw>
<msg timestamp="20211014 19:48:54.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:48:54.513" endtime="20211014 19:48:54.534"/>
</kw>
<status status="PASS" starttime="20211014 19:48:54.512" endtime="20211014 19:48:54.534"/>
</kw>
<status status="PASS" starttime="20211014 19:48:54.511" endtime="20211014 19:48:54.534"/>
</kw>
<status status="PASS" starttime="20211014 19:48:54.491" endtime="20211014 19:48:54.535"/>
</kw>
<status status="PASS" starttime="20211014 19:48:54.490" endtime="20211014 19:48:54.535"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:48:54.541" level="INFO">Running command 'ozone sh volume info o3:///81044-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:49:03.016" level="INFO">${rc} = 255</msg>
<msg timestamp="20211014 19:49:03.016" level="INFO">${output} = VOLUME_NOT_FOUND Volume 81044-rpcwport is not found</msg>
<status status="PASS" starttime="20211014 19:48:54.539" endtime="20211014 19:49:03.016"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:49:03.018" level="INFO">VOLUME_NOT_FOUND Volume 81044-rpcwport is not found</msg>
<status status="PASS" starttime="20211014 19:49:03.017" endtime="20211014 19:49:03.019"/>
</kw>
<msg timestamp="20211014 19:49:03.019" level="INFO">${result} = VOLUME_NOT_FOUND Volume 81044-rpcwport is not found</msg>
<status status="PASS" starttime="20211014 19:48:54.538" endtime="20211014 19:49:03.020"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 19:49:03.020" endtime="20211014 19:49:03.021"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:49:03.028" level="INFO">Running command 'ozone sh volume create o3:///81044-rpcwport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:49:12.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:49:12.533" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:49:03.026" endtime="20211014 19:49:12.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:49:12.535" level="INFO"/>
<status status="PASS" starttime="20211014 19:49:12.533" endtime="20211014 19:49:12.535"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:49:12.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:49:12.535" endtime="20211014 19:49:12.536"/>
</kw>
<status status="PASS" starttime="20211014 19:49:03.024" endtime="20211014 19:49:12.537"/>
</kw>
<msg timestamp="20211014 19:49:12.537" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:49:03.023" endtime="20211014 19:49:12.537"/>
</kw>
<msg timestamp="20211014 19:49:12.537" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211014 19:49:03.021" endtime="20211014 19:49:12.537"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 19:49:12.538" endtime="20211014 19:49:12.538"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:49:12.544" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '.[] | select(.name=="81044-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:49:21.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:49:21.453" level="INFO">${output} = {
  "metadata": {},
  "name": "81044-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211014 19:49:12.542" endtime="20211014 19:49:21.453"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:49:21.455" level="INFO">{
  "metadata": {},
  "name": "81044-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-14T19:49:12.427Z",
  "modificationTime": "2021-10-14T19:49:12.427Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211014 19:49:21.454" endtime="20211014 19:49:21.456"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:49:21.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:49:21.456" endtime="20211014 19:49:21.457"/>
</kw>
<status status="PASS" starttime="20211014 19:49:12.541" endtime="20211014 19:49:21.458"/>
</kw>
<msg timestamp="20211014 19:49:21.458" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:49:12.540" endtime="20211014 19:49:21.458"/>
</kw>
<msg timestamp="20211014 19:49:21.459" level="INFO">${result} = {
  "metadata": {},
  "name": "81044-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211014 19:49:12.538" endtime="20211014 19:49:21.459"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 19:49:21.460" endtime="20211014 19:49:21.460"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:49:21.468" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="81044-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:49:31.025" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:49:31.025" level="INFO">${output} = {
  "metadata": {},
  "name": "81044-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211014 19:49:21.465" endtime="20211014 19:49:31.025"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:49:31.027" level="INFO">{
  "metadata": {},
  "name": "81044-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-14T19:49:12.427Z",
  "modificationTime": "2021-10-14T19:49:12.427Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211014 19:49:31.026" endtime="20211014 19:49:31.027"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:49:31.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:49:31.027" endtime="20211014 19:49:31.031"/>
</kw>
<status status="PASS" starttime="20211014 19:49:21.464" endtime="20211014 19:49:31.031"/>
</kw>
<msg timestamp="20211014 19:49:31.031" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:49:21.463" endtime="20211014 19:49:31.032"/>
</kw>
<msg timestamp="20211014 19:49:31.032" level="INFO">${result} = {
  "metadata": {},
  "name": "81044-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211014 19:49:21.461" endtime="20211014 19:49:31.032"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 19:49:31.032" endtime="20211014 19:49:31.033"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:49:31.041" level="INFO">Running command 'ozone sh volume setquota o3:///81044-rpcwport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:49:39.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:49:39.620" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:49:31.036" endtime="20211014 19:49:39.621"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:49:39.622" level="INFO"/>
<status status="PASS" starttime="20211014 19:49:39.621" endtime="20211014 19:49:39.622"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:49:39.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:49:39.623" endtime="20211014 19:49:39.623"/>
</kw>
<status status="PASS" starttime="20211014 19:49:31.035" endtime="20211014 19:49:39.624"/>
</kw>
<msg timestamp="20211014 19:49:39.624" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:49:31.034" endtime="20211014 19:49:39.624"/>
</kw>
<status status="PASS" starttime="20211014 19:49:31.033" endtime="20211014 19:49:39.625"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:49:39.630" level="INFO">Running command 'ozone sh volume info o3:///81044-rpcwport | jq -r '. | select(.name=="81044-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:49:48.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:49:48.472" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211014 19:49:39.628" endtime="20211014 19:49:48.472"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:49:48.474" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211014 19:49:48.473" endtime="20211014 19:49:48.474"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:49:48.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:49:48.474" endtime="20211014 19:49:48.475"/>
</kw>
<status status="PASS" starttime="20211014 19:49:39.627" endtime="20211014 19:49:48.476"/>
</kw>
<msg timestamp="20211014 19:49:48.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:49:39.626" endtime="20211014 19:49:48.476"/>
</kw>
<msg timestamp="20211014 19:49:48.476" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211014 19:49:39.625" endtime="20211014 19:49:48.476"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211014 19:49:48.477" endtime="20211014 19:49:48.477"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:49:48.483" level="INFO">Running command 'ozone sh bucket create o3:///81044-rpcwport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:49:57.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:49:57.229" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:49:48.480" endtime="20211014 19:49:57.230"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:49:57.231" level="INFO"/>
<status status="PASS" starttime="20211014 19:49:57.230" endtime="20211014 19:49:57.231"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:49:57.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:49:57.231" endtime="20211014 19:49:57.232"/>
</kw>
<status status="PASS" starttime="20211014 19:49:48.479" endtime="20211014 19:49:57.233"/>
</kw>
<msg timestamp="20211014 19:49:57.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:49:48.479" endtime="20211014 19:49:57.233"/>
</kw>
<status status="PASS" starttime="20211014 19:49:48.478" endtime="20211014 19:49:57.233"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:49:57.240" level="INFO">Running command 'ozone sh bucket info o3:///81044-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:50:04.419" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:50:04.419" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211014 19:49:57.237" endtime="20211014 19:50:04.419"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:50:04.421" level="INFO">DISK</msg>
<status status="PASS" starttime="20211014 19:50:04.420" endtime="20211014 19:50:04.421"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:50:04.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:50:04.421" endtime="20211014 19:50:04.422"/>
</kw>
<status status="PASS" starttime="20211014 19:49:57.236" endtime="20211014 19:50:04.422"/>
</kw>
<msg timestamp="20211014 19:50:04.422" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:49:57.235" endtime="20211014 19:50:04.422"/>
</kw>
<msg timestamp="20211014 19:50:04.423" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211014 19:49:57.233" endtime="20211014 19:50:04.423"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211014 19:50:04.423" endtime="20211014 19:50:04.424"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:50:04.429" level="INFO">Running command 'ozone sh bucket info o3:///81044-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:50:12.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:50:12.897" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211014 19:50:04.427" endtime="20211014 19:50:12.897"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:50:12.898" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211014 19:50:12.897" endtime="20211014 19:50:12.898"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:50:12.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:50:12.898" endtime="20211014 19:50:12.899"/>
</kw>
<status status="PASS" starttime="20211014 19:50:04.426" endtime="20211014 19:50:12.900"/>
</kw>
<msg timestamp="20211014 19:50:12.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:50:04.425" endtime="20211014 19:50:12.900"/>
</kw>
<msg timestamp="20211014 19:50:12.901" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211014 19:50:04.424" endtime="20211014 19:50:12.901"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211014 19:50:12.901" endtime="20211014 19:50:12.902"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:50:12.908" level="INFO">Running command 'ozone sh bucket info o3:///81044-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:50:21.713" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:50:21.713" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211014 19:50:12.905" endtime="20211014 19:50:21.713"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:50:21.715" level="INFO">100</msg>
<status status="PASS" starttime="20211014 19:50:21.714" endtime="20211014 19:50:21.715"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:50:21.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:50:21.715" endtime="20211014 19:50:21.716"/>
</kw>
<status status="PASS" starttime="20211014 19:50:12.904" endtime="20211014 19:50:21.716"/>
</kw>
<msg timestamp="20211014 19:50:21.716" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:50:12.904" endtime="20211014 19:50:21.717"/>
</kw>
<msg timestamp="20211014 19:50:21.717" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211014 19:50:12.902" endtime="20211014 19:50:21.717"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211014 19:50:21.717" endtime="20211014 19:50:21.718"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:50:21.723" level="INFO">Running command 'ozone sh bucket setquota o3:///81044-rpcwport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:50:28.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:50:28.336" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:50:21.720" endtime="20211014 19:50:28.336"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:50:28.339" level="INFO"/>
<status status="PASS" starttime="20211014 19:50:28.337" endtime="20211014 19:50:28.340"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:50:28.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:50:28.340" endtime="20211014 19:50:28.342"/>
</kw>
<status status="PASS" starttime="20211014 19:50:21.720" endtime="20211014 19:50:28.343"/>
</kw>
<msg timestamp="20211014 19:50:28.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:50:21.719" endtime="20211014 19:50:28.344"/>
</kw>
<status status="PASS" starttime="20211014 19:50:21.718" endtime="20211014 19:50:28.344"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:50:28.352" level="INFO">Running command 'ozone sh bucket info o3:///81044-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:50:37.321" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:50:37.321" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211014 19:50:28.349" endtime="20211014 19:50:37.321"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:50:37.322" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211014 19:50:37.321" endtime="20211014 19:50:37.323"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:50:37.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:50:37.323" endtime="20211014 19:50:37.324"/>
</kw>
<status status="PASS" starttime="20211014 19:50:28.349" endtime="20211014 19:50:37.325"/>
</kw>
<msg timestamp="20211014 19:50:37.325" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:50:28.348" endtime="20211014 19:50:37.326"/>
</kw>
<msg timestamp="20211014 19:50:37.326" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211014 19:50:28.345" endtime="20211014 19:50:37.326"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211014 19:50:37.327" endtime="20211014 19:50:37.328"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:50:37.339" level="INFO">Running command 'ozone sh bucket info o3:///81044-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:50:45.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:50:45.721" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211014 19:50:37.335" endtime="20211014 19:50:45.721"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:50:45.723" level="INFO">1000</msg>
<status status="PASS" starttime="20211014 19:50:45.722" endtime="20211014 19:50:45.723"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:50:45.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:50:45.723" endtime="20211014 19:50:45.725"/>
</kw>
<status status="PASS" starttime="20211014 19:50:37.333" endtime="20211014 19:50:45.725"/>
</kw>
<msg timestamp="20211014 19:50:45.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:50:37.332" endtime="20211014 19:50:45.726"/>
</kw>
<msg timestamp="20211014 19:50:45.726" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211014 19:50:37.329" endtime="20211014 19:50:45.726"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211014 19:50:45.726" endtime="20211014 19:50:45.727"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:50:45.734" level="INFO">Running command 'ozone sh bucket list o3:///81044-rpcwport/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:50:54.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:50:54.703" level="INFO">${output} = 81044-rpcwport</msg>
<status status="PASS" starttime="20211014 19:50:45.731" endtime="20211014 19:50:54.703"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:50:54.705" level="INFO">81044-rpcwport</msg>
<status status="PASS" starttime="20211014 19:50:54.703" endtime="20211014 19:50:54.705"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:50:54.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:50:54.705" endtime="20211014 19:50:54.707"/>
</kw>
<status status="PASS" starttime="20211014 19:50:45.730" endtime="20211014 19:50:54.707"/>
</kw>
<msg timestamp="20211014 19:50:54.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:50:45.729" endtime="20211014 19:50:54.708"/>
</kw>
<msg timestamp="20211014 19:50:54.709" level="INFO">${result} = 81044-rpcwport</msg>
<status status="PASS" starttime="20211014 19:50:45.728" endtime="20211014 19:50:54.709"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211014 19:50:54.709" endtime="20211014 19:50:54.710"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:50:54.717" level="INFO">Running command 'ozone sh key put o3:///81044-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:53:54.490" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211014 19:50:54.714" endtime="20211014 19:53:54.490"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211014 19:53:54.490" endtime="20211014 19:53:54.490"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211014 19:53:54.494" endtime="20211014 19:53:54.494"/>
</kw>
<status status="FAIL" starttime="20211014 19:50:54.714" endtime="20211014 19:53:54.495"/>
</kw>
<msg timestamp="20211014 19:53:54.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211014 19:50:54.713" endtime="20211014 19:53:54.495"/>
</kw>
<status status="FAIL" starttime="20211014 19:50:54.712" endtime="20211014 19:53:54.495"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211014 19:53:54.496" endtime="20211014 19:53:54.496"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211014 19:53:54.496" endtime="20211014 19:53:54.496"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211014 19:53:54.496" endtime="20211014 19:53:54.496"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211014 19:53:54.496" endtime="20211014 19:53:54.497"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211014 19:53:54.497" endtime="20211014 19:53:54.497"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211014 19:53:54.497" endtime="20211014 19:53:54.497"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211014 19:53:54.497" endtime="20211014 19:53:54.497"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211014 19:53:54.497" endtime="20211014 19:53:54.497"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211014 19:53:54.498" endtime="20211014 19:53:54.498"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211014 19:53:54.498" endtime="20211014 19:53:54.498"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211014 19:53:54.498" endtime="20211014 19:53:54.498"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211014 19:53:54.498" endtime="20211014 19:53:54.498"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211014 19:53:54.498" endtime="20211014 19:53:54.499"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211014 19:53:54.499" endtime="20211014 19:53:54.499"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211014 19:53:54.499" endtime="20211014 19:53:54.499"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211014 19:53:54.499" endtime="20211014 19:53:54.499"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211014 19:53:54.500" endtime="20211014 19:53:54.500"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211014 19:53:54.500" endtime="20211014 19:53:54.501"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211014 19:53:54.501" endtime="20211014 19:53:54.501"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211014 19:53:54.502" endtime="20211014 19:53:54.502"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211014 19:53:54.502" endtime="20211014 19:53:54.502"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211014 19:53:54.503" endtime="20211014 19:53:54.503"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211014 19:53:54.503" endtime="20211014 19:53:54.503"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211014 19:53:54.504" endtime="20211014 19:53:54.504"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211014 19:53:54.504" endtime="20211014 19:53:54.504"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211014 19:53:54.505" endtime="20211014 19:53:54.505"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211014 19:53:54.505" endtime="20211014 19:53:54.505"/>
</kw>
<status status="FAIL" starttime="20211014 19:50:54.711" endtime="20211014 19:53:54.506"/>
</kw>
<status status="FAIL" starttime="20211014 19:50:54.710" endtime="20211014 19:53:54.506"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211014 19:53:54.506" endtime="20211014 19:53:54.506"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211014 19:53:54.507" endtime="20211014 19:53:54.507"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211014 19:53:54.507" endtime="20211014 19:53:54.508"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211014 19:53:54.508" endtime="20211014 19:53:54.508"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211014 19:53:54.508" endtime="20211014 19:53:54.509"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211014 19:53:54.509" endtime="20211014 19:53:54.509"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211014 19:53:54.509" endtime="20211014 19:53:54.510"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211014 19:53:54.510" endtime="20211014 19:53:54.511"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211014 19:53:54.512" endtime="20211014 19:53:54.512"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211014 19:53:54.512" endtime="20211014 19:53:54.512"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211014 19:53:54.512" endtime="20211014 19:53:54.513"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211014 19:53:54.513" endtime="20211014 19:53:54.513"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211014 19:53:54.514" endtime="20211014 19:53:54.514"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211014 19:53:54.514" endtime="20211014 19:53:54.514"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211014 19:53:54.514" endtime="20211014 19:53:54.514"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211014 19:53:54.515" endtime="20211014 19:53:54.515"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211014 19:53:54.515" endtime="20211014 19:53:54.515"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211014 19:53:54.515" endtime="20211014 19:53:54.515"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211014 19:53:54.515" endtime="20211014 19:53:54.515"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211014 19:53:54.516" endtime="20211014 19:53:54.516"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211014 19:53:54.516" endtime="20211014 19:53:54.516"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211014 19:53:54.516" endtime="20211014 19:53:54.516"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211014 19:53:54.517" endtime="20211014 19:53:54.517"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211014 19:53:54.517" endtime="20211014 19:53:54.517"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211014 19:53:54.517" endtime="20211014 19:53:54.517"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211014 19:53:54.517" endtime="20211014 19:53:54.518"/>
</kw>
<status status="FAIL" starttime="20211014 19:48:54.535" endtime="20211014 19:53:54.518"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211014 19:48:54.489" endtime="20211014 19:53:54.518">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t7" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:53:54.530" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:53:54.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:53:54.535" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211014 19:53:54.527" endtime="20211014 19:53:54.536"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:53:54.537" level="INFO">scm</msg>
<status status="PASS" starttime="20211014 19:53:54.536" endtime="20211014 19:53:54.537"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:53:54.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:53:54.537" endtime="20211014 19:53:54.539"/>
</kw>
<status status="PASS" starttime="20211014 19:53:54.526" endtime="20211014 19:53:54.539"/>
</kw>
<msg timestamp="20211014 19:53:54.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:53:54.526" endtime="20211014 19:53:54.540"/>
</kw>
<msg timestamp="20211014 19:53:54.540" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211014 19:53:54.525" endtime="20211014 19:53:54.540"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211014 19:53:54.542" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211014 19:53:54.541" endtime="20211014 19:53:54.542"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:53:54.548" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:53:54.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:53:54.583" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:53:54.546" endtime="20211014 19:53:54.584"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:53:54.585" level="INFO"/>
<status status="PASS" starttime="20211014 19:53:54.584" endtime="20211014 19:53:54.585"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:53:54.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:53:54.585" endtime="20211014 19:53:54.586"/>
</kw>
<status status="PASS" starttime="20211014 19:53:54.545" endtime="20211014 19:53:54.586"/>
</kw>
<msg timestamp="20211014 19:53:54.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:53:54.544" endtime="20211014 19:53:54.586"/>
</kw>
<status status="PASS" starttime="20211014 19:53:54.543" endtime="20211014 19:53:54.587"/>
</kw>
<status status="PASS" starttime="20211014 19:53:54.542" endtime="20211014 19:53:54.587"/>
</kw>
<status status="PASS" starttime="20211014 19:53:54.524" endtime="20211014 19:53:54.587"/>
</kw>
<status status="PASS" starttime="20211014 19:53:54.523" endtime="20211014 19:53:54.587"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:53:54.594" level="INFO">Running command 'ozone sh volume info /81044-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:54:02.829" level="INFO">${rc} = 255</msg>
<msg timestamp="20211014 19:54:02.829" level="INFO">${output} = VOLUME_NOT_FOUND Volume 81044-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20211014 19:53:54.590" endtime="20211014 19:54:02.829"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:54:02.830" level="INFO">VOLUME_NOT_FOUND Volume 81044-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20211014 19:54:02.829" endtime="20211014 19:54:02.830"/>
</kw>
<msg timestamp="20211014 19:54:02.831" level="INFO">${result} = VOLUME_NOT_FOUND Volume 81044-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20211014 19:53:54.590" endtime="20211014 19:54:02.831"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 19:54:02.831" endtime="20211014 19:54:02.832"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:54:02.837" level="INFO">Running command 'ozone sh volume create /81044-rpcwoscheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:54:11.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:54:11.576" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:54:02.835" endtime="20211014 19:54:11.576"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:54:11.578" level="INFO"/>
<status status="PASS" starttime="20211014 19:54:11.577" endtime="20211014 19:54:11.578"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:54:11.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:54:11.579" endtime="20211014 19:54:11.581"/>
</kw>
<status status="PASS" starttime="20211014 19:54:02.834" endtime="20211014 19:54:11.581"/>
</kw>
<msg timestamp="20211014 19:54:11.581" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:54:02.833" endtime="20211014 19:54:11.582"/>
</kw>
<msg timestamp="20211014 19:54:11.582" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211014 19:54:02.832" endtime="20211014 19:54:11.582"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 19:54:11.583" endtime="20211014 19:54:11.584"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:54:11.594" level="INFO">Running command 'ozone sh volume list / | jq -r '.[] | select(.name=="81044-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:54:19.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:54:19.687" level="INFO">${output} = {
  "metadata": {},
  "name": "81044-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211014 19:54:11.590" endtime="20211014 19:54:19.688"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:54:19.689" level="INFO">{
  "metadata": {},
  "name": "81044-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-14T19:54:11.090Z",
  "modificationTime": "2021-10-14T19:54:11.090Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211014 19:54:19.688" endtime="20211014 19:54:19.689"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:54:19.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:54:19.689" endtime="20211014 19:54:19.690"/>
</kw>
<status status="PASS" starttime="20211014 19:54:11.588" endtime="20211014 19:54:19.691"/>
</kw>
<msg timestamp="20211014 19:54:19.691" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:54:11.587" endtime="20211014 19:54:19.691"/>
</kw>
<msg timestamp="20211014 19:54:19.691" level="INFO">${result} = {
  "metadata": {},
  "name": "81044-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211014 19:54:11.585" endtime="20211014 19:54:19.691"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 19:54:19.691" endtime="20211014 19:54:19.692"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:54:19.696" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="81044-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:54:28.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:54:28.880" level="INFO">${output} = {
  "metadata": {},
  "name": "81044-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211014 19:54:19.694" endtime="20211014 19:54:28.881"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:54:28.882" level="INFO">{
  "metadata": {},
  "name": "81044-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-14T19:54:11.090Z",
  "modificationTime": "2021-10-14T19:54:11.090Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211014 19:54:28.881" endtime="20211014 19:54:28.882"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:54:28.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:54:28.883" endtime="20211014 19:54:28.883"/>
</kw>
<status status="PASS" starttime="20211014 19:54:19.693" endtime="20211014 19:54:28.884"/>
</kw>
<msg timestamp="20211014 19:54:28.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:54:19.693" endtime="20211014 19:54:28.884"/>
</kw>
<msg timestamp="20211014 19:54:28.885" level="INFO">${result} = {
  "metadata": {},
  "name": "81044-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211014 19:54:19.692" endtime="20211014 19:54:28.885"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211014 19:54:28.885" endtime="20211014 19:54:28.885"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:54:28.891" level="INFO">Running command 'ozone sh volume setquota /81044-rpcwoscheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:54:36.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:54:36.425" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:54:28.888" endtime="20211014 19:54:36.425"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:54:36.428" level="INFO"/>
<status status="PASS" starttime="20211014 19:54:36.427" endtime="20211014 19:54:36.428"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:54:36.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:54:36.429" endtime="20211014 19:54:36.432"/>
</kw>
<status status="PASS" starttime="20211014 19:54:28.887" endtime="20211014 19:54:36.432"/>
</kw>
<msg timestamp="20211014 19:54:36.432" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:54:28.887" endtime="20211014 19:54:36.433"/>
</kw>
<status status="PASS" starttime="20211014 19:54:28.886" endtime="20211014 19:54:36.433"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:54:36.439" level="INFO">Running command 'ozone sh volume info /81044-rpcwoscheme | jq -r '. | select(.name=="81044-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:54:45.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:54:45.751" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211014 19:54:36.435" endtime="20211014 19:54:45.751"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:54:45.753" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211014 19:54:45.752" endtime="20211014 19:54:45.753"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:54:45.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:54:45.753" endtime="20211014 19:54:45.755"/>
</kw>
<status status="PASS" starttime="20211014 19:54:36.435" endtime="20211014 19:54:45.755"/>
</kw>
<msg timestamp="20211014 19:54:45.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:54:36.434" endtime="20211014 19:54:45.756"/>
</kw>
<msg timestamp="20211014 19:54:45.756" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211014 19:54:36.433" endtime="20211014 19:54:45.756"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211014 19:54:45.756" endtime="20211014 19:54:45.757"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:54:45.763" level="INFO">Running command 'ozone sh bucket create /81044-rpcwoscheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:54:53.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:54:53.863" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:54:45.760" endtime="20211014 19:54:53.863"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:54:53.865" level="INFO"/>
<status status="PASS" starttime="20211014 19:54:53.864" endtime="20211014 19:54:53.865"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:54:53.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:54:53.865" endtime="20211014 19:54:53.866"/>
</kw>
<status status="PASS" starttime="20211014 19:54:45.759" endtime="20211014 19:54:53.866"/>
</kw>
<msg timestamp="20211014 19:54:53.866" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:54:45.759" endtime="20211014 19:54:53.866"/>
</kw>
<status status="PASS" starttime="20211014 19:54:45.757" endtime="20211014 19:54:53.867"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:54:53.872" level="INFO">Running command 'ozone sh bucket info /81044-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:55:03.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:55:03.213" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211014 19:54:53.869" endtime="20211014 19:55:03.213"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:55:03.214" level="INFO">DISK</msg>
<status status="PASS" starttime="20211014 19:55:03.213" endtime="20211014 19:55:03.214"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:55:03.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:55:03.214" endtime="20211014 19:55:03.215"/>
</kw>
<status status="PASS" starttime="20211014 19:54:53.868" endtime="20211014 19:55:03.216"/>
</kw>
<msg timestamp="20211014 19:55:03.216" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:54:53.868" endtime="20211014 19:55:03.216"/>
</kw>
<msg timestamp="20211014 19:55:03.217" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211014 19:54:53.867" endtime="20211014 19:55:03.217"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211014 19:55:03.217" endtime="20211014 19:55:03.218"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:55:03.225" level="INFO">Running command 'ozone sh bucket info /81044-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:55:12.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:55:12.653" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211014 19:55:03.221" endtime="20211014 19:55:12.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:55:12.656" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211014 19:55:12.654" endtime="20211014 19:55:12.656"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:55:12.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:55:12.656" endtime="20211014 19:55:12.657"/>
</kw>
<status status="PASS" starttime="20211014 19:55:03.220" endtime="20211014 19:55:12.657"/>
</kw>
<msg timestamp="20211014 19:55:12.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:55:03.219" endtime="20211014 19:55:12.658"/>
</kw>
<msg timestamp="20211014 19:55:12.658" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211014 19:55:03.218" endtime="20211014 19:55:12.658"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211014 19:55:12.658" endtime="20211014 19:55:12.659"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:55:12.667" level="INFO">Running command 'ozone sh bucket info /81044-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:55:21.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:55:21.835" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211014 19:55:12.663" endtime="20211014 19:55:21.835"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:55:21.838" level="INFO">100</msg>
<status status="PASS" starttime="20211014 19:55:21.836" endtime="20211014 19:55:21.838"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:55:21.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:55:21.838" endtime="20211014 19:55:21.840"/>
</kw>
<status status="PASS" starttime="20211014 19:55:12.662" endtime="20211014 19:55:21.841"/>
</kw>
<msg timestamp="20211014 19:55:21.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:55:12.661" endtime="20211014 19:55:21.842"/>
</kw>
<msg timestamp="20211014 19:55:21.842" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211014 19:55:12.659" endtime="20211014 19:55:21.842"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211014 19:55:21.842" endtime="20211014 19:55:21.844"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:55:21.852" level="INFO">Running command 'ozone sh bucket setquota /81044-rpcwoscheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:55:29.889" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:55:29.889" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:55:21.847" endtime="20211014 19:55:29.889"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:55:29.891" level="INFO"/>
<status status="PASS" starttime="20211014 19:55:29.890" endtime="20211014 19:55:29.891"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:55:29.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:55:29.891" endtime="20211014 19:55:29.892"/>
</kw>
<status status="PASS" starttime="20211014 19:55:21.846" endtime="20211014 19:55:29.893"/>
</kw>
<msg timestamp="20211014 19:55:29.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:55:21.845" endtime="20211014 19:55:29.893"/>
</kw>
<status status="PASS" starttime="20211014 19:55:21.844" endtime="20211014 19:55:29.893"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:55:29.900" level="INFO">Running command 'ozone sh bucket info /81044-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:55:39.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:55:39.081" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211014 19:55:29.897" endtime="20211014 19:55:39.081"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:55:39.083" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211014 19:55:39.082" endtime="20211014 19:55:39.083"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:55:39.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:55:39.083" endtime="20211014 19:55:39.084"/>
</kw>
<status status="PASS" starttime="20211014 19:55:29.895" endtime="20211014 19:55:39.085"/>
</kw>
<msg timestamp="20211014 19:55:39.085" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:55:29.895" endtime="20211014 19:55:39.085"/>
</kw>
<msg timestamp="20211014 19:55:39.085" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211014 19:55:29.893" endtime="20211014 19:55:39.085"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211014 19:55:39.085" endtime="20211014 19:55:39.086"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:55:39.094" level="INFO">Running command 'ozone sh bucket info /81044-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:55:48.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:55:48.043" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211014 19:55:39.090" endtime="20211014 19:55:48.043"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:55:48.048" level="INFO">1000</msg>
<status status="PASS" starttime="20211014 19:55:48.044" endtime="20211014 19:55:48.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:55:48.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:55:48.050" endtime="20211014 19:55:48.052"/>
</kw>
<status status="PASS" starttime="20211014 19:55:39.089" endtime="20211014 19:55:48.053"/>
</kw>
<msg timestamp="20211014 19:55:48.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:55:39.088" endtime="20211014 19:55:48.053"/>
</kw>
<msg timestamp="20211014 19:55:48.054" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211014 19:55:39.086" endtime="20211014 19:55:48.054"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211014 19:55:48.054" endtime="20211014 19:55:48.056"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:55:48.063" level="INFO">Running command 'ozone sh bucket list /81044-rpcwoscheme/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:55:55.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:55:55.156" level="INFO">${output} = 81044-rpcwoscheme</msg>
<status status="PASS" starttime="20211014 19:55:48.060" endtime="20211014 19:55:55.157"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:55:55.159" level="INFO">81044-rpcwoscheme</msg>
<status status="PASS" starttime="20211014 19:55:55.157" endtime="20211014 19:55:55.160"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:55:55.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:55:55.160" endtime="20211014 19:55:55.161"/>
</kw>
<status status="PASS" starttime="20211014 19:55:48.059" endtime="20211014 19:55:55.161"/>
</kw>
<msg timestamp="20211014 19:55:55.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:55:48.058" endtime="20211014 19:55:55.162"/>
</kw>
<msg timestamp="20211014 19:55:55.164" level="INFO">${result} = 81044-rpcwoscheme</msg>
<status status="PASS" starttime="20211014 19:55:48.056" endtime="20211014 19:55:55.164"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211014 19:55:55.164" endtime="20211014 19:55:55.167"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:55:55.178" level="INFO">Running command 'ozone sh key put /81044-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:58:54.522" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211014 19:55:55.173" endtime="20211014 19:58:54.523"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211014 19:58:54.523" endtime="20211014 19:58:54.524"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211014 19:58:54.524" endtime="20211014 19:58:54.524"/>
</kw>
<status status="FAIL" starttime="20211014 19:55:55.169" endtime="20211014 19:58:54.524"/>
</kw>
<msg timestamp="20211014 19:58:54.525" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211014 19:55:55.169" endtime="20211014 19:58:54.525"/>
</kw>
<status status="FAIL" starttime="20211014 19:55:55.168" endtime="20211014 19:58:54.525"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211014 19:58:54.525" endtime="20211014 19:58:54.525"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211014 19:58:54.526" endtime="20211014 19:58:54.526"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211014 19:58:54.526" endtime="20211014 19:58:54.526"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211014 19:58:54.526" endtime="20211014 19:58:54.526"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211014 19:58:54.526" endtime="20211014 19:58:54.526"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211014 19:58:54.527" endtime="20211014 19:58:54.527"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211014 19:58:54.527" endtime="20211014 19:58:54.527"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211014 19:58:54.527" endtime="20211014 19:58:54.527"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211014 19:58:54.527" endtime="20211014 19:58:54.528"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211014 19:58:54.528" endtime="20211014 19:58:54.528"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211014 19:58:54.528" endtime="20211014 19:58:54.528"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211014 19:58:54.528" endtime="20211014 19:58:54.528"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211014 19:58:54.528" endtime="20211014 19:58:54.529"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211014 19:58:54.529" endtime="20211014 19:58:54.529"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211014 19:58:54.529" endtime="20211014 19:58:54.529"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211014 19:58:54.529" endtime="20211014 19:58:54.529"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211014 19:58:54.529" endtime="20211014 19:58:54.530"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211014 19:58:54.530" endtime="20211014 19:58:54.530"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211014 19:58:54.531" endtime="20211014 19:58:54.531"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211014 19:58:54.531" endtime="20211014 19:58:54.531"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211014 19:58:54.531" endtime="20211014 19:58:54.531"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211014 19:58:54.531" endtime="20211014 19:58:54.532"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211014 19:58:54.532" endtime="20211014 19:58:54.532"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211014 19:58:54.532" endtime="20211014 19:58:54.532"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211014 19:58:54.533" endtime="20211014 19:58:54.533"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211014 19:58:54.533" endtime="20211014 19:58:54.533"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211014 19:58:54.533" endtime="20211014 19:58:54.534"/>
</kw>
<status status="FAIL" starttime="20211014 19:55:55.167" endtime="20211014 19:58:54.537"/>
</kw>
<status status="FAIL" starttime="20211014 19:55:55.167" endtime="20211014 19:58:54.537"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211014 19:58:54.538" endtime="20211014 19:58:54.538"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211014 19:58:54.538" endtime="20211014 19:58:54.538"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211014 19:58:54.539" endtime="20211014 19:58:54.539"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211014 19:58:54.539" endtime="20211014 19:58:54.539"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211014 19:58:54.539" endtime="20211014 19:58:54.539"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211014 19:58:54.539" endtime="20211014 19:58:54.540"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211014 19:58:54.540" endtime="20211014 19:58:54.540"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211014 19:58:54.541" endtime="20211014 19:58:54.541"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211014 19:58:54.542" endtime="20211014 19:58:54.542"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211014 19:58:54.543" endtime="20211014 19:58:54.543"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211014 19:58:54.544" endtime="20211014 19:58:54.544"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211014 19:58:54.545" endtime="20211014 19:58:54.545"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211014 19:58:54.545" endtime="20211014 19:58:54.545"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211014 19:58:54.545" endtime="20211014 19:58:54.545"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211014 19:58:54.545" endtime="20211014 19:58:54.546"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211014 19:58:54.546" endtime="20211014 19:58:54.546"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211014 19:58:54.546" endtime="20211014 19:58:54.546"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211014 19:58:54.547" endtime="20211014 19:58:54.547"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211014 19:58:54.547" endtime="20211014 19:58:54.547"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211014 19:58:54.547" endtime="20211014 19:58:54.548"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211014 19:58:54.548" endtime="20211014 19:58:54.548"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211014 19:58:54.549" endtime="20211014 19:58:54.549"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211014 19:58:54.549" endtime="20211014 19:58:54.549"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211014 19:58:54.549" endtime="20211014 19:58:54.550"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211014 19:58:54.550" endtime="20211014 19:58:54.550"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211014 19:58:54.551" endtime="20211014 19:58:54.551"/>
</kw>
<status status="FAIL" starttime="20211014 19:53:54.588" endtime="20211014 19:58:54.551"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211014 19:53:54.521" endtime="20211014 19:58:54.552">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20211014 19:33:28.175" endtime="20211014 19:58:54.559"/>
</suite>
<status status="FAIL" starttime="20211014 19:08:23.156" endtime="20211014 19:58:54.574"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:08:17.341" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:08:17.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:08:17.350" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211014 19:08:17.338" endtime="20211014 19:08:17.350"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:08:17.352" level="INFO">scm</msg>
<status status="PASS" starttime="20211014 19:08:17.351" endtime="20211014 19:08:17.352"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:08:17.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:08:17.352" endtime="20211014 19:08:17.353"/>
</kw>
<status status="PASS" starttime="20211014 19:08:17.337" endtime="20211014 19:08:17.353"/>
</kw>
<msg timestamp="20211014 19:08:17.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:08:17.337" endtime="20211014 19:08:17.353"/>
</kw>
<msg timestamp="20211014 19:08:17.354" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211014 19:08:17.336" endtime="20211014 19:08:17.354"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211014 19:08:17.354" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211014 19:08:17.354" endtime="20211014 19:08:17.355"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211014 19:08:17.359" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211014 19:08:17.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20211014 19:08:17.368" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211014 19:08:17.357" endtime="20211014 19:08:17.368"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211014 19:08:17.370" level="INFO"/>
<status status="PASS" starttime="20211014 19:08:17.369" endtime="20211014 19:08:17.370"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211014 19:08:17.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211014 19:08:17.370" endtime="20211014 19:08:17.371"/>
</kw>
<status status="PASS" starttime="20211014 19:08:17.356" endtime="20211014 19:08:17.371"/>
</kw>
<msg timestamp="20211014 19:08:17.371" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211014 19:08:17.356" endtime="20211014 19:08:17.372"/>
</kw>
<status status="PASS" starttime="20211014 19:08:17.355" endtime="20211014 19:08:17.372"/>
</kw>
<status status="PASS" starttime="20211014 19:08:17.355" endtime="20211014 19:08:17.372"/>
</kw>
<status status="PASS" starttime="20211014 19:08:17.335" endtime="20211014 19:08:17.372"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211014 19:08:17.334" endtime="20211014 19:08:17.373"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20211014 19:08:17.266" endtime="20211014 19:08:17.374"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="3031526"/>
</suite>
<statistics>
<total>
<stat pass="20" fail="10" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="20" fail="10" skip="0" id="s1" name="ozonesecure">ozonesecure</stat>
<stat pass="19" fail="10" skip="0" id="s1-s1" name="Basic">ozonesecure.Basic</stat>
<stat pass="1" fail="1" skip="0" id="s1-s1-s1" name="Basic">ozonesecure.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Getconf">ozonesecure.Basic.Getconf</stat>
<stat pass="10" fail="5" skip="0" id="s1-s1-s3" name="Links">ozonesecure.Basic.Links</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat pass="4" fail="3" skip="0" id="s1-s1-s5" name="Ozone-Shell">ozonesecure.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
