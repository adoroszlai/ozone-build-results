<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1.1 (Python 3.6.9 on linux)" generated="20211009 01:55:51.352" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:04:47.665" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:04:47.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:04:47.669" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211009 01:04:47.661" endtime="20211009 01:04:47.669"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:04:47.670" level="INFO">scm</msg>
<status status="PASS" starttime="20211009 01:04:47.669" endtime="20211009 01:04:47.670"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:04:47.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:04:47.670" endtime="20211009 01:04:47.671"/>
</kw>
<status status="PASS" starttime="20211009 01:04:47.660" endtime="20211009 01:04:47.671"/>
</kw>
<msg timestamp="20211009 01:04:47.671" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:04:47.660" endtime="20211009 01:04:47.671"/>
</kw>
<msg timestamp="20211009 01:04:47.672" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20211009 01:04:47.659" endtime="20211009 01:04:47.672"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:04:47.677" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:04:47.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:04:47.685" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:04:47.674" endtime="20211009 01:04:47.685"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:04:47.686" level="INFO"/>
<status status="PASS" starttime="20211009 01:04:47.685" endtime="20211009 01:04:47.686"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:04:47.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:04:47.686" endtime="20211009 01:04:47.687"/>
</kw>
<status status="PASS" starttime="20211009 01:04:47.674" endtime="20211009 01:04:47.688"/>
</kw>
<msg timestamp="20211009 01:04:47.688" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:04:47.673" endtime="20211009 01:04:47.688"/>
</kw>
<status status="PASS" starttime="20211009 01:04:47.673" endtime="20211009 01:04:47.688"/>
</kw>
<status status="PASS" starttime="20211009 01:04:47.672" endtime="20211009 01:04:47.688"/>
</kw>
<status status="PASS" starttime="20211009 01:04:47.659" endtime="20211009 01:04:47.689"/>
</kw>
<status status="PASS" starttime="20211009 01:04:47.658" endtime="20211009 01:04:47.689"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:04:47.693" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:04:47.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:04:47.850" level="INFO">${output} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20211009 01:04:47.691" endtime="20211009 01:04:47.850"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:04:47.851" level="INFO">HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 483

HTTP/1.1 200 OK
Date: Sat, 09 Oct 2021 01:04:47 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC33HbytjXflUrtnFG6jOYvuw5YYExQT9xdCHIz6omO81OKG+btT2O1dkS7jEjcoq4V3Kb/SL9KSwFOF8ZRkmMzq1I
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1633777487838&amp;s=vFoprVx2ekOIhvz+KtL6IVccE42ddKuFo+Md4r24/U0="; Path=/; HttpOnly
Last-Modified: Sat, 09 Oct 2021 00:49:42 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20211009 01:04:47.851" endtime="20211009 01:04:47.852"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:04:47.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:04:47.852" endtime="20211009 01:04:47.852"/>
</kw>
<status status="PASS" starttime="20211009 01:04:47.690" endtime="20211009 01:04:47.853"/>
</kw>
<msg timestamp="20211009 01:04:47.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:04:47.690" endtime="20211009 01:04:47.853"/>
</kw>
<msg timestamp="20211009 01:04:47.854" level="INFO">${result} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20211009 01:04:47.689" endtime="20211009 01:04:47.854"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211009 01:04:47.854" endtime="20211009 01:04:47.855"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211009 01:04:47.657" endtime="20211009 01:04:47.855"/>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:04:47.862" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:04:47.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:04:47.868" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211009 01:04:47.860" endtime="20211009 01:04:47.868"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:04:47.869" level="INFO">scm</msg>
<status status="PASS" starttime="20211009 01:04:47.868" endtime="20211009 01:04:47.869"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:04:47.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:04:47.870" endtime="20211009 01:04:47.870"/>
</kw>
<status status="PASS" starttime="20211009 01:04:47.858" endtime="20211009 01:04:47.871"/>
</kw>
<msg timestamp="20211009 01:04:47.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:04:47.858" endtime="20211009 01:04:47.871"/>
</kw>
<msg timestamp="20211009 01:04:47.871" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211009 01:04:47.857" endtime="20211009 01:04:47.871"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211009 01:04:47.874" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211009 01:04:47.872" endtime="20211009 01:04:47.874"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:04:47.878" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:04:47.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:04:47.887" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:04:47.876" endtime="20211009 01:04:47.887"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:04:47.889" level="INFO"/>
<status status="PASS" starttime="20211009 01:04:47.888" endtime="20211009 01:04:47.889"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:04:47.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:04:47.889" endtime="20211009 01:04:47.890"/>
</kw>
<status status="PASS" starttime="20211009 01:04:47.876" endtime="20211009 01:04:47.890"/>
</kw>
<msg timestamp="20211009 01:04:47.890" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:04:47.875" endtime="20211009 01:04:47.890"/>
</kw>
<status status="PASS" starttime="20211009 01:04:47.874" endtime="20211009 01:04:47.891"/>
</kw>
<status status="PASS" starttime="20211009 01:04:47.874" endtime="20211009 01:04:47.891"/>
</kw>
<status status="PASS" starttime="20211009 01:04:47.857" endtime="20211009 01:04:47.891"/>
</kw>
<status status="PASS" starttime="20211009 01:04:47.856" endtime="20211009 01:04:47.891"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:04:47.895" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:09:47.856" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211009 01:04:47.893" endtime="20211009 01:09:47.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211009 01:09:47.857" endtime="20211009 01:09:47.857"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211009 01:09:47.857" endtime="20211009 01:09:47.858"/>
</kw>
<status status="FAIL" starttime="20211009 01:04:47.892" endtime="20211009 01:09:47.858"/>
</kw>
<msg timestamp="20211009 01:09:47.858" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211009 01:04:47.892" endtime="20211009 01:09:47.858"/>
</kw>
<status status="FAIL" starttime="20211009 01:04:47.891" endtime="20211009 01:09:47.859"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20211009 01:09:47.859" endtime="20211009 01:09:47.859"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Status: Success</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211009 01:09:47.859" endtime="20211009 01:09:47.859"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211009 01:04:47.855" endtime="20211009 01:09:47.860">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" starttime="20211009 01:04:47.624" endtime="20211009 01:09:47.862"/>
</suite>
<suite id="s1-s1-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s1-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:09:47.878" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:09:50.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:09:50.680" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211009 01:09:47.875" endtime="20211009 01:09:50.680"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:09:50.682" level="INFO">om</msg>
<status status="PASS" starttime="20211009 01:09:50.681" endtime="20211009 01:09:50.682"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:09:50.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:09:50.682" endtime="20211009 01:09:50.683"/>
</kw>
<status status="PASS" starttime="20211009 01:09:47.874" endtime="20211009 01:09:50.684"/>
</kw>
<msg timestamp="20211009 01:09:50.684" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:09:47.874" endtime="20211009 01:09:50.684"/>
</kw>
<msg timestamp="20211009 01:09:50.684" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211009 01:09:47.873" endtime="20211009 01:09:50.684"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211009 01:09:50.684" endtime="20211009 01:09:50.685"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:09:50.689" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:09:52.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:09:52.384" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211009 01:09:50.687" endtime="20211009 01:09:52.384"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:09:52.385" level="INFO">om</msg>
<status status="PASS" starttime="20211009 01:09:52.384" endtime="20211009 01:09:52.386"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:09:52.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:09:52.386" endtime="20211009 01:09:52.386"/>
</kw>
<status status="PASS" starttime="20211009 01:09:50.686" endtime="20211009 01:09:52.387"/>
</kw>
<msg timestamp="20211009 01:09:52.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:09:50.686" endtime="20211009 01:09:52.387"/>
</kw>
<msg timestamp="20211009 01:09:52.387" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211009 01:09:50.685" endtime="20211009 01:09:52.388"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211009 01:09:52.388" endtime="20211009 01:09:52.388"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211009 01:09:47.872" endtime="20211009 01:09:52.388"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:09:52.395" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:09:55.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:09:55.387" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211009 01:09:52.392" endtime="20211009 01:09:55.387"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:09:55.389" level="INFO">scm</msg>
<status status="PASS" starttime="20211009 01:09:55.388" endtime="20211009 01:09:55.389"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:09:55.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:09:55.389" endtime="20211009 01:09:55.390"/>
</kw>
<status status="PASS" starttime="20211009 01:09:52.392" endtime="20211009 01:09:55.390"/>
</kw>
<msg timestamp="20211009 01:09:55.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:09:52.391" endtime="20211009 01:09:55.390"/>
</kw>
<msg timestamp="20211009 01:09:55.391" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20211009 01:09:52.391" endtime="20211009 01:09:55.391"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211009 01:09:55.391" endtime="20211009 01:09:55.393"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:09:55.399" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:09:59.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:09:59.087" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211009 01:09:55.396" endtime="20211009 01:09:59.087"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:09:59.089" level="INFO">scm</msg>
<status status="PASS" starttime="20211009 01:09:59.088" endtime="20211009 01:09:59.089"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:09:59.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:09:59.089" endtime="20211009 01:09:59.090"/>
</kw>
<status status="PASS" starttime="20211009 01:09:55.395" endtime="20211009 01:09:59.090"/>
</kw>
<msg timestamp="20211009 01:09:59.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:09:55.394" endtime="20211009 01:09:59.091"/>
</kw>
<msg timestamp="20211009 01:09:59.091" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20211009 01:09:55.393" endtime="20211009 01:09:59.091"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211009 01:09:59.091" endtime="20211009 01:09:59.092"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211009 01:09:52.390" endtime="20211009 01:09:59.093"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:09:59.101" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:10:01.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:10:01.847" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211009 01:09:59.098" endtime="20211009 01:10:01.847"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:10:01.849" level="INFO">om</msg>
<status status="PASS" starttime="20211009 01:10:01.848" endtime="20211009 01:10:01.849"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:10:01.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:10:01.849" endtime="20211009 01:10:01.850"/>
</kw>
<status status="PASS" starttime="20211009 01:09:59.097" endtime="20211009 01:10:01.850"/>
</kw>
<msg timestamp="20211009 01:10:01.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:09:59.097" endtime="20211009 01:10:01.851"/>
</kw>
<msg timestamp="20211009 01:10:01.851" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211009 01:09:59.095" endtime="20211009 01:10:01.851"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211009 01:10:01.851" endtime="20211009 01:10:01.852"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211009 01:10:01.852" endtime="20211009 01:10:01.852"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:10:01.858" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:10:04.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:10:04.837" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20211009 01:10:01.855" endtime="20211009 01:10:04.837"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:10:04.839" level="INFO">om</msg>
<status status="PASS" starttime="20211009 01:10:04.838" endtime="20211009 01:10:04.839"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:10:04.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:10:04.839" endtime="20211009 01:10:04.840"/>
</kw>
<status status="PASS" starttime="20211009 01:10:01.854" endtime="20211009 01:10:04.841"/>
</kw>
<msg timestamp="20211009 01:10:04.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:10:01.853" endtime="20211009 01:10:04.842"/>
</kw>
<msg timestamp="20211009 01:10:04.842" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20211009 01:10:01.852" endtime="20211009 01:10:04.842"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211009 01:10:04.843" endtime="20211009 01:10:04.845"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211009 01:10:04.845" endtime="20211009 01:10:04.846"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211009 01:09:59.094" endtime="20211009 01:10:04.846"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:10:04.852" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:10:07.927" level="INFO">${rc} = 255</msg>
<msg timestamp="20211009 01:10:07.927" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211009 01:10:04.849" endtime="20211009 01:10:07.927"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:10:07.929" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211009 01:10:07.928" endtime="20211009 01:10:07.929"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:10:07.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:10:07.929" endtime="20211009 01:10:07.930"/>
</kw>
<msg timestamp="20211009 01:10:07.931" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211009 01:10:04.848" endtime="20211009 01:10:07.931"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211009 01:10:07.931" endtime="20211009 01:10:07.931"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:10:07.935" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:10:10.222" level="INFO">${rc} = 255</msg>
<msg timestamp="20211009 01:10:10.223" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211009 01:10:07.932" endtime="20211009 01:10:10.223"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:10:10.224" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211009 01:10:10.223" endtime="20211009 01:10:10.224"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:10:10.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:10:10.224" endtime="20211009 01:10:10.225"/>
</kw>
<msg timestamp="20211009 01:10:10.226" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20211009 01:10:07.932" endtime="20211009 01:10:10.226"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211009 01:10:10.226" endtime="20211009 01:10:10.226"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211009 01:10:04.847" endtime="20211009 01:10:10.227"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20211009 01:09:47.865" endtime="20211009 01:10:10.228"/>
</suite>
<suite id="s1-s1-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211009 01:10:10.245" level="INFO">${random} = 95249</msg>
<status status="PASS" starttime="20211009 01:10:10.245" endtime="20211009 01:10:10.245"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211009 01:10:10.247" level="INFO">${source} = 95249-source</msg>
<status status="PASS" starttime="20211009 01:10:10.245" endtime="20211009 01:10:10.248"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211009 01:10:10.249" level="INFO">${target} = 95249-target</msg>
<status status="PASS" starttime="20211009 01:10:10.248" endtime="20211009 01:10:10.249"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:10:10.255" level="INFO">Running command 'ozone sh volume create 95249-source 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:10:17.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:10:17.167" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:10:10.251" endtime="20211009 01:10:17.167"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:10:17.170" level="INFO"/>
<status status="PASS" starttime="20211009 01:10:17.168" endtime="20211009 01:10:17.170"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:10:17.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:10:17.170" endtime="20211009 01:10:17.172"/>
</kw>
<status status="PASS" starttime="20211009 01:10:10.250" endtime="20211009 01:10:17.173"/>
</kw>
<msg timestamp="20211009 01:10:17.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:10:10.250" endtime="20211009 01:10:17.174"/>
</kw>
<status status="PASS" starttime="20211009 01:10:10.250" endtime="20211009 01:10:17.174"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:10:17.180" level="INFO">Running command 'ozone sh volume create 95249-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:10:25.321" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:10:25.321" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:10:17.177" endtime="20211009 01:10:25.321"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:10:25.323" level="INFO"/>
<status status="PASS" starttime="20211009 01:10:25.322" endtime="20211009 01:10:25.323"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:10:25.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:10:25.324" endtime="20211009 01:10:25.325"/>
</kw>
<status status="PASS" starttime="20211009 01:10:17.177" endtime="20211009 01:10:25.326"/>
</kw>
<msg timestamp="20211009 01:10:25.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:10:17.176" endtime="20211009 01:10:25.326"/>
</kw>
<status status="PASS" starttime="20211009 01:10:17.175" endtime="20211009 01:10:25.327"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:10:25.337" level="INFO">Running command 'ozone sh bucket create 95249-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:10:34.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:10:34.353" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:10:25.334" endtime="20211009 01:10:34.353"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:10:34.355" level="INFO"/>
<status status="PASS" starttime="20211009 01:10:34.354" endtime="20211009 01:10:34.355"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:10:34.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:10:34.355" endtime="20211009 01:10:34.356"/>
</kw>
<status status="PASS" starttime="20211009 01:10:25.333" endtime="20211009 01:10:34.356"/>
</kw>
<msg timestamp="20211009 01:10:34.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:10:25.330" endtime="20211009 01:10:34.357"/>
</kw>
<status status="PASS" starttime="20211009 01:10:25.329" endtime="20211009 01:10:34.357"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:10:34.363" level="INFO">Running command 'ozone sh key put 95249-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:13:46.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:13:46.426" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:10:34.360" endtime="20211009 01:13:46.426"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:13:46.427" level="INFO"/>
<status status="PASS" starttime="20211009 01:13:46.426" endtime="20211009 01:13:46.427"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:13:46.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:13:46.427" endtime="20211009 01:13:46.428"/>
</kw>
<status status="PASS" starttime="20211009 01:10:34.359" endtime="20211009 01:13:46.428"/>
</kw>
<msg timestamp="20211009 01:13:46.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:10:34.358" endtime="20211009 01:13:46.429"/>
</kw>
<status status="PASS" starttime="20211009 01:10:34.357" endtime="20211009 01:13:46.429"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:13:46.433" level="INFO">Running command 'ozone sh bucket create 95249-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:13:54.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:13:54.863" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:13:46.431" endtime="20211009 01:13:54.863"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:13:54.864" level="INFO"/>
<status status="PASS" starttime="20211009 01:13:54.864" endtime="20211009 01:13:54.864"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:13:54.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:13:54.865" endtime="20211009 01:13:54.865"/>
</kw>
<status status="PASS" starttime="20211009 01:13:46.430" endtime="20211009 01:13:54.866"/>
</kw>
<msg timestamp="20211009 01:13:54.866" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:13:46.430" endtime="20211009 01:13:54.866"/>
</kw>
<status status="PASS" starttime="20211009 01:13:46.429" endtime="20211009 01:13:54.866"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:13:54.871" level="INFO">Running command 'ozone sh bucket link 95249-source/readable-bucket 95249-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:14:03.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:14:03.569" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:13:54.868" endtime="20211009 01:14:03.570"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:14:03.572" level="INFO"/>
<status status="PASS" starttime="20211009 01:14:03.571" endtime="20211009 01:14:03.572"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:14:03.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:14:03.572" endtime="20211009 01:14:03.573"/>
</kw>
<status status="PASS" starttime="20211009 01:13:54.867" endtime="20211009 01:14:03.574"/>
</kw>
<msg timestamp="20211009 01:14:03.574" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:13:54.867" endtime="20211009 01:14:03.575"/>
</kw>
<status status="PASS" starttime="20211009 01:13:54.866" endtime="20211009 01:14:03.575"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:14:03.587" level="INFO">Running command 'ozone sh bucket link 95249-source/readable-bucket 95249-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:14:12.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:14:12.431" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:14:03.584" endtime="20211009 01:14:12.431"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:14:12.432" level="INFO"/>
<status status="PASS" starttime="20211009 01:14:12.431" endtime="20211009 01:14:12.432"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:14:12.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:14:12.433" endtime="20211009 01:14:12.434"/>
</kw>
<status status="PASS" starttime="20211009 01:14:03.582" endtime="20211009 01:14:12.435"/>
</kw>
<msg timestamp="20211009 01:14:12.435" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:14:03.582" endtime="20211009 01:14:12.435"/>
</kw>
<status status="PASS" starttime="20211009 01:14:03.580" endtime="20211009 01:14:12.435"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:14:12.443" level="INFO">Running command 'ozone sh bucket link 95249-source/unreadable-bucket 95249-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:14:20.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:14:20.701" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:14:12.440" endtime="20211009 01:14:20.701"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:14:20.702" level="INFO"/>
<status status="PASS" starttime="20211009 01:14:20.701" endtime="20211009 01:14:20.702"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:14:20.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:14:20.702" endtime="20211009 01:14:20.703"/>
</kw>
<status status="PASS" starttime="20211009 01:14:12.437" endtime="20211009 01:14:20.703"/>
</kw>
<msg timestamp="20211009 01:14:20.703" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:14:12.436" endtime="20211009 01:14:20.704"/>
</kw>
<status status="PASS" starttime="20211009 01:14:12.436" endtime="20211009 01:14:20.704"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:14:20.711" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 95249-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:14:28.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:14:28.791" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211009 01:14:20.706" endtime="20211009 01:14:28.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:14:28.795" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211009 01:14:28.793" endtime="20211009 01:14:28.795"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:14:28.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:14:28.795" endtime="20211009 01:14:28.797"/>
</kw>
<status status="PASS" starttime="20211009 01:14:20.705" endtime="20211009 01:14:28.798"/>
</kw>
<msg timestamp="20211009 01:14:28.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:14:20.705" endtime="20211009 01:14:28.799"/>
</kw>
<status status="PASS" starttime="20211009 01:14:20.704" endtime="20211009 01:14:28.800"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:14:28.808" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 95249-source 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:14:36.926" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:14:36.926" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211009 01:14:28.804" endtime="20211009 01:14:36.926"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:14:36.927" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211009 01:14:36.927" endtime="20211009 01:14:36.927"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:14:36.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:14:36.928" endtime="20211009 01:14:36.929"/>
</kw>
<status status="PASS" starttime="20211009 01:14:28.802" endtime="20211009 01:14:36.930"/>
</kw>
<msg timestamp="20211009 01:14:36.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:14:28.801" endtime="20211009 01:14:36.930"/>
</kw>
<status status="PASS" starttime="20211009 01:14:28.800" endtime="20211009 01:14:36.931"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:14:36.940" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 95249-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:14:45.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:14:45.086" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211009 01:14:36.936" endtime="20211009 01:14:45.086"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:14:45.089" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211009 01:14:45.088" endtime="20211009 01:14:45.089"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:14:45.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:14:45.089" endtime="20211009 01:14:45.091"/>
</kw>
<status status="PASS" starttime="20211009 01:14:36.935" endtime="20211009 01:14:45.092"/>
</kw>
<msg timestamp="20211009 01:14:45.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:14:36.934" endtime="20211009 01:14:45.092"/>
</kw>
<status status="PASS" starttime="20211009 01:14:36.931" endtime="20211009 01:14:45.093"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:14:45.100" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 95249-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:14:52.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:14:52.890" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211009 01:14:45.097" endtime="20211009 01:14:52.890"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:14:52.891" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211009 01:14:52.891" endtime="20211009 01:14:52.892"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:14:52.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:14:52.892" endtime="20211009 01:14:52.892"/>
</kw>
<status status="PASS" starttime="20211009 01:14:45.095" endtime="20211009 01:14:52.893"/>
</kw>
<msg timestamp="20211009 01:14:52.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:14:45.095" endtime="20211009 01:14:52.893"/>
</kw>
<status status="PASS" starttime="20211009 01:14:45.093" endtime="20211009 01:14:52.893"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:14:52.901" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 95249-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:14:58.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:14:58.955" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211009 01:14:52.897" endtime="20211009 01:14:58.955"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:14:58.959" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211009 01:14:58.957" endtime="20211009 01:14:58.959"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:14:58.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:14:58.959" endtime="20211009 01:14:58.960"/>
</kw>
<status status="PASS" starttime="20211009 01:14:52.896" endtime="20211009 01:14:58.961"/>
</kw>
<msg timestamp="20211009 01:14:58.962" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:14:52.895" endtime="20211009 01:14:58.962"/>
</kw>
<status status="PASS" starttime="20211009 01:14:52.894" endtime="20211009 01:14:58.962"/>
</kw>
<status status="PASS" starttime="20211009 01:10:25.328" endtime="20211009 01:14:58.963"/>
</kw>
<status status="PASS" starttime="20211009 01:10:25.327" endtime="20211009 01:14:58.963"/>
</kw>
<status status="PASS" starttime="20211009 01:10:10.244" endtime="20211009 01:14:58.964"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:14:58.975" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:14:58.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:14:58.980" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211009 01:14:58.972" endtime="20211009 01:14:58.981"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:14:58.983" level="INFO">scm</msg>
<status status="PASS" starttime="20211009 01:14:58.981" endtime="20211009 01:14:58.983"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:14:58.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:14:58.983" endtime="20211009 01:14:58.986"/>
</kw>
<status status="PASS" starttime="20211009 01:14:58.971" endtime="20211009 01:14:58.987"/>
</kw>
<msg timestamp="20211009 01:14:58.987" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:14:58.970" endtime="20211009 01:14:58.987"/>
</kw>
<msg timestamp="20211009 01:14:58.988" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211009 01:14:58.969" endtime="20211009 01:14:58.988"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211009 01:14:58.991" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211009 01:14:58.988" endtime="20211009 01:14:58.993"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:14:59.001" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:14:59.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:14:59.216" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:14:58.997" endtime="20211009 01:14:59.216"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:14:59.217" level="INFO"/>
<status status="PASS" starttime="20211009 01:14:59.216" endtime="20211009 01:14:59.217"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:14:59.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:14:59.217" endtime="20211009 01:14:59.218"/>
</kw>
<status status="PASS" starttime="20211009 01:14:58.996" endtime="20211009 01:14:59.219"/>
</kw>
<msg timestamp="20211009 01:14:59.219" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:14:58.995" endtime="20211009 01:14:59.219"/>
</kw>
<status status="PASS" starttime="20211009 01:14:58.994" endtime="20211009 01:14:59.219"/>
</kw>
<status status="PASS" starttime="20211009 01:14:58.993" endtime="20211009 01:14:59.220"/>
</kw>
<status status="PASS" starttime="20211009 01:14:58.967" endtime="20211009 01:14:59.220"/>
</kw>
<status status="PASS" starttime="20211009 01:14:58.966" endtime="20211009 01:14:59.220"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:14:59.224" level="INFO">Running command 'ozone sh bucket link 95249-source/no-such-bucket 95249-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:15:07.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:15:07.258" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:14:59.222" endtime="20211009 01:15:07.258"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:15:07.260" level="INFO"/>
<status status="PASS" starttime="20211009 01:15:07.259" endtime="20211009 01:15:07.260"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:15:07.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:15:07.260" endtime="20211009 01:15:07.261"/>
</kw>
<status status="PASS" starttime="20211009 01:14:59.221" endtime="20211009 01:15:07.262"/>
</kw>
<msg timestamp="20211009 01:15:07.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:14:59.221" endtime="20211009 01:15:07.262"/>
</kw>
<status status="PASS" starttime="20211009 01:14:59.220" endtime="20211009 01:15:07.263"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:15:07.267" level="INFO">Running command 'ozone sh key list 95249-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:15:15.000" level="INFO">${rc} = 255</msg>
<msg timestamp="20211009 01:15:15.000" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20211009 01:15:07.264" endtime="20211009 01:15:15.000"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:15:15.002" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20211009 01:15:15.001" endtime="20211009 01:15:15.002"/>
</kw>
<msg timestamp="20211009 01:15:15.002" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20211009 01:15:07.263" endtime="20211009 01:15:15.002"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211009 01:15:15.003" endtime="20211009 01:15:15.003"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211009 01:14:58.964" endtime="20211009 01:15:15.004"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:15:15.014" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:15:15.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:15:15.020" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211009 01:15:15.011" endtime="20211009 01:15:15.020"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:15:15.022" level="INFO">scm</msg>
<status status="PASS" starttime="20211009 01:15:15.021" endtime="20211009 01:15:15.022"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:15:15.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:15:15.022" endtime="20211009 01:15:15.024"/>
</kw>
<status status="PASS" starttime="20211009 01:15:15.010" endtime="20211009 01:15:15.024"/>
</kw>
<msg timestamp="20211009 01:15:15.024" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:15:15.010" endtime="20211009 01:15:15.024"/>
</kw>
<msg timestamp="20211009 01:15:15.025" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211009 01:15:15.009" endtime="20211009 01:15:15.025"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211009 01:15:15.026" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211009 01:15:15.025" endtime="20211009 01:15:15.026"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:15:15.032" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:15:15.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:15:15.044" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:15:15.030" endtime="20211009 01:15:15.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:15:15.047" level="INFO"/>
<status status="PASS" starttime="20211009 01:15:15.045" endtime="20211009 01:15:15.048"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:15:15.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:15:15.048" endtime="20211009 01:15:15.049"/>
</kw>
<status status="PASS" starttime="20211009 01:15:15.029" endtime="20211009 01:15:15.050"/>
</kw>
<msg timestamp="20211009 01:15:15.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:15:15.029" endtime="20211009 01:15:15.052"/>
</kw>
<status status="PASS" starttime="20211009 01:15:15.027" endtime="20211009 01:15:15.052"/>
</kw>
<status status="PASS" starttime="20211009 01:15:15.026" endtime="20211009 01:15:15.052"/>
</kw>
<status status="PASS" starttime="20211009 01:15:15.008" endtime="20211009 01:15:15.053"/>
</kw>
<status status="PASS" starttime="20211009 01:15:15.007" endtime="20211009 01:15:15.053"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:15:15.058" level="INFO">Running command 'ozone sh bucket link 95249-source/bucket1 95249-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:15:22.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:15:22.214" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:15:15.055" endtime="20211009 01:15:22.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:15:22.215" level="INFO"/>
<status status="PASS" starttime="20211009 01:15:22.214" endtime="20211009 01:15:22.215"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:15:22.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:15:22.215" endtime="20211009 01:15:22.216"/>
</kw>
<status status="PASS" starttime="20211009 01:15:15.054" endtime="20211009 01:15:22.217"/>
</kw>
<msg timestamp="20211009 01:15:22.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:15:15.054" endtime="20211009 01:15:22.217"/>
</kw>
<status status="PASS" starttime="20211009 01:15:15.053" endtime="20211009 01:15:22.217"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:15:22.222" level="INFO">Running command 'ozone sh bucket create 95249-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:15:30.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:15:30.844" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:15:22.219" endtime="20211009 01:15:30.845"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:15:30.848" level="INFO"/>
<status status="PASS" starttime="20211009 01:15:30.847" endtime="20211009 01:15:30.848"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:15:30.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:15:30.849" endtime="20211009 01:15:30.850"/>
</kw>
<status status="PASS" starttime="20211009 01:15:22.219" endtime="20211009 01:15:30.851"/>
</kw>
<msg timestamp="20211009 01:15:30.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:15:22.218" endtime="20211009 01:15:30.851"/>
</kw>
<status status="PASS" starttime="20211009 01:15:22.218" endtime="20211009 01:15:30.852"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:15:30.858" level="INFO">Running command 'ozone sh key put 95249-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:17:15.009" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20211009 01:15:30.855" endtime="20211009 01:17:15.009"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211009 01:17:15.010" endtime="20211009 01:17:15.010"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211009 01:17:15.010" endtime="20211009 01:17:15.010"/>
</kw>
<status status="FAIL" starttime="20211009 01:15:30.854" endtime="20211009 01:17:15.011"/>
</kw>
<msg timestamp="20211009 01:17:15.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211009 01:15:30.854" endtime="20211009 01:17:15.011"/>
</kw>
<status status="FAIL" starttime="20211009 01:15:30.852" endtime="20211009 01:17:15.011"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<status status="NOT RUN" starttime="20211009 01:17:15.012" endtime="20211009 01:17:15.012"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211009 01:15:15.005" endtime="20211009 01:17:15.012">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:17:15.020" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:17:15.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:17:15.027" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211009 01:17:15.018" endtime="20211009 01:17:15.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:17:15.030" level="INFO">scm</msg>
<status status="PASS" starttime="20211009 01:17:15.028" endtime="20211009 01:17:15.030"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:17:15.032" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:17:15.030" endtime="20211009 01:17:15.032"/>
</kw>
<status status="PASS" starttime="20211009 01:17:15.017" endtime="20211009 01:17:15.033"/>
</kw>
<msg timestamp="20211009 01:17:15.033" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:17:15.017" endtime="20211009 01:17:15.034"/>
</kw>
<msg timestamp="20211009 01:17:15.034" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211009 01:17:15.016" endtime="20211009 01:17:15.034"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211009 01:17:15.036" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211009 01:17:15.035" endtime="20211009 01:17:15.036"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:17:15.043" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:17:15.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:17:15.061" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:17:15.041" endtime="20211009 01:17:15.061"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:17:15.062" level="INFO"/>
<status status="PASS" starttime="20211009 01:17:15.061" endtime="20211009 01:17:15.062"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:17:15.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:17:15.063" endtime="20211009 01:17:15.069"/>
</kw>
<status status="PASS" starttime="20211009 01:17:15.039" endtime="20211009 01:17:15.070"/>
</kw>
<msg timestamp="20211009 01:17:15.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:17:15.039" endtime="20211009 01:17:15.070"/>
</kw>
<status status="PASS" starttime="20211009 01:17:15.037" endtime="20211009 01:17:15.070"/>
</kw>
<status status="PASS" starttime="20211009 01:17:15.036" endtime="20211009 01:17:15.070"/>
</kw>
<status status="PASS" starttime="20211009 01:17:15.015" endtime="20211009 01:17:15.071"/>
</kw>
<status status="PASS" starttime="20211009 01:17:15.015" endtime="20211009 01:17:15.071"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:17:15.076" level="INFO">Running command 'ozone sh key put 95249-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:19:15.014" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20211009 01:17:15.073" endtime="20211009 01:19:15.015"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211009 01:19:15.016" endtime="20211009 01:19:15.016"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211009 01:19:15.016" endtime="20211009 01:19:15.016"/>
</kw>
<status status="FAIL" starttime="20211009 01:17:15.072" endtime="20211009 01:19:15.017"/>
</kw>
<msg timestamp="20211009 01:19:15.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211009 01:17:15.072" endtime="20211009 01:19:15.017"/>
</kw>
<status status="FAIL" starttime="20211009 01:17:15.071" endtime="20211009 01:19:15.017"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211009 01:19:15.018" endtime="20211009 01:19:15.018"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211009 01:17:15.014" endtime="20211009 01:19:15.018">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:19:15.028" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:19:15.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:19:15.032" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211009 01:19:15.025" endtime="20211009 01:19:15.032"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:19:15.034" level="INFO">scm</msg>
<status status="PASS" starttime="20211009 01:19:15.033" endtime="20211009 01:19:15.034"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:19:15.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:19:15.035" endtime="20211009 01:19:15.036"/>
</kw>
<status status="PASS" starttime="20211009 01:19:15.024" endtime="20211009 01:19:15.036"/>
</kw>
<msg timestamp="20211009 01:19:15.036" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:19:15.023" endtime="20211009 01:19:15.036"/>
</kw>
<msg timestamp="20211009 01:19:15.037" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211009 01:19:15.022" endtime="20211009 01:19:15.037"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211009 01:19:15.038" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211009 01:19:15.037" endtime="20211009 01:19:15.038"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:19:15.044" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:19:15.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:19:15.066" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:19:15.041" endtime="20211009 01:19:15.066"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:19:15.068" level="INFO"/>
<status status="PASS" starttime="20211009 01:19:15.067" endtime="20211009 01:19:15.068"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:19:15.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:19:15.068" endtime="20211009 01:19:15.069"/>
</kw>
<status status="PASS" starttime="20211009 01:19:15.040" endtime="20211009 01:19:15.069"/>
</kw>
<msg timestamp="20211009 01:19:15.069" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:19:15.039" endtime="20211009 01:19:15.070"/>
</kw>
<status status="PASS" starttime="20211009 01:19:15.039" endtime="20211009 01:19:15.070"/>
</kw>
<status status="PASS" starttime="20211009 01:19:15.038" endtime="20211009 01:19:15.071"/>
</kw>
<status status="PASS" starttime="20211009 01:19:15.020" endtime="20211009 01:19:15.071"/>
</kw>
<status status="PASS" starttime="20211009 01:19:15.020" endtime="20211009 01:19:15.071"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:19:15.077" level="INFO">Running command 'ozone sh key list 95249-target/link1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:19:23.817" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:19:23.817" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20211009 01:19:15.074" endtime="20211009 01:19:23.817"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:19:23.818" level="INFO">key1</msg>
<status status="PASS" starttime="20211009 01:19:23.817" endtime="20211009 01:19:23.818"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:19:23.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:19:23.818" endtime="20211009 01:19:23.820"/>
</kw>
<status status="PASS" starttime="20211009 01:19:15.073" endtime="20211009 01:19:23.820"/>
</kw>
<msg timestamp="20211009 01:19:23.820" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:19:15.073" endtime="20211009 01:19:23.820"/>
</kw>
<msg timestamp="20211009 01:19:23.821" level="INFO">${target_list} = key1</msg>
<status status="PASS" starttime="20211009 01:19:15.071" endtime="20211009 01:19:23.821"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:19:23.825" level="INFO">Running command 'ozone sh key list 95249-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:19:31.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:19:31.650" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20211009 01:19:23.823" endtime="20211009 01:19:31.650"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:19:31.652" level="INFO">key1</msg>
<status status="PASS" starttime="20211009 01:19:31.651" endtime="20211009 01:19:31.653"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:19:31.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:19:31.653" endtime="20211009 01:19:31.655"/>
</kw>
<status status="PASS" starttime="20211009 01:19:23.822" endtime="20211009 01:19:31.655"/>
</kw>
<msg timestamp="20211009 01:19:31.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:19:23.822" endtime="20211009 01:19:31.656"/>
</kw>
<msg timestamp="20211009 01:19:31.657" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20211009 01:19:23.821" endtime="20211009 01:19:31.657"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211009 01:19:31.657" endtime="20211009 01:19:31.658"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211009 01:19:31.659" endtime="20211009 01:19:31.660"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20211009 01:19:31.662" level="FAIL">'key1' does not contain 'key2'</msg>
<status status="FAIL" starttime="20211009 01:19:31.661" endtime="20211009 01:19:31.662"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211009 01:19:15.019" endtime="20211009 01:19:31.663">'key1' does not contain 'key2'</status>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:19:31.672" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:19:31.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:19:31.677" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211009 01:19:31.670" endtime="20211009 01:19:31.677"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:19:31.679" level="INFO">scm</msg>
<status status="PASS" starttime="20211009 01:19:31.678" endtime="20211009 01:19:31.679"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:19:31.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:19:31.679" endtime="20211009 01:19:31.680"/>
</kw>
<status status="PASS" starttime="20211009 01:19:31.669" endtime="20211009 01:19:31.680"/>
</kw>
<msg timestamp="20211009 01:19:31.680" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:19:31.668" endtime="20211009 01:19:31.680"/>
</kw>
<msg timestamp="20211009 01:19:31.680" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211009 01:19:31.668" endtime="20211009 01:19:31.681"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211009 01:19:31.681" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211009 01:19:31.681" endtime="20211009 01:19:31.681"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:19:31.688" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:19:31.699" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:19:31.699" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:19:31.686" endtime="20211009 01:19:31.699"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:19:31.701" level="INFO"/>
<status status="PASS" starttime="20211009 01:19:31.700" endtime="20211009 01:19:31.702"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:19:31.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:19:31.702" endtime="20211009 01:19:31.703"/>
</kw>
<status status="PASS" starttime="20211009 01:19:31.684" endtime="20211009 01:19:31.704"/>
</kw>
<msg timestamp="20211009 01:19:31.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:19:31.684" endtime="20211009 01:19:31.704"/>
</kw>
<status status="PASS" starttime="20211009 01:19:31.682" endtime="20211009 01:19:31.705"/>
</kw>
<status status="PASS" starttime="20211009 01:19:31.682" endtime="20211009 01:19:31.705"/>
</kw>
<status status="PASS" starttime="20211009 01:19:31.666" endtime="20211009 01:19:31.705"/>
</kw>
<status status="PASS" starttime="20211009 01:19:31.665" endtime="20211009 01:19:31.705"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:19:31.711" level="INFO">Running command 'ozone sh key delete 95249-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:19:40.176" level="INFO">${rc} = 255</msg>
<msg timestamp="20211009 01:19:40.177" level="INFO">${output} = KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20211009 01:19:31.708" endtime="20211009 01:19:40.177"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:19:40.178" level="INFO">KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20211009 01:19:40.177" endtime="20211009 01:19:40.178"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:19:40.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20211009 01:19:40.180" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20211009 01:19:40.178" endtime="20211009 01:19:40.180"/>
</kw>
<status status="FAIL" starttime="20211009 01:19:31.707" endtime="20211009 01:19:40.180"/>
</kw>
<msg timestamp="20211009 01:19:40.180" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211009 01:19:31.707" endtime="20211009 01:19:40.181"/>
</kw>
<status status="FAIL" starttime="20211009 01:19:31.706" endtime="20211009 01:19:40.181"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211009 01:19:40.182" endtime="20211009 01:19:40.182"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211009 01:19:40.182" endtime="20211009 01:19:40.182"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211009 01:19:31.664" endtime="20211009 01:19:40.183">255 != 0</status>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:19:40.194" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:19:40.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:19:40.200" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211009 01:19:40.191" endtime="20211009 01:19:40.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:19:40.202" level="INFO">scm</msg>
<status status="PASS" starttime="20211009 01:19:40.201" endtime="20211009 01:19:40.202"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:19:40.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:19:40.202" endtime="20211009 01:19:40.203"/>
</kw>
<status status="PASS" starttime="20211009 01:19:40.190" endtime="20211009 01:19:40.204"/>
</kw>
<msg timestamp="20211009 01:19:40.204" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:19:40.190" endtime="20211009 01:19:40.205"/>
</kw>
<msg timestamp="20211009 01:19:40.205" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211009 01:19:40.189" endtime="20211009 01:19:40.205"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211009 01:19:40.207" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211009 01:19:40.206" endtime="20211009 01:19:40.207"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:19:40.215" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:19:40.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:19:40.226" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:19:40.211" endtime="20211009 01:19:40.226"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:19:40.228" level="INFO"/>
<status status="PASS" starttime="20211009 01:19:40.227" endtime="20211009 01:19:40.228"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:19:40.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:19:40.228" endtime="20211009 01:19:40.229"/>
</kw>
<status status="PASS" starttime="20211009 01:19:40.210" endtime="20211009 01:19:40.230"/>
</kw>
<msg timestamp="20211009 01:19:40.230" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:19:40.209" endtime="20211009 01:19:40.230"/>
</kw>
<status status="PASS" starttime="20211009 01:19:40.208" endtime="20211009 01:19:40.231"/>
</kw>
<status status="PASS" starttime="20211009 01:19:40.207" endtime="20211009 01:19:40.231"/>
</kw>
<status status="PASS" starttime="20211009 01:19:40.188" endtime="20211009 01:19:40.231"/>
</kw>
<status status="PASS" starttime="20211009 01:19:40.187" endtime="20211009 01:19:40.231"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:19:40.236" level="INFO">Running command 'ozone sh bucket list 95249-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:19:49.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:19:49.048" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "95249-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "202...</msg>
<status status="PASS" starttime="20211009 01:19:40.234" endtime="20211009 01:19:49.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:19:49.051" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "95249-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-09T01:15:07.068Z",
  "modificationTime" : "2021-10-09T01:15:07.068Z",
  "sourceVolume" : "95249-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "95249-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-09T01:14:20.433Z",
  "modificationTime" : "2021-10-09T01:14:58.635Z",
  "sourceVolume" : "95249-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "95249-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-09T01:15:21.978Z",
  "modificationTime" : "2021-10-09T01:15:21.978Z",
  "sourceVolume" : "95249-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "95249-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-09T01:14:03.328Z",
  "modificationTime" : "2021-10-09T01:14:52.728Z",
  "sourceVolume" : "95249-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "95249-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-09T01:14:12.151Z",
  "modificationTime" : "2021-10-09T01:14:12.151Z",
  "sourceVolume" : "95249-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
} ]</msg>
<status status="PASS" starttime="20211009 01:19:49.049" endtime="20211009 01:19:49.052"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:19:49.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:19:49.052" endtime="20211009 01:19:49.054"/>
</kw>
<status status="PASS" starttime="20211009 01:19:40.233" endtime="20211009 01:19:49.055"/>
</kw>
<msg timestamp="20211009 01:19:49.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:19:40.232" endtime="20211009 01:19:49.056"/>
</kw>
<msg timestamp="20211009 01:19:49.057" level="INFO">${result} = [ {
  "metadata" : { },
  "volumeName" : "95249-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "202...</msg>
<status status="PASS" starttime="20211009 01:19:40.232" endtime="20211009 01:19:49.058"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211009 01:19:49.058" endtime="20211009 01:19:49.059"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211009 01:19:49.060" endtime="20211009 01:19:49.062"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211009 01:19:40.185" endtime="20211009 01:19:49.063"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:19:49.076" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:19:49.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:19:49.081" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211009 01:19:49.072" endtime="20211009 01:19:49.082"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:19:49.084" level="INFO">scm</msg>
<status status="PASS" starttime="20211009 01:19:49.083" endtime="20211009 01:19:49.084"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:19:49.085" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:19:49.084" endtime="20211009 01:19:49.086"/>
</kw>
<status status="PASS" starttime="20211009 01:19:49.070" endtime="20211009 01:19:49.086"/>
</kw>
<msg timestamp="20211009 01:19:49.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:19:49.070" endtime="20211009 01:19:49.087"/>
</kw>
<msg timestamp="20211009 01:19:49.087" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211009 01:19:49.068" endtime="20211009 01:19:49.088"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211009 01:19:49.090" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211009 01:19:49.088" endtime="20211009 01:19:49.091"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:19:49.098" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:19:49.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:19:49.113" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:19:49.094" endtime="20211009 01:19:49.113"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:19:49.118" level="INFO"/>
<status status="PASS" starttime="20211009 01:19:49.114" endtime="20211009 01:19:49.119"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:19:49.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:19:49.119" endtime="20211009 01:19:49.120"/>
</kw>
<status status="PASS" starttime="20211009 01:19:49.093" endtime="20211009 01:19:49.120"/>
</kw>
<msg timestamp="20211009 01:19:49.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:19:49.093" endtime="20211009 01:19:49.120"/>
</kw>
<status status="PASS" starttime="20211009 01:19:49.092" endtime="20211009 01:19:49.121"/>
</kw>
<status status="PASS" starttime="20211009 01:19:49.091" endtime="20211009 01:19:49.121"/>
</kw>
<status status="PASS" starttime="20211009 01:19:49.067" endtime="20211009 01:19:49.121"/>
</kw>
<status status="PASS" starttime="20211009 01:19:49.066" endtime="20211009 01:19:49.121"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:19:49.127" level="INFO">Running command 'ozone sh bucket info 95249-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:19:56.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:19:56.471" level="INFO">${output} = {
  "volumeName" : "95249-target",
  "bucketName" : "link1",
  "sourceVolume" : "95249-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-10-09T01:15:21.978Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20211009 01:19:49.123" endtime="20211009 01:19:56.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:19:56.472" level="INFO">{
  "volumeName" : "95249-target",
  "bucketName" : "link1",
  "sourceVolume" : "95249-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-10-09T01:15:21.978Z",
  "modificationTime" : "2021-10-09T01:15:21.978Z"
}</msg>
<status status="PASS" starttime="20211009 01:19:56.471" endtime="20211009 01:19:56.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:19:56.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:19:56.472" endtime="20211009 01:19:56.473"/>
</kw>
<status status="PASS" starttime="20211009 01:19:49.123" endtime="20211009 01:19:56.473"/>
</kw>
<msg timestamp="20211009 01:19:56.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:19:49.122" endtime="20211009 01:19:56.474"/>
</kw>
<msg timestamp="20211009 01:19:56.474" level="INFO">${result} = {
  "volumeName" : "95249-target",
  "bucketName" : "link1",
  "sourceVolume" : "95249-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-10-09T01:15:21.978Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20211009 01:19:49.121" endtime="20211009 01:19:56.474"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${source}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211009 01:19:56.474" endtime="20211009 01:19:56.475"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bucket1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211009 01:19:56.475" endtime="20211009 01:19:56.476"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${target}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211009 01:19:56.476" endtime="20211009 01:19:56.476"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211009 01:19:56.476" endtime="20211009 01:19:56.477"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>modificationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211009 01:19:56.477" endtime="20211009 01:19:56.478"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211009 01:19:56.478" endtime="20211009 01:19:56.478"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>metadata</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211009 01:19:56.478" endtime="20211009 01:19:56.479"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211009 01:19:49.064" endtime="20211009 01:19:56.479"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:19:56.488" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:19:56.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:19:56.491" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211009 01:19:56.484" endtime="20211009 01:19:56.492"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:19:56.493" level="INFO">scm</msg>
<status status="PASS" starttime="20211009 01:19:56.492" endtime="20211009 01:19:56.493"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:19:56.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:19:56.493" endtime="20211009 01:19:56.494"/>
</kw>
<status status="PASS" starttime="20211009 01:19:56.484" endtime="20211009 01:19:56.494"/>
</kw>
<msg timestamp="20211009 01:19:56.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:19:56.483" endtime="20211009 01:19:56.495"/>
</kw>
<msg timestamp="20211009 01:19:56.495" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211009 01:19:56.483" endtime="20211009 01:19:56.495"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211009 01:19:56.496" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211009 01:19:56.495" endtime="20211009 01:19:56.496"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:19:56.502" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:19:56.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:19:56.510" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:19:56.500" endtime="20211009 01:19:56.510"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:19:56.511" level="INFO"/>
<status status="PASS" starttime="20211009 01:19:56.510" endtime="20211009 01:19:56.511"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:19:56.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:19:56.512" endtime="20211009 01:19:56.512"/>
</kw>
<status status="PASS" starttime="20211009 01:19:56.499" endtime="20211009 01:19:56.513"/>
</kw>
<msg timestamp="20211009 01:19:56.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:19:56.498" endtime="20211009 01:19:56.513"/>
</kw>
<status status="PASS" starttime="20211009 01:19:56.497" endtime="20211009 01:19:56.513"/>
</kw>
<status status="PASS" starttime="20211009 01:19:56.496" endtime="20211009 01:19:56.513"/>
</kw>
<status status="PASS" starttime="20211009 01:19:56.482" endtime="20211009 01:19:56.514"/>
</kw>
<status status="PASS" starttime="20211009 01:19:56.482" endtime="20211009 01:19:56.514"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:19:56.521" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 95249-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:20:04.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:20:04.616" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211009 01:19:56.516" endtime="20211009 01:20:04.616"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:20:04.617" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211009 01:20:04.617" endtime="20211009 01:20:04.618"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:20:04.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:20:04.618" endtime="20211009 01:20:04.618"/>
</kw>
<status status="PASS" starttime="20211009 01:19:56.515" endtime="20211009 01:20:04.619"/>
</kw>
<msg timestamp="20211009 01:20:04.619" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:19:56.515" endtime="20211009 01:20:04.619"/>
</kw>
<status status="PASS" starttime="20211009 01:19:56.514" endtime="20211009 01:20:04.619"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:20:04.626" level="INFO">Running command 'ozone sh bucket getacl 95249-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:20:13.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:20:13.410" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20211009 01:20:04.623" endtime="20211009 01:20:13.410"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:20:13.412" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20211009 01:20:13.411" endtime="20211009 01:20:13.413"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:20:13.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:20:13.413" endtime="20211009 01:20:13.415"/>
</kw>
<status status="PASS" starttime="20211009 01:20:04.622" endtime="20211009 01:20:13.415"/>
</kw>
<msg timestamp="20211009 01:20:13.416" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:20:04.621" endtime="20211009 01:20:13.416"/>
</kw>
<msg timestamp="20211009 01:20:13.417" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20211009 01:20:04.620" endtime="20211009 01:20:13.417"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211009 01:20:13.417" endtime="20211009 01:20:13.418"/>
</kw>
<status status="PASS" starttime="20211009 01:20:04.620" endtime="20211009 01:20:13.419"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:20:13.433" level="INFO">Running command 'ozone sh bucket getacl 95249-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:20:22.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:20:22.348" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:20:13.425" endtime="20211009 01:20:22.348"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:20:22.358" level="INFO"/>
<status status="PASS" starttime="20211009 01:20:22.349" endtime="20211009 01:20:22.358"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:20:22.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:20:22.359" endtime="20211009 01:20:22.361"/>
</kw>
<status status="PASS" starttime="20211009 01:20:13.423" endtime="20211009 01:20:22.361"/>
</kw>
<msg timestamp="20211009 01:20:22.361" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:20:13.423" endtime="20211009 01:20:22.361"/>
</kw>
<msg timestamp="20211009 01:20:22.362" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20211009 01:20:13.422" endtime="20211009 01:20:22.362"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211009 01:20:22.362" endtime="20211009 01:20:22.363"/>
</kw>
<status status="PASS" starttime="20211009 01:20:13.419" endtime="20211009 01:20:22.363"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:20:22.374" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 95249-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:20:31.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:20:31.617" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211009 01:20:22.368" endtime="20211009 01:20:31.617"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:20:31.618" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211009 01:20:31.617" endtime="20211009 01:20:31.618"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:20:31.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:20:31.618" endtime="20211009 01:20:31.619"/>
</kw>
<status status="PASS" starttime="20211009 01:20:22.365" endtime="20211009 01:20:31.619"/>
</kw>
<msg timestamp="20211009 01:20:31.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:20:22.365" endtime="20211009 01:20:31.620"/>
</kw>
<status status="PASS" starttime="20211009 01:20:22.364" endtime="20211009 01:20:31.620"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:20:31.629" level="INFO">Running command 'ozone sh bucket getacl 95249-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:20:37.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:20:37.776" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:20:31.625" endtime="20211009 01:20:37.777"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:20:37.779" level="INFO"/>
<status status="PASS" starttime="20211009 01:20:37.777" endtime="20211009 01:20:37.779"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:20:37.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:20:37.779" endtime="20211009 01:20:37.781"/>
</kw>
<status status="PASS" starttime="20211009 01:20:31.625" endtime="20211009 01:20:37.781"/>
</kw>
<msg timestamp="20211009 01:20:37.781" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:20:31.624" endtime="20211009 01:20:37.782"/>
</kw>
<msg timestamp="20211009 01:20:37.782" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20211009 01:20:31.622" endtime="20211009 01:20:37.783"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211009 01:20:37.783" endtime="20211009 01:20:37.784"/>
</kw>
<status status="PASS" starttime="20211009 01:20:31.620" endtime="20211009 01:20:37.785"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:20:37.794" level="INFO">Running command 'ozone sh bucket getacl 95249-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:20:46.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:20:46.278" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20211009 01:20:37.791" endtime="20211009 01:20:46.278"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:20:46.281" level="INFO">READ</msg>
<status status="PASS" starttime="20211009 01:20:46.279" endtime="20211009 01:20:46.281"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:20:46.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:20:46.282" endtime="20211009 01:20:46.284"/>
</kw>
<status status="PASS" starttime="20211009 01:20:37.789" endtime="20211009 01:20:46.284"/>
</kw>
<msg timestamp="20211009 01:20:46.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:20:37.789" endtime="20211009 01:20:46.287"/>
</kw>
<msg timestamp="20211009 01:20:46.288" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20211009 01:20:37.787" endtime="20211009 01:20:46.288"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211009 01:20:46.288" endtime="20211009 01:20:46.289"/>
</kw>
<status status="PASS" starttime="20211009 01:20:37.785" endtime="20211009 01:20:46.289"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211009 01:19:56.480" endtime="20211009 01:20:46.295"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:20:46.310" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:20:46.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:20:46.316" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211009 01:20:46.306" endtime="20211009 01:20:46.316"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:20:46.318" level="INFO">scm</msg>
<status status="PASS" starttime="20211009 01:20:46.317" endtime="20211009 01:20:46.318"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:20:46.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:20:46.318" endtime="20211009 01:20:46.320"/>
</kw>
<status status="PASS" starttime="20211009 01:20:46.305" endtime="20211009 01:20:46.321"/>
</kw>
<msg timestamp="20211009 01:20:46.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:20:46.304" endtime="20211009 01:20:46.322"/>
</kw>
<msg timestamp="20211009 01:20:46.322" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211009 01:20:46.303" endtime="20211009 01:20:46.322"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211009 01:20:46.324" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211009 01:20:46.323" endtime="20211009 01:20:46.324"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:20:46.330" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:20:46.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:20:46.485" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:20:46.328" endtime="20211009 01:20:46.485"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:20:46.486" level="INFO"/>
<status status="PASS" starttime="20211009 01:20:46.485" endtime="20211009 01:20:46.486"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:20:46.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:20:46.487" endtime="20211009 01:20:46.487"/>
</kw>
<status status="PASS" starttime="20211009 01:20:46.327" endtime="20211009 01:20:46.488"/>
</kw>
<msg timestamp="20211009 01:20:46.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:20:46.326" endtime="20211009 01:20:46.488"/>
</kw>
<status status="PASS" starttime="20211009 01:20:46.325" endtime="20211009 01:20:46.489"/>
</kw>
<status status="PASS" starttime="20211009 01:20:46.324" endtime="20211009 01:20:46.489"/>
</kw>
<status status="PASS" starttime="20211009 01:20:46.303" endtime="20211009 01:20:46.489"/>
</kw>
<status status="PASS" starttime="20211009 01:20:46.302" endtime="20211009 01:20:46.489"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:20:46.494" level="INFO">Running command 'ozone sh bucket link 95249-source/bucket2 95249-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:20:54.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:20:54.845" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:20:46.491" endtime="20211009 01:20:54.845"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:20:54.847" level="INFO"/>
<status status="PASS" starttime="20211009 01:20:54.846" endtime="20211009 01:20:54.847"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:20:54.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:20:54.847" endtime="20211009 01:20:54.849"/>
</kw>
<status status="PASS" starttime="20211009 01:20:46.491" endtime="20211009 01:20:54.849"/>
</kw>
<msg timestamp="20211009 01:20:54.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:20:46.490" endtime="20211009 01:20:54.849"/>
</kw>
<status status="PASS" starttime="20211009 01:20:46.489" endtime="20211009 01:20:54.850"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:20:54.853" level="INFO">Running command 'ozone sh bucket create 95249-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:21:03.191" level="INFO">${rc} = 255</msg>
<msg timestamp="20211009 01:21:03.191" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211009 01:20:54.850" endtime="20211009 01:21:03.191"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:21:03.193" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211009 01:21:03.192" endtime="20211009 01:21:03.193"/>
</kw>
<msg timestamp="20211009 01:21:03.193" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211009 01:20:54.850" endtime="20211009 01:21:03.194"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211009 01:21:03.194" endtime="20211009 01:21:03.194"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:21:03.199" level="INFO">Running command 'ozone sh bucket create 95249-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:21:11.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:21:11.546" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:21:03.197" endtime="20211009 01:21:11.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:21:11.547" level="INFO"/>
<status status="PASS" starttime="20211009 01:21:11.547" endtime="20211009 01:21:11.548"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:21:11.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:21:11.548" endtime="20211009 01:21:11.548"/>
</kw>
<status status="PASS" starttime="20211009 01:21:03.196" endtime="20211009 01:21:11.549"/>
</kw>
<msg timestamp="20211009 01:21:11.549" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:21:03.196" endtime="20211009 01:21:11.549"/>
</kw>
<status status="PASS" starttime="20211009 01:21:03.195" endtime="20211009 01:21:11.549"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:21:11.553" level="INFO">Running command 'ozone sh bucket link 95249-source/bucket1 95249-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:21:19.535" level="INFO">${rc} = 255</msg>
<msg timestamp="20211009 01:21:19.536" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211009 01:21:11.550" endtime="20211009 01:21:19.536"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:21:19.537" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211009 01:21:19.536" endtime="20211009 01:21:19.537"/>
</kw>
<msg timestamp="20211009 01:21:19.538" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20211009 01:21:11.550" endtime="20211009 01:21:19.538"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211009 01:21:19.538" endtime="20211009 01:21:19.538"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211009 01:20:46.300" endtime="20211009 01:21:19.539"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:21:19.550" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:21:19.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:21:19.555" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211009 01:21:19.547" endtime="20211009 01:21:19.555"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:21:19.557" level="INFO">scm</msg>
<status status="PASS" starttime="20211009 01:21:19.556" endtime="20211009 01:21:19.557"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:21:19.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:21:19.557" endtime="20211009 01:21:19.558"/>
</kw>
<status status="PASS" starttime="20211009 01:21:19.546" endtime="20211009 01:21:19.559"/>
</kw>
<msg timestamp="20211009 01:21:19.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:21:19.545" endtime="20211009 01:21:19.559"/>
</kw>
<msg timestamp="20211009 01:21:19.560" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211009 01:21:19.544" endtime="20211009 01:21:19.560"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211009 01:21:19.561" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211009 01:21:19.560" endtime="20211009 01:21:19.561"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:21:19.568" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:21:19.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:21:19.580" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:21:19.566" endtime="20211009 01:21:19.580"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:21:19.583" level="INFO"/>
<status status="PASS" starttime="20211009 01:21:19.581" endtime="20211009 01:21:19.583"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:21:19.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:21:19.583" endtime="20211009 01:21:19.584"/>
</kw>
<status status="PASS" starttime="20211009 01:21:19.564" endtime="20211009 01:21:19.585"/>
</kw>
<msg timestamp="20211009 01:21:19.585" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:21:19.564" endtime="20211009 01:21:19.585"/>
</kw>
<status status="PASS" starttime="20211009 01:21:19.562" endtime="20211009 01:21:19.586"/>
</kw>
<status status="PASS" starttime="20211009 01:21:19.562" endtime="20211009 01:21:19.586"/>
</kw>
<status status="PASS" starttime="20211009 01:21:19.543" endtime="20211009 01:21:19.586"/>
</kw>
<status status="PASS" starttime="20211009 01:21:19.541" endtime="20211009 01:21:19.586"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:21:19.594" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:21:19.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:21:19.600" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:21:19.591" endtime="20211009 01:21:19.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:21:19.602" level="INFO"/>
<status status="PASS" starttime="20211009 01:21:19.601" endtime="20211009 01:21:19.602"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:21:19.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:21:19.602" endtime="20211009 01:21:19.604"/>
</kw>
<status status="PASS" starttime="20211009 01:21:19.590" endtime="20211009 01:21:19.604"/>
</kw>
<msg timestamp="20211009 01:21:19.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:21:19.589" endtime="20211009 01:21:19.605"/>
</kw>
<status status="PASS" starttime="20211009 01:21:19.588" endtime="20211009 01:21:19.605"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:21:19.612" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:21:19.617" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:21:19.617" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211009 01:21:19.609" endtime="20211009 01:21:19.617"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:21:19.619" level="INFO">scm</msg>
<status status="PASS" starttime="20211009 01:21:19.618" endtime="20211009 01:21:19.619"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:21:19.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:21:19.619" endtime="20211009 01:21:19.622"/>
</kw>
<status status="PASS" starttime="20211009 01:21:19.609" endtime="20211009 01:21:19.623"/>
</kw>
<msg timestamp="20211009 01:21:19.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:21:19.608" endtime="20211009 01:21:19.623"/>
</kw>
<msg timestamp="20211009 01:21:19.623" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211009 01:21:19.607" endtime="20211009 01:21:19.623"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211009 01:21:19.625" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211009 01:21:19.623" endtime="20211009 01:21:19.625"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:21:19.631" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:21:19.643" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:21:19.643" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:21:19.628" endtime="20211009 01:21:19.643"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:21:19.646" level="INFO"/>
<status status="PASS" starttime="20211009 01:21:19.644" endtime="20211009 01:21:19.646"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:21:19.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:21:19.646" endtime="20211009 01:21:19.647"/>
</kw>
<status status="PASS" starttime="20211009 01:21:19.627" endtime="20211009 01:21:19.648"/>
</kw>
<msg timestamp="20211009 01:21:19.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:21:19.626" endtime="20211009 01:21:19.649"/>
</kw>
<status status="PASS" starttime="20211009 01:21:19.626" endtime="20211009 01:21:19.649"/>
</kw>
<status status="PASS" starttime="20211009 01:21:19.625" endtime="20211009 01:21:19.649"/>
</kw>
<status status="PASS" starttime="20211009 01:21:19.606" endtime="20211009 01:21:19.650"/>
</kw>
<status status="PASS" starttime="20211009 01:21:19.605" endtime="20211009 01:21:19.650"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:21:19.654" level="INFO">Running command 'ozone sh key list 95249-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:21:28.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:21:28.773" level="INFO">${output} = [ {
  "volumeName" : "95249-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-10-09T01:10:42.612Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20211009 01:21:19.651" endtime="20211009 01:21:28.773"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:21:28.775" level="INFO">[ {
  "volumeName" : "95249-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-10-09T01:10:42.612Z",
  "modificationTime" : "2021-10-09T01:13:45.420Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "replicationType" : "RATIS",
  "replicationFactor" : 3
} ]</msg>
<status status="PASS" starttime="20211009 01:21:28.774" endtime="20211009 01:21:28.776"/>
</kw>
<msg timestamp="20211009 01:21:28.777" level="INFO">${result} = [ {
  "volumeName" : "95249-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-10-09T01:10:42.612Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20211009 01:21:19.650" endtime="20211009 01:21:28.777"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211009 01:21:28.777" endtime="20211009 01:21:28.778"/>
</kw>
<status status="PASS" starttime="20211009 01:21:19.588" endtime="20211009 01:21:28.778"/>
</kw>
<status status="PASS" starttime="20211009 01:21:19.587" endtime="20211009 01:21:28.778"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211009 01:21:19.539" endtime="20211009 01:21:28.779"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:21:28.788" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:21:28.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:21:28.793" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211009 01:21:28.785" endtime="20211009 01:21:28.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:21:28.794" level="INFO">scm</msg>
<status status="PASS" starttime="20211009 01:21:28.794" endtime="20211009 01:21:28.795"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:21:28.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:21:28.795" endtime="20211009 01:21:28.796"/>
</kw>
<status status="PASS" starttime="20211009 01:21:28.784" endtime="20211009 01:21:28.796"/>
</kw>
<msg timestamp="20211009 01:21:28.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:21:28.784" endtime="20211009 01:21:28.797"/>
</kw>
<msg timestamp="20211009 01:21:28.797" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211009 01:21:28.783" endtime="20211009 01:21:28.797"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211009 01:21:28.798" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211009 01:21:28.797" endtime="20211009 01:21:28.798"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:21:28.804" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:21:28.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:21:28.814" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:21:28.802" endtime="20211009 01:21:28.815"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:21:28.817" level="INFO"/>
<status status="PASS" starttime="20211009 01:21:28.815" endtime="20211009 01:21:28.817"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:21:28.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:21:28.817" endtime="20211009 01:21:28.818"/>
</kw>
<status status="PASS" starttime="20211009 01:21:28.801" endtime="20211009 01:21:28.818"/>
</kw>
<msg timestamp="20211009 01:21:28.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:21:28.800" endtime="20211009 01:21:28.819"/>
</kw>
<status status="PASS" starttime="20211009 01:21:28.799" endtime="20211009 01:21:28.819"/>
</kw>
<status status="PASS" starttime="20211009 01:21:28.798" endtime="20211009 01:21:28.819"/>
</kw>
<status status="PASS" starttime="20211009 01:21:28.782" endtime="20211009 01:21:28.820"/>
</kw>
<status status="PASS" starttime="20211009 01:21:28.782" endtime="20211009 01:21:28.820"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:21:28.828" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:21:28.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:21:28.834" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:21:28.824" endtime="20211009 01:21:28.834"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:21:28.836" level="INFO"/>
<status status="PASS" starttime="20211009 01:21:28.835" endtime="20211009 01:21:28.837"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:21:28.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:21:28.837" endtime="20211009 01:21:28.838"/>
</kw>
<status status="PASS" starttime="20211009 01:21:28.824" endtime="20211009 01:21:28.839"/>
</kw>
<msg timestamp="20211009 01:21:28.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:21:28.823" endtime="20211009 01:21:28.839"/>
</kw>
<status status="PASS" starttime="20211009 01:21:28.822" endtime="20211009 01:21:28.839"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:21:28.847" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:21:28.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:21:28.856" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211009 01:21:28.844" endtime="20211009 01:21:28.856"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:21:28.858" level="INFO">scm</msg>
<status status="PASS" starttime="20211009 01:21:28.857" endtime="20211009 01:21:28.858"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:21:28.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:21:28.858" endtime="20211009 01:21:28.859"/>
</kw>
<status status="PASS" starttime="20211009 01:21:28.843" endtime="20211009 01:21:28.860"/>
</kw>
<msg timestamp="20211009 01:21:28.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:21:28.843" endtime="20211009 01:21:28.860"/>
</kw>
<msg timestamp="20211009 01:21:28.860" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211009 01:21:28.842" endtime="20211009 01:21:28.861"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211009 01:21:28.862" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211009 01:21:28.861" endtime="20211009 01:21:28.862"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:21:28.870" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:21:28.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:21:28.880" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:21:28.866" endtime="20211009 01:21:28.880"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:21:28.883" level="INFO"/>
<status status="PASS" starttime="20211009 01:21:28.881" endtime="20211009 01:21:28.883"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:21:28.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:21:28.883" endtime="20211009 01:21:28.884"/>
</kw>
<status status="PASS" starttime="20211009 01:21:28.865" endtime="20211009 01:21:28.884"/>
</kw>
<msg timestamp="20211009 01:21:28.885" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:21:28.864" endtime="20211009 01:21:28.885"/>
</kw>
<status status="PASS" starttime="20211009 01:21:28.863" endtime="20211009 01:21:28.885"/>
</kw>
<status status="PASS" starttime="20211009 01:21:28.862" endtime="20211009 01:21:28.885"/>
</kw>
<status status="PASS" starttime="20211009 01:21:28.841" endtime="20211009 01:21:28.886"/>
</kw>
<status status="PASS" starttime="20211009 01:21:28.840" endtime="20211009 01:21:28.886"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:21:28.890" level="INFO">Running command 'ozone sh key list 95249-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:21:36.822" level="INFO">${rc} = 255</msg>
<msg timestamp="20211009 01:21:36.822" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 95249-target unreadable-link null</msg>
<status status="PASS" starttime="20211009 01:21:28.887" endtime="20211009 01:21:36.822"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:21:36.825" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 95249-target unreadable-link null</msg>
<status status="PASS" starttime="20211009 01:21:36.823" endtime="20211009 01:21:36.825"/>
</kw>
<msg timestamp="20211009 01:21:36.826" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 95249-target unreadable-link null</msg>
<status status="PASS" starttime="20211009 01:21:28.886" endtime="20211009 01:21:36.826"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211009 01:21:36.829" endtime="20211009 01:21:36.830"/>
</kw>
<status status="PASS" starttime="20211009 01:21:28.821" endtime="20211009 01:21:36.830"/>
</kw>
<status status="PASS" starttime="20211009 01:21:28.820" endtime="20211009 01:21:36.830"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211009 01:21:28.780" endtime="20211009 01:21:36.830"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:21:36.844" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:21:36.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:21:36.851" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211009 01:21:36.840" endtime="20211009 01:21:36.852"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:21:36.854" level="INFO">scm</msg>
<status status="PASS" starttime="20211009 01:21:36.852" endtime="20211009 01:21:36.854"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:21:36.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:21:36.854" endtime="20211009 01:21:36.856"/>
</kw>
<status status="PASS" starttime="20211009 01:21:36.838" endtime="20211009 01:21:36.856"/>
</kw>
<msg timestamp="20211009 01:21:36.856" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:21:36.838" endtime="20211009 01:21:36.857"/>
</kw>
<msg timestamp="20211009 01:21:36.858" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211009 01:21:36.836" endtime="20211009 01:21:36.858"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211009 01:21:36.859" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211009 01:21:36.858" endtime="20211009 01:21:36.859"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:21:36.867" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:21:36.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:21:36.882" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:21:36.864" endtime="20211009 01:21:36.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:21:36.884" level="INFO"/>
<status status="PASS" starttime="20211009 01:21:36.883" endtime="20211009 01:21:36.884"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:21:36.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:21:36.884" endtime="20211009 01:21:36.885"/>
</kw>
<status status="PASS" starttime="20211009 01:21:36.863" endtime="20211009 01:21:36.885"/>
</kw>
<msg timestamp="20211009 01:21:36.885" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:21:36.862" endtime="20211009 01:21:36.885"/>
</kw>
<status status="PASS" starttime="20211009 01:21:36.860" endtime="20211009 01:21:36.886"/>
</kw>
<status status="PASS" starttime="20211009 01:21:36.860" endtime="20211009 01:21:36.886"/>
</kw>
<status status="PASS" starttime="20211009 01:21:36.835" endtime="20211009 01:21:36.886"/>
</kw>
<status status="PASS" starttime="20211009 01:21:36.833" endtime="20211009 01:21:36.886"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:21:36.894" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:21:36.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:21:36.900" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:21:36.890" endtime="20211009 01:21:36.901"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:21:36.902" level="INFO"/>
<status status="PASS" starttime="20211009 01:21:36.901" endtime="20211009 01:21:36.902"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:21:36.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:21:36.902" endtime="20211009 01:21:36.904"/>
</kw>
<status status="PASS" starttime="20211009 01:21:36.889" endtime="20211009 01:21:36.904"/>
</kw>
<msg timestamp="20211009 01:21:36.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:21:36.889" endtime="20211009 01:21:36.904"/>
</kw>
<status status="PASS" starttime="20211009 01:21:36.888" endtime="20211009 01:21:36.905"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:21:36.912" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:21:36.917" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:21:36.918" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211009 01:21:36.909" endtime="20211009 01:21:36.918"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:21:36.920" level="INFO">scm</msg>
<status status="PASS" starttime="20211009 01:21:36.919" endtime="20211009 01:21:36.920"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:21:36.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:21:36.920" endtime="20211009 01:21:36.922"/>
</kw>
<status status="PASS" starttime="20211009 01:21:36.909" endtime="20211009 01:21:36.922"/>
</kw>
<msg timestamp="20211009 01:21:36.922" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:21:36.908" endtime="20211009 01:21:36.922"/>
</kw>
<msg timestamp="20211009 01:21:36.923" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211009 01:21:36.906" endtime="20211009 01:21:36.923"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211009 01:21:36.924" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211009 01:21:36.923" endtime="20211009 01:21:36.924"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:21:36.931" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:21:36.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:21:36.943" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:21:36.928" endtime="20211009 01:21:36.944"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:21:36.946" level="INFO"/>
<status status="PASS" starttime="20211009 01:21:36.945" endtime="20211009 01:21:36.946"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:21:36.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:21:36.946" endtime="20211009 01:21:36.948"/>
</kw>
<status status="PASS" starttime="20211009 01:21:36.927" endtime="20211009 01:21:36.949"/>
</kw>
<msg timestamp="20211009 01:21:36.950" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:21:36.927" endtime="20211009 01:21:36.950"/>
</kw>
<status status="PASS" starttime="20211009 01:21:36.926" endtime="20211009 01:21:36.951"/>
</kw>
<status status="PASS" starttime="20211009 01:21:36.925" endtime="20211009 01:21:36.951"/>
</kw>
<status status="PASS" starttime="20211009 01:21:36.905" endtime="20211009 01:21:36.952"/>
</kw>
<status status="PASS" starttime="20211009 01:21:36.905" endtime="20211009 01:21:36.952"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:21:36.960" level="INFO">Running command 'ozone sh bucket info 95249-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:21:45.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:21:45.745" level="INFO">${output} = {
  "volumeName" : "95249-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "95249-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-10-09T01:14:20.433Z...</msg>
<status status="PASS" starttime="20211009 01:21:36.956" endtime="20211009 01:21:45.745"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:21:45.746" level="INFO">{
  "volumeName" : "95249-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "95249-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-10-09T01:14:20.433Z",
  "modificationTime" : "2021-10-09T01:14:58.635Z"
}</msg>
<status status="PASS" starttime="20211009 01:21:45.745" endtime="20211009 01:21:45.746"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:21:45.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:21:45.746" endtime="20211009 01:21:45.747"/>
</kw>
<status status="PASS" starttime="20211009 01:21:36.955" endtime="20211009 01:21:45.748"/>
</kw>
<msg timestamp="20211009 01:21:45.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:21:36.954" endtime="20211009 01:21:45.748"/>
</kw>
<msg timestamp="20211009 01:21:45.749" level="INFO">${result} = {
  "volumeName" : "95249-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "95249-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-10-09T01:14:20.433Z...</msg>
<status status="PASS" starttime="20211009 01:21:36.953" endtime="20211009 01:21:45.749"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211009 01:21:45.749" endtime="20211009 01:21:45.749"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211009 01:21:45.750" endtime="20211009 01:21:45.750"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:21:45.754" level="INFO">Running command 'ozone sh key list 95249-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:21:53.430" level="INFO">${rc} = 255</msg>
<msg timestamp="20211009 01:21:53.430" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 95249-source unreadable-bucket </msg>
<status status="PASS" starttime="20211009 01:21:45.751" endtime="20211009 01:21:53.430"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:21:53.432" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 95249-source unreadable-bucket </msg>
<status status="PASS" starttime="20211009 01:21:53.431" endtime="20211009 01:21:53.433"/>
</kw>
<msg timestamp="20211009 01:21:53.433" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 95249-source unreadable-bucket </msg>
<status status="PASS" starttime="20211009 01:21:45.750" endtime="20211009 01:21:53.433"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211009 01:21:53.434" endtime="20211009 01:21:53.434"/>
</kw>
<status status="PASS" starttime="20211009 01:21:36.887" endtime="20211009 01:21:53.435"/>
</kw>
<status status="PASS" starttime="20211009 01:21:36.886" endtime="20211009 01:21:53.435"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211009 01:21:36.832" endtime="20211009 01:21:53.435"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:21:53.444" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:21:53.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:21:53.450" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211009 01:21:53.441" endtime="20211009 01:21:53.450"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:21:53.451" level="INFO">scm</msg>
<status status="PASS" starttime="20211009 01:21:53.450" endtime="20211009 01:21:53.451"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:21:53.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:21:53.451" endtime="20211009 01:21:53.452"/>
</kw>
<status status="PASS" starttime="20211009 01:21:53.440" endtime="20211009 01:21:53.453"/>
</kw>
<msg timestamp="20211009 01:21:53.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:21:53.439" endtime="20211009 01:21:53.453"/>
</kw>
<msg timestamp="20211009 01:21:53.454" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211009 01:21:53.439" endtime="20211009 01:21:53.454"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211009 01:21:53.455" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211009 01:21:53.454" endtime="20211009 01:21:53.455"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:21:53.461" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:21:53.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:21:53.472" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:21:53.458" endtime="20211009 01:21:53.472"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:21:53.474" level="INFO"/>
<status status="PASS" starttime="20211009 01:21:53.473" endtime="20211009 01:21:53.474"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:21:53.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:21:53.475" endtime="20211009 01:21:53.476"/>
</kw>
<status status="PASS" starttime="20211009 01:21:53.457" endtime="20211009 01:21:53.476"/>
</kw>
<msg timestamp="20211009 01:21:53.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:21:53.457" endtime="20211009 01:21:53.477"/>
</kw>
<status status="PASS" starttime="20211009 01:21:53.456" endtime="20211009 01:21:53.477"/>
</kw>
<status status="PASS" starttime="20211009 01:21:53.455" endtime="20211009 01:21:53.477"/>
</kw>
<status status="PASS" starttime="20211009 01:21:53.438" endtime="20211009 01:21:53.478"/>
</kw>
<status status="PASS" starttime="20211009 01:21:53.437" endtime="20211009 01:21:53.478"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:21:53.483" level="INFO">Running command 'ozone sh bucket link 95249-target/loop1 95249-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:22:01.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:22:01.938" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:21:53.480" endtime="20211009 01:22:01.938"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:22:01.941" level="INFO"/>
<status status="PASS" starttime="20211009 01:22:01.940" endtime="20211009 01:22:01.941"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:22:01.941" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:22:01.941" endtime="20211009 01:22:01.942"/>
</kw>
<status status="PASS" starttime="20211009 01:21:53.479" endtime="20211009 01:22:01.942"/>
</kw>
<msg timestamp="20211009 01:22:01.942" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:21:53.479" endtime="20211009 01:22:01.942"/>
</kw>
<status status="PASS" starttime="20211009 01:21:53.478" endtime="20211009 01:22:01.943"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:22:01.949" level="INFO">Running command 'ozone sh bucket link 95249-target/loop2 95249-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:22:10.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:22:10.202" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:22:01.946" endtime="20211009 01:22:10.202"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:22:10.203" level="INFO"/>
<status status="PASS" starttime="20211009 01:22:10.202" endtime="20211009 01:22:10.204"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:22:10.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:22:10.204" endtime="20211009 01:22:10.205"/>
</kw>
<status status="PASS" starttime="20211009 01:22:01.945" endtime="20211009 01:22:10.205"/>
</kw>
<msg timestamp="20211009 01:22:10.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:22:01.944" endtime="20211009 01:22:10.206"/>
</kw>
<status status="PASS" starttime="20211009 01:22:01.943" endtime="20211009 01:22:10.206"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:22:10.213" level="INFO">Running command 'ozone sh bucket link 95249-target/loop3 95249-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:22:18.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:22:18.093" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:22:10.209" endtime="20211009 01:22:18.094"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:22:18.097" level="INFO"/>
<status status="PASS" starttime="20211009 01:22:18.095" endtime="20211009 01:22:18.097"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:22:18.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:22:18.097" endtime="20211009 01:22:18.099"/>
</kw>
<status status="PASS" starttime="20211009 01:22:10.208" endtime="20211009 01:22:18.100"/>
</kw>
<msg timestamp="20211009 01:22:18.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:22:10.207" endtime="20211009 01:22:18.100"/>
</kw>
<status status="PASS" starttime="20211009 01:22:10.206" endtime="20211009 01:22:18.101"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:22:18.106" level="INFO">Running command 'ozone sh key list 95249-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:22:25.720" level="INFO">${rc} = 255</msg>
<msg timestamp="20211009 01:22:25.720" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20211009 01:22:18.103" endtime="20211009 01:22:25.720"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:22:25.722" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20211009 01:22:25.721" endtime="20211009 01:22:25.722"/>
</kw>
<msg timestamp="20211009 01:22:25.722" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20211009 01:22:18.101" endtime="20211009 01:22:25.722"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211009 01:22:25.723" endtime="20211009 01:22:25.723"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211009 01:21:53.436" endtime="20211009 01:22:25.723"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:22:25.738" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:22:25.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:22:25.744" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211009 01:22:25.733" endtime="20211009 01:22:25.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:22:25.747" level="INFO">scm</msg>
<status status="PASS" starttime="20211009 01:22:25.745" endtime="20211009 01:22:25.747"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:22:25.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:22:25.747" endtime="20211009 01:22:25.748"/>
</kw>
<status status="PASS" starttime="20211009 01:22:25.731" endtime="20211009 01:22:25.748"/>
</kw>
<msg timestamp="20211009 01:22:25.749" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:22:25.730" endtime="20211009 01:22:25.749"/>
</kw>
<msg timestamp="20211009 01:22:25.749" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211009 01:22:25.729" endtime="20211009 01:22:25.749"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211009 01:22:25.751" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211009 01:22:25.750" endtime="20211009 01:22:25.752"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:22:25.759" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:22:25.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:22:25.772" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:22:25.756" endtime="20211009 01:22:25.772"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:22:25.774" level="INFO"/>
<status status="PASS" starttime="20211009 01:22:25.773" endtime="20211009 01:22:25.774"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:22:25.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:22:25.774" endtime="20211009 01:22:25.775"/>
</kw>
<status status="PASS" starttime="20211009 01:22:25.754" endtime="20211009 01:22:25.776"/>
</kw>
<msg timestamp="20211009 01:22:25.776" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:22:25.754" endtime="20211009 01:22:25.776"/>
</kw>
<status status="PASS" starttime="20211009 01:22:25.753" endtime="20211009 01:22:25.776"/>
</kw>
<status status="PASS" starttime="20211009 01:22:25.752" endtime="20211009 01:22:25.777"/>
</kw>
<status status="PASS" starttime="20211009 01:22:25.728" endtime="20211009 01:22:25.777"/>
</kw>
<status status="PASS" starttime="20211009 01:22:25.727" endtime="20211009 01:22:25.777"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:22:25.784" level="INFO">Running command 'ozone sh bucket link 95249-source/bucket1 95249-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:22:33.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:22:33.726" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:22:25.781" endtime="20211009 01:22:33.726"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:22:33.729" level="INFO"/>
<status status="PASS" starttime="20211009 01:22:33.728" endtime="20211009 01:22:33.730"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:22:33.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:22:33.730" endtime="20211009 01:22:33.732"/>
</kw>
<status status="PASS" starttime="20211009 01:22:25.779" endtime="20211009 01:22:33.732"/>
</kw>
<msg timestamp="20211009 01:22:33.732" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:22:25.779" endtime="20211009 01:22:33.733"/>
</kw>
<status status="PASS" starttime="20211009 01:22:25.778" endtime="20211009 01:22:33.733"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:22:33.740" level="INFO">Running command 'ozone sh key put 95249-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:24:25.727" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20211009 01:22:33.736" endtime="20211009 01:24:25.727"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211009 01:24:25.727" endtime="20211009 01:24:25.727"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211009 01:24:25.728" endtime="20211009 01:24:25.728"/>
</kw>
<status status="FAIL" starttime="20211009 01:22:33.735" endtime="20211009 01:24:25.728"/>
</kw>
<msg timestamp="20211009 01:24:25.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211009 01:22:33.735" endtime="20211009 01:24:25.728"/>
</kw>
<status status="FAIL" starttime="20211009 01:22:33.734" endtime="20211009 01:24:25.729"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<status status="NOT RUN" starttime="20211009 01:24:25.729" endtime="20211009 01:24:25.729"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20211009 01:22:25.725" endtime="20211009 01:24:25.729">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:24:25.737" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:24:25.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:24:25.743" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211009 01:24:25.734" endtime="20211009 01:24:25.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:24:25.745" level="INFO">scm</msg>
<status status="PASS" starttime="20211009 01:24:25.744" endtime="20211009 01:24:25.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:24:25.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:24:25.745" endtime="20211009 01:24:25.747"/>
</kw>
<status status="PASS" starttime="20211009 01:24:25.734" endtime="20211009 01:24:25.747"/>
</kw>
<msg timestamp="20211009 01:24:25.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:24:25.733" endtime="20211009 01:24:25.747"/>
</kw>
<msg timestamp="20211009 01:24:25.748" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211009 01:24:25.733" endtime="20211009 01:24:25.748"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211009 01:24:25.750" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211009 01:24:25.749" endtime="20211009 01:24:25.750"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:24:25.758" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:24:25.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:24:25.767" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:24:25.755" endtime="20211009 01:24:25.768"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:24:25.769" level="INFO"/>
<status status="PASS" starttime="20211009 01:24:25.768" endtime="20211009 01:24:25.769"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:24:25.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:24:25.770" endtime="20211009 01:24:25.771"/>
</kw>
<status status="PASS" starttime="20211009 01:24:25.754" endtime="20211009 01:24:25.772"/>
</kw>
<msg timestamp="20211009 01:24:25.772" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:24:25.752" endtime="20211009 01:24:25.772"/>
</kw>
<status status="PASS" starttime="20211009 01:24:25.751" endtime="20211009 01:24:25.773"/>
</kw>
<status status="PASS" starttime="20211009 01:24:25.750" endtime="20211009 01:24:25.773"/>
</kw>
<status status="PASS" starttime="20211009 01:24:25.732" endtime="20211009 01:24:25.773"/>
</kw>
<status status="PASS" starttime="20211009 01:24:25.731" endtime="20211009 01:24:25.773"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:24:25.779" level="INFO">Running command 'ozone sh bucket delete 95249-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:24:34.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:24:34.598" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:24:25.776" endtime="20211009 01:24:34.598"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:24:34.599" level="INFO"/>
<status status="PASS" starttime="20211009 01:24:34.598" endtime="20211009 01:24:34.599"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:24:34.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:24:34.600" endtime="20211009 01:24:34.600"/>
</kw>
<status status="PASS" starttime="20211009 01:24:25.775" endtime="20211009 01:24:34.601"/>
</kw>
<msg timestamp="20211009 01:24:34.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:24:25.775" endtime="20211009 01:24:34.601"/>
</kw>
<status status="PASS" starttime="20211009 01:24:25.773" endtime="20211009 01:24:34.601"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:24:34.606" level="INFO">Running command 'ozone sh bucket list 95249-target 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:24:41.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:24:41.335" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "95249-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-0...</msg>
<status status="PASS" starttime="20211009 01:24:34.603" endtime="20211009 01:24:41.335"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:24:41.337" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "95249-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-09T01:21:11.409Z",
  "modificationTime" : "2021-10-09T01:21:11.409Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "95249-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-09T01:15:07.068Z",
  "modificationTime" : "2021-10-09T01:15:07.068Z",
  "sourceVolume" : "95249-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "95249-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-09T01:14:20.433Z",
  "modificationTime" : "2021-10-09T01:14:58.635Z",
  "sourceVolume" : "95249-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "95249-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-09T01:20:54.462Z",
  "modificationTime" : "2021-10-09T01:20:54.462Z",
  "sourceVolume" : "95249-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "95249-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-09T01:22:33.651Z",
  "modificationTime" : "2021-10-09T01:22:33.651Z",
  "sourceVolume" : "95249-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "95249-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-09T01:22:17.984Z",
  "modificationTime" : "2021-10-09T01:22:17.984Z",
  "sourceVolume" : "95249-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "95249-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-09T01:22:01.830Z",
  "modificationTime" : "2021-10-09T01:22:01.830Z",
  "sourceVolume" : "95249-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "95249-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-09T01:22:10.012Z",
  "modificationTime" : "2021-10-09T01:22:10.012Z",
  "sourceVolume" : "95249-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "95249-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-09T01:14:03.328Z",
  "modificationTime" : "2021-10-09T01:14:52.728Z",
  "sourceVolume" : "95249-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}, {
  "metadata" : { },
  "volumeName" : "95249-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-09T01:14:12.151Z",
  "modificationTime" : "2021-10-09T01:14:12.151Z",
  "sourceVolume" : "95249-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
} ]</msg>
<status status="PASS" starttime="20211009 01:24:41.336" endtime="20211009 01:24:41.337"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:24:41.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:24:41.337" endtime="20211009 01:24:41.338"/>
</kw>
<status status="PASS" starttime="20211009 01:24:34.603" endtime="20211009 01:24:41.338"/>
</kw>
<msg timestamp="20211009 01:24:41.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:24:34.602" endtime="20211009 01:24:41.338"/>
</kw>
<msg timestamp="20211009 01:24:41.339" level="INFO">${bucket_list} = [ {
  "metadata" : { },
  "volumeName" : "95249-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-10-0...</msg>
<status status="PASS" starttime="20211009 01:24:34.601" endtime="20211009 01:24:41.339"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211009 01:24:41.339" endtime="20211009 01:24:41.341"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:24:41.349" level="INFO">Running command 'ozone sh key list 95249-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:24:49.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:24:49.771" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20211009 01:24:41.345" endtime="20211009 01:24:49.771"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:24:49.772" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20211009 01:24:49.772" endtime="20211009 01:24:49.773"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:24:49.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:24:49.773" endtime="20211009 01:24:49.773"/>
</kw>
<status status="PASS" starttime="20211009 01:24:41.343" endtime="20211009 01:24:49.774"/>
</kw>
<msg timestamp="20211009 01:24:49.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:24:41.343" endtime="20211009 01:24:49.775"/>
</kw>
<msg timestamp="20211009 01:24:49.775" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20211009 01:24:41.341" endtime="20211009 01:24:49.775"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211009 01:24:49.776" endtime="20211009 01:24:49.777"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211009 01:24:25.730" endtime="20211009 01:24:49.777"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="FAIL" starttime="20211009 01:10:10.231" endtime="20211009 01:24:49.782"/>
</suite>
<suite id="s1-s1-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211009 01:24:49.821" level="INFO">${random} = 32503</msg>
<status status="PASS" starttime="20211009 01:24:49.820" endtime="20211009 01:24:49.821"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211009 01:24:49.822" level="INFO">${prefix} = 32503</msg>
<status status="PASS" starttime="20211009 01:24:49.821" endtime="20211009 01:24:49.822"/>
</kw>
<status status="PASS" starttime="20211009 01:24:49.820" endtime="20211009 01:24:49.822"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:24:49.829" level="INFO">Running command 'ozone sh volume info /32503-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:24:57.086" level="INFO">${rc} = 255</msg>
<msg timestamp="20211009 01:24:57.086" level="INFO">${output} = VOLUME_NOT_FOUND Volume 32503-rpcbasic is not found</msg>
<status status="PASS" starttime="20211009 01:24:49.827" endtime="20211009 01:24:57.086"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:24:57.087" level="INFO">VOLUME_NOT_FOUND Volume 32503-rpcbasic is not found</msg>
<status status="PASS" starttime="20211009 01:24:57.086" endtime="20211009 01:24:57.087"/>
</kw>
<msg timestamp="20211009 01:24:57.088" level="INFO">${result} = VOLUME_NOT_FOUND Volume 32503-rpcbasic is not found</msg>
<status status="PASS" starttime="20211009 01:24:49.826" endtime="20211009 01:24:57.088"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211009 01:24:57.088" endtime="20211009 01:24:57.089"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:24:57.093" level="INFO">Running command 'ozone sh volume create /32503-rpcbasic --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:25:04.893" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:25:04.894" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:24:57.091" endtime="20211009 01:25:04.894"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:25:04.895" level="INFO"/>
<status status="PASS" starttime="20211009 01:25:04.894" endtime="20211009 01:25:04.895"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:25:04.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:25:04.895" endtime="20211009 01:25:04.896"/>
</kw>
<status status="PASS" starttime="20211009 01:24:57.090" endtime="20211009 01:25:04.896"/>
</kw>
<msg timestamp="20211009 01:25:04.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:24:57.090" endtime="20211009 01:25:04.897"/>
</kw>
<msg timestamp="20211009 01:25:04.897" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211009 01:24:57.089" endtime="20211009 01:25:04.897"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211009 01:25:04.897" endtime="20211009 01:25:04.898"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:25:04.903" level="INFO">Running command 'ozone sh volume list / | jq -r '.[] | select(.name=="32503-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:25:12.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:25:12.162" level="INFO">${output} = {
  "metadata": {},
  "name": "32503-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211009 01:25:04.900" endtime="20211009 01:25:12.162"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:25:12.164" level="INFO">{
  "metadata": {},
  "name": "32503-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-09T01:25:04.703Z",
  "modificationTime": "2021-10-09T01:25:04.703Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211009 01:25:12.163" endtime="20211009 01:25:12.164"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:25:12.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:25:12.164" endtime="20211009 01:25:12.165"/>
</kw>
<status status="PASS" starttime="20211009 01:25:04.900" endtime="20211009 01:25:12.165"/>
</kw>
<msg timestamp="20211009 01:25:12.165" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:25:04.899" endtime="20211009 01:25:12.165"/>
</kw>
<msg timestamp="20211009 01:25:12.166" level="INFO">${result} = {
  "metadata": {},
  "name": "32503-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211009 01:25:04.898" endtime="20211009 01:25:12.166"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211009 01:25:12.166" endtime="20211009 01:25:12.167"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:25:12.173" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="32503-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:25:21.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:25:21.163" level="INFO">${output} = {
  "metadata": {},
  "name": "32503-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211009 01:25:12.169" endtime="20211009 01:25:21.163"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:25:21.165" level="INFO">{
  "metadata": {},
  "name": "32503-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-09T01:25:04.703Z",
  "modificationTime": "2021-10-09T01:25:04.703Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211009 01:25:21.164" endtime="20211009 01:25:21.165"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:25:21.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:25:21.165" endtime="20211009 01:25:21.166"/>
</kw>
<status status="PASS" starttime="20211009 01:25:12.168" endtime="20211009 01:25:21.166"/>
</kw>
<msg timestamp="20211009 01:25:21.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:25:12.168" endtime="20211009 01:25:21.168"/>
</kw>
<msg timestamp="20211009 01:25:21.169" level="INFO">${result} = {
  "metadata": {},
  "name": "32503-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211009 01:25:12.167" endtime="20211009 01:25:21.169"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211009 01:25:21.169" endtime="20211009 01:25:21.171"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:25:21.180" level="INFO">Running command 'ozone sh volume setquota /32503-rpcbasic --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:25:30.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:25:30.042" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:25:21.176" endtime="20211009 01:25:30.043"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:25:30.046" level="INFO"/>
<status status="PASS" starttime="20211009 01:25:30.045" endtime="20211009 01:25:30.047"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:25:30.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:25:30.050" endtime="20211009 01:25:30.053"/>
</kw>
<status status="PASS" starttime="20211009 01:25:21.174" endtime="20211009 01:25:30.054"/>
</kw>
<msg timestamp="20211009 01:25:30.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:25:21.173" endtime="20211009 01:25:30.055"/>
</kw>
<status status="PASS" starttime="20211009 01:25:21.171" endtime="20211009 01:25:30.057"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:25:30.071" level="INFO">Running command 'ozone sh volume info /32503-rpcbasic | jq -r '. | select(.name=="32503-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:25:39.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:25:39.099" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211009 01:25:30.064" endtime="20211009 01:25:39.099"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:25:39.100" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211009 01:25:39.099" endtime="20211009 01:25:39.100"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:25:39.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:25:39.101" endtime="20211009 01:25:39.101"/>
</kw>
<status status="PASS" starttime="20211009 01:25:30.062" endtime="20211009 01:25:39.102"/>
</kw>
<msg timestamp="20211009 01:25:39.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:25:30.061" endtime="20211009 01:25:39.102"/>
</kw>
<msg timestamp="20211009 01:25:39.102" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211009 01:25:30.057" endtime="20211009 01:25:39.102"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211009 01:25:39.102" endtime="20211009 01:25:39.103"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:25:39.109" level="INFO">Running command 'ozone sh bucket create /32503-rpcbasic/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:25:47.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:25:47.602" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:25:39.105" endtime="20211009 01:25:47.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:25:47.605" level="INFO"/>
<status status="PASS" starttime="20211009 01:25:47.603" endtime="20211009 01:25:47.605"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:25:47.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:25:47.605" endtime="20211009 01:25:47.607"/>
</kw>
<status status="PASS" starttime="20211009 01:25:39.105" endtime="20211009 01:25:47.608"/>
</kw>
<msg timestamp="20211009 01:25:47.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:25:39.104" endtime="20211009 01:25:47.608"/>
</kw>
<status status="PASS" starttime="20211009 01:25:39.103" endtime="20211009 01:25:47.609"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:25:47.616" level="INFO">Running command 'ozone sh bucket info /32503-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:25:56.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:25:56.740" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211009 01:25:47.613" endtime="20211009 01:25:56.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:25:56.745" level="INFO">DISK</msg>
<status status="PASS" starttime="20211009 01:25:56.742" endtime="20211009 01:25:56.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:25:56.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:25:56.745" endtime="20211009 01:25:56.746"/>
</kw>
<status status="PASS" starttime="20211009 01:25:47.612" endtime="20211009 01:25:56.746"/>
</kw>
<msg timestamp="20211009 01:25:56.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:25:47.611" endtime="20211009 01:25:56.746"/>
</kw>
<msg timestamp="20211009 01:25:56.747" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211009 01:25:47.609" endtime="20211009 01:25:56.747"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211009 01:25:56.747" endtime="20211009 01:25:56.747"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:25:56.756" level="INFO">Running command 'ozone sh bucket info /32503-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:26:03.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:26:03.986" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211009 01:25:56.752" endtime="20211009 01:26:03.986"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:26:03.988" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211009 01:26:03.987" endtime="20211009 01:26:03.988"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:26:03.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:26:03.988" endtime="20211009 01:26:03.989"/>
</kw>
<status status="PASS" starttime="20211009 01:25:56.750" endtime="20211009 01:26:03.991"/>
</kw>
<msg timestamp="20211009 01:26:03.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:25:56.749" endtime="20211009 01:26:03.991"/>
</kw>
<msg timestamp="20211009 01:26:03.991" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211009 01:25:56.748" endtime="20211009 01:26:03.991"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211009 01:26:03.991" endtime="20211009 01:26:03.992"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:26:04.003" level="INFO">Running command 'ozone sh bucket info /32503-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:26:10.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:26:10.823" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211009 01:26:03.995" endtime="20211009 01:26:10.823"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:26:10.825" level="INFO">100</msg>
<status status="PASS" starttime="20211009 01:26:10.824" endtime="20211009 01:26:10.825"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:26:10.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:26:10.825" endtime="20211009 01:26:10.826"/>
</kw>
<status status="PASS" starttime="20211009 01:26:03.994" endtime="20211009 01:26:10.827"/>
</kw>
<msg timestamp="20211009 01:26:10.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:26:03.993" endtime="20211009 01:26:10.827"/>
</kw>
<msg timestamp="20211009 01:26:10.828" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211009 01:26:03.992" endtime="20211009 01:26:10.828"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211009 01:26:10.828" endtime="20211009 01:26:10.829"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:26:10.836" level="INFO">Running command 'ozone sh bucket setquota /32503-rpcbasic/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:26:18.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:26:18.795" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:26:10.833" endtime="20211009 01:26:18.795"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:26:18.797" level="INFO"/>
<status status="PASS" starttime="20211009 01:26:18.796" endtime="20211009 01:26:18.798"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:26:18.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:26:18.798" endtime="20211009 01:26:18.799"/>
</kw>
<status status="PASS" starttime="20211009 01:26:10.832" endtime="20211009 01:26:18.799"/>
</kw>
<msg timestamp="20211009 01:26:18.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:26:10.831" endtime="20211009 01:26:18.800"/>
</kw>
<status status="PASS" starttime="20211009 01:26:10.829" endtime="20211009 01:26:18.800"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:26:18.806" level="INFO">Running command 'ozone sh bucket info /32503-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:26:27.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:26:27.237" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211009 01:26:18.803" endtime="20211009 01:26:27.237"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:26:27.239" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211009 01:26:27.237" endtime="20211009 01:26:27.239"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:26:27.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:26:27.239" endtime="20211009 01:26:27.240"/>
</kw>
<status status="PASS" starttime="20211009 01:26:18.802" endtime="20211009 01:26:27.241"/>
</kw>
<msg timestamp="20211009 01:26:27.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:26:18.801" endtime="20211009 01:26:27.241"/>
</kw>
<msg timestamp="20211009 01:26:27.241" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211009 01:26:18.800" endtime="20211009 01:26:27.241"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211009 01:26:27.241" endtime="20211009 01:26:27.242"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:26:27.261" level="INFO">Running command 'ozone sh bucket info /32503-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:26:35.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:26:35.991" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211009 01:26:27.248" endtime="20211009 01:26:35.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:26:35.993" level="INFO">1000</msg>
<status status="PASS" starttime="20211009 01:26:35.992" endtime="20211009 01:26:35.993"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:26:35.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:26:35.994" endtime="20211009 01:26:35.994"/>
</kw>
<status status="PASS" starttime="20211009 01:26:27.248" endtime="20211009 01:26:35.995"/>
</kw>
<msg timestamp="20211009 01:26:35.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:26:27.244" endtime="20211009 01:26:35.995"/>
</kw>
<msg timestamp="20211009 01:26:35.996" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211009 01:26:27.243" endtime="20211009 01:26:35.996"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211009 01:26:35.996" endtime="20211009 01:26:35.996"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:26:36.002" level="INFO">Running command 'ozone sh bucket list /32503-rpcbasic/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:26:42.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:26:42.989" level="INFO">${output} = 32503-rpcbasic</msg>
<status status="PASS" starttime="20211009 01:26:35.998" endtime="20211009 01:26:42.989"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:26:42.990" level="INFO">32503-rpcbasic</msg>
<status status="PASS" starttime="20211009 01:26:42.990" endtime="20211009 01:26:42.991"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:26:42.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:26:42.991" endtime="20211009 01:26:42.991"/>
</kw>
<status status="PASS" starttime="20211009 01:26:35.998" endtime="20211009 01:26:42.992"/>
</kw>
<msg timestamp="20211009 01:26:42.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:26:35.998" endtime="20211009 01:26:42.992"/>
</kw>
<msg timestamp="20211009 01:26:42.992" level="INFO">${result} = 32503-rpcbasic</msg>
<status status="PASS" starttime="20211009 01:26:35.997" endtime="20211009 01:26:42.992"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211009 01:26:42.993" endtime="20211009 01:26:42.993"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:26:43.005" level="INFO">Running command 'ozone sh key put /32503-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:29:49.823" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211009 01:26:42.999" endtime="20211009 01:29:49.823"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211009 01:29:49.824" endtime="20211009 01:29:49.824"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211009 01:29:49.824" endtime="20211009 01:29:49.825"/>
</kw>
<status status="FAIL" starttime="20211009 01:26:42.997" endtime="20211009 01:29:49.825"/>
</kw>
<msg timestamp="20211009 01:29:49.825" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211009 01:26:42.996" endtime="20211009 01:29:49.825"/>
</kw>
<status status="FAIL" starttime="20211009 01:26:42.995" endtime="20211009 01:29:49.826"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211009 01:29:49.826" endtime="20211009 01:29:49.826"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211009 01:29:49.826" endtime="20211009 01:29:49.826"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211009 01:29:49.826" endtime="20211009 01:29:49.827"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211009 01:29:49.827" endtime="20211009 01:29:49.827"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211009 01:29:49.827" endtime="20211009 01:29:49.827"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211009 01:29:49.827" endtime="20211009 01:29:49.827"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211009 01:29:49.828" endtime="20211009 01:29:49.828"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211009 01:29:49.828" endtime="20211009 01:29:49.828"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211009 01:29:49.828" endtime="20211009 01:29:49.828"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211009 01:29:49.828" endtime="20211009 01:29:49.828"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211009 01:29:49.828" endtime="20211009 01:29:49.829"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211009 01:29:49.829" endtime="20211009 01:29:49.829"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211009 01:29:49.829" endtime="20211009 01:29:49.829"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211009 01:29:49.829" endtime="20211009 01:29:49.829"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211009 01:29:49.829" endtime="20211009 01:29:49.830"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211009 01:29:49.830" endtime="20211009 01:29:49.830"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211009 01:29:49.830" endtime="20211009 01:29:49.830"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211009 01:29:49.830" endtime="20211009 01:29:49.830"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211009 01:29:49.831" endtime="20211009 01:29:49.831"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211009 01:29:49.831" endtime="20211009 01:29:49.831"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211009 01:29:49.831" endtime="20211009 01:29:49.832"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211009 01:29:49.832" endtime="20211009 01:29:49.832"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211009 01:29:49.832" endtime="20211009 01:29:49.832"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211009 01:29:49.832" endtime="20211009 01:29:49.832"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211009 01:29:49.833" endtime="20211009 01:29:49.833"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211009 01:29:49.833" endtime="20211009 01:29:49.833"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211009 01:29:49.833" endtime="20211009 01:29:49.833"/>
</kw>
<status status="FAIL" starttime="20211009 01:26:42.994" endtime="20211009 01:29:49.834"/>
</kw>
<status status="FAIL" starttime="20211009 01:26:42.993" endtime="20211009 01:29:49.834"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211009 01:29:49.834" endtime="20211009 01:29:49.834"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211009 01:29:49.834" endtime="20211009 01:29:49.834"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211009 01:29:49.834" endtime="20211009 01:29:49.834"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211009 01:29:49.834" endtime="20211009 01:29:49.835"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211009 01:29:49.835" endtime="20211009 01:29:49.835"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211009 01:29:49.835" endtime="20211009 01:29:49.835"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211009 01:29:49.835" endtime="20211009 01:29:49.835"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211009 01:29:49.835" endtime="20211009 01:29:49.835"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211009 01:29:49.836" endtime="20211009 01:29:49.836"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211009 01:29:49.836" endtime="20211009 01:29:49.836"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211009 01:29:49.836" endtime="20211009 01:29:49.836"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211009 01:29:49.836" endtime="20211009 01:29:49.836"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211009 01:29:49.836" endtime="20211009 01:29:49.836"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211009 01:29:49.837" endtime="20211009 01:29:49.837"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211009 01:29:49.837" endtime="20211009 01:29:49.837"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211009 01:29:49.837" endtime="20211009 01:29:49.837"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211009 01:29:49.837" endtime="20211009 01:29:49.837"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211009 01:29:49.838" endtime="20211009 01:29:49.838"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211009 01:29:49.838" endtime="20211009 01:29:49.838"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211009 01:29:49.838" endtime="20211009 01:29:49.838"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211009 01:29:49.838" endtime="20211009 01:29:49.838"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211009 01:29:49.839" endtime="20211009 01:29:49.839"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211009 01:29:49.839" endtime="20211009 01:29:49.839"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211009 01:29:49.839" endtime="20211009 01:29:49.839"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211009 01:29:49.839" endtime="20211009 01:29:49.839"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211009 01:29:49.840" endtime="20211009 01:29:49.840"/>
</kw>
<status status="FAIL" starttime="20211009 01:24:49.823" endtime="20211009 01:29:49.840"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211009 01:24:49.822" endtime="20211009 01:29:49.841">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20211009 01:24:49.791" endtime="20211009 01:29:49.843"/>
</suite>
<suite id="s1-s1-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211009 01:29:49.859" level="INFO">${random} = 02719</msg>
<status status="PASS" starttime="20211009 01:29:49.858" endtime="20211009 01:29:49.859"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211009 01:29:49.860" level="INFO">${prefix} = 02719</msg>
<status status="PASS" starttime="20211009 01:29:49.859" endtime="20211009 01:29:49.860"/>
</kw>
<status status="PASS" starttime="20211009 01:29:49.858" endtime="20211009 01:29:49.860"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:29:49.867" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:29:49.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:29:49.873" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211009 01:29:49.865" endtime="20211009 01:29:49.873"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:29:49.876" level="INFO">scm</msg>
<status status="PASS" starttime="20211009 01:29:49.874" endtime="20211009 01:29:49.876"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:29:49.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:29:49.876" endtime="20211009 01:29:49.878"/>
</kw>
<status status="PASS" starttime="20211009 01:29:49.864" endtime="20211009 01:29:49.879"/>
</kw>
<msg timestamp="20211009 01:29:49.879" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:29:49.863" endtime="20211009 01:29:49.880"/>
</kw>
<msg timestamp="20211009 01:29:49.880" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211009 01:29:49.863" endtime="20211009 01:29:49.880"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211009 01:29:49.882" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211009 01:29:49.880" endtime="20211009 01:29:49.882"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:29:49.888" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:29:50.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:29:50.113" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:29:49.885" endtime="20211009 01:29:50.113"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:29:50.114" level="INFO"/>
<status status="PASS" starttime="20211009 01:29:50.114" endtime="20211009 01:29:50.115"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:29:50.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:29:50.115" endtime="20211009 01:29:50.116"/>
</kw>
<status status="PASS" starttime="20211009 01:29:49.885" endtime="20211009 01:29:50.116"/>
</kw>
<msg timestamp="20211009 01:29:50.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:29:49.884" endtime="20211009 01:29:50.117"/>
</kw>
<status status="PASS" starttime="20211009 01:29:49.883" endtime="20211009 01:29:50.117"/>
</kw>
<status status="PASS" starttime="20211009 01:29:49.883" endtime="20211009 01:29:50.117"/>
</kw>
<status status="PASS" starttime="20211009 01:29:49.862" endtime="20211009 01:29:50.118"/>
</kw>
<status status="PASS" starttime="20211009 01:29:49.862" endtime="20211009 01:29:50.118"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:29:50.122" level="INFO">Running command 'ozone sh volume info o3://om:9862/02719-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:29:59.150" level="INFO">${rc} = 255</msg>
<msg timestamp="20211009 01:29:59.151" level="INFO">${output} = VOLUME_NOT_FOUND Volume 02719-rpcwoport is not found</msg>
<status status="PASS" starttime="20211009 01:29:50.120" endtime="20211009 01:29:59.151"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:29:59.153" level="INFO">VOLUME_NOT_FOUND Volume 02719-rpcwoport is not found</msg>
<status status="PASS" starttime="20211009 01:29:59.152" endtime="20211009 01:29:59.153"/>
</kw>
<msg timestamp="20211009 01:29:59.154" level="INFO">${result} = VOLUME_NOT_FOUND Volume 02719-rpcwoport is not found</msg>
<status status="PASS" starttime="20211009 01:29:50.119" endtime="20211009 01:29:59.155"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211009 01:29:59.155" endtime="20211009 01:29:59.156"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:29:59.164" level="INFO">Running command 'ozone sh volume create o3://om:9862/02719-rpcwoport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:30:07.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:30:07.195" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:29:59.161" endtime="20211009 01:30:07.195"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:30:07.198" level="INFO"/>
<status status="PASS" starttime="20211009 01:30:07.196" endtime="20211009 01:30:07.198"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:30:07.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:30:07.198" endtime="20211009 01:30:07.200"/>
</kw>
<status status="PASS" starttime="20211009 01:29:59.159" endtime="20211009 01:30:07.201"/>
</kw>
<msg timestamp="20211009 01:30:07.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:29:59.159" endtime="20211009 01:30:07.201"/>
</kw>
<msg timestamp="20211009 01:30:07.201" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211009 01:29:59.157" endtime="20211009 01:30:07.201"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211009 01:30:07.202" endtime="20211009 01:30:07.202"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:30:07.211" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '.[] | select(.name=="02719-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:30:15.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:30:15.863" level="INFO">${output} = {
  "metadata": {},
  "name": "02719-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211009 01:30:07.208" endtime="20211009 01:30:15.863"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:30:15.865" level="INFO">{
  "metadata": {},
  "name": "02719-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-09T01:30:06.759Z",
  "modificationTime": "2021-10-09T01:30:06.759Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211009 01:30:15.864" endtime="20211009 01:30:15.865"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:30:15.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:30:15.865" endtime="20211009 01:30:15.866"/>
</kw>
<status status="PASS" starttime="20211009 01:30:07.206" endtime="20211009 01:30:15.866"/>
</kw>
<msg timestamp="20211009 01:30:15.866" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:30:07.205" endtime="20211009 01:30:15.867"/>
</kw>
<msg timestamp="20211009 01:30:15.867" level="INFO">${result} = {
  "metadata": {},
  "name": "02719-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211009 01:30:07.203" endtime="20211009 01:30:15.867"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211009 01:30:15.867" endtime="20211009 01:30:15.868"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:30:15.875" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="02719-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:30:25.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:30:25.168" level="INFO">${output} = {
  "metadata": {},
  "name": "02719-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211009 01:30:15.871" endtime="20211009 01:30:25.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:30:25.169" level="INFO">{
  "metadata": {},
  "name": "02719-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-09T01:30:06.759Z",
  "modificationTime": "2021-10-09T01:30:06.759Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211009 01:30:25.168" endtime="20211009 01:30:25.169"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:30:25.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:30:25.169" endtime="20211009 01:30:25.170"/>
</kw>
<status status="PASS" starttime="20211009 01:30:15.870" endtime="20211009 01:30:25.171"/>
</kw>
<msg timestamp="20211009 01:30:25.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:30:15.870" endtime="20211009 01:30:25.171"/>
</kw>
<msg timestamp="20211009 01:30:25.171" level="INFO">${result} = {
  "metadata": {},
  "name": "02719-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20211009 01:30:15.868" endtime="20211009 01:30:25.171"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211009 01:30:25.172" endtime="20211009 01:30:25.172"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:30:25.179" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/02719-rpcwoport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:30:33.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:30:33.608" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:30:25.175" endtime="20211009 01:30:33.609"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:30:33.610" level="INFO"/>
<status status="PASS" starttime="20211009 01:30:33.609" endtime="20211009 01:30:33.610"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:30:33.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:30:33.610" endtime="20211009 01:30:33.611"/>
</kw>
<status status="PASS" starttime="20211009 01:30:25.174" endtime="20211009 01:30:33.611"/>
</kw>
<msg timestamp="20211009 01:30:33.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:30:25.173" endtime="20211009 01:30:33.612"/>
</kw>
<status status="PASS" starttime="20211009 01:30:25.172" endtime="20211009 01:30:33.612"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:30:33.624" level="INFO">Running command 'ozone sh volume info o3://om:9862/02719-rpcwoport | jq -r '. | select(.name=="02719-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:30:42.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:30:42.422" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211009 01:30:33.616" endtime="20211009 01:30:42.422"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:30:42.424" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211009 01:30:42.423" endtime="20211009 01:30:42.424"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:30:42.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:30:42.424" endtime="20211009 01:30:42.426"/>
</kw>
<status status="PASS" starttime="20211009 01:30:33.615" endtime="20211009 01:30:42.427"/>
</kw>
<msg timestamp="20211009 01:30:42.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:30:33.614" endtime="20211009 01:30:42.428"/>
</kw>
<msg timestamp="20211009 01:30:42.429" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211009 01:30:33.612" endtime="20211009 01:30:42.430"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211009 01:30:42.430" endtime="20211009 01:30:42.431"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:30:42.439" level="INFO">Running command 'ozone sh bucket create o3://om:9862/02719-rpcwoport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:30:50.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:30:50.654" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:30:42.436" endtime="20211009 01:30:50.654"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:30:50.656" level="INFO"/>
<status status="PASS" starttime="20211009 01:30:50.655" endtime="20211009 01:30:50.656"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:30:50.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:30:50.656" endtime="20211009 01:30:50.657"/>
</kw>
<status status="PASS" starttime="20211009 01:30:42.434" endtime="20211009 01:30:50.657"/>
</kw>
<msg timestamp="20211009 01:30:50.658" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:30:42.434" endtime="20211009 01:30:50.658"/>
</kw>
<status status="PASS" starttime="20211009 01:30:42.432" endtime="20211009 01:30:50.658"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:30:50.666" level="INFO">Running command 'ozone sh bucket info o3://om:9862/02719-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:30:57.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:30:57.408" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211009 01:30:50.662" endtime="20211009 01:30:57.408"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:30:57.410" level="INFO">DISK</msg>
<status status="PASS" starttime="20211009 01:30:57.409" endtime="20211009 01:30:57.411"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:30:57.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:30:57.411" endtime="20211009 01:30:57.412"/>
</kw>
<status status="PASS" starttime="20211009 01:30:50.661" endtime="20211009 01:30:57.413"/>
</kw>
<msg timestamp="20211009 01:30:57.413" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:30:50.660" endtime="20211009 01:30:57.413"/>
</kw>
<msg timestamp="20211009 01:30:57.414" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211009 01:30:50.658" endtime="20211009 01:30:57.414"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211009 01:30:57.414" endtime="20211009 01:30:57.415"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:30:57.423" level="INFO">Running command 'ozone sh bucket info o3://om:9862/02719-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:31:06.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:31:06.641" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211009 01:30:57.418" endtime="20211009 01:31:06.641"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:31:06.643" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211009 01:31:06.642" endtime="20211009 01:31:06.643"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:31:06.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:31:06.643" endtime="20211009 01:31:06.645"/>
</kw>
<status status="PASS" starttime="20211009 01:30:57.417" endtime="20211009 01:31:06.645"/>
</kw>
<msg timestamp="20211009 01:31:06.646" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:30:57.417" endtime="20211009 01:31:06.646"/>
</kw>
<msg timestamp="20211009 01:31:06.647" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211009 01:30:57.415" endtime="20211009 01:31:06.647"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211009 01:31:06.647" endtime="20211009 01:31:06.648"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:31:06.656" level="INFO">Running command 'ozone sh bucket info o3://om:9862/02719-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:31:13.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:31:13.740" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211009 01:31:06.653" endtime="20211009 01:31:13.740"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:31:13.742" level="INFO">100</msg>
<status status="PASS" starttime="20211009 01:31:13.741" endtime="20211009 01:31:13.742"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:31:13.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:31:13.742" endtime="20211009 01:31:13.743"/>
</kw>
<status status="PASS" starttime="20211009 01:31:06.651" endtime="20211009 01:31:13.743"/>
</kw>
<msg timestamp="20211009 01:31:13.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:31:06.651" endtime="20211009 01:31:13.744"/>
</kw>
<msg timestamp="20211009 01:31:13.744" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211009 01:31:06.649" endtime="20211009 01:31:13.744"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211009 01:31:13.744" endtime="20211009 01:31:13.745"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:31:13.751" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/02719-rpcwoport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:31:21.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:31:21.138" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:31:13.747" endtime="20211009 01:31:21.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:31:21.140" level="INFO"/>
<status status="PASS" starttime="20211009 01:31:21.139" endtime="20211009 01:31:21.140"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:31:21.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:31:21.140" endtime="20211009 01:31:21.141"/>
</kw>
<status status="PASS" starttime="20211009 01:31:13.746" endtime="20211009 01:31:21.141"/>
</kw>
<msg timestamp="20211009 01:31:21.141" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:31:13.746" endtime="20211009 01:31:21.141"/>
</kw>
<status status="PASS" starttime="20211009 01:31:13.745" endtime="20211009 01:31:21.142"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:31:21.148" level="INFO">Running command 'ozone sh bucket info o3://om:9862/02719-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:31:28.419" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:31:28.419" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211009 01:31:21.145" endtime="20211009 01:31:28.419"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:31:28.423" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211009 01:31:28.420" endtime="20211009 01:31:28.423"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:31:28.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:31:28.424" endtime="20211009 01:31:28.425"/>
</kw>
<status status="PASS" starttime="20211009 01:31:21.143" endtime="20211009 01:31:28.426"/>
</kw>
<msg timestamp="20211009 01:31:28.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:31:21.143" endtime="20211009 01:31:28.427"/>
</kw>
<msg timestamp="20211009 01:31:28.428" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211009 01:31:21.142" endtime="20211009 01:31:28.428"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211009 01:31:28.428" endtime="20211009 01:31:28.429"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:31:28.437" level="INFO">Running command 'ozone sh bucket info o3://om:9862/02719-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:31:37.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:31:37.554" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211009 01:31:28.433" endtime="20211009 01:31:37.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:31:37.557" level="INFO">1000</msg>
<status status="PASS" starttime="20211009 01:31:37.556" endtime="20211009 01:31:37.557"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:31:37.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:31:37.557" endtime="20211009 01:31:37.559"/>
</kw>
<status status="PASS" starttime="20211009 01:31:28.432" endtime="20211009 01:31:37.560"/>
</kw>
<msg timestamp="20211009 01:31:37.560" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:31:28.432" endtime="20211009 01:31:37.560"/>
</kw>
<msg timestamp="20211009 01:31:37.561" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211009 01:31:28.429" endtime="20211009 01:31:37.561"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211009 01:31:37.562" endtime="20211009 01:31:37.563"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:31:37.572" level="INFO">Running command 'ozone sh bucket list o3://om:9862/02719-rpcwoport/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:31:45.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:31:46.000" level="INFO">${output} = 02719-rpcwoport</msg>
<status status="PASS" starttime="20211009 01:31:37.568" endtime="20211009 01:31:46.000"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:31:46.004" level="INFO">02719-rpcwoport</msg>
<status status="PASS" starttime="20211009 01:31:46.002" endtime="20211009 01:31:46.004"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:31:46.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:31:46.005" endtime="20211009 01:31:46.006"/>
</kw>
<status status="PASS" starttime="20211009 01:31:37.567" endtime="20211009 01:31:46.007"/>
</kw>
<msg timestamp="20211009 01:31:46.008" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:31:37.566" endtime="20211009 01:31:46.008"/>
</kw>
<msg timestamp="20211009 01:31:46.009" level="INFO">${result} = 02719-rpcwoport</msg>
<status status="PASS" starttime="20211009 01:31:37.564" endtime="20211009 01:31:46.009"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211009 01:31:46.009" endtime="20211009 01:31:46.011"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:31:46.022" level="INFO">Running command 'ozone sh key put o3://om:9862/02719-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:34:49.861" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211009 01:31:46.018" endtime="20211009 01:34:49.861"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211009 01:34:49.862" endtime="20211009 01:34:49.862"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211009 01:34:49.862" endtime="20211009 01:34:49.862"/>
</kw>
<status status="FAIL" starttime="20211009 01:31:46.017" endtime="20211009 01:34:49.864"/>
</kw>
<msg timestamp="20211009 01:34:49.864" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211009 01:31:46.016" endtime="20211009 01:34:49.864"/>
</kw>
<status status="FAIL" starttime="20211009 01:31:46.015" endtime="20211009 01:34:49.864"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211009 01:34:49.865" endtime="20211009 01:34:49.865"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211009 01:34:49.865" endtime="20211009 01:34:49.865"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211009 01:34:49.865" endtime="20211009 01:34:49.865"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211009 01:34:49.865" endtime="20211009 01:34:49.865"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211009 01:34:49.866" endtime="20211009 01:34:49.866"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211009 01:34:49.866" endtime="20211009 01:34:49.866"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211009 01:34:49.866" endtime="20211009 01:34:49.866"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211009 01:34:49.866" endtime="20211009 01:34:49.868"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211009 01:34:49.868" endtime="20211009 01:34:49.868"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211009 01:34:49.869" endtime="20211009 01:34:49.869"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211009 01:34:49.869" endtime="20211009 01:34:49.869"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211009 01:34:49.869" endtime="20211009 01:34:49.869"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211009 01:34:49.869" endtime="20211009 01:34:49.869"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211009 01:34:49.869" endtime="20211009 01:34:49.870"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211009 01:34:49.870" endtime="20211009 01:34:49.870"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211009 01:34:49.870" endtime="20211009 01:34:49.870"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211009 01:34:49.870" endtime="20211009 01:34:49.870"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211009 01:34:49.870" endtime="20211009 01:34:49.871"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211009 01:34:49.871" endtime="20211009 01:34:49.871"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211009 01:34:49.871" endtime="20211009 01:34:49.871"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211009 01:34:49.871" endtime="20211009 01:34:49.871"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211009 01:34:49.871" endtime="20211009 01:34:49.872"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211009 01:34:49.872" endtime="20211009 01:34:49.873"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211009 01:34:49.873" endtime="20211009 01:34:49.873"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211009 01:34:49.873" endtime="20211009 01:34:49.873"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211009 01:34:49.873" endtime="20211009 01:34:49.873"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211009 01:34:49.874" endtime="20211009 01:34:49.874"/>
</kw>
<status status="FAIL" starttime="20211009 01:31:46.013" endtime="20211009 01:34:49.874"/>
</kw>
<status status="FAIL" starttime="20211009 01:31:46.012" endtime="20211009 01:34:49.874"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211009 01:34:49.874" endtime="20211009 01:34:49.874"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211009 01:34:49.875" endtime="20211009 01:34:49.875"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211009 01:34:49.875" endtime="20211009 01:34:49.875"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211009 01:34:49.875" endtime="20211009 01:34:49.875"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211009 01:34:49.875" endtime="20211009 01:34:49.876"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211009 01:34:49.876" endtime="20211009 01:34:49.876"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211009 01:34:49.876" endtime="20211009 01:34:49.876"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211009 01:34:49.877" endtime="20211009 01:34:49.877"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211009 01:34:49.877" endtime="20211009 01:34:49.877"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211009 01:34:49.877" endtime="20211009 01:34:49.877"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211009 01:34:49.877" endtime="20211009 01:34:49.878"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211009 01:34:49.878" endtime="20211009 01:34:49.878"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211009 01:34:49.878" endtime="20211009 01:34:49.878"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211009 01:34:49.878" endtime="20211009 01:34:49.878"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211009 01:34:49.879" endtime="20211009 01:34:49.879"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211009 01:34:49.879" endtime="20211009 01:34:49.879"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211009 01:34:49.879" endtime="20211009 01:34:49.879"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211009 01:34:49.879" endtime="20211009 01:34:49.879"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211009 01:34:49.880" endtime="20211009 01:34:49.880"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211009 01:34:49.880" endtime="20211009 01:34:49.880"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211009 01:34:49.880" endtime="20211009 01:34:49.880"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211009 01:34:49.880" endtime="20211009 01:34:49.881"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211009 01:34:49.881" endtime="20211009 01:34:49.881"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211009 01:34:49.881" endtime="20211009 01:34:49.881"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211009 01:34:49.881" endtime="20211009 01:34:49.881"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211009 01:34:49.882" endtime="20211009 01:34:49.882"/>
</kw>
<status status="FAIL" starttime="20211009 01:29:50.118" endtime="20211009 01:34:49.882"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211009 01:29:49.860" endtime="20211009 01:34:49.882">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:34:49.893" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:34:49.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:34:49.898" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211009 01:34:49.890" endtime="20211009 01:34:49.898"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:34:49.899" level="INFO">scm</msg>
<status status="PASS" starttime="20211009 01:34:49.898" endtime="20211009 01:34:49.899"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:34:49.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:34:49.900" endtime="20211009 01:34:49.900"/>
</kw>
<status status="PASS" starttime="20211009 01:34:49.889" endtime="20211009 01:34:49.901"/>
</kw>
<msg timestamp="20211009 01:34:49.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:34:49.889" endtime="20211009 01:34:49.901"/>
</kw>
<msg timestamp="20211009 01:34:49.902" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211009 01:34:49.888" endtime="20211009 01:34:49.902"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211009 01:34:49.903" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211009 01:34:49.902" endtime="20211009 01:34:49.903"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:34:49.924" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:34:49.934" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:34:49.934" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:34:49.907" endtime="20211009 01:34:49.934"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:34:49.936" level="INFO"/>
<status status="PASS" starttime="20211009 01:34:49.935" endtime="20211009 01:34:49.936"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:34:49.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:34:49.936" endtime="20211009 01:34:49.937"/>
</kw>
<status status="PASS" starttime="20211009 01:34:49.906" endtime="20211009 01:34:49.937"/>
</kw>
<msg timestamp="20211009 01:34:49.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:34:49.906" endtime="20211009 01:34:49.938"/>
</kw>
<status status="PASS" starttime="20211009 01:34:49.905" endtime="20211009 01:34:49.938"/>
</kw>
<status status="PASS" starttime="20211009 01:34:49.904" endtime="20211009 01:34:49.938"/>
</kw>
<status status="PASS" starttime="20211009 01:34:49.887" endtime="20211009 01:34:49.938"/>
</kw>
<status status="PASS" starttime="20211009 01:34:49.885" endtime="20211009 01:34:49.939"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:34:49.946" level="INFO">Running command 'ozone sh volume create o3://om:9862/02719-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:34:58.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:34:58.205" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:34:49.943" endtime="20211009 01:34:58.205"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:34:58.208" level="INFO"/>
<status status="PASS" starttime="20211009 01:34:58.206" endtime="20211009 01:34:58.208"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:34:58.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:34:58.208" endtime="20211009 01:34:58.209"/>
</kw>
<status status="PASS" starttime="20211009 01:34:49.942" endtime="20211009 01:34:58.210"/>
</kw>
<msg timestamp="20211009 01:34:58.210" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:34:49.941" endtime="20211009 01:34:58.211"/>
</kw>
<status status="PASS" starttime="20211009 01:34:49.940" endtime="20211009 01:34:58.212"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:34:58.221" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/02719-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:35:07.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:35:07.207" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211009 01:34:58.217" endtime="20211009 01:35:07.207"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:35:07.210" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211009 01:35:07.208" endtime="20211009 01:35:07.210"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:35:07.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:35:07.210" endtime="20211009 01:35:07.211"/>
</kw>
<status status="PASS" starttime="20211009 01:34:58.215" endtime="20211009 01:35:07.212"/>
</kw>
<msg timestamp="20211009 01:35:07.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:34:58.214" endtime="20211009 01:35:07.212"/>
</kw>
<msg timestamp="20211009 01:35:07.213" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211009 01:34:58.212" endtime="20211009 01:35:07.213"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211009 01:35:07.213" endtime="20211009 01:35:07.216"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:35:07.224" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/02719-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:35:14.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:35:14.970" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211009 01:35:07.220" endtime="20211009 01:35:14.970"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:35:14.972" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211009 01:35:14.971" endtime="20211009 01:35:14.972"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:35:14.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:35:14.972" endtime="20211009 01:35:14.973"/>
</kw>
<status status="PASS" starttime="20211009 01:35:07.219" endtime="20211009 01:35:14.974"/>
</kw>
<msg timestamp="20211009 01:35:14.974" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:35:07.218" endtime="20211009 01:35:14.974"/>
</kw>
<msg timestamp="20211009 01:35:14.974" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211009 01:35:07.216" endtime="20211009 01:35:14.974"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:35:14.979" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/02719-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:35:23.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:35:23.784" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211009 01:35:14.977" endtime="20211009 01:35:23.784"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:35:23.786" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211009 01:35:23.785" endtime="20211009 01:35:23.786"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:35:23.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:35:23.786" endtime="20211009 01:35:23.787"/>
</kw>
<status status="PASS" starttime="20211009 01:35:14.976" endtime="20211009 01:35:23.788"/>
</kw>
<msg timestamp="20211009 01:35:23.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:35:14.975" endtime="20211009 01:35:23.788"/>
</kw>
<msg timestamp="20211009 01:35:23.789" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211009 01:35:14.974" endtime="20211009 01:35:23.789"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211009 01:35:23.789" endtime="20211009 01:35:23.791"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:35:23.796" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/02719-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:35:32.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:35:32.190" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211009 01:35:23.794" endtime="20211009 01:35:32.190"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:35:32.192" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211009 01:35:32.191" endtime="20211009 01:35:32.193"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:35:32.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:35:32.193" endtime="20211009 01:35:32.194"/>
</kw>
<status status="PASS" starttime="20211009 01:35:23.793" endtime="20211009 01:35:32.195"/>
</kw>
<msg timestamp="20211009 01:35:32.195" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:35:23.792" endtime="20211009 01:35:32.195"/>
</kw>
<msg timestamp="20211009 01:35:32.196" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211009 01:35:23.791" endtime="20211009 01:35:32.196"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:35:32.203" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/02719-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:35:41.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:35:41.000" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211009 01:35:32.200" endtime="20211009 01:35:41.000"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:35:41.003" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211009 01:35:41.002" endtime="20211009 01:35:41.003"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:35:41.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:35:41.004" endtime="20211009 01:35:41.005"/>
</kw>
<status status="PASS" starttime="20211009 01:35:32.199" endtime="20211009 01:35:41.005"/>
</kw>
<msg timestamp="20211009 01:35:41.005" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:35:32.199" endtime="20211009 01:35:41.005"/>
</kw>
<msg timestamp="20211009 01:35:41.006" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20211009 01:35:32.196" endtime="20211009 01:35:41.006"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211009 01:35:41.007" endtime="20211009 01:35:41.008"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:35:41.017" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/02719-rpcwoport2 -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:35:48.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:35:48.848" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211009 01:35:41.013" endtime="20211009 01:35:48.848"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:35:48.851" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211009 01:35:48.849" endtime="20211009 01:35:48.851"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:35:48.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:35:48.851" endtime="20211009 01:35:48.853"/>
</kw>
<status status="PASS" starttime="20211009 01:35:41.012" endtime="20211009 01:35:48.854"/>
</kw>
<msg timestamp="20211009 01:35:48.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:35:41.010" endtime="20211009 01:35:48.854"/>
</kw>
<msg timestamp="20211009 01:35:48.855" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211009 01:35:41.009" endtime="20211009 01:35:48.855"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:35:48.862" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/02719-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:35:57.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:35:57.660" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211009 01:35:48.858" endtime="20211009 01:35:57.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:35:57.662" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211009 01:35:57.661" endtime="20211009 01:35:57.662"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:35:57.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:35:57.662" endtime="20211009 01:35:57.664"/>
</kw>
<status status="PASS" starttime="20211009 01:35:48.857" endtime="20211009 01:35:57.664"/>
</kw>
<msg timestamp="20211009 01:35:57.664" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:35:48.857" endtime="20211009 01:35:57.665"/>
</kw>
<msg timestamp="20211009 01:35:57.665" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211009 01:35:48.855" endtime="20211009 01:35:57.666"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211009 01:35:57.666" endtime="20211009 01:35:57.667"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211009 01:35:57.668" endtime="20211009 01:35:57.669"/>
</kw>
<status status="PASS" starttime="20211009 01:34:49.939" endtime="20211009 01:35:57.670"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211009 01:34:49.884" endtime="20211009 01:35:57.671"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:35:57.682" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:35:57.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:35:57.708" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211009 01:35:57.679" endtime="20211009 01:35:57.709"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:35:57.710" level="INFO">scm</msg>
<status status="PASS" starttime="20211009 01:35:57.709" endtime="20211009 01:35:57.710"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:35:57.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:35:57.711" endtime="20211009 01:35:57.711"/>
</kw>
<status status="PASS" starttime="20211009 01:35:57.678" endtime="20211009 01:35:57.712"/>
</kw>
<msg timestamp="20211009 01:35:57.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:35:57.677" endtime="20211009 01:35:57.712"/>
</kw>
<msg timestamp="20211009 01:35:57.714" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211009 01:35:57.676" endtime="20211009 01:35:57.714"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211009 01:35:57.716" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211009 01:35:57.714" endtime="20211009 01:35:57.716"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:35:57.730" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:35:57.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:35:57.923" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:35:57.724" endtime="20211009 01:35:57.923"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:35:57.924" level="INFO"/>
<status status="PASS" starttime="20211009 01:35:57.923" endtime="20211009 01:35:57.924"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:35:57.925" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:35:57.925" endtime="20211009 01:35:57.925"/>
</kw>
<status status="PASS" starttime="20211009 01:35:57.720" endtime="20211009 01:35:57.926"/>
</kw>
<msg timestamp="20211009 01:35:57.926" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:35:57.719" endtime="20211009 01:35:57.926"/>
</kw>
<status status="PASS" starttime="20211009 01:35:57.718" endtime="20211009 01:35:57.926"/>
</kw>
<status status="PASS" starttime="20211009 01:35:57.717" endtime="20211009 01:35:57.926"/>
</kw>
<status status="PASS" starttime="20211009 01:35:57.675" endtime="20211009 01:35:57.926"/>
</kw>
<status status="PASS" starttime="20211009 01:35:57.674" endtime="20211009 01:35:57.927"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:35:57.934" level="INFO">Running command 'ozone sh bucket create o3://om:9862/02719-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:36:06.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:36:06.304" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:35:57.930" endtime="20211009 01:36:06.304"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:36:06.306" level="INFO"/>
<status status="PASS" starttime="20211009 01:36:06.305" endtime="20211009 01:36:06.306"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:36:06.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:36:06.307" endtime="20211009 01:36:06.309"/>
</kw>
<status status="PASS" starttime="20211009 01:35:57.929" endtime="20211009 01:36:06.309"/>
</kw>
<msg timestamp="20211009 01:36:06.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:35:57.929" endtime="20211009 01:36:06.309"/>
</kw>
<status status="PASS" starttime="20211009 01:35:57.928" endtime="20211009 01:36:06.310"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:36:06.316" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/02719-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:36:15.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:36:15.928" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211009 01:36:06.313" endtime="20211009 01:36:15.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:36:15.929" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211009 01:36:15.928" endtime="20211009 01:36:15.929"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:36:15.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:36:15.930" endtime="20211009 01:36:15.930"/>
</kw>
<status status="PASS" starttime="20211009 01:36:06.312" endtime="20211009 01:36:15.931"/>
</kw>
<msg timestamp="20211009 01:36:15.931" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:36:06.311" endtime="20211009 01:36:15.931"/>
</kw>
<msg timestamp="20211009 01:36:15.931" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211009 01:36:06.310" endtime="20211009 01:36:15.931"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211009 01:36:15.932" endtime="20211009 01:36:15.932"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:36:15.937" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/02719-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:36:23.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:36:23.573" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20211009 01:36:15.934" endtime="20211009 01:36:23.573"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:36:23.575" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20211009 01:36:23.573" endtime="20211009 01:36:23.575"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:36:23.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:36:23.575" endtime="20211009 01:36:23.576"/>
</kw>
<status status="PASS" starttime="20211009 01:36:15.934" endtime="20211009 01:36:23.578"/>
</kw>
<msg timestamp="20211009 01:36:23.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:36:15.933" endtime="20211009 01:36:23.578"/>
</kw>
<msg timestamp="20211009 01:36:23.578" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20211009 01:36:15.933" endtime="20211009 01:36:23.578"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:36:23.586" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/02719-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:36:33.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:36:33.133" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211009 01:36:23.582" endtime="20211009 01:36:33.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:36:33.135" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211009 01:36:33.134" endtime="20211009 01:36:33.135"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:36:33.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:36:33.135" endtime="20211009 01:36:33.140"/>
</kw>
<status status="PASS" starttime="20211009 01:36:23.580" endtime="20211009 01:36:33.140"/>
</kw>
<msg timestamp="20211009 01:36:33.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:36:23.580" endtime="20211009 01:36:33.140"/>
</kw>
<msg timestamp="20211009 01:36:33.141" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211009 01:36:23.579" endtime="20211009 01:36:33.141"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211009 01:36:33.142" endtime="20211009 01:36:33.143"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:36:33.153" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/02719-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:36:41.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:36:41.337" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211009 01:36:33.145" endtime="20211009 01:36:41.337"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:36:41.339" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211009 01:36:41.338" endtime="20211009 01:36:41.339"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:36:41.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:36:41.339" endtime="20211009 01:36:41.340"/>
</kw>
<status status="PASS" starttime="20211009 01:36:33.144" endtime="20211009 01:36:41.340"/>
</kw>
<msg timestamp="20211009 01:36:41.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:36:33.144" endtime="20211009 01:36:41.340"/>
</kw>
<msg timestamp="20211009 01:36:41.341" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211009 01:36:33.143" endtime="20211009 01:36:41.341"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:36:41.347" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/02719-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:36:50.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:36:50.123" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211009 01:36:41.343" endtime="20211009 01:36:50.123"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:36:50.126" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211009 01:36:50.124" endtime="20211009 01:36:50.126"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:36:50.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:36:50.128" endtime="20211009 01:36:50.129"/>
</kw>
<status status="PASS" starttime="20211009 01:36:41.342" endtime="20211009 01:36:50.129"/>
</kw>
<msg timestamp="20211009 01:36:50.130" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:36:41.342" endtime="20211009 01:36:50.130"/>
</kw>
<msg timestamp="20211009 01:36:50.130" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211009 01:36:41.341" endtime="20211009 01:36:50.130"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211009 01:36:50.131" endtime="20211009 01:36:50.132"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:36:50.139" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/02719-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:36:58.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:36:58.049" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211009 01:36:50.135" endtime="20211009 01:36:58.049"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:36:58.052" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211009 01:36:58.051" endtime="20211009 01:36:58.053"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:36:58.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:36:58.053" endtime="20211009 01:36:58.055"/>
</kw>
<status status="PASS" starttime="20211009 01:36:50.134" endtime="20211009 01:36:58.058"/>
</kw>
<msg timestamp="20211009 01:36:58.058" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:36:50.133" endtime="20211009 01:36:58.059"/>
</kw>
<msg timestamp="20211009 01:36:58.060" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211009 01:36:50.132" endtime="20211009 01:36:58.060"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:36:58.082" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/02719-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:37:06.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:37:06.523" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211009 01:36:58.078" endtime="20211009 01:37:06.523"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:37:06.524" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211009 01:37:06.523" endtime="20211009 01:37:06.525"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:37:06.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:37:06.525" endtime="20211009 01:37:06.526"/>
</kw>
<status status="PASS" starttime="20211009 01:36:58.077" endtime="20211009 01:37:06.526"/>
</kw>
<msg timestamp="20211009 01:37:06.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:36:58.076" endtime="20211009 01:37:06.526"/>
</kw>
<msg timestamp="20211009 01:37:06.527" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211009 01:36:58.060" endtime="20211009 01:37:06.527"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211009 01:37:06.527" endtime="20211009 01:37:06.528"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211009 01:37:06.529" endtime="20211009 01:37:06.532"/>
</kw>
<status status="PASS" starttime="20211009 01:35:57.927" endtime="20211009 01:37:06.532"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211009 01:35:57.672" endtime="20211009 01:37:06.532"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:37:06.541" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:37:06.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:37:06.546" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211009 01:37:06.539" endtime="20211009 01:37:06.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:37:06.548" level="INFO">scm</msg>
<status status="PASS" starttime="20211009 01:37:06.547" endtime="20211009 01:37:06.548"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:37:06.549" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:37:06.548" endtime="20211009 01:37:06.549"/>
</kw>
<status status="PASS" starttime="20211009 01:37:06.538" endtime="20211009 01:37:06.550"/>
</kw>
<msg timestamp="20211009 01:37:06.550" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:37:06.537" endtime="20211009 01:37:06.550"/>
</kw>
<msg timestamp="20211009 01:37:06.551" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211009 01:37:06.537" endtime="20211009 01:37:06.551"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211009 01:37:06.552" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211009 01:37:06.551" endtime="20211009 01:37:06.552"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:37:06.558" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:37:06.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:37:06.570" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:37:06.555" endtime="20211009 01:37:06.570"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:37:06.572" level="INFO"/>
<status status="PASS" starttime="20211009 01:37:06.571" endtime="20211009 01:37:06.573"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:37:06.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:37:06.573" endtime="20211009 01:37:06.574"/>
</kw>
<status status="PASS" starttime="20211009 01:37:06.554" endtime="20211009 01:37:06.574"/>
</kw>
<msg timestamp="20211009 01:37:06.574" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:37:06.554" endtime="20211009 01:37:06.575"/>
</kw>
<status status="PASS" starttime="20211009 01:37:06.553" endtime="20211009 01:37:06.575"/>
</kw>
<status status="PASS" starttime="20211009 01:37:06.552" endtime="20211009 01:37:06.575"/>
</kw>
<status status="PASS" starttime="20211009 01:37:06.536" endtime="20211009 01:37:06.576"/>
</kw>
<status status="PASS" starttime="20211009 01:37:06.535" endtime="20211009 01:37:06.576"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:37:06.582" level="INFO">Running command 'ozone sh key put o3://om:9862/02719-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:40:19.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:40:19.654" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:37:06.579" endtime="20211009 01:40:19.654"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:40:19.656" level="INFO"/>
<status status="PASS" starttime="20211009 01:40:19.655" endtime="20211009 01:40:19.657"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:40:19.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:40:19.657" endtime="20211009 01:40:19.658"/>
</kw>
<status status="PASS" starttime="20211009 01:37:06.578" endtime="20211009 01:40:19.659"/>
</kw>
<msg timestamp="20211009 01:40:19.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:37:06.578" endtime="20211009 01:40:19.659"/>
</kw>
<status status="PASS" starttime="20211009 01:37:06.577" endtime="20211009 01:40:19.660"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:40:19.668" level="INFO">Running command 'ozone sh key getacl o3://om:9862/02719-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:40:29.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:40:29.128" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211009 01:40:19.664" endtime="20211009 01:40:29.129"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:40:29.130" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211009 01:40:29.129" endtime="20211009 01:40:29.131"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:40:29.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:40:29.131" endtime="20211009 01:40:29.132"/>
</kw>
<status status="PASS" starttime="20211009 01:40:19.662" endtime="20211009 01:40:29.132"/>
</kw>
<msg timestamp="20211009 01:40:29.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:40:19.662" endtime="20211009 01:40:29.133"/>
</kw>
<msg timestamp="20211009 01:40:29.133" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211009 01:40:19.660" endtime="20211009 01:40:29.133"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211009 01:40:29.133" endtime="20211009 01:40:29.134"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:40:29.140" level="INFO">Running command 'ozone sh key addacl o3://om:9862/02719-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:40:38.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:40:38.143" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211009 01:40:29.137" endtime="20211009 01:40:38.143"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:40:38.144" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211009 01:40:38.143" endtime="20211009 01:40:38.144"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:40:38.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:40:38.145" endtime="20211009 01:40:38.147"/>
</kw>
<status status="PASS" starttime="20211009 01:40:29.136" endtime="20211009 01:40:38.148"/>
</kw>
<msg timestamp="20211009 01:40:38.148" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:40:29.136" endtime="20211009 01:40:38.148"/>
</kw>
<msg timestamp="20211009 01:40:38.149" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20211009 01:40:29.134" endtime="20211009 01:40:38.149"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:40:38.159" level="INFO">Running command 'ozone sh key getacl o3://om:9862/02719-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:40:47.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:40:47.343" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211009 01:40:38.155" endtime="20211009 01:40:47.344"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:40:47.346" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211009 01:40:47.344" endtime="20211009 01:40:47.347"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:40:47.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:40:47.347" endtime="20211009 01:40:47.348"/>
</kw>
<status status="PASS" starttime="20211009 01:40:38.153" endtime="20211009 01:40:47.349"/>
</kw>
<msg timestamp="20211009 01:40:47.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:40:38.152" endtime="20211009 01:40:47.349"/>
</kw>
<msg timestamp="20211009 01:40:47.350" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211009 01:40:38.150" endtime="20211009 01:40:47.350"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211009 01:40:47.350" endtime="20211009 01:40:47.353"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:40:47.360" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/02719-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:40:55.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:40:55.446" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211009 01:40:47.356" endtime="20211009 01:40:55.446"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:40:55.448" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211009 01:40:55.447" endtime="20211009 01:40:55.448"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:40:55.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:40:55.449" endtime="20211009 01:40:55.449"/>
</kw>
<status status="PASS" starttime="20211009 01:40:47.355" endtime="20211009 01:40:55.450"/>
</kw>
<msg timestamp="20211009 01:40:55.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:40:47.354" endtime="20211009 01:40:55.450"/>
</kw>
<msg timestamp="20211009 01:40:55.450" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20211009 01:40:47.353" endtime="20211009 01:40:55.450"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:40:55.458" level="INFO">Running command 'ozone sh key getacl o3://om:9862/02719-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:41:05.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:41:05.606" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211009 01:40:55.454" endtime="20211009 01:41:05.606"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:41:05.607" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20211009 01:41:05.606" endtime="20211009 01:41:05.607"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:41:05.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:41:05.607" endtime="20211009 01:41:05.608"/>
</kw>
<status status="PASS" starttime="20211009 01:40:55.453" endtime="20211009 01:41:05.609"/>
</kw>
<msg timestamp="20211009 01:41:05.609" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:40:55.452" endtime="20211009 01:41:05.609"/>
</kw>
<msg timestamp="20211009 01:41:05.609" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20211009 01:40:55.451" endtime="20211009 01:41:05.609"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211009 01:41:05.610" endtime="20211009 01:41:05.610"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:41:05.615" level="INFO">Running command 'ozone sh key setacl o3://om:9862/02719-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:41:12.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:41:12.464" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211009 01:41:05.612" endtime="20211009 01:41:12.464"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:41:12.465" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211009 01:41:12.464" endtime="20211009 01:41:12.465"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:41:12.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:41:12.466" endtime="20211009 01:41:12.466"/>
</kw>
<status status="PASS" starttime="20211009 01:41:05.612" endtime="20211009 01:41:12.467"/>
</kw>
<msg timestamp="20211009 01:41:12.467" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:41:05.611" endtime="20211009 01:41:12.467"/>
</kw>
<msg timestamp="20211009 01:41:12.467" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211009 01:41:05.610" endtime="20211009 01:41:12.467"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:41:12.472" level="INFO">Running command 'ozone sh key getacl o3://om:9862/02719-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:41:17.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:41:17.493" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211009 01:41:12.470" endtime="20211009 01:41:17.494"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:41:17.496" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211009 01:41:17.495" endtime="20211009 01:41:17.497"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:41:17.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:41:17.497" endtime="20211009 01:41:17.499"/>
</kw>
<status status="PASS" starttime="20211009 01:41:12.469" endtime="20211009 01:41:17.500"/>
</kw>
<msg timestamp="20211009 01:41:17.500" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:41:12.469" endtime="20211009 01:41:17.500"/>
</kw>
<msg timestamp="20211009 01:41:17.501" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20211009 01:41:12.468" endtime="20211009 01:41:17.501"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211009 01:41:17.501" endtime="20211009 01:41:17.502"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211009 01:41:17.503" endtime="20211009 01:41:17.504"/>
</kw>
<status status="PASS" starttime="20211009 01:37:06.576" endtime="20211009 01:41:17.505"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211009 01:37:06.534" endtime="20211009 01:41:17.505"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient prefix acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:41:17.517" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:41:17.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:41:17.523" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211009 01:41:17.513" endtime="20211009 01:41:17.523"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:41:17.525" level="INFO">scm</msg>
<status status="PASS" starttime="20211009 01:41:17.523" endtime="20211009 01:41:17.525"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:41:17.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:41:17.526" endtime="20211009 01:41:17.527"/>
</kw>
<status status="PASS" starttime="20211009 01:41:17.511" endtime="20211009 01:41:17.527"/>
</kw>
<msg timestamp="20211009 01:41:17.528" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:41:17.511" endtime="20211009 01:41:17.528"/>
</kw>
<msg timestamp="20211009 01:41:17.528" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211009 01:41:17.510" endtime="20211009 01:41:17.529"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211009 01:41:17.530" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211009 01:41:17.529" endtime="20211009 01:41:17.530"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:41:17.538" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:41:17.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:41:17.754" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:41:17.535" endtime="20211009 01:41:17.754"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:41:17.756" level="INFO"/>
<status status="PASS" starttime="20211009 01:41:17.755" endtime="20211009 01:41:17.756"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:41:17.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:41:17.756" endtime="20211009 01:41:17.757"/>
</kw>
<status status="PASS" starttime="20211009 01:41:17.534" endtime="20211009 01:41:17.758"/>
</kw>
<msg timestamp="20211009 01:41:17.758" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:41:17.533" endtime="20211009 01:41:17.758"/>
</kw>
<status status="PASS" starttime="20211009 01:41:17.532" endtime="20211009 01:41:17.758"/>
</kw>
<status status="PASS" starttime="20211009 01:41:17.530" endtime="20211009 01:41:17.758"/>
</kw>
<status status="PASS" starttime="20211009 01:41:17.509" endtime="20211009 01:41:17.759"/>
</kw>
<status status="PASS" starttime="20211009 01:41:17.508" endtime="20211009 01:41:17.759"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:41:17.764" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/02719-rpcwoport2/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:41:26.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:41:26.306" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211009 01:41:17.762" endtime="20211009 01:41:26.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:41:26.308" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20211009 01:41:26.307" endtime="20211009 01:41:26.308"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:41:26.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:41:26.308" endtime="20211009 01:41:26.309"/>
</kw>
<status status="PASS" starttime="20211009 01:41:17.761" endtime="20211009 01:41:26.312"/>
</kw>
<msg timestamp="20211009 01:41:26.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:41:17.760" endtime="20211009 01:41:26.312"/>
</kw>
<status status="PASS" starttime="20211009 01:41:17.760" endtime="20211009 01:41:26.313"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:41:26.317" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/02719-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:41:35.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:41:35.580" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211009 01:41:26.315" endtime="20211009 01:41:35.581"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:41:35.582" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211009 01:41:35.581" endtime="20211009 01:41:35.582"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:41:35.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:41:35.583" endtime="20211009 01:41:35.584"/>
</kw>
<status status="PASS" starttime="20211009 01:41:26.314" endtime="20211009 01:41:35.584"/>
</kw>
<msg timestamp="20211009 01:41:35.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:41:26.314" endtime="20211009 01:41:35.585"/>
</kw>
<msg timestamp="20211009 01:41:35.585" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211009 01:41:26.313" endtime="20211009 01:41:35.585"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211009 01:41:35.585" endtime="20211009 01:41:35.587"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:41:35.594" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/02719-rpcwoport2/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:41:43.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:41:43.337" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20211009 01:41:35.590" endtime="20211009 01:41:43.337"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:41:43.339" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20211009 01:41:43.337" endtime="20211009 01:41:43.339"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:41:43.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:41:43.340" endtime="20211009 01:41:43.341"/>
</kw>
<status status="PASS" starttime="20211009 01:41:35.589" endtime="20211009 01:41:43.343"/>
</kw>
<msg timestamp="20211009 01:41:43.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:41:35.588" endtime="20211009 01:41:43.343"/>
</kw>
<msg timestamp="20211009 01:41:43.344" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20211009 01:41:35.587" endtime="20211009 01:41:43.344"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:41:43.353" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/02719-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:41:52.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:41:52.193" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211009 01:41:43.349" endtime="20211009 01:41:52.194"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:41:52.196" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211009 01:41:52.194" endtime="20211009 01:41:52.196"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:41:52.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:41:52.196" endtime="20211009 01:41:52.197"/>
</kw>
<status status="PASS" starttime="20211009 01:41:43.348" endtime="20211009 01:41:52.198"/>
</kw>
<msg timestamp="20211009 01:41:52.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:41:43.347" endtime="20211009 01:41:52.198"/>
</kw>
<msg timestamp="20211009 01:41:52.199" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20211009 01:41:43.344" endtime="20211009 01:41:52.199"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211009 01:41:52.199" endtime="20211009 01:41:52.201"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:41:52.208" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/02719-rpcwoport2/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:42:00.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:42:00.337" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211009 01:41:52.205" endtime="20211009 01:42:00.337"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:42:00.338" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20211009 01:42:00.337" endtime="20211009 01:42:00.338"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:42:00.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:42:00.338" endtime="20211009 01:42:00.339"/>
</kw>
<status status="PASS" starttime="20211009 01:41:52.203" endtime="20211009 01:42:00.340"/>
</kw>
<msg timestamp="20211009 01:42:00.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:41:52.203" endtime="20211009 01:42:00.340"/>
</kw>
<msg timestamp="20211009 01:42:00.340" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20211009 01:41:52.201" endtime="20211009 01:42:00.340"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:42:00.349" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/02719-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:42:09.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:42:09.495" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20211009 01:42:00.345" endtime="20211009 01:42:09.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:42:09.498" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20211009 01:42:09.496" endtime="20211009 01:42:09.498"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:42:09.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:42:09.498" endtime="20211009 01:42:09.499"/>
</kw>
<status status="PASS" starttime="20211009 01:42:00.343" endtime="20211009 01:42:09.499"/>
</kw>
<msg timestamp="20211009 01:42:09.499" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:42:00.343" endtime="20211009 01:42:09.499"/>
</kw>
<msg timestamp="20211009 01:42:09.500" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20211009 01:42:00.341" endtime="20211009 01:42:09.500"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211009 01:42:09.500" endtime="20211009 01:42:09.501"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211009 01:42:09.501" endtime="20211009 01:42:09.501"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:42:09.510" level="INFO">Running command 'ozone sh key put o3://om:9862/02719-rpcwoport2/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:45:22.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:45:22.280" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:42:09.507" endtime="20211009 01:45:22.280"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:45:22.282" level="INFO"/>
<status status="PASS" starttime="20211009 01:45:22.281" endtime="20211009 01:45:22.282"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:45:22.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:45:22.282" endtime="20211009 01:45:22.283"/>
</kw>
<status status="PASS" starttime="20211009 01:42:09.505" endtime="20211009 01:45:22.284"/>
</kw>
<msg timestamp="20211009 01:45:22.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:42:09.503" endtime="20211009 01:45:22.284"/>
</kw>
<status status="PASS" starttime="20211009 01:42:09.501" endtime="20211009 01:45:22.284"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:45:22.292" level="INFO">Running command 'ozone sh key getacl o3://om:9862/02719-rpcwoport2/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:45:31.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:45:31.408" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211009 01:45:22.288" endtime="20211009 01:45:31.408"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:45:31.410" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20211009 01:45:31.409" endtime="20211009 01:45:31.410"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:45:31.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:45:31.410" endtime="20211009 01:45:31.411"/>
</kw>
<status status="PASS" starttime="20211009 01:45:22.287" endtime="20211009 01:45:31.411"/>
</kw>
<msg timestamp="20211009 01:45:31.411" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:45:22.286" endtime="20211009 01:45:31.412"/>
</kw>
<msg timestamp="20211009 01:45:31.412" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20211009 01:45:22.285" endtime="20211009 01:45:31.412"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211009 01:45:31.412" endtime="20211009 01:45:31.413"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20211009 01:45:31.413" endtime="20211009 01:45:31.414"/>
</kw>
<status status="PASS" starttime="20211009 01:41:17.759" endtime="20211009 01:45:31.414"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211009 01:41:17.506" endtime="20211009 01:45:31.415"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:45:31.428" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:45:31.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:45:31.433" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211009 01:45:31.425" endtime="20211009 01:45:31.433"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:45:31.436" level="INFO">scm</msg>
<status status="PASS" starttime="20211009 01:45:31.435" endtime="20211009 01:45:31.436"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:45:31.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:45:31.437" endtime="20211009 01:45:31.438"/>
</kw>
<status status="PASS" starttime="20211009 01:45:31.424" endtime="20211009 01:45:31.438"/>
</kw>
<msg timestamp="20211009 01:45:31.438" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:45:31.423" endtime="20211009 01:45:31.439"/>
</kw>
<msg timestamp="20211009 01:45:31.439" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211009 01:45:31.422" endtime="20211009 01:45:31.439"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211009 01:45:31.440" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211009 01:45:31.439" endtime="20211009 01:45:31.441"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:45:31.448" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:45:31.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:45:31.458" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:45:31.444" endtime="20211009 01:45:31.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:45:31.460" level="INFO"/>
<status status="PASS" starttime="20211009 01:45:31.459" endtime="20211009 01:45:31.460"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:45:31.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:45:31.461" endtime="20211009 01:45:31.462"/>
</kw>
<status status="PASS" starttime="20211009 01:45:31.444" endtime="20211009 01:45:31.462"/>
</kw>
<msg timestamp="20211009 01:45:31.462" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:45:31.443" endtime="20211009 01:45:31.463"/>
</kw>
<status status="PASS" starttime="20211009 01:45:31.442" endtime="20211009 01:45:31.463"/>
</kw>
<status status="PASS" starttime="20211009 01:45:31.441" endtime="20211009 01:45:31.463"/>
</kw>
<status status="PASS" starttime="20211009 01:45:31.421" endtime="20211009 01:45:31.463"/>
</kw>
<status status="PASS" starttime="20211009 01:45:31.419" endtime="20211009 01:45:31.464"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:45:31.471" level="INFO">Running command 'ozone sh volume info o3:///02719-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:45:37.986" level="INFO">${rc} = 255</msg>
<msg timestamp="20211009 01:45:37.986" level="INFO">${output} = VOLUME_NOT_FOUND Volume 02719-rpcwport is not found</msg>
<status status="PASS" starttime="20211009 01:45:31.468" endtime="20211009 01:45:37.986"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:45:37.988" level="INFO">VOLUME_NOT_FOUND Volume 02719-rpcwport is not found</msg>
<status status="PASS" starttime="20211009 01:45:37.987" endtime="20211009 01:45:37.988"/>
</kw>
<msg timestamp="20211009 01:45:37.988" level="INFO">${result} = VOLUME_NOT_FOUND Volume 02719-rpcwport is not found</msg>
<status status="PASS" starttime="20211009 01:45:31.466" endtime="20211009 01:45:37.988"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211009 01:45:37.989" endtime="20211009 01:45:37.989"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:45:37.995" level="INFO">Running command 'ozone sh volume create o3:///02719-rpcwport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:45:46.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:45:46.769" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:45:37.991" endtime="20211009 01:45:46.770"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:45:46.771" level="INFO"/>
<status status="PASS" starttime="20211009 01:45:46.770" endtime="20211009 01:45:46.771"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:45:46.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:45:46.771" endtime="20211009 01:45:46.772"/>
</kw>
<status status="PASS" starttime="20211009 01:45:37.990" endtime="20211009 01:45:46.772"/>
</kw>
<msg timestamp="20211009 01:45:46.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:45:37.990" endtime="20211009 01:45:46.773"/>
</kw>
<msg timestamp="20211009 01:45:46.773" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211009 01:45:37.989" endtime="20211009 01:45:46.773"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211009 01:45:46.773" endtime="20211009 01:45:46.774"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:45:46.786" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '.[] | select(.name=="02719-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:45:56.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:45:56.331" level="INFO">${output} = {
  "metadata": {},
  "name": "02719-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211009 01:45:46.776" endtime="20211009 01:45:56.331"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:45:56.334" level="INFO">{
  "metadata": {},
  "name": "02719-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-09T01:45:46.649Z",
  "modificationTime": "2021-10-09T01:45:46.649Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211009 01:45:56.332" endtime="20211009 01:45:56.334"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:45:56.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:45:56.335" endtime="20211009 01:45:56.336"/>
</kw>
<status status="PASS" starttime="20211009 01:45:46.776" endtime="20211009 01:45:56.337"/>
</kw>
<msg timestamp="20211009 01:45:56.337" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:45:46.775" endtime="20211009 01:45:56.337"/>
</kw>
<msg timestamp="20211009 01:45:56.338" level="INFO">${result} = {
  "metadata": {},
  "name": "02719-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211009 01:45:46.774" endtime="20211009 01:45:56.338"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211009 01:45:56.339" endtime="20211009 01:45:56.340"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:45:56.347" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="02719-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:46:05.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:46:05.548" level="INFO">${output} = {
  "metadata": {},
  "name": "02719-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211009 01:45:56.344" endtime="20211009 01:46:05.548"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:46:05.550" level="INFO">{
  "metadata": {},
  "name": "02719-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-09T01:45:46.649Z",
  "modificationTime": "2021-10-09T01:45:46.649Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211009 01:46:05.549" endtime="20211009 01:46:05.550"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:46:05.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:46:05.550" endtime="20211009 01:46:05.553"/>
</kw>
<status status="PASS" starttime="20211009 01:45:56.342" endtime="20211009 01:46:05.554"/>
</kw>
<msg timestamp="20211009 01:46:05.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:45:56.341" endtime="20211009 01:46:05.555"/>
</kw>
<msg timestamp="20211009 01:46:05.555" level="INFO">${result} = {
  "metadata": {},
  "name": "02719-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20211009 01:45:56.340" endtime="20211009 01:46:05.555"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211009 01:46:05.556" endtime="20211009 01:46:05.557"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:46:05.563" level="INFO">Running command 'ozone sh volume setquota o3:///02719-rpcwport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:46:13.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:46:13.720" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:46:05.560" endtime="20211009 01:46:13.720"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:46:13.721" level="INFO"/>
<status status="PASS" starttime="20211009 01:46:13.720" endtime="20211009 01:46:13.722"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:46:13.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:46:13.722" endtime="20211009 01:46:13.723"/>
</kw>
<status status="PASS" starttime="20211009 01:46:05.559" endtime="20211009 01:46:13.723"/>
</kw>
<msg timestamp="20211009 01:46:13.723" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:46:05.558" endtime="20211009 01:46:13.723"/>
</kw>
<status status="PASS" starttime="20211009 01:46:05.557" endtime="20211009 01:46:13.724"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:46:13.734" level="INFO">Running command 'ozone sh volume info o3:///02719-rpcwport | jq -r '. | select(.name=="02719-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:46:23.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:46:23.811" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211009 01:46:13.726" endtime="20211009 01:46:23.811"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:46:23.813" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211009 01:46:23.812" endtime="20211009 01:46:23.813"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:46:23.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:46:23.813" endtime="20211009 01:46:23.814"/>
</kw>
<status status="PASS" starttime="20211009 01:46:13.725" endtime="20211009 01:46:23.814"/>
</kw>
<msg timestamp="20211009 01:46:23.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:46:13.725" endtime="20211009 01:46:23.815"/>
</kw>
<msg timestamp="20211009 01:46:23.815" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211009 01:46:13.724" endtime="20211009 01:46:23.815"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211009 01:46:23.815" endtime="20211009 01:46:23.816"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:46:23.824" level="INFO">Running command 'ozone sh bucket create o3:///02719-rpcwport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:46:31.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:46:31.153" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:46:23.820" endtime="20211009 01:46:31.153"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:46:31.154" level="INFO"/>
<status status="PASS" starttime="20211009 01:46:31.153" endtime="20211009 01:46:31.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:46:31.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:46:31.154" endtime="20211009 01:46:31.155"/>
</kw>
<status status="PASS" starttime="20211009 01:46:23.818" endtime="20211009 01:46:31.155"/>
</kw>
<msg timestamp="20211009 01:46:31.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:46:23.818" endtime="20211009 01:46:31.156"/>
</kw>
<status status="PASS" starttime="20211009 01:46:23.816" endtime="20211009 01:46:31.156"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:46:31.161" level="INFO">Running command 'ozone sh bucket info o3:///02719-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:46:39.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:46:39.577" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211009 01:46:31.158" endtime="20211009 01:46:39.577"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:46:39.578" level="INFO">DISK</msg>
<status status="PASS" starttime="20211009 01:46:39.577" endtime="20211009 01:46:39.578"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:46:39.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:46:39.579" endtime="20211009 01:46:39.579"/>
</kw>
<status status="PASS" starttime="20211009 01:46:31.158" endtime="20211009 01:46:39.580"/>
</kw>
<msg timestamp="20211009 01:46:39.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:46:31.157" endtime="20211009 01:46:39.580"/>
</kw>
<msg timestamp="20211009 01:46:39.580" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211009 01:46:31.156" endtime="20211009 01:46:39.580"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211009 01:46:39.581" endtime="20211009 01:46:39.581"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:46:39.593" level="INFO">Running command 'ozone sh bucket info o3:///02719-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:46:49.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:46:49.151" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211009 01:46:39.589" endtime="20211009 01:46:49.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:46:49.153" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211009 01:46:49.152" endtime="20211009 01:46:49.153"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:46:49.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:46:49.153" endtime="20211009 01:46:49.154"/>
</kw>
<status status="PASS" starttime="20211009 01:46:39.587" endtime="20211009 01:46:49.155"/>
</kw>
<msg timestamp="20211009 01:46:49.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:46:39.583" endtime="20211009 01:46:49.156"/>
</kw>
<msg timestamp="20211009 01:46:49.156" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211009 01:46:39.582" endtime="20211009 01:46:49.156"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211009 01:46:49.159" endtime="20211009 01:46:49.159"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:46:49.165" level="INFO">Running command 'ozone sh bucket info o3:///02719-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:46:58.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:46:58.758" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211009 01:46:49.162" endtime="20211009 01:46:58.758"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:46:58.760" level="INFO">100</msg>
<status status="PASS" starttime="20211009 01:46:58.759" endtime="20211009 01:46:58.760"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:46:58.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:46:58.760" endtime="20211009 01:46:58.761"/>
</kw>
<status status="PASS" starttime="20211009 01:46:49.161" endtime="20211009 01:46:58.761"/>
</kw>
<msg timestamp="20211009 01:46:58.761" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:46:49.161" endtime="20211009 01:46:58.761"/>
</kw>
<msg timestamp="20211009 01:46:58.762" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211009 01:46:49.160" endtime="20211009 01:46:58.762"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211009 01:46:58.762" endtime="20211009 01:46:58.763"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:46:58.769" level="INFO">Running command 'ozone sh bucket setquota o3:///02719-rpcwport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:47:07.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:47:07.405" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:46:58.765" endtime="20211009 01:47:07.406"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:47:07.407" level="INFO"/>
<status status="PASS" starttime="20211009 01:47:07.406" endtime="20211009 01:47:07.408"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:47:07.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:47:07.408" endtime="20211009 01:47:07.409"/>
</kw>
<status status="PASS" starttime="20211009 01:46:58.764" endtime="20211009 01:47:07.410"/>
</kw>
<msg timestamp="20211009 01:47:07.410" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:46:58.764" endtime="20211009 01:47:07.410"/>
</kw>
<status status="PASS" starttime="20211009 01:46:58.763" endtime="20211009 01:47:07.410"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:47:07.417" level="INFO">Running command 'ozone sh bucket info o3:///02719-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:47:16.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:47:16.881" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211009 01:47:07.414" endtime="20211009 01:47:16.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:47:16.884" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211009 01:47:16.883" endtime="20211009 01:47:16.884"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:47:16.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:47:16.884" endtime="20211009 01:47:16.885"/>
</kw>
<status status="PASS" starttime="20211009 01:47:07.413" endtime="20211009 01:47:16.886"/>
</kw>
<msg timestamp="20211009 01:47:16.886" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:47:07.412" endtime="20211009 01:47:16.886"/>
</kw>
<msg timestamp="20211009 01:47:16.886" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211009 01:47:07.411" endtime="20211009 01:47:16.886"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211009 01:47:16.887" endtime="20211009 01:47:16.887"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:47:16.895" level="INFO">Running command 'ozone sh bucket info o3:///02719-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:47:26.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:47:26.023" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211009 01:47:16.892" endtime="20211009 01:47:26.023"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:47:26.024" level="INFO">1000</msg>
<status status="PASS" starttime="20211009 01:47:26.023" endtime="20211009 01:47:26.025"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:47:26.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:47:26.025" endtime="20211009 01:47:26.026"/>
</kw>
<status status="PASS" starttime="20211009 01:47:16.890" endtime="20211009 01:47:26.026"/>
</kw>
<msg timestamp="20211009 01:47:26.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:47:16.890" endtime="20211009 01:47:26.026"/>
</kw>
<msg timestamp="20211009 01:47:26.027" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211009 01:47:16.888" endtime="20211009 01:47:26.027"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211009 01:47:26.027" endtime="20211009 01:47:26.027"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:47:26.033" level="INFO">Running command 'ozone sh bucket list o3:///02719-rpcwport/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:47:34.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:47:34.862" level="INFO">${output} = 02719-rpcwport</msg>
<status status="PASS" starttime="20211009 01:47:26.030" endtime="20211009 01:47:34.862"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:47:34.864" level="INFO">02719-rpcwport</msg>
<status status="PASS" starttime="20211009 01:47:34.863" endtime="20211009 01:47:34.864"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:47:34.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:47:34.865" endtime="20211009 01:47:34.866"/>
</kw>
<status status="PASS" starttime="20211009 01:47:26.029" endtime="20211009 01:47:34.866"/>
</kw>
<msg timestamp="20211009 01:47:34.866" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:47:26.029" endtime="20211009 01:47:34.867"/>
</kw>
<msg timestamp="20211009 01:47:34.867" level="INFO">${result} = 02719-rpcwport</msg>
<status status="PASS" starttime="20211009 01:47:26.028" endtime="20211009 01:47:34.867"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211009 01:47:34.868" endtime="20211009 01:47:34.869"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:47:34.876" level="INFO">Running command 'ozone sh key put o3:///02719-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:50:31.418" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211009 01:47:34.873" endtime="20211009 01:50:31.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211009 01:50:31.418" endtime="20211009 01:50:31.418"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211009 01:50:31.419" endtime="20211009 01:50:31.419"/>
</kw>
<status status="FAIL" starttime="20211009 01:47:34.872" endtime="20211009 01:50:31.419"/>
</kw>
<msg timestamp="20211009 01:50:31.419" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211009 01:47:34.872" endtime="20211009 01:50:31.420"/>
</kw>
<status status="FAIL" starttime="20211009 01:47:34.871" endtime="20211009 01:50:31.420"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211009 01:50:31.420" endtime="20211009 01:50:31.420"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211009 01:50:31.420" endtime="20211009 01:50:31.420"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211009 01:50:31.421" endtime="20211009 01:50:31.421"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211009 01:50:31.421" endtime="20211009 01:50:31.421"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211009 01:50:31.421" endtime="20211009 01:50:31.421"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211009 01:50:31.422" endtime="20211009 01:50:31.422"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211009 01:50:31.422" endtime="20211009 01:50:31.422"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211009 01:50:31.422" endtime="20211009 01:50:31.422"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211009 01:50:31.422" endtime="20211009 01:50:31.422"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211009 01:50:31.423" endtime="20211009 01:50:31.423"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211009 01:50:31.423" endtime="20211009 01:50:31.423"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211009 01:50:31.423" endtime="20211009 01:50:31.423"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211009 01:50:31.423" endtime="20211009 01:50:31.423"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211009 01:50:31.423" endtime="20211009 01:50:31.424"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211009 01:50:31.424" endtime="20211009 01:50:31.424"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211009 01:50:31.424" endtime="20211009 01:50:31.424"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211009 01:50:31.424" endtime="20211009 01:50:31.424"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211009 01:50:31.424" endtime="20211009 01:50:31.424"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211009 01:50:31.425" endtime="20211009 01:50:31.425"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211009 01:50:31.425" endtime="20211009 01:50:31.425"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211009 01:50:31.425" endtime="20211009 01:50:31.425"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211009 01:50:31.425" endtime="20211009 01:50:31.425"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211009 01:50:31.425" endtime="20211009 01:50:31.426"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211009 01:50:31.426" endtime="20211009 01:50:31.426"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211009 01:50:31.426" endtime="20211009 01:50:31.426"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211009 01:50:31.426" endtime="20211009 01:50:31.426"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211009 01:50:31.426" endtime="20211009 01:50:31.426"/>
</kw>
<status status="FAIL" starttime="20211009 01:47:34.869" endtime="20211009 01:50:31.427"/>
</kw>
<status status="FAIL" starttime="20211009 01:47:34.869" endtime="20211009 01:50:31.427"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211009 01:50:31.427" endtime="20211009 01:50:31.427"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211009 01:50:31.427" endtime="20211009 01:50:31.427"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211009 01:50:31.428" endtime="20211009 01:50:31.428"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211009 01:50:31.428" endtime="20211009 01:50:31.428"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211009 01:50:31.428" endtime="20211009 01:50:31.428"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211009 01:50:31.428" endtime="20211009 01:50:31.428"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211009 01:50:31.428" endtime="20211009 01:50:31.429"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211009 01:50:31.429" endtime="20211009 01:50:31.429"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211009 01:50:31.429" endtime="20211009 01:50:31.429"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211009 01:50:31.429" endtime="20211009 01:50:31.429"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211009 01:50:31.429" endtime="20211009 01:50:31.430"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211009 01:50:31.430" endtime="20211009 01:50:31.430"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211009 01:50:31.430" endtime="20211009 01:50:31.430"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211009 01:50:31.430" endtime="20211009 01:50:31.430"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211009 01:50:31.431" endtime="20211009 01:50:31.431"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211009 01:50:31.431" endtime="20211009 01:50:31.431"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211009 01:50:31.431" endtime="20211009 01:50:31.431"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211009 01:50:31.432" endtime="20211009 01:50:31.432"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211009 01:50:31.432" endtime="20211009 01:50:31.432"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211009 01:50:31.432" endtime="20211009 01:50:31.432"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211009 01:50:31.432" endtime="20211009 01:50:31.432"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211009 01:50:31.433" endtime="20211009 01:50:31.433"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211009 01:50:31.433" endtime="20211009 01:50:31.433"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211009 01:50:31.433" endtime="20211009 01:50:31.433"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211009 01:50:31.433" endtime="20211009 01:50:31.433"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211009 01:50:31.433" endtime="20211009 01:50:31.433"/>
</kw>
<status status="FAIL" starttime="20211009 01:45:31.464" endtime="20211009 01:50:31.434"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211009 01:45:31.416" endtime="20211009 01:50:31.434">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t7" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:50:31.443" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:50:31.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:50:31.449" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211009 01:50:31.440" endtime="20211009 01:50:31.450"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:50:31.452" level="INFO">scm</msg>
<status status="PASS" starttime="20211009 01:50:31.451" endtime="20211009 01:50:31.452"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:50:31.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:50:31.453" endtime="20211009 01:50:31.454"/>
</kw>
<status status="PASS" starttime="20211009 01:50:31.439" endtime="20211009 01:50:31.454"/>
</kw>
<msg timestamp="20211009 01:50:31.454" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:50:31.439" endtime="20211009 01:50:31.454"/>
</kw>
<msg timestamp="20211009 01:50:31.455" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211009 01:50:31.438" endtime="20211009 01:50:31.455"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211009 01:50:31.456" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211009 01:50:31.455" endtime="20211009 01:50:31.456"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:50:31.464" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:50:31.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:50:31.743" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:50:31.460" endtime="20211009 01:50:31.743"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:50:31.745" level="INFO"/>
<status status="PASS" starttime="20211009 01:50:31.744" endtime="20211009 01:50:31.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:50:31.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:50:31.745" endtime="20211009 01:50:31.746"/>
</kw>
<status status="PASS" starttime="20211009 01:50:31.459" endtime="20211009 01:50:31.746"/>
</kw>
<msg timestamp="20211009 01:50:31.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:50:31.459" endtime="20211009 01:50:31.746"/>
</kw>
<status status="PASS" starttime="20211009 01:50:31.458" endtime="20211009 01:50:31.746"/>
</kw>
<status status="PASS" starttime="20211009 01:50:31.456" endtime="20211009 01:50:31.747"/>
</kw>
<status status="PASS" starttime="20211009 01:50:31.438" endtime="20211009 01:50:31.747"/>
</kw>
<status status="PASS" starttime="20211009 01:50:31.437" endtime="20211009 01:50:31.747"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:50:31.755" level="INFO">Running command 'ozone sh volume info /02719-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:50:39.776" level="INFO">${rc} = 255</msg>
<msg timestamp="20211009 01:50:39.776" level="INFO">${output} = VOLUME_NOT_FOUND Volume 02719-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20211009 01:50:31.752" endtime="20211009 01:50:39.777"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:50:39.778" level="INFO">VOLUME_NOT_FOUND Volume 02719-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20211009 01:50:39.777" endtime="20211009 01:50:39.778"/>
</kw>
<msg timestamp="20211009 01:50:39.779" level="INFO">${result} = VOLUME_NOT_FOUND Volume 02719-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20211009 01:50:31.750" endtime="20211009 01:50:39.779"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211009 01:50:39.779" endtime="20211009 01:50:39.780"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:50:39.787" level="INFO">Running command 'ozone sh volume create /02719-rpcwoscheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:50:48.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:50:48.773" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:50:39.783" endtime="20211009 01:50:48.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:50:48.776" level="INFO"/>
<status status="PASS" starttime="20211009 01:50:48.774" endtime="20211009 01:50:48.777"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:50:48.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:50:48.777" endtime="20211009 01:50:48.779"/>
</kw>
<status status="PASS" starttime="20211009 01:50:39.782" endtime="20211009 01:50:48.780"/>
</kw>
<msg timestamp="20211009 01:50:48.780" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:50:39.781" endtime="20211009 01:50:48.780"/>
</kw>
<msg timestamp="20211009 01:50:48.781" level="INFO">${result} = </msg>
<status status="PASS" starttime="20211009 01:50:39.780" endtime="20211009 01:50:48.781"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211009 01:50:48.781" endtime="20211009 01:50:48.782"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:50:48.794" level="INFO">Running command 'ozone sh volume list / | jq -r '.[] | select(.name=="02719-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:50:57.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:50:57.743" level="INFO">${output} = {
  "metadata": {},
  "name": "02719-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211009 01:50:48.787" endtime="20211009 01:50:57.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:50:57.746" level="INFO">{
  "metadata": {},
  "name": "02719-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-09T01:50:48.669Z",
  "modificationTime": "2021-10-09T01:50:48.669Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211009 01:50:57.744" endtime="20211009 01:50:57.746"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:50:57.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:50:57.747" endtime="20211009 01:50:57.749"/>
</kw>
<status status="PASS" starttime="20211009 01:50:48.786" endtime="20211009 01:50:57.749"/>
</kw>
<msg timestamp="20211009 01:50:57.749" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:50:48.785" endtime="20211009 01:50:57.749"/>
</kw>
<msg timestamp="20211009 01:50:57.750" level="INFO">${result} = {
  "metadata": {},
  "name": "02719-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211009 01:50:48.783" endtime="20211009 01:50:57.750"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211009 01:50:57.750" endtime="20211009 01:50:57.751"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:50:57.758" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="02719-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:51:06.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:51:06.780" level="INFO">${output} = {
  "metadata": {},
  "name": "02719-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211009 01:50:57.755" endtime="20211009 01:51:06.781"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:51:06.782" level="INFO">{
  "metadata": {},
  "name": "02719-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-10-09T01:50:48.669Z",
  "modificationTime": "2021-10-09T01:50:48.669Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20211009 01:51:06.781" endtime="20211009 01:51:06.783"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:51:06.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:51:06.783" endtime="20211009 01:51:06.785"/>
</kw>
<status status="PASS" starttime="20211009 01:50:57.754" endtime="20211009 01:51:06.785"/>
</kw>
<msg timestamp="20211009 01:51:06.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:50:57.753" endtime="20211009 01:51:06.786"/>
</kw>
<msg timestamp="20211009 01:51:06.787" level="INFO">${result} = {
  "metadata": {},
  "name": "02719-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20211009 01:50:57.751" endtime="20211009 01:51:06.787"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211009 01:51:06.787" endtime="20211009 01:51:06.788"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:51:06.796" level="INFO">Running command 'ozone sh volume setquota /02719-rpcwoscheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:51:14.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:51:14.600" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:51:06.793" endtime="20211009 01:51:14.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:51:14.601" level="INFO"/>
<status status="PASS" starttime="20211009 01:51:14.600" endtime="20211009 01:51:14.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:51:14.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:51:14.602" endtime="20211009 01:51:14.602"/>
</kw>
<status status="PASS" starttime="20211009 01:51:06.792" endtime="20211009 01:51:14.603"/>
</kw>
<msg timestamp="20211009 01:51:14.603" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:51:06.791" endtime="20211009 01:51:14.603"/>
</kw>
<status status="PASS" starttime="20211009 01:51:06.789" endtime="20211009 01:51:14.603"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:51:14.611" level="INFO">Running command 'ozone sh volume info /02719-rpcwoscheme | jq -r '. | select(.name=="02719-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:51:23.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:51:23.618" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211009 01:51:14.606" endtime="20211009 01:51:23.618"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:51:23.621" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211009 01:51:23.619" endtime="20211009 01:51:23.621"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:51:23.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:51:23.621" endtime="20211009 01:51:23.623"/>
</kw>
<status status="PASS" starttime="20211009 01:51:14.606" endtime="20211009 01:51:23.624"/>
</kw>
<msg timestamp="20211009 01:51:23.624" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:51:14.605" endtime="20211009 01:51:23.624"/>
</kw>
<msg timestamp="20211009 01:51:23.625" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211009 01:51:14.604" endtime="20211009 01:51:23.626"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211009 01:51:23.626" endtime="20211009 01:51:23.627"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:51:23.639" level="INFO">Running command 'ozone sh bucket create /02719-rpcwoscheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:51:32.617" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:51:32.617" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:51:23.634" endtime="20211009 01:51:32.617"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:51:32.619" level="INFO"/>
<status status="PASS" starttime="20211009 01:51:32.618" endtime="20211009 01:51:32.619"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:51:32.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:51:32.619" endtime="20211009 01:51:32.622"/>
</kw>
<status status="PASS" starttime="20211009 01:51:23.632" endtime="20211009 01:51:32.622"/>
</kw>
<msg timestamp="20211009 01:51:32.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:51:23.631" endtime="20211009 01:51:32.623"/>
</kw>
<status status="PASS" starttime="20211009 01:51:23.628" endtime="20211009 01:51:32.623"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:51:32.631" level="INFO">Running command 'ozone sh bucket info /02719-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:51:42.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:51:42.135" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20211009 01:51:32.628" endtime="20211009 01:51:42.135"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:51:42.137" level="INFO">DISK</msg>
<status status="PASS" starttime="20211009 01:51:42.136" endtime="20211009 01:51:42.137"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:51:42.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:51:42.138" endtime="20211009 01:51:42.139"/>
</kw>
<status status="PASS" starttime="20211009 01:51:32.626" endtime="20211009 01:51:42.140"/>
</kw>
<msg timestamp="20211009 01:51:42.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:51:32.626" endtime="20211009 01:51:42.140"/>
</kw>
<msg timestamp="20211009 01:51:42.141" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20211009 01:51:32.623" endtime="20211009 01:51:42.141"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211009 01:51:42.141" endtime="20211009 01:51:42.142"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:51:42.148" level="INFO">Running command 'ozone sh bucket info /02719-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:51:51.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:51:51.049" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20211009 01:51:42.145" endtime="20211009 01:51:51.049"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:51:51.050" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20211009 01:51:51.049" endtime="20211009 01:51:51.050"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:51:51.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:51:51.050" endtime="20211009 01:51:51.055"/>
</kw>
<status status="PASS" starttime="20211009 01:51:42.144" endtime="20211009 01:51:51.058"/>
</kw>
<msg timestamp="20211009 01:51:51.058" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:51:42.144" endtime="20211009 01:51:51.058"/>
</kw>
<msg timestamp="20211009 01:51:51.059" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20211009 01:51:42.142" endtime="20211009 01:51:51.059"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211009 01:51:51.059" endtime="20211009 01:51:51.060"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:51:51.066" level="INFO">Running command 'ozone sh bucket info /02719-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:52:00.160" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:52:00.161" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20211009 01:51:51.063" endtime="20211009 01:52:00.161"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:52:00.164" level="INFO">100</msg>
<status status="PASS" starttime="20211009 01:52:00.162" endtime="20211009 01:52:00.165"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:52:00.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:52:00.165" endtime="20211009 01:52:00.167"/>
</kw>
<status status="PASS" starttime="20211009 01:51:51.062" endtime="20211009 01:52:00.167"/>
</kw>
<msg timestamp="20211009 01:52:00.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:51:51.061" endtime="20211009 01:52:00.168"/>
</kw>
<msg timestamp="20211009 01:52:00.169" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20211009 01:51:51.060" endtime="20211009 01:52:00.169"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211009 01:52:00.169" endtime="20211009 01:52:00.171"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:52:00.177" level="INFO">Running command 'ozone sh bucket setquota /02719-rpcwoscheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:52:08.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:52:08.189" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:52:00.175" endtime="20211009 01:52:08.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:52:08.192" level="INFO"/>
<status status="PASS" starttime="20211009 01:52:08.190" endtime="20211009 01:52:08.192"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:52:08.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:52:08.193" endtime="20211009 01:52:08.194"/>
</kw>
<status status="PASS" starttime="20211009 01:52:00.174" endtime="20211009 01:52:08.195"/>
</kw>
<msg timestamp="20211009 01:52:08.196" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:52:00.173" endtime="20211009 01:52:08.196"/>
</kw>
<status status="PASS" starttime="20211009 01:52:00.171" endtime="20211009 01:52:08.197"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:52:08.206" level="INFO">Running command 'ozone sh bucket info /02719-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:52:17.006" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:52:17.006" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20211009 01:52:08.202" endtime="20211009 01:52:17.006"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:52:17.009" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20211009 01:52:17.007" endtime="20211009 01:52:17.009"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:52:17.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:52:17.009" endtime="20211009 01:52:17.011"/>
</kw>
<status status="PASS" starttime="20211009 01:52:08.201" endtime="20211009 01:52:17.012"/>
</kw>
<msg timestamp="20211009 01:52:17.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:52:08.200" endtime="20211009 01:52:17.012"/>
</kw>
<msg timestamp="20211009 01:52:17.013" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20211009 01:52:08.197" endtime="20211009 01:52:17.013"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211009 01:52:17.014" endtime="20211009 01:52:17.015"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:52:17.022" level="INFO">Running command 'ozone sh bucket info /02719-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:52:26.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:52:26.284" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20211009 01:52:17.019" endtime="20211009 01:52:26.284"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:52:26.287" level="INFO">1000</msg>
<status status="PASS" starttime="20211009 01:52:26.285" endtime="20211009 01:52:26.287"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:52:26.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:52:26.288" endtime="20211009 01:52:26.289"/>
</kw>
<status status="PASS" starttime="20211009 01:52:17.018" endtime="20211009 01:52:26.290"/>
</kw>
<msg timestamp="20211009 01:52:26.290" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:52:17.017" endtime="20211009 01:52:26.290"/>
</kw>
<msg timestamp="20211009 01:52:26.291" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20211009 01:52:17.015" endtime="20211009 01:52:26.291"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211009 01:52:26.292" endtime="20211009 01:52:26.292"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:52:26.301" level="INFO">Running command 'ozone sh bucket list /02719-rpcwoscheme/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:52:33.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:52:33.926" level="INFO">${output} = 02719-rpcwoscheme</msg>
<status status="PASS" starttime="20211009 01:52:26.296" endtime="20211009 01:52:33.926"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:52:33.927" level="INFO">02719-rpcwoscheme</msg>
<status status="PASS" starttime="20211009 01:52:33.926" endtime="20211009 01:52:33.927"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:52:33.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:52:33.927" endtime="20211009 01:52:33.928"/>
</kw>
<status status="PASS" starttime="20211009 01:52:26.295" endtime="20211009 01:52:33.929"/>
</kw>
<msg timestamp="20211009 01:52:33.929" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:52:26.295" endtime="20211009 01:52:33.929"/>
</kw>
<msg timestamp="20211009 01:52:33.929" level="INFO">${result} = 02719-rpcwoscheme</msg>
<status status="PASS" starttime="20211009 01:52:26.293" endtime="20211009 01:52:33.929"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20211009 01:52:33.930" endtime="20211009 01:52:33.931"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:52:33.938" level="INFO">Running command 'ozone sh key put /02719-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:55:31.437" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20211009 01:52:33.934" endtime="20211009 01:55:31.437"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20211009 01:55:31.438" endtime="20211009 01:55:31.438"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20211009 01:55:31.438" endtime="20211009 01:55:31.438"/>
</kw>
<status status="FAIL" starttime="20211009 01:52:33.933" endtime="20211009 01:55:31.439"/>
</kw>
<msg timestamp="20211009 01:55:31.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20211009 01:52:33.933" endtime="20211009 01:55:31.439"/>
</kw>
<status status="FAIL" starttime="20211009 01:52:33.932" endtime="20211009 01:55:31.439"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211009 01:55:31.440" endtime="20211009 01:55:31.440"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211009 01:55:31.440" endtime="20211009 01:55:31.440"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211009 01:55:31.440" endtime="20211009 01:55:31.440"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20211009 01:55:31.440" endtime="20211009 01:55:31.440"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211009 01:55:31.441" endtime="20211009 01:55:31.441"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211009 01:55:31.441" endtime="20211009 01:55:31.441"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211009 01:55:31.441" endtime="20211009 01:55:31.441"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20211009 01:55:31.441" endtime="20211009 01:55:31.441"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211009 01:55:31.442" endtime="20211009 01:55:31.442"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20211009 01:55:31.442" endtime="20211009 01:55:31.442"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20211009 01:55:31.442" endtime="20211009 01:55:31.442"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211009 01:55:31.442" endtime="20211009 01:55:31.442"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211009 01:55:31.442" endtime="20211009 01:55:31.443"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20211009 01:55:31.443" endtime="20211009 01:55:31.443"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20211009 01:55:31.443" endtime="20211009 01:55:31.443"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211009 01:55:31.443" endtime="20211009 01:55:31.443"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211009 01:55:31.443" endtime="20211009 01:55:31.444"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20211009 01:55:31.444" endtime="20211009 01:55:31.444"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211009 01:55:31.444" endtime="20211009 01:55:31.444"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20211009 01:55:31.444" endtime="20211009 01:55:31.445"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20211009 01:55:31.445" endtime="20211009 01:55:31.445"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20211009 01:55:31.445" endtime="20211009 01:55:31.445"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211009 01:55:31.445" endtime="20211009 01:55:31.445"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20211009 01:55:31.445" endtime="20211009 01:55:31.446"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20211009 01:55:31.446" endtime="20211009 01:55:31.446"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211009 01:55:31.446" endtime="20211009 01:55:31.446"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20211009 01:55:31.446" endtime="20211009 01:55:31.446"/>
</kw>
<status status="FAIL" starttime="20211009 01:52:33.931" endtime="20211009 01:55:31.447"/>
</kw>
<status status="FAIL" starttime="20211009 01:52:33.931" endtime="20211009 01:55:31.447"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211009 01:55:31.447" endtime="20211009 01:55:31.447"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211009 01:55:31.447" endtime="20211009 01:55:31.447"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211009 01:55:31.447" endtime="20211009 01:55:31.448"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211009 01:55:31.448" endtime="20211009 01:55:31.448"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211009 01:55:31.448" endtime="20211009 01:55:31.449"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211009 01:55:31.449" endtime="20211009 01:55:31.449"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211009 01:55:31.449" endtime="20211009 01:55:31.450"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211009 01:55:31.450" endtime="20211009 01:55:31.450"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211009 01:55:31.450" endtime="20211009 01:55:31.451"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211009 01:55:31.451" endtime="20211009 01:55:31.451"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211009 01:55:31.451" endtime="20211009 01:55:31.451"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211009 01:55:31.452" endtime="20211009 01:55:31.452"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211009 01:55:31.452" endtime="20211009 01:55:31.453"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211009 01:55:31.453" endtime="20211009 01:55:31.453"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211009 01:55:31.453" endtime="20211009 01:55:31.453"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211009 01:55:31.454" endtime="20211009 01:55:31.454"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211009 01:55:31.454" endtime="20211009 01:55:31.455"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211009 01:55:31.455" endtime="20211009 01:55:31.455"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211009 01:55:31.455" endtime="20211009 01:55:31.455"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211009 01:55:31.456" endtime="20211009 01:55:31.456"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20211009 01:55:31.456" endtime="20211009 01:55:31.456"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211009 01:55:31.456" endtime="20211009 01:55:31.456"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20211009 01:55:31.457" endtime="20211009 01:55:31.457"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20211009 01:55:31.457" endtime="20211009 01:55:31.457"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20211009 01:55:31.457" endtime="20211009 01:55:31.457"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20211009 01:55:31.457" endtime="20211009 01:55:31.458"/>
</kw>
<status status="FAIL" starttime="20211009 01:50:31.747" endtime="20211009 01:55:31.458"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20211009 01:50:31.436" endtime="20211009 01:55:31.458">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20211009 01:29:49.846" endtime="20211009 01:55:31.463"/>
</suite>
<status status="FAIL" starttime="20211009 01:04:47.587" endtime="20211009 01:55:31.471"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:04:41.983" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:04:41.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:04:41.988" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20211009 01:04:41.979" endtime="20211009 01:04:41.988"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:04:41.989" level="INFO">scm</msg>
<status status="PASS" starttime="20211009 01:04:41.989" endtime="20211009 01:04:41.989"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:04:41.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:04:41.990" endtime="20211009 01:04:41.990"/>
</kw>
<status status="PASS" starttime="20211009 01:04:41.979" endtime="20211009 01:04:41.991"/>
</kw>
<msg timestamp="20211009 01:04:41.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:04:41.978" endtime="20211009 01:04:41.991"/>
</kw>
<msg timestamp="20211009 01:04:41.991" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20211009 01:04:41.978" endtime="20211009 01:04:41.991"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211009 01:04:41.992" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20211009 01:04:41.991" endtime="20211009 01:04:41.992"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211009 01:04:41.997" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20211009 01:04:42.006" level="INFO">${rc} = 0</msg>
<msg timestamp="20211009 01:04:42.006" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211009 01:04:41.994" endtime="20211009 01:04:42.006"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211009 01:04:42.008" level="INFO"/>
<status status="PASS" starttime="20211009 01:04:42.007" endtime="20211009 01:04:42.008"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211009 01:04:42.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211009 01:04:42.008" endtime="20211009 01:04:42.009"/>
</kw>
<status status="PASS" starttime="20211009 01:04:41.994" endtime="20211009 01:04:42.009"/>
</kw>
<msg timestamp="20211009 01:04:42.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211009 01:04:41.993" endtime="20211009 01:04:42.009"/>
</kw>
<status status="PASS" starttime="20211009 01:04:41.993" endtime="20211009 01:04:42.010"/>
</kw>
<status status="PASS" starttime="20211009 01:04:41.992" endtime="20211009 01:04:42.010"/>
</kw>
<status status="PASS" starttime="20211009 01:04:41.977" endtime="20211009 01:04:42.010"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20211009 01:04:41.976" endtime="20211009 01:04:42.010"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20211009 01:04:41.906" endtime="20211009 01:04:42.012"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="3043990"/>
</suite>
<statistics>
<total>
<stat pass="20" fail="10" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="20" fail="10" skip="0" id="s1" name="ozonesecure">ozonesecure</stat>
<stat pass="19" fail="10" skip="0" id="s1-s1" name="Basic">ozonesecure.Basic</stat>
<stat pass="1" fail="1" skip="0" id="s1-s1-s1" name="Basic">ozonesecure.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Getconf">ozonesecure.Basic.Getconf</stat>
<stat pass="10" fail="5" skip="0" id="s1-s1-s3" name="Links">ozonesecure.Basic.Links</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat pass="4" fail="3" skip="0" id="s1-s1-s5" name="Ozone-Shell">ozonesecure.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
