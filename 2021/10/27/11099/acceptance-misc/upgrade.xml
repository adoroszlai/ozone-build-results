<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1.2 (Python 3.6.9 on linux)" generated="20211027 01:37:37.826" rpa="false" schemaversion="2">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211027 01:28:20.103" level="INFO">${random} = 58456</msg>
<status status="PASS" starttime="20211027 01:28:20.103" endtime="20211027 01:28:20.103"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211027 01:28:20.109" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-58456 2&gt;&amp;1'.</msg>
<msg timestamp="20211027 01:28:24.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20211027 01:28:24.176" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211027 01:28:20.105" endtime="20211027 01:28:24.176"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211027 01:28:24.177" level="INFO"/>
<status status="PASS" starttime="20211027 01:28:24.176" endtime="20211027 01:28:24.177"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211027 01:28:24.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211027 01:28:24.177" endtime="20211027 01:28:24.178"/>
</kw>
<status status="PASS" starttime="20211027 01:28:20.104" endtime="20211027 01:28:24.178"/>
</kw>
<msg timestamp="20211027 01:28:24.178" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211027 01:28:20.104" endtime="20211027 01:28:24.178"/>
</kw>
<msg timestamp="20211027 01:28:24.179" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211027 01:28:20.103" endtime="20211027 01:28:24.179"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211027 01:28:24.179" endtime="20211027 01:28:24.179"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211027 01:28:20.102" endtime="20211027 01:28:24.179"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211027 01:28:20.050" endtime="20211027 01:28:24.181"/>
</suite>
<suite id="s1-s2" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s2-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211027 01:32:36.041" level="INFO">${random} = 19733</msg>
<status status="PASS" starttime="20211027 01:32:36.041" endtime="20211027 01:32:36.041"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211027 01:32:36.047" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-19733 2&gt;&amp;1'.</msg>
<msg timestamp="20211027 01:32:40.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20211027 01:32:40.172" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211027 01:32:36.043" endtime="20211027 01:32:40.172"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211027 01:32:40.174" level="INFO"/>
<status status="PASS" starttime="20211027 01:32:40.173" endtime="20211027 01:32:40.174"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211027 01:32:40.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211027 01:32:40.174" endtime="20211027 01:32:40.174"/>
</kw>
<status status="PASS" starttime="20211027 01:32:36.043" endtime="20211027 01:32:40.175"/>
</kw>
<msg timestamp="20211027 01:32:40.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211027 01:32:36.042" endtime="20211027 01:32:40.175"/>
</kw>
<msg timestamp="20211027 01:32:40.175" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211027 01:32:36.042" endtime="20211027 01:32:40.175"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211027 01:32:40.175" endtime="20211027 01:32:40.176"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211027 01:32:36.040" endtime="20211027 01:32:40.176"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211027 01:32:35.988" endtime="20211027 01:32:40.177"/>
</suite>
<suite id="s1-s3" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211027 01:32:44.156" level="INFO">Running command 'ozone sh volume create old2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20211027 01:32:46.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20211027 01:32:46.712" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211027 01:32:44.151" endtime="20211027 01:32:46.712"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211027 01:32:46.715" level="INFO"/>
<status status="PASS" starttime="20211027 01:32:46.712" endtime="20211027 01:32:46.715"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211027 01:32:46.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211027 01:32:46.716" endtime="20211027 01:32:46.716"/>
</kw>
<status status="PASS" starttime="20211027 01:32:44.150" endtime="20211027 01:32:46.716"/>
</kw>
<msg timestamp="20211027 01:32:46.717" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211027 01:32:44.150" endtime="20211027 01:32:46.717"/>
</kw>
<msg timestamp="20211027 01:32:46.717" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211027 01:32:44.149" endtime="20211027 01:32:46.717"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211027 01:32:46.717" endtime="20211027 01:32:46.717"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211027 01:32:46.722" level="INFO">Running command 'ozone sh bucket create /old2-volume/old2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211027 01:32:49.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20211027 01:32:49.395" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211027 01:32:46.719" endtime="20211027 01:32:49.395"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211027 01:32:49.396" level="INFO"/>
<status status="PASS" starttime="20211027 01:32:49.396" endtime="20211027 01:32:49.396"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211027 01:32:49.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211027 01:32:49.397" endtime="20211027 01:32:49.397"/>
</kw>
<status status="PASS" starttime="20211027 01:32:46.719" endtime="20211027 01:32:49.397"/>
</kw>
<msg timestamp="20211027 01:32:49.397" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211027 01:32:46.718" endtime="20211027 01:32:49.398"/>
</kw>
<msg timestamp="20211027 01:32:49.401" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211027 01:32:46.718" endtime="20211027 01:32:49.401"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211027 01:32:49.401" endtime="20211027 01:32:49.401"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211027 01:32:49.418" level="INFO">Running command 'ozone sh key put /old2-volume/old2-bucket/old2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211027 01:32:54.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20211027 01:32:54.597" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211027 01:32:49.403" endtime="20211027 01:32:54.598"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211027 01:32:54.599" level="INFO"/>
<status status="PASS" starttime="20211027 01:32:54.598" endtime="20211027 01:32:54.599"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211027 01:32:54.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211027 01:32:54.599" endtime="20211027 01:32:54.600"/>
</kw>
<status status="PASS" starttime="20211027 01:32:49.403" endtime="20211027 01:32:54.600"/>
</kw>
<msg timestamp="20211027 01:32:54.600" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211027 01:32:49.403" endtime="20211027 01:32:54.600"/>
</kw>
<msg timestamp="20211027 01:32:54.600" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211027 01:32:49.402" endtime="20211027 01:32:54.600"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211027 01:32:54.601" endtime="20211027 01:32:54.601"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211027 01:32:44.148" endtime="20211027 01:32:54.601"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20211027 01:32:44.077" endtime="20211027 01:32:54.603"/>
</suite>
<suite id="s1-s4" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211027 01:32:58.397" level="INFO">${random} = 89044</msg>
<status status="PASS" starttime="20211027 01:32:58.397" endtime="20211027 01:32:58.397"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211027 01:32:58.403" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-89044 2&gt;&amp;1'.</msg>
<msg timestamp="20211027 01:33:02.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20211027 01:33:02.289" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211027 01:32:58.399" endtime="20211027 01:33:02.289"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211027 01:33:02.290" level="INFO"/>
<status status="PASS" starttime="20211027 01:33:02.289" endtime="20211027 01:33:02.290"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211027 01:33:02.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211027 01:33:02.290" endtime="20211027 01:33:02.291"/>
</kw>
<status status="PASS" starttime="20211027 01:32:58.399" endtime="20211027 01:33:02.291"/>
</kw>
<msg timestamp="20211027 01:33:02.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211027 01:32:58.398" endtime="20211027 01:33:02.292"/>
</kw>
<msg timestamp="20211027 01:33:02.292" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211027 01:32:58.398" endtime="20211027 01:33:02.292"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211027 01:33:02.292" endtime="20211027 01:33:02.292"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211027 01:32:58.396" endtime="20211027 01:33:02.293"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211027 01:32:58.344" endtime="20211027 01:33:02.294"/>
</suite>
<suite id="s1-s5" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211027 01:32:27.933" level="INFO">${random} = 43394</msg>
<status status="PASS" starttime="20211027 01:32:27.933" endtime="20211027 01:32:27.933"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211027 01:32:27.940" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-43394 2&gt;&amp;1'.</msg>
<msg timestamp="20211027 01:32:32.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20211027 01:32:32.273" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211027 01:32:27.935" endtime="20211027 01:32:32.273"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211027 01:32:32.274" level="INFO"/>
<status status="PASS" starttime="20211027 01:32:32.273" endtime="20211027 01:32:32.274"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211027 01:32:32.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211027 01:32:32.274" endtime="20211027 01:32:32.275"/>
</kw>
<status status="PASS" starttime="20211027 01:32:27.935" endtime="20211027 01:32:32.275"/>
</kw>
<msg timestamp="20211027 01:32:32.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211027 01:32:27.935" endtime="20211027 01:32:32.275"/>
</kw>
<msg timestamp="20211027 01:32:32.276" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211027 01:32:27.934" endtime="20211027 01:32:32.276"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211027 01:32:32.276" endtime="20211027 01:32:32.276"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211027 01:32:27.932" endtime="20211027 01:32:32.277"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211027 01:32:27.873" endtime="20211027 01:32:32.278"/>
</suite>
<suite id="s1-s6" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s6-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211027 01:28:05.257" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20211027 01:28:07.612" level="INFO">${rc} = 0</msg>
<msg timestamp="20211027 01:28:07.612" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211027 01:28:05.253" endtime="20211027 01:28:07.612"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211027 01:28:07.613" level="INFO"/>
<status status="PASS" starttime="20211027 01:28:07.612" endtime="20211027 01:28:07.614"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211027 01:28:07.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211027 01:28:07.614" endtime="20211027 01:28:07.615"/>
</kw>
<status status="PASS" starttime="20211027 01:28:05.253" endtime="20211027 01:28:07.615"/>
</kw>
<msg timestamp="20211027 01:28:07.615" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211027 01:28:05.253" endtime="20211027 01:28:07.615"/>
</kw>
<msg timestamp="20211027 01:28:07.617" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211027 01:28:05.252" endtime="20211027 01:28:07.617"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211027 01:28:07.617" endtime="20211027 01:28:07.617"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211027 01:28:07.623" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211027 01:28:10.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20211027 01:28:10.120" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211027 01:28:07.619" endtime="20211027 01:28:10.120"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211027 01:28:10.121" level="INFO"/>
<status status="PASS" starttime="20211027 01:28:10.120" endtime="20211027 01:28:10.121"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211027 01:28:10.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211027 01:28:10.121" endtime="20211027 01:28:10.126"/>
</kw>
<status status="PASS" starttime="20211027 01:28:07.619" endtime="20211027 01:28:10.126"/>
</kw>
<msg timestamp="20211027 01:28:10.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211027 01:28:07.618" endtime="20211027 01:28:10.126"/>
</kw>
<msg timestamp="20211027 01:28:10.127" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211027 01:28:07.618" endtime="20211027 01:28:10.127"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211027 01:28:10.127" endtime="20211027 01:28:10.127"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211027 01:28:10.134" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211027 01:28:16.083" level="INFO">${rc} = 0</msg>
<msg timestamp="20211027 01:28:16.084" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211027 01:28:10.130" endtime="20211027 01:28:16.084"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211027 01:28:16.085" level="INFO"/>
<status status="PASS" starttime="20211027 01:28:16.084" endtime="20211027 01:28:16.085"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211027 01:28:16.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211027 01:28:16.085" endtime="20211027 01:28:16.086"/>
</kw>
<status status="PASS" starttime="20211027 01:28:10.129" endtime="20211027 01:28:16.086"/>
</kw>
<msg timestamp="20211027 01:28:16.086" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211027 01:28:10.129" endtime="20211027 01:28:16.086"/>
</kw>
<msg timestamp="20211027 01:28:16.087" level="INFO">${output} = </msg>
<status status="PASS" starttime="20211027 01:28:10.127" endtime="20211027 01:28:16.087"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211027 01:28:16.087" endtime="20211027 01:28:16.087"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211027 01:28:05.251" endtime="20211027 01:28:16.087"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20211027 01:28:05.195" endtime="20211027 01:28:16.090"/>
</suite>
<suite id="s1-s7" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s7-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211027 01:36:13.551" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20211027 01:36:13.550" endtime="20211027 01:36:13.551"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211027 01:36:13.551" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211027 01:36:13.551" endtime="20211027 01:36:13.552"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211027 01:36:13.552" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211027 01:36:13.552" endtime="20211027 01:36:13.552"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211027 01:36:13.553" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20211027 01:36:13.552" endtime="20211027 01:36:13.553"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211027 01:36:13.554" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211027 01:36:13.555" level="INFO">${version_file_contents} = #Wed Oct 27 01:34:50 UTC 2021
cTime=1635298012372
clusterID=CID-dea897dc-2343-4c55-acb6-3fdced05b4f4
nodeType=SCM
scmUuid=b9091514-adc5-4823-9449-238ddd46f062
layoutVersion=2
</msg>
<status status="PASS" starttime="20211027 01:36:13.554" endtime="20211027 01:36:13.555"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211027 01:36:13.555" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20211027 01:36:13.555" endtime="20211027 01:36:13.556"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211027 01:36:13.556" endtime="20211027 01:36:13.556"/>
</kw>
<status status="PASS" starttime="20211027 01:36:13.553" endtime="20211027 01:36:13.556"/>
</kw>
<status status="PASS" starttime="20211027 01:36:13.553" endtime="20211027 01:36:13.556"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211027 01:36:13.549" endtime="20211027 01:36:13.557"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211027 01:36:13.497" endtime="20211027 01:36:13.557"/>
</suite>
<suite id="s1-s8" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s8-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211027 01:36:57.093" level="INFO">${random} = 60448</msg>
<status status="PASS" starttime="20211027 01:36:57.092" endtime="20211027 01:36:57.093"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211027 01:36:57.098" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-60448 2&gt;&amp;1'.</msg>
<msg timestamp="20211027 01:37:01.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20211027 01:37:01.281" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211027 01:36:57.095" endtime="20211027 01:37:01.281"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211027 01:37:01.283" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211027 01:37:01.282" endtime="20211027 01:37:01.283"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211027 01:37:01.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211027 01:37:01.283" endtime="20211027 01:37:01.283"/>
</kw>
<status status="PASS" starttime="20211027 01:36:57.094" endtime="20211027 01:37:01.284"/>
</kw>
<msg timestamp="20211027 01:37:01.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211027 01:36:57.094" endtime="20211027 01:37:01.284"/>
</kw>
<msg timestamp="20211027 01:37:01.284" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211027 01:36:57.093" endtime="20211027 01:37:01.284"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211027 01:37:01.284" endtime="20211027 01:37:01.285"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211027 01:36:57.091" endtime="20211027 01:37:01.285"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211027 01:36:57.034" endtime="20211027 01:37:01.286"/>
</suite>
<suite id="s1-s9" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s9-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211027 01:37:05.072" level="INFO">Running command 'ozone sh volume create new2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20211027 01:37:07.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20211027 01:37:07.518" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211027 01:37:05.068" endtime="20211027 01:37:07.518"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211027 01:37:07.519" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211027 01:37:07.518" endtime="20211027 01:37:07.519"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211027 01:37:07.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211027 01:37:07.520" endtime="20211027 01:37:07.520"/>
</kw>
<status status="PASS" starttime="20211027 01:37:05.068" endtime="20211027 01:37:07.520"/>
</kw>
<msg timestamp="20211027 01:37:07.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211027 01:37:05.068" endtime="20211027 01:37:07.521"/>
</kw>
<msg timestamp="20211027 01:37:07.521" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211027 01:37:05.067" endtime="20211027 01:37:07.521"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211027 01:37:07.521" endtime="20211027 01:37:07.522"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211027 01:37:07.531" level="INFO">Running command 'ozone sh bucket create /new2-volume/new2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211027 01:37:10.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20211027 01:37:10.204" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211027 01:37:07.526" endtime="20211027 01:37:10.204"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211027 01:37:10.205" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211027 01:37:10.205" endtime="20211027 01:37:10.206"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211027 01:37:10.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211027 01:37:10.206" endtime="20211027 01:37:10.206"/>
</kw>
<status status="PASS" starttime="20211027 01:37:07.525" endtime="20211027 01:37:10.207"/>
</kw>
<msg timestamp="20211027 01:37:10.207" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211027 01:37:07.522" endtime="20211027 01:37:10.207"/>
</kw>
<msg timestamp="20211027 01:37:10.207" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211027 01:37:07.522" endtime="20211027 01:37:10.207"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211027 01:37:10.207" endtime="20211027 01:37:10.208"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211027 01:37:10.212" level="INFO">Running command 'ozone sh key put /new2-volume/new2-bucket/new2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211027 01:37:15.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20211027 01:37:15.139" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211027 01:37:10.209" endtime="20211027 01:37:15.139"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211027 01:37:15.140" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211027 01:37:15.139" endtime="20211027 01:37:15.140"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211027 01:37:15.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211027 01:37:15.141" endtime="20211027 01:37:15.141"/>
</kw>
<status status="PASS" starttime="20211027 01:37:10.209" endtime="20211027 01:37:15.141"/>
</kw>
<msg timestamp="20211027 01:37:15.141" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211027 01:37:10.209" endtime="20211027 01:37:15.142"/>
</kw>
<msg timestamp="20211027 01:37:15.142" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211027 01:37:10.208" endtime="20211027 01:37:15.142"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211027 01:37:15.142" endtime="20211027 01:37:15.143"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211027 01:37:05.066" endtime="20211027 01:37:15.143"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20211027 01:37:05.013" endtime="20211027 01:37:15.145"/>
</suite>
<suite id="s1-s10" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s10-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211027 01:37:18.899" level="INFO">${random} = 52623</msg>
<status status="PASS" starttime="20211027 01:37:18.899" endtime="20211027 01:37:18.900"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211027 01:37:18.905" level="INFO">Running command 'ozone sh key get /new2-volume/new2-bucket/new2-key /tmp/key-52623 2&gt;&amp;1'.</msg>
<msg timestamp="20211027 01:37:23.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20211027 01:37:23.389" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211027 01:37:18.901" endtime="20211027 01:37:23.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211027 01:37:23.390" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211027 01:37:23.390" endtime="20211027 01:37:23.390"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211027 01:37:23.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211027 01:37:23.391" endtime="20211027 01:37:23.391"/>
</kw>
<status status="PASS" starttime="20211027 01:37:18.901" endtime="20211027 01:37:23.392"/>
</kw>
<msg timestamp="20211027 01:37:23.392" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211027 01:37:18.901" endtime="20211027 01:37:23.392"/>
</kw>
<msg timestamp="20211027 01:37:23.392" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211027 01:37:18.900" endtime="20211027 01:37:23.392"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211027 01:37:23.392" endtime="20211027 01:37:23.393"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211027 01:37:18.898" endtime="20211027 01:37:23.393"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211027 01:37:18.847" endtime="20211027 01:37:23.394"/>
</suite>
<suite id="s1-s11" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s11-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211027 01:36:17.308" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211027 01:36:17.307" endtime="20211027 01:36:17.308"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211027 01:36:17.309" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211027 01:36:17.308" endtime="20211027 01:36:17.309"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211027 01:36:17.309" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211027 01:36:17.309" endtime="20211027 01:36:17.309"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211027 01:36:17.310" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211027 01:36:17.310" endtime="20211027 01:36:17.310"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211027 01:36:17.311" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211027 01:36:17.312" level="INFO">${version_file_contents} = #Wed Oct 27 01:34:59 UTC 2021
cTime=1635298139697
clusterID=d5b8b575-b055-4453-9102-3c2fc98a0c8e
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20211027 01:36:17.311" endtime="20211027 01:36:17.312"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211027 01:36:17.312" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20211027 01:36:17.312" endtime="20211027 01:36:17.312"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211027 01:36:17.312" endtime="20211027 01:36:17.313"/>
</kw>
<status status="PASS" starttime="20211027 01:36:17.311" endtime="20211027 01:36:17.313"/>
</kw>
<status status="PASS" starttime="20211027 01:36:17.310" endtime="20211027 01:36:17.313"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211027 01:36:17.306" endtime="20211027 01:36:17.313"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211027 01:36:17.254" endtime="20211027 01:36:17.314"/>
</suite>
<suite id="s1-s12" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s12-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211027 01:36:21.259" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211027 01:36:21.259" endtime="20211027 01:36:21.259"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211027 01:36:21.260" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211027 01:36:21.260" endtime="20211027 01:36:21.260"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211027 01:36:21.261" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211027 01:36:21.260" endtime="20211027 01:36:21.261"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211027 01:36:21.261" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211027 01:36:21.261" endtime="20211027 01:36:21.261"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211027 01:36:21.263" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211027 01:36:21.263" level="INFO">${version_file_contents} = #Wed Oct 27 01:34:51 UTC 2021
cTime=1635298146020
clusterID=3efe1a82-a8cd-4742-adff-1ed742be4c29
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20211027 01:36:21.262" endtime="20211027 01:36:21.263"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211027 01:36:21.264" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20211027 01:36:21.263" endtime="20211027 01:36:21.264"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211027 01:36:21.264" endtime="20211027 01:36:21.264"/>
</kw>
<status status="PASS" starttime="20211027 01:36:21.262" endtime="20211027 01:36:21.264"/>
</kw>
<status status="PASS" starttime="20211027 01:36:21.261" endtime="20211027 01:36:21.265"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211027 01:36:21.258" endtime="20211027 01:36:21.265"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211027 01:36:21.205" endtime="20211027 01:36:21.265"/>
</suite>
<suite id="s1-s13" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s13-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211027 01:36:25.082" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211027 01:36:25.081" endtime="20211027 01:36:25.082"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211027 01:36:25.083" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211027 01:36:25.082" endtime="20211027 01:36:25.083"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211027 01:36:25.083" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211027 01:36:25.083" endtime="20211027 01:36:25.083"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211027 01:36:25.084" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211027 01:36:25.083" endtime="20211027 01:36:25.084"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211027 01:36:25.085" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211027 01:36:25.086" level="INFO">${version_file_contents} = #Wed Oct 27 01:35:09 UTC 2021
cTime=1635298141394
clusterID=ad191920-a43a-40fb-9320-7c906ddb49c2
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20211027 01:36:25.085" endtime="20211027 01:36:25.086"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211027 01:36:25.086" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20211027 01:36:25.086" endtime="20211027 01:36:25.086"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211027 01:36:25.086" endtime="20211027 01:36:25.087"/>
</kw>
<status status="PASS" starttime="20211027 01:36:25.084" endtime="20211027 01:36:25.087"/>
</kw>
<status status="PASS" starttime="20211027 01:36:25.084" endtime="20211027 01:36:25.087"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211027 01:36:25.081" endtime="20211027 01:36:25.087"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211027 01:36:25.027" endtime="20211027 01:36:25.088"/>
</suite>
<suite id="s1-s14" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s14-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211027 01:36:28.831" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211027 01:36:28.830" endtime="20211027 01:36:28.831"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211027 01:36:28.831" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211027 01:36:28.831" endtime="20211027 01:36:28.831"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211027 01:36:28.832" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211027 01:36:28.832" endtime="20211027 01:36:28.832"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211027 01:36:28.833" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211027 01:36:28.832" endtime="20211027 01:36:28.833"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211027 01:36:28.834" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211027 01:36:28.834" level="INFO">${version_file_contents} = #Wed Oct 27 01:27:14 UTC 2021
cTime=1635298014593
clusterID=CID-dea897dc-2343-4c55-acb6-3fdced05b4f4
omUuid=3101b4d0-2ed0-497a-9300-277d0df7adc0
nodeType=OM
scmUuid=b9091514-adc5-4823-9449-238ddd46f06...</msg>
<status status="PASS" starttime="20211027 01:36:28.834" endtime="20211027 01:36:28.834"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211027 01:36:28.835" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211027 01:36:28.834" endtime="20211027 01:36:28.835"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211027 01:36:28.835" endtime="20211027 01:36:28.835"/>
</kw>
<status status="PASS" starttime="20211027 01:36:28.833" endtime="20211027 01:36:28.836"/>
</kw>
<status status="PASS" starttime="20211027 01:36:28.833" endtime="20211027 01:36:28.836"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211027 01:36:28.829" endtime="20211027 01:36:28.836"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211027 01:36:28.776" endtime="20211027 01:36:28.837"/>
</suite>
<suite id="s1-s15" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s15-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211027 01:36:32.614" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211027 01:36:32.614" endtime="20211027 01:36:32.615"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211027 01:36:32.615" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211027 01:36:32.615" endtime="20211027 01:36:32.615"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211027 01:36:32.616" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211027 01:36:32.615" endtime="20211027 01:36:32.616"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211027 01:36:32.616" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211027 01:36:32.616" endtime="20211027 01:36:32.616"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211027 01:36:32.617" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211027 01:36:32.618" level="INFO">${version_file_contents} = #Wed Oct 27 01:27:14 UTC 2021
cTime=1635298014294
clusterID=CID-dea897dc-2343-4c55-acb6-3fdced05b4f4
omUuid=acb86cc9-8875-41b5-8ec5-1ad4a790c833
nodeType=OM
scmUuid=b9091514-adc5-4823-9449-238ddd46f06...</msg>
<status status="PASS" starttime="20211027 01:36:32.617" endtime="20211027 01:36:32.618"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211027 01:36:32.618" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211027 01:36:32.618" endtime="20211027 01:36:32.619"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211027 01:36:32.619" endtime="20211027 01:36:32.619"/>
</kw>
<status status="PASS" starttime="20211027 01:36:32.617" endtime="20211027 01:36:32.619"/>
</kw>
<status status="PASS" starttime="20211027 01:36:32.616" endtime="20211027 01:36:32.619"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211027 01:36:32.613" endtime="20211027 01:36:32.619"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211027 01:36:32.561" endtime="20211027 01:36:32.620"/>
</suite>
<suite id="s1-s16" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s16-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211027 01:36:36.516" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211027 01:36:36.516" endtime="20211027 01:36:36.517"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211027 01:36:36.517" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211027 01:36:36.517" endtime="20211027 01:36:36.517"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211027 01:36:36.518" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211027 01:36:36.517" endtime="20211027 01:36:36.518"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211027 01:36:36.518" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211027 01:36:36.518" endtime="20211027 01:36:36.518"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211027 01:36:36.520" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211027 01:36:36.520" level="INFO">${version_file_contents} = #Wed Oct 27 01:27:14 UTC 2021
cTime=1635298010937
clusterID=CID-dea897dc-2343-4c55-acb6-3fdced05b4f4
omUuid=00a241c2-1255-4b73-b6b1-49e9ab6cc80f
nodeType=OM
scmUuid=b9091514-adc5-4823-9449-238ddd46f06...</msg>
<status status="PASS" starttime="20211027 01:36:36.519" endtime="20211027 01:36:36.520"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211027 01:36:36.521" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211027 01:36:36.520" endtime="20211027 01:36:36.521"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211027 01:36:36.521" endtime="20211027 01:36:36.521"/>
</kw>
<status status="PASS" starttime="20211027 01:36:36.519" endtime="20211027 01:36:36.521"/>
</kw>
<status status="PASS" starttime="20211027 01:36:36.518" endtime="20211027 01:36:36.521"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211027 01:36:36.515" endtime="20211027 01:36:36.521"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211027 01:36:36.464" endtime="20211027 01:36:36.522"/>
</suite>
<suite id="s1-s17" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s17-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211027 01:36:40.285" level="INFO">${random} = 67220</msg>
<status status="PASS" starttime="20211027 01:36:40.284" endtime="20211027 01:36:40.285"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211027 01:36:40.290" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-67220 2&gt;&amp;1'.</msg>
<msg timestamp="20211027 01:36:45.361" level="INFO">${rc} = 0</msg>
<msg timestamp="20211027 01:36:45.361" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211027 01:36:40.287" endtime="20211027 01:36:45.361"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211027 01:36:45.362" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211027 01:36:45.361" endtime="20211027 01:36:45.362"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211027 01:36:45.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211027 01:36:45.362" endtime="20211027 01:36:45.363"/>
</kw>
<status status="PASS" starttime="20211027 01:36:40.286" endtime="20211027 01:36:45.363"/>
</kw>
<msg timestamp="20211027 01:36:45.364" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211027 01:36:40.286" endtime="20211027 01:36:45.364"/>
</kw>
<msg timestamp="20211027 01:36:45.364" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211027 01:36:40.285" endtime="20211027 01:36:45.364"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211027 01:36:45.364" endtime="20211027 01:36:45.365"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211027 01:36:40.283" endtime="20211027 01:36:45.365"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211027 01:36:40.231" endtime="20211027 01:36:45.367"/>
</suite>
<suite id="s1-s18" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s18-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211027 01:36:49.106" level="INFO">${random} = 01613</msg>
<status status="PASS" starttime="20211027 01:36:49.106" endtime="20211027 01:36:49.106"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211027 01:36:49.112" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-01613 2&gt;&amp;1'.</msg>
<msg timestamp="20211027 01:36:53.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20211027 01:36:53.269" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211027 01:36:49.108" endtime="20211027 01:36:53.269"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211027 01:36:53.270" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211027 01:36:53.269" endtime="20211027 01:36:53.270"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211027 01:36:53.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211027 01:36:53.270" endtime="20211027 01:36:53.271"/>
</kw>
<status status="PASS" starttime="20211027 01:36:49.108" endtime="20211027 01:36:53.272"/>
</kw>
<msg timestamp="20211027 01:36:53.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211027 01:36:49.108" endtime="20211027 01:36:53.272"/>
</kw>
<msg timestamp="20211027 01:36:53.272" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211027 01:36:49.107" endtime="20211027 01:36:53.272"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211027 01:36:53.273" endtime="20211027 01:36:53.273"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211027 01:36:49.105" endtime="20211027 01:36:53.273"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211027 01:36:49.053" endtime="20211027 01:36:53.275"/>
</suite>
<suite id="s1-s19" name="Finalize" source="/opt/hadoop/smoketest/upgrade/finalize.robot">
<test id="s1-s19-t1" name="Finalize SCM">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20211027 01:34:42.254" endtime="20211027 01:34:42.255"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizeupgrade</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211027 01:34:42.260" level="INFO">Running command 'ozone admin scm finalizeupgrade 2&gt;&amp;1'.</msg>
<msg timestamp="20211027 01:36:06.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20211027 01:36:06.569" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20211027 01:34:42.256" endtime="20211027 01:36:06.569"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211027 01:36:06.570" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20211027 01:36:06.569" endtime="20211027 01:36:06.570"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211027 01:36:06.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211027 01:36:06.570" endtime="20211027 01:36:06.571"/>
</kw>
<status status="PASS" starttime="20211027 01:34:42.256" endtime="20211027 01:36:06.571"/>
</kw>
<msg timestamp="20211027 01:36:06.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211027 01:34:42.255" endtime="20211027 01:36:06.571"/>
</kw>
<msg timestamp="20211027 01:36:06.572" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20211027 01:34:42.255" endtime="20211027 01:36:06.572"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211027 01:36:06.572" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20211027 01:36:06.572" endtime="20211027 01:36:06.572"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211027 01:34:42.253" endtime="20211027 01:36:06.572"/>
</test>
<test id="s1-s19-t2" name="Finalize OMs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20211027 01:36:06.574" endtime="20211027 01:36:06.575"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizeupgrade -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211027 01:36:06.579" level="INFO">Running command 'ozone admin om finalizeupgrade -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20211027 01:36:09.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20211027 01:36:09.698" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20211027 01:36:06.576" endtime="20211027 01:36:09.698"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211027 01:36:09.699" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20211027 01:36:09.699" endtime="20211027 01:36:09.699"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211027 01:36:09.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211027 01:36:09.700" endtime="20211027 01:36:09.700"/>
</kw>
<status status="PASS" starttime="20211027 01:36:06.576" endtime="20211027 01:36:09.701"/>
</kw>
<msg timestamp="20211027 01:36:09.701" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211027 01:36:06.575" endtime="20211027 01:36:09.701"/>
</kw>
<msg timestamp="20211027 01:36:09.701" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20211027 01:36:06.575" endtime="20211027 01:36:09.701"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211027 01:36:09.701" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20211027 01:36:09.701" endtime="20211027 01:36:09.702"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211027 01:36:06.573" endtime="20211027 01:36:09.702"/>
</test>
<doc>Finalize Upgrade of OMs and SCM</doc>
<status status="PASS" starttime="20211027 01:34:42.203" endtime="20211027 01:36:09.704"/>
</suite>
<suite id="s1-s20" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s20-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211027 01:30:07.602" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211027 01:30:07.601" endtime="20211027 01:30:07.602"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211027 01:30:07.603" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211027 01:30:07.602" endtime="20211027 01:30:07.603"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211027 01:30:07.603" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211027 01:30:07.603" endtime="20211027 01:30:07.603"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211027 01:30:07.604" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211027 01:30:07.603" endtime="20211027 01:30:07.606"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211027 01:30:07.607" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211027 01:30:07.608" level="INFO">${version_file_contents} = #Wed Oct 27 01:28:59 UTC 2021
cTime=1635298139697
clusterID=d5b8b575-b055-4453-9102-3c2fc98a0c8e
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20211027 01:30:07.607" endtime="20211027 01:30:07.608"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211027 01:30:07.608" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211027 01:30:07.608" endtime="20211027 01:30:07.608"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211027 01:30:07.608" endtime="20211027 01:30:07.609"/>
</kw>
<status status="PASS" starttime="20211027 01:30:07.607" endtime="20211027 01:30:07.609"/>
</kw>
<status status="PASS" starttime="20211027 01:30:07.606" endtime="20211027 01:30:07.609"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211027 01:30:07.600" endtime="20211027 01:30:07.610"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211027 01:30:07.549" endtime="20211027 01:30:07.610"/>
</suite>
<suite id="s1-s21" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s21-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211027 01:30:11.442" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211027 01:30:11.442" endtime="20211027 01:30:11.443"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211027 01:30:11.443" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211027 01:30:11.443" endtime="20211027 01:30:11.443"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211027 01:30:11.444" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211027 01:30:11.443" endtime="20211027 01:30:11.444"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211027 01:30:11.444" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211027 01:30:11.444" endtime="20211027 01:30:11.444"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211027 01:30:11.446" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211027 01:30:11.446" level="INFO">${version_file_contents} = #Wed Oct 27 01:29:06 UTC 2021
cTime=1635298146020
clusterID=3efe1a82-a8cd-4742-adff-1ed742be4c29
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20211027 01:30:11.445" endtime="20211027 01:30:11.446"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211027 01:30:11.447" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211027 01:30:11.446" endtime="20211027 01:30:11.447"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211027 01:30:11.447" endtime="20211027 01:30:11.447"/>
</kw>
<status status="PASS" starttime="20211027 01:30:11.445" endtime="20211027 01:30:11.447"/>
</kw>
<status status="PASS" starttime="20211027 01:30:11.444" endtime="20211027 01:30:11.447"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211027 01:30:11.441" endtime="20211027 01:30:11.448"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211027 01:30:11.389" endtime="20211027 01:30:11.448"/>
</suite>
<suite id="s1-s22" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s22-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211027 01:30:15.248" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20211027 01:30:15.248" endtime="20211027 01:30:15.249"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211027 01:30:15.249" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211027 01:30:15.249" endtime="20211027 01:30:15.249"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211027 01:30:15.250" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211027 01:30:15.249" endtime="20211027 01:30:15.250"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211027 01:30:15.250" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20211027 01:30:15.250" endtime="20211027 01:30:15.250"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211027 01:30:15.252" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211027 01:30:15.253" level="INFO">${version_file_contents} = #Wed Oct 27 01:29:01 UTC 2021
cTime=1635298141394
clusterID=ad191920-a43a-40fb-9320-7c906ddb49c2
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20211027 01:30:15.252" endtime="20211027 01:30:15.253"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211027 01:30:15.253" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211027 01:30:15.253" endtime="20211027 01:30:15.253"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211027 01:30:15.253" endtime="20211027 01:30:15.254"/>
</kw>
<status status="PASS" starttime="20211027 01:30:15.251" endtime="20211027 01:30:15.254"/>
</kw>
<status status="PASS" starttime="20211027 01:30:15.251" endtime="20211027 01:30:15.254"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211027 01:30:15.247" endtime="20211027 01:30:15.254"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211027 01:30:15.194" endtime="20211027 01:30:15.255"/>
</suite>
<suite id="s1-s23" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s23-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211027 01:30:19.097" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211027 01:30:19.097" endtime="20211027 01:30:19.097"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211027 01:30:19.098" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211027 01:30:19.098" endtime="20211027 01:30:19.098"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211027 01:30:19.099" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211027 01:30:19.098" endtime="20211027 01:30:19.099"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211027 01:30:19.099" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211027 01:30:19.099" endtime="20211027 01:30:19.099"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211027 01:30:19.101" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211027 01:30:19.101" level="INFO">${version_file_contents} = #Wed Oct 27 01:27:14 UTC 2021
cTime=1635298014593
clusterID=CID-dea897dc-2343-4c55-acb6-3fdced05b4f4
omUuid=3101b4d0-2ed0-497a-9300-277d0df7adc0
nodeType=OM
scmUuid=b9091514-adc5-4823-9449-238ddd46f06...</msg>
<status status="PASS" starttime="20211027 01:30:19.100" endtime="20211027 01:30:19.101"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211027 01:30:19.101" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211027 01:30:19.101" endtime="20211027 01:30:19.101"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211027 01:30:19.102" endtime="20211027 01:30:19.102"/>
</kw>
<status status="PASS" starttime="20211027 01:30:19.100" endtime="20211027 01:30:19.102"/>
</kw>
<status status="PASS" starttime="20211027 01:30:19.100" endtime="20211027 01:30:19.102"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211027 01:30:19.096" endtime="20211027 01:30:19.103"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211027 01:30:19.044" endtime="20211027 01:30:19.104"/>
</suite>
<suite id="s1-s24" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s24-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211027 01:30:22.892" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211027 01:30:22.891" endtime="20211027 01:30:22.892"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211027 01:30:22.893" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211027 01:30:22.893" endtime="20211027 01:30:22.893"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211027 01:30:22.894" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211027 01:30:22.893" endtime="20211027 01:30:22.894"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211027 01:30:22.894" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211027 01:30:22.894" endtime="20211027 01:30:22.894"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211027 01:30:22.896" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211027 01:30:22.896" level="INFO">${version_file_contents} = #Wed Oct 27 01:27:14 UTC 2021
cTime=1635298014294
clusterID=CID-dea897dc-2343-4c55-acb6-3fdced05b4f4
omUuid=acb86cc9-8875-41b5-8ec5-1ad4a790c833
nodeType=OM
scmUuid=b9091514-adc5-4823-9449-238ddd46f06...</msg>
<status status="PASS" starttime="20211027 01:30:22.895" endtime="20211027 01:30:22.896"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211027 01:30:22.897" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211027 01:30:22.896" endtime="20211027 01:30:22.897"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211027 01:30:22.897" endtime="20211027 01:30:22.897"/>
</kw>
<status status="PASS" starttime="20211027 01:30:22.895" endtime="20211027 01:30:22.898"/>
</kw>
<status status="PASS" starttime="20211027 01:30:22.894" endtime="20211027 01:30:22.898"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211027 01:30:22.891" endtime="20211027 01:30:22.898"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211027 01:30:22.834" endtime="20211027 01:30:22.899"/>
</suite>
<suite id="s1-s25" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s25-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211027 01:30:26.748" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20211027 01:30:26.747" endtime="20211027 01:30:26.748"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211027 01:30:26.749" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211027 01:30:26.748" endtime="20211027 01:30:26.749"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211027 01:30:26.749" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211027 01:30:26.749" endtime="20211027 01:30:26.750"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211027 01:30:26.750" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20211027 01:30:26.750" endtime="20211027 01:30:26.750"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211027 01:30:26.751" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211027 01:30:26.752" level="INFO">${version_file_contents} = #Wed Oct 27 01:27:14 UTC 2021
cTime=1635298010937
clusterID=CID-dea897dc-2343-4c55-acb6-3fdced05b4f4
omUuid=00a241c2-1255-4b73-b6b1-49e9ab6cc80f
nodeType=OM
scmUuid=b9091514-adc5-4823-9449-238ddd46f06...</msg>
<status status="PASS" starttime="20211027 01:30:26.751" endtime="20211027 01:30:26.752"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211027 01:30:26.752" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211027 01:30:26.752" endtime="20211027 01:30:26.752"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211027 01:30:26.753" endtime="20211027 01:30:26.753"/>
</kw>
<status status="PASS" starttime="20211027 01:30:26.751" endtime="20211027 01:30:26.753"/>
</kw>
<status status="PASS" starttime="20211027 01:30:26.750" endtime="20211027 01:30:26.753"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211027 01:30:26.747" endtime="20211027 01:30:26.753"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211027 01:30:26.689" endtime="20211027 01:30:26.754"/>
</suite>
<suite id="s1-s26" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s26-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211027 01:30:30.507" level="INFO">${random} = 35146</msg>
<status status="PASS" starttime="20211027 01:30:30.507" endtime="20211027 01:30:30.507"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211027 01:30:30.517" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-35146 2&gt;&amp;1'.</msg>
<msg timestamp="20211027 01:30:35.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20211027 01:30:35.229" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211027 01:30:30.509" endtime="20211027 01:30:35.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211027 01:30:35.231" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211027 01:30:35.230" endtime="20211027 01:30:35.231"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211027 01:30:35.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211027 01:30:35.231" endtime="20211027 01:30:35.231"/>
</kw>
<status status="PASS" starttime="20211027 01:30:30.509" endtime="20211027 01:30:35.232"/>
</kw>
<msg timestamp="20211027 01:30:35.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211027 01:30:30.508" endtime="20211027 01:30:35.232"/>
</kw>
<msg timestamp="20211027 01:30:35.232" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211027 01:30:30.508" endtime="20211027 01:30:35.232"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211027 01:30:35.232" endtime="20211027 01:30:35.233"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211027 01:30:30.506" endtime="20211027 01:30:35.233"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211027 01:30:30.456" endtime="20211027 01:30:35.234"/>
</suite>
<suite id="s1-s27" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s27-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211027 01:30:39.031" level="INFO">Running command 'ozone sh volume create new1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20211027 01:30:41.891" level="INFO">${rc} = 0</msg>
<msg timestamp="20211027 01:30:41.891" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211027 01:30:39.028" endtime="20211027 01:30:41.891"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211027 01:30:41.892" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211027 01:30:41.891" endtime="20211027 01:30:41.892"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211027 01:30:41.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211027 01:30:41.892" endtime="20211027 01:30:41.893"/>
</kw>
<status status="PASS" starttime="20211027 01:30:39.027" endtime="20211027 01:30:41.893"/>
</kw>
<msg timestamp="20211027 01:30:41.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211027 01:30:39.027" endtime="20211027 01:30:41.893"/>
</kw>
<msg timestamp="20211027 01:30:41.894" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211027 01:30:39.026" endtime="20211027 01:30:41.894"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211027 01:30:41.895" endtime="20211027 01:30:41.895"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211027 01:30:41.902" level="INFO">Running command 'ozone sh bucket create /new1-volume/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20211027 01:30:45.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20211027 01:30:45.469" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211027 01:30:41.900" endtime="20211027 01:30:45.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211027 01:30:45.480" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211027 01:30:45.479" endtime="20211027 01:30:45.480"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211027 01:30:45.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211027 01:30:45.480" endtime="20211027 01:30:45.481"/>
</kw>
<status status="PASS" starttime="20211027 01:30:41.896" endtime="20211027 01:30:45.481"/>
</kw>
<msg timestamp="20211027 01:30:45.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211027 01:30:41.896" endtime="20211027 01:30:45.481"/>
</kw>
<msg timestamp="20211027 01:30:45.482" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211027 01:30:41.895" endtime="20211027 01:30:45.484"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211027 01:30:45.484" endtime="20211027 01:30:45.484"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211027 01:30:45.493" level="INFO">Running command 'ozone sh key put /new1-volume/new1-bucket/new1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20211027 01:30:50.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20211027 01:30:50.825" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211027 01:30:45.486" endtime="20211027 01:30:50.825"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211027 01:30:50.826" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211027 01:30:50.825" endtime="20211027 01:30:50.826"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211027 01:30:50.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211027 01:30:50.826" endtime="20211027 01:30:50.827"/>
</kw>
<status status="PASS" starttime="20211027 01:30:45.485" endtime="20211027 01:30:50.827"/>
</kw>
<msg timestamp="20211027 01:30:50.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211027 01:30:45.485" endtime="20211027 01:30:50.827"/>
</kw>
<msg timestamp="20211027 01:30:50.827" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211027 01:30:45.484" endtime="20211027 01:30:50.828"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211027 01:30:50.828" endtime="20211027 01:30:50.828"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211027 01:30:39.025" endtime="20211027 01:30:50.829"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20211027 01:30:38.972" endtime="20211027 01:30:50.830"/>
</suite>
<suite id="s1-s28" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s28-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20211027 01:30:54.639" level="INFO">${random} = 19724</msg>
<status status="PASS" starttime="20211027 01:30:54.638" endtime="20211027 01:30:54.639"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20211027 01:30:54.646" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-19724 2&gt;&amp;1'.</msg>
<msg timestamp="20211027 01:30:59.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20211027 01:30:59.168" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211027 01:30:54.641" endtime="20211027 01:30:59.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211027 01:30:59.169" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211027 01:30:59.168" endtime="20211027 01:30:59.169"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20211027 01:30:59.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211027 01:30:59.169" endtime="20211027 01:30:59.170"/>
</kw>
<status status="PASS" starttime="20211027 01:30:54.640" endtime="20211027 01:30:59.170"/>
</kw>
<msg timestamp="20211027 01:30:59.170" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20211027 01:30:54.640" endtime="20211027 01:30:59.170"/>
</kw>
<msg timestamp="20211027 01:30:59.171" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20211027 01:30:54.639" endtime="20211027 01:30:59.171"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20211027 01:30:59.171" endtime="20211027 01:30:59.171"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211027 01:30:54.638" endtime="20211027 01:30:59.171"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20211027 01:30:54.586" endtime="20211027 01:30:59.173"/>
</suite>
<suite id="s1-s29" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s29-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211027 01:30:03.797" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20211027 01:30:03.797" endtime="20211027 01:30:03.797"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211027 01:30:03.798" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20211027 01:30:03.798" endtime="20211027 01:30:03.798"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20211027 01:30:03.799" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20211027 01:30:03.798" endtime="20211027 01:30:03.799"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20211027 01:30:03.799" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20211027 01:30:03.799" endtime="20211027 01:30:03.799"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20211027 01:30:03.801" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20211027 01:30:03.801" level="INFO">${version_file_contents} = #Wed Oct 27 01:26:52 UTC 2021
cTime=1635298012372
clusterID=CID-dea897dc-2343-4c55-acb6-3fdced05b4f4
nodeType=SCM
scmUuid=b9091514-adc5-4823-9449-238ddd46f062
layoutVersion=0
</msg>
<status status="PASS" starttime="20211027 01:30:03.800" endtime="20211027 01:30:03.801"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20211027 01:30:03.803" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20211027 01:30:03.801" endtime="20211027 01:30:03.803"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20211027 01:30:03.803" endtime="20211027 01:30:03.803"/>
</kw>
<status status="PASS" starttime="20211027 01:30:03.800" endtime="20211027 01:30:03.804"/>
</kw>
<status status="PASS" starttime="20211027 01:30:03.800" endtime="20211027 01:30:03.804"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20211027 01:30:03.795" endtime="20211027 01:30:03.804"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20211027 01:30:03.727" endtime="20211027 01:30:03.805"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="175977"/>
</suite>
<statistics>
<total>
<stat pass="30" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="30" fail="0" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s8" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s9" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s10" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s11" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s12" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s13" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s14" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s15" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s16" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s17" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s18" name="Validate">upgrade.Validate</stat>
<stat pass="2" fail="0" skip="0" id="s1-s19" name="Finalize">upgrade.Finalize</stat>
<stat pass="1" fail="0" skip="0" id="s1-s20" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s21" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s22" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s23" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s24" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s25" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s26" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s27" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s28" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s29" name="Check-Mlv">upgrade.Check-Mlv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
